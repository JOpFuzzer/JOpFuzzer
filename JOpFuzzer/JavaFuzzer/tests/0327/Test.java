// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1223458859L;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -7303093461386149240L);
        FuzzerUtils.init(Test.iArrFld, 134);
        FuzzerUtils.init(Test.dArrFld, 12.35488);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        int i6=-13, i7=-19, i8=-151, i9=-11375, i11=149, i12=13, i13=-60189, iArr[]=new int[N];
        float f1=-106.882F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(fArr, -81.668F);

        Test.instanceCount += i5;
        for (i6 = 20; i6 < 331; ++i6) {
            Test.instanceCount += i6;
            i7 = i7;
            for (i8 = 1; i8 < 5; i8++) {
                Test.lArrFld[i6 + 1] *= Test.instanceCount;
                i5 *= i8;
            }
            i7 -= (int)f1;
            fArr[i6] += f1;
            for (i11 = 1; i11 < 5; i11++) {
                i13 = 1;
                do {
                    i5 ^= i7;
                    i5 += i13;
                    iArr[i13 - 1] += i5;
                    Test.instanceCount += (i13 | i7);
                } while (++i13 < 2);
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(short s, int i3, int i4) {

        float f=0.603F;
        int i14=-38, i15=-47554, i16=31441, i17=168, i18=42435, i19=-47;
        byte by=41;

        i3 *= (int)(i3 + ((f - i3) * (Test.lArrFld[(i3 >>> 1) % N]++)));
        vMeth1(i3);
        i3 = i3;
        i4 = i3;
        i4 -= (int)Test.instanceCount;
        for (i14 = 11; i14 < 343; i14++) {
            Test.iArrFld[i14 + 1] = i4;
            Test.lArrFld[i14 + 1] <<= i15;
            for (i16 = i14; 5 > i16; i16 += 3) {
                i18 = 1;
                while (--i18 > 0) {
                    f += 49275L;
                    Test.iArrFld[i14 - 1] -= s;
                    i19 = i19;
                    f += ((long)i18 | (long)by);
                    i15 *= s;
                }
            }
        }
        vMeth_check_sum += s + i3 + i4 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + i18 + i19 + by;
    }

    public static int iMeth(int i, int i1, int i2) {

        short s1=-1132;
        int i20=-1, i21=43085, i22=-64, i23=56087, i24=-3;
        float f2=-89.910F;

        i1 = (int)(Test.instanceCount--);
        vMeth(s1, -5, i2);
        for (i20 = 2; i20 < 389; i20++) {
            Test.iArrFld[i20] >>= (int)Test.instanceCount;
            for (i22 = i20; i22 < 4; i22++) {
                Test.instanceCount += (((i22 * i) + Test.instanceCount) - i);
                i2 >>>= (int)Test.instanceCount;
                i21 += (-42148 + (i22 * i22));
                Test.instanceCount = -46993;
                i24 = 1;
                do {
                    i += (((i24 * i23) + f2) - i1);
                    Test.instanceCount += i24;
                    i += i24;
                    i2 = i1;
                    Test.instanceCount -= Test.instanceCount;
                } while (--i24 > 0);
            }
        }
        long meth_res = i + i1 + i2 + s1 + i20 + i21 + i22 + i23 + i24 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i25=12, i26=-119, i27=-6, i28=0, i29=-210, i30=12, i31=-11, i32=7, i33=-2, i34=-199, i35=58;
        double d=-2.15433;
        byte by1=-9;
        boolean b=true;

        Test.instanceCount -= iMeth(i25, i25, i25);
        for (i26 = 4; i26 < 208; i26++) {
            Test.dArrFld[i26] -= Test.instanceCount;
            for (i28 = 123; i28 > 2; --i28) {
                for (i30 = 2; i30 > i28; i30--) {
                    Test.iArrFld[i26] = i27;
                    i31 += i29;
                }
                for (i32 = 1; 2 > i32; i32++) {
                    try {
                        i31 = (i25 / i29);
                        i33 = (253 / Test.iArrFld[i32 + 1]);
                        i27 = (i32 / -192);
                    } catch (ArithmeticException a_e) {}
                    d = Test.instanceCount;
                    i31 *= 26696;
                }
                i29 >>>= i26;
                i25 += (int)Test.instanceCount;
                i29 = i25;
                switch ((i28 % 2) + 41) {
                case 41:
                    Test.lArrFld[i26] >>= 3424340721403250987L;
                    break;
                case 42:
                    i33 = by1;
                    i29 = -6;
                    i29 += i28;
                    Test.iArrFld[i28] = i28;
                    break;
                }
                if (b) continue;
                Test.instanceCount += (i28 + i28);
            }
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-13872);
            i34 = 1;
            do {
                i25 = -222;
                Test.instanceCount = i28;
                i25 += by1;
                d = i28;
                i35 += i34;
                Test.instanceCount += (-188L + (i34 * i34));
            } while (++i34 < 123);
        }

        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("d by1 b = " + Double.doubleToLongBits(d) + "," + by1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i34 i35 = " + i34 + "," + i35);

        FuzzerUtils.out.println("Test.instanceCount Test.lArrFld Test.iArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
