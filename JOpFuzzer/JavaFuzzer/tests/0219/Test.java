// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-707632390L;
    public static int iFld=44322;
    public static int iFld1=-187;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -5137);
        FuzzerUtils.init(Test.lArrFld, -229L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth() {

        int i3=-55021, i4=4, i5=-12, i6=20854, i7=-47519, i8=-34, i9=-14, i10=-12, i11=-31098, i12=5;
        short s=-17393;
        long l1=4L;

        Test.iFld += (int)Test.instanceCount;
        Test.iFld <<= Test.iFld;
        for (i3 = 5; i3 < 201; ++i3) {
            Test.iFld >>= i3;
            Test.instanceCount += i3;
        }
        for (i5 = 18; i5 < 368; ++i5) {
            for (i7 = i5; i7 < 5; i7++) {
                Test.iFld = 0;
                i9 = 1;
                while (++i9 < 1) {
                    Test.lArrFld[i5][i7] = s;
                }
                for (i10 = 1; i10 < 1; i10++) {
                    Test.iFld = i3;
                }
                for (l1 = i7; l1 < 1; l1++) {
                    i8 = i6;
                    Test.instanceCount >>= i12;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + s + i10 + i11 + l1 + i12;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(long l, int i2) {

        int i13=-95, i14=220, i15=-232, i16=12, i17=-11, i18=9, i19=-1595;
        byte by=117;
        float f2=0.632F, fArr[]=new float[N];
        short sArr1[]=new short[N];

        FuzzerUtils.init(sArr1, (short)-7033);
        FuzzerUtils.init(fArr, 0.546F);

        Test.iFld = Math.max(Test.iFld, -Math.max(8, Test.iFld));
        i2 <<= byMeth();
        sArr1 = sArr1;
        i13 = 220;
        while (--i13 > 0) {
            i2 <<= i13;
            by += (byte)(i13 * f2);
            for (i14 = 1; i14 < 7; ++i14) {
                fArr[i14 - 1] = 160;
                for (i16 = 1; i16 < 2; i16++) {
                    Test.iArrFld[i16] -= by;
                    l -= i16;
                }
                for (i18 = 1; i18 < 2; ++i18) {
                    Test.iArrFld[i14] -= i13;
                    i15 *= Test.iFld1;
                    fArr[i18] = Test.iFld;
                }
            }
        }
        vMeth_check_sum += l + i2 + i13 + by + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(sArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth() {

        float f1=-2.768F, fArr1[]=new float[N];
        int i1=5, i20=6, i21=-10, i22=1;
        double d=46.112059;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(fArr1, 2.725F);
        FuzzerUtils.init(bArr, false);

        for (int i : Test.iArrFld) {
            for (f1 = 1; 4 > f1; ++f1) {
                vMeth(Test.instanceCount, i1);
                i1 = Test.iFld1;
                i += -41753;
                Test.bFld = Test.bFld;
            }
            if (Test.bFld) {
                for (i20 = 1; 4 > i20; i20++) {
                    i1 >>>= i;
                    fArr1[i20 - 1] += i20;
                    Test.iFld1 -= i21;
                    i22 = 1;
                    do {
                        d = 2L;
                        i1 *= -31504;
                        bArr[i20] = Test.bFld;
                    } while (++i22 < 2);
                }
            } else {
                i += i22;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i1 + i20 + i21 + i22 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=1.485F;
        short sArr[]=new short[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(sArr, (short)-31252);
        FuzzerUtils.init(byArr, (byte)95);

        Test.iFld -= (int)(f - (Test.iFld++));
        Test.instanceCount *= (((sArr[(Test.iFld >>> 1) % N] = (short)-6449) - lMeth()) * -24);
        Test.iFld1 += Test.iFld1;
        Test.iFld *= Test.iFld1;
        byArr[(Test.iFld >>> 1) % N] = (byte)Test.iFld;
        Test.iFld1 -= (int)Test.instanceCount;
        Test.iArrFld[(Test.iFld1 >>> 1) % N] = Test.iFld1;
        Test.iFld1 = Test.iFld1;

        FuzzerUtils.out.println("f sArr byArr = " + Float.floatToIntBits(f) + "," + FuzzerUtils.checkSum(sArr) + "," +
            FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("Test.bFld Test.iArrFld Test.lArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
