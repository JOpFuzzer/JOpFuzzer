// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=55L;
    public float fFld=75.366F;
    public int iFld1=-52523;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static volatile int iArrFld1[]=new int[N];
    public static float fArrFld[]=new float[N];
    public short sArrFld[]=new short[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 71);
        FuzzerUtils.init(Test.iArrFld1, -1);
        FuzzerUtils.init(Test.fArrFld, 82.367F);
        FuzzerUtils.init(Test.dArrFld, -25.105116);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6, float f2) {

        int i7=-138, i8=38, i9=245, i10=-5, i11=-16756, i12=-38;
        double d2=0.122069;
        short s=-21932;
        boolean b=true;

        for (i7 = 10; i7 < 210; i7++) {
            Test.instanceCount = i8;
            i6 += i7;
            Test.iArrFld1[i7] *= i6;
            Test.instanceCount = i8;
            d2 -= f2;
            for (i9 = 1; i9 < 8; i9 += 3) {
                i6 >>= i7;
                Test.iArrFld1[i7 - 1] = i5;
                if (b) {
                    Test.iArrFld1[i9 - 1] -= i5;
                    for (i11 = 1; i11 < 4; i11++) {
                        Test.iArrFld[i11] *= i9;
                        Test.iArrFld[i11] *= (int)Test.instanceCount;
                        Test.fArrFld = Test.fArrFld;
                    }
                } else if (b) {
                    i5 <<= s;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + Double.doubleToLongBits(d2) + i9 + i10 + i11
            + i12 + s + (b ? 1 : 0);
    }

    public static void vMeth(int i2) {

        int i3=-7, i4=-138, i13=-228, i14=-159, i15=-4, i16=-16554, i17=44008, i18=0, i19=48, i20=54;
        float f3=-2.885F;

        for (i3 = 10; i3 < 235; i3++) {
            vMeth1(i4, i2, f3);
        }
        for (i13 = 247; i13 > 6; i13--) {
            i14 += (((i13 * Test.instanceCount) + i13) - i3);
            for (i15 = 1; i15 < 7; ++i15) {
                i2 |= (int)Test.instanceCount;
                i2 += i15;
            }
            i16 = 253;
            Test.iArrFld1[i13] += i2;
        }
        Test.instanceCount = Test.instanceCount;
        for (i17 = 2; i17 < 303; ++i17) {
            for (i19 = 1; i19 < 5; ++i19) {
                Test.fArrFld[i17 + 1] = i2;
                i18 = i3;
                i20 &= i13;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20;
    }

    public static long lMeth(float f1) {

        int i=7, i1=-6, i21=50132, i22=-64664, i23=2;
        double d1=14.80031;
        byte by=-41;
        boolean b1=false;

        switch ((((Test.iArrFld[(i >>> 1) % N] >>> 1) % 2) * 5) + 90) {
        case 95:
            for (d1 = 5; d1 < 240; d1++) {
                switch ((int)(((d1 % 1) * 5) + 118)) {
                case 120:
                    Test.iArrFld[(int)(d1 - 1)] >>= (int)(i + (--f1));
                    vMeth(i1);
                    i += (int)(d1 * d1);
                default:
                    f1 *= by;
                }
                Test.iArrFld1[(int)(d1 + 1)] *= (int)Test.instanceCount;
                for (i21 = 1; i21 < 7; ++i21) {
                    i -= i21;
                    i23 = 1;
                    while (++i23 < 2) {
                        if (b1) {
                            Test.iArrFld[i21] *= (int)Test.instanceCount;
                            Test.instanceCount >>>= -13;
                        } else {
                            i = i22;
                        }
                    }
                }
            }
            break;
        case 98:
            Test.instanceCount -= by;
            break;
        default:
            Test.iArrFld[(i22 >>> 1) % N] = -176;
        }
        long meth_res = Float.floatToIntBits(f1) + i + Double.doubleToLongBits(d1) + i1 + by + i21 + i22 + i23 + (b1 ?
            1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i24=178, i25=12, i26=2090, i27=-14, i28=-5, i29=40877, i30=160, i31=2;
        double d3=-31.97842, d4=1.23646;

        lMeth(fFld);
        for (i24 = 1; i24 < 285; i24++) {
            if (bFld) {
                i25 += i24;
                try {
                    i25 = (i24 % i24);
                    Test.iArrFld1[i24 + 1] = (Test.iArrFld1[i24] % i25);
                    i25 = (-2700 % iFld1);
                } catch (ArithmeticException a_e) {}
                d3 = 1;
                do {
                    i25 += (int)(d3 * d3);
                    iFld1 = i26;
                    Test.iArrFld1[i24] = i24;
                    for (i27 = 1; i27 < 1; i27++) {
                        iFld1 = i27;
                        iFld1 <<= (int)Test.instanceCount;
                        Test.iArrFld[(int)(d3)] -= iFld1;
                        d4 += -592065556L;
                        Test.iArrFld[i24 - 1] = (int)fFld;
                    }
                    for (i29 = 1; i29 < 1; i29++) {
                        boolean b2=false;
                        switch ((int)(((d3 % 1) * 5) + 72)) {
                        case 73:
                            d4 -= i30;
                            Test.iArrFld1 = Test.iArrFld1;
                            break;
                        }
                        if (b2) continue;
                        i28 += (i29 * i29);
                        switch ((i24 % 9) + 126) {
                        case 126:
                            sArrFld[i24] += (short)i26;
                            iFld1 = (int)Test.instanceCount;
                        case 127:
                            i30 += (i29 ^ Test.instanceCount);
                            break;
                        case 128:
                            switch ((((i30 >>> 1) % 7) * 5) + 78) {
                            case 113:
                                fFld = i31;
                                Test.iArrFld = FuzzerUtils.int1array(N, (int)39);
                                break;
                            case 104:
                            case 107:
                            case 95:
                                i25 += (i29 * i26);
                                Test.instanceCount = i28;
                                break;
                            case 110:
                                i28 += i25;
                            case 94:
                                i30 += (((i29 * i29) + Test.instanceCount) - i26);
                                break;
                            case 102:
                                i26 -= -1;
                                break;
                            default:
                                b2 = b2;
                            }
                            break;
                        case 129:
                            i28 += i29;
                            break;
                        case 130:
                            b2 = true;
                        case 131:
                            b2 = b2;
                            break;
                        case 132:
                            Test.dArrFld = FuzzerUtils.double1array(N, (double)1.46439);
                            break;
                        case 133:
                            d4 *= i24;
                        case 134:
                        default:
                            i26 &= (int)Test.instanceCount;
                        }
                    }
                } while (++d3 < 89);
            } else {
                i31 *= (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i24 i25 d3 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("d4 i29 i30 = " + Double.doubleToLongBits(d4) + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 = " + i31);

        FuzzerUtils.out.println("Test.instanceCount fFld iFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + iFld1);
        FuzzerUtils.out.println("bFld Test.iArrFld Test.iArrFld1 = " + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("Test.fArrFld sArrFld Test.dArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(sArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
