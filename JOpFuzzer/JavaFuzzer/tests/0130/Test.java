// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-209L;
    public short sFld=-31515;
    public static double dFld=110.23200;
    public static float fFld=1.639F;
    public static int iFld=233;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 134);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        boolean b2=false;
        int i6=2, i7=1, i8=-207, i9=-78;
        long l3=-1L;

        b2 = b2;
        for (i6 = 11; i6 < 374; i6++) {
            i7 = 199;
        }
        i8 = 1;
        while (++i8 < 371) {
            Test.instanceCount = Test.instanceCount;
            for (l3 = 1; l3 < 5; l3++) {
                i7 += (int)(((l3 * i9) + i7) - Test.instanceCount);
                Test.dFld = Test.dFld;
                i9 = i9;
                b2 = b2;
                Test.instanceCount += i7;
            }
            Test.instanceCount -= i8;
            i9 -= (int)Test.dFld;
            Test.iArrFld[(i9 >>> 1) % N] = Test.iArrFld[i8];
        }
        i7 -= (int)Test.fFld;
        long meth_res = (b2 ? 1 : 0) + i6 + i7 + i8 + l3 + i9;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by1, long l2, float f) {

        int i4=-2, i5=-14803;

        for (i4 = 227; 6 < i4; i4--) {
            i5 += (((i4 * i4) + i5) - i5);
            iMeth1();
        }
        vMeth_check_sum += by1 + l2 + Float.floatToIntBits(f) + i4 + i5;
    }

    public static int iMeth(boolean b, boolean b1, long l1) {

        int i3=-55, i10=27188, i11=-210, i12=-16178, i13=28900, i14=-52595, i15=-108, i16=-11850, i17=216;
        byte by=-91;

        i3 *= (i3 = (by++));
        vMeth(by, -7850688883081513177L, Test.fFld);
        for (i10 = 4; i10 < 254; i10++) {
            Test.fFld += i11;
            i11 = -2;
        }
        for (i12 = 381; i12 > 20; i12 -= 2) {
            Test.instanceCount -= i13;
            Test.instanceCount /= (i11 | 1);
            i13 = i10;
        }
        Test.iArrFld[(i3 >>> 1) % N][(-52517 >>> 1) % N] >>= i10;
        for (i14 = 12; i14 < 358; ++i14) {
            for (i16 = 1; i16 < 5; i16++) {
                i13 += (7 + (i16 * i16));
            }
            i15 <<= i14;
        }
        long meth_res = (b ? 1 : 0) + (b1 ? 1 : 0) + l1 + i3 + by + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=4973273508742744666L;
        int i=-14, i1=-8925, i2=-250, i18=39521, i19=8, i20=242, i21=-109;
        boolean b3=false;
        byte by2=81;

        for (l = 16; 299 > l; l++) {
            double d=115.35481;
            i = (int)d;
        }
        for (i1 = 6; i1 < 266; ++i1) {
            switch ((i1 % 5) + 27) {
            case 27:
                sFld = (short)(i <<= (int)l);
                sFld = (short)iMeth(b3, b3, Test.instanceCount);
            case 28:
                Test.fFld += (i1 * i1);
                for (i18 = 5; i18 < 97; ++i18) {
                    by2 = (byte)-9;
                    for (i20 = i1; i20 < 2; ++i20) {
                        switch ((i20 % 2) + 12) {
                        case 12:
                            i21 <<= (int)Test.instanceCount;
                            i21 -= i1;
                            break;
                        case 13:
                            i2 = (int)Test.instanceCount;
                            break;
                        default:
                            i19 *= -30;
                            Test.iArrFld[i1] = Test.iArrFld[i18 + 1];
                            i -= (int)Test.instanceCount;
                            Test.iArrFld[i1 + 1][i1 + 1] -= i18;
                        }
                        if (b3) {
                            Test.fFld *= i20;
                        } else if (b3) {
                            switch (((i1 % 3) * 5) + 85) {
                            case 91:
                                b3 = b3;
                                i2 += i18;
                                break;
                            case 95:
                                i += (i20 | i);
                                i |= (int)l;
                                i19 >>= i1;
                                Test.fFld += (i20 * i20);
                                break;
                            case 96:
                                b3 = b3;
                                try {
                                    i21 = (Test.iFld % -53774);
                                    i2 = (i20 / i18);
                                    i19 = (1404845724 / i);
                                } catch (ArithmeticException a_e) {}
                                Test.instanceCount += (i20 - i2);
                            }
                        } else {
                            Test.fFld /= (Test.iFld | 1);
                        }
                    }
                }
                break;
            case 29:
                i2 = i;
            case 30:
                i2 += (int)Test.instanceCount;
            case 31:
                try {
                    Test.iFld = (i2 % i21);
                    Test.iFld = (i20 % Test.iArrFld[i1][i1]);
                    i2 = (i / i20);
                } catch (ArithmeticException a_e) {}
                break;
            }
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 b3 i18 = " + i2 + "," + (b3 ? 1 : 0) + "," + i18);
        FuzzerUtils.out.println("i19 by2 i20 = " + i19 + "," + by2 + "," + i20);
        FuzzerUtils.out.println("i21 = " + i21);

        FuzzerUtils.out.println("Test.instanceCount sFld Test.dFld = " + Test.instanceCount + "," + sFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.iFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.iFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
