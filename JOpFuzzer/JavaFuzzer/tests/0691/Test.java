// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-226L;
    public static float fFld=-24.291F;
    public static double dFld=0.111634;
    public byte byFld=-25;
    public boolean bFld=true;
    public long lFld=-48148L;
    public static int iArrFld[]=new int[N];
    public long lArrFld[][]=new long[N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i4) {

        int i5=174, i6=7, i7=34988, i8=-221;
        long l1=-2L, lArr[][]=new long[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -7170099441710836677L);
        FuzzerUtils.init(byArr, (byte)-67);

        i4 = -9;
        i5 = 1;
        while (++i5 < 214) {
            Test.instanceCount *= -212;
            Test.fFld *= (float)Test.dFld;
        }
        switch (((23638 >>> 1) % 2) + 20) {
        case 20:
            try {
                i4 += (int)Test.fFld;
                for (i6 = 7; i6 < 276; i6++) {
                    lArr = lArr;
                    i7 = (int)10L;
                    try {
                        i4 = (-199 / i4);
                        i7 = (i7 / 98);
                        i4 = (1395260631 % Test.iArrFld[i6]);
                    } catch (ArithmeticException a_e) {}
                    i8 = 1;
                    do {
                        i7 /= (int)(Test.instanceCount | 1);
                        byArr[i8 - 1] += (byte)i8;
                        i4 += -7;
                    } while (++i8 < 6);
                }
            }
            catch (NegativeArraySizeException exc2) {
                l1 >>>= i5;
            }
        case 21:
            i4 = (int)l1;
            break;
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + l1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void vMeth1(int i2) {

        float f1=2.748F;
        int i9=28013, i10=-23219, i11=192, i12=-5, iArr[]=new int[N];
        short s=2516;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, -44875);
        FuzzerUtils.init(lArr1, 6311227L);

        f1 = Math.abs((int)((i2 * f1) - (i2++)));
        for (int i3 : iArr) {
            i2 = ((sMeth(241) + byFld) + 1);
            iArr[(i3 >>> 1) % N] += i9;
            if (bFld) break;
            for (i10 = 1; i10 < 4; ++i10) {
                i12 = 1;
                do {
                    s += (short)(1.825F + (i12 * i12));
                    Test.iArrFld[i12] += i3;
                    iArr[i10 - 1] *= (int)f1;
                    lArr1[i10][i12] += (long)Test.dFld;
                    f1 += i2;
                    i11 -= i12;
                    i9 += 23304;
                    bFld = bFld;
                } while (++i12 < 2);
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + s + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(int i1, long l) {

        int i13=-34892, i14=-74, i15=44285, i16=50167;
        long l2=21942L;
        short s1=-26798;

        vMeth1(i1);
        i1 <<= i1;
        i13 = 257;
        do {
            for (l2 = 1; 6 > l2; ++l2) {
                i14 = i1;
                i1 -= s1;
                i15 = 1;
                while (++i15 < 2) {
                    switch ((int)((l2 % 2) + 98)) {
                    case 98:
                        i1 = 212;
                        i14 += (i15 | i15);
                        break;
                    case 99:
                        lArrFld[i13] = lArrFld[i13];
                        break;
                    default:
                        Test.fFld += byFld;
                    }
                    Test.instanceCount -= i13;
                    Test.iArrFld[i13] -= i15;
                    i16 += (i15 + i1);
                }
            }
        } while (--i13 > 0);
        vMeth_check_sum += i1 + l + i13 + l2 + i14 + s1 + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        float f=47.61F;
        int i=-49432, i17=-10541, i18=219, i19=5, i20=11, i21=7, i22=10939, i23=-49512, i24=31454, i25=11, i26=3,
            i27=-3931;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.116541);

        for (f = 6; f < 148; f++) {
            vMeth(i, 14L);
            switch ((int)((f % 2) + 114)) {
            case 114:
                i += (int)(f * f);
            case 115:
                for (i17 = 11; 177 > i17; i17 += 2) {
                    short s2=8181;
                    Test.fFld = 10765L;
                    Test.instanceCount = -48237;
                    Test.instanceCount -= i;
                    s2 += (short)(((i17 * i18) + i18) - i);
                    i += (int)Test.instanceCount;
                    s2 += (short)Test.dFld;
                    for (i19 = 1; i19 < 3; ++i19) {
                        i21 += (int)1.20573;
                        i18 += i19;
                        byFld += (byte)i19;
                        Test.instanceCount *= -113;
                        Test.instanceCount |= i17;
                    }
                    i += (i17 - i18);
                }
                i = (int)Test.instanceCount;
                i >>= i;
                break;
            }
            fArrFld[(i18 >>> 1) % N] = 3141;
            Test.dFld -= i21;
        }
        for (i22 = 2; i22 < 196; ++i22) {
            i24 = 1;
            while (++i24 < 129) {
                i20 = 10;
                i21 += (-35834 + (i24 * i24));
                for (i25 = 1; i25 < 1; ++i25) {
                    Test.iArrFld[(i27 >>> 1) % N] = i25;
                }
                dArr[i24 - 1] = dArr[i22 + 1];
                lFld -= lFld;
            }
        }

        FuzzerUtils.out.println("f i i17 = " + Float.floatToIntBits(f) + "," + i + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 dArr = " + i27 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("byFld bFld lFld = " + byFld + "," + (bFld ? 1 : 0) + "," + lFld);
        FuzzerUtils.out.println("Test.iArrFld lArrFld fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
