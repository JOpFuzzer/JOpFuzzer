// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=128L;
    public static volatile double dFld=1.42415;
    public static float fFld=33.627F;
    public static boolean bFld=false;
    public static volatile int iFld=0;
    public volatile long lArrFld[][]=new long[N][N];
    public static byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-101);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10) {

        int i11=169, i12=-11, i13=1, i14=36624, iArr2[]=new int[N];
        short s=3784;

        FuzzerUtils.init(iArr2, -10717);

        i11 = 182;
        do {
            i10 = i10;
            i10 += (i11 - i11);
        } while (--i11 > 0);
        Test.byArrFld[(i10 >>> 1) % N][(i11 >>> 1) % N] -= (byte)Test.dFld;
        Test.dFld = i11;
        iArr2[(i10 >>> 1) % N] = -15010;
        i12 = 130;
        do {
            byte by=80;
            by -= (byte)i12;
            i10 >>= (int)Test.instanceCount;
            for (i13 = 1; i13 < 12; ++i13) {
                Test.instanceCount *= by;
                i14 -= s;
                i14 <<= i13;
                s += (short)(((i13 * Test.instanceCount) + Test.fFld) - i10);
                try {
                    i10 = (i14 % -40468);
                    i14 = (-84 % i13);
                    iArr2[i12 + 1] = (33857 / i13);
                } catch (ArithmeticException a_e) {}
            }
        } while (--i12 > 0);
        vMeth2_check_sum += i10 + i11 + i12 + i13 + i14 + s + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(int i7) {

        int i8=165, i9=115, i15=-13, i16=0, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -2);
        FuzzerUtils.init(lArr, -6247133558174978428L);

        for (i8 = 174; i8 > 6; i8 -= 2) {
            switch (((iArr1[(i7 >>> 1) % N] >>> 1) % 2) + 101) {
            case 101:
                Test.instanceCount *= ((-20778 - (Test.instanceCount--)) + (iArr1[i8]++));
                i9 >>= i7;
                i7 += (((i8 * Test.instanceCount) + Test.instanceCount) - i7);
                vMeth2(-120);
                break;
            case 102:
                i9 += -90;
                Test.instanceCount = i8;
                for (i15 = 1; i15 < 18; i15++) {
                    if (Test.bFld) continue;
                    if (Test.bFld) {
                        try {
                            i7 = (i9 / Test.iFld);
                            iArr1[i15 + 1] = (i16 / 61757);
                            Test.iFld = (19877 % Test.iFld);
                        } catch (ArithmeticException a_e) {}
                    } else {
                        lArr = lArr;
                    }
                    i9 += i15;
                    try {
                        i7 = (iArr1[i8 - 1] % -114);
                        Test.iFld = (i16 % -993132760);
                        Test.iFld = (-42953 % i15);
                    } catch (ArithmeticException a_e) {}
                }
                break;
            default:
                if (Test.bFld) continue;
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i15 + i16 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f) {

        int i6=-53738, i17=-1, i18=47800, i19=5500, i20=-214;
        short s1=32239;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.281F);

        i6 <<= (i6--);
        vMeth1(Test.iFld);
        for (i17 = 8; i17 < 158; ++i17) {
            Test.dFld *= i6;
            for (i19 = 1; i19 < 11; i19++) {
                i6 += (((i19 * Test.iFld) + i20) - s1);
            }
            i6 += (i17 * Test.instanceCount);
            i6 = i6;
            Test.iFld += i19;
            if (Test.bFld) continue;
            Test.instanceCount += (i17 * i17);
            Test.fFld = 19740;
        }
        Test.dFld = Test.dFld;
        fArr[(i17 >>> 1) % N] -= Test.iFld;
        i20 = i6;
        vMeth_check_sum += Float.floatToIntBits(f) + i6 + i17 + i18 + i19 + i20 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=3, i2=-11946, i3=45582, i4=11, i5=57841, i21=-36865, i22=-3, i23=38260, iArr[]=new int[N];
        short s2=-7903;

        FuzzerUtils.init(iArr, -129);

        for (i = 5; i < 394; i++) {
            i1 = i1;
            iArr[i + 1] <<= i;
        }
        for (i2 = 1; i2 < 324; ++i2) {
            lArrFld[i2 - 1][i2] += ((--i3) - (Math.max(-14L, Test.instanceCount) - (-(i3 + -125))));
            i1 = (++i1);
            for (i4 = 78; i4 > 2; i4--) {
                vMeth(Test.fFld);
                Test.fFld += (float)25.20804;
                Test.instanceCount -= i4;
                i5 |= i4;
                i5 -= i2;
            }
            Test.fFld += i3;
            i21 = 1;
            do {
                Test.fFld -= (float)0.34528;
                Test.instanceCount = i5;
                Test.fFld += (123.850F + (i21 * i21));
                for (i22 = 1; i22 < 1; ++i22) {
                    Test.fFld %= ((long)(Test.dFld) | 1);
                    Test.dFld = i21;
                    switch (((i22 % 4) * 5) + 99) {
                    case 101:
                        i5 += i3;
                        Test.instanceCount &= i3;
                        i23 += (int)11L;
                        i23 += (((i22 * i21) + Test.fFld) - s2);
                        break;
                    case 112:
                        i3 = i2;
                        i5 >>= i4;
                        i23 += (i22 * i22);
                        break;
                    case 110:
                        i1 += (((i22 * i21) + Test.instanceCount) - i3);
                        i1 -= i1;
                    case 100:
                        Test.bFld = Test.bFld;
                        break;
                    }
                }
            } while (++i21 < 78);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("s2 iArr = " + s2 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld Test.iFld lArrFld = " + (Test.bFld ? 1 : 0) + "," + Test.iFld + "," +
            FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
