// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=477752551895167478L;
    public int iFld=0;
    public static boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=-6, i8=-1, i9=-9, i10=-6, i11=-24095, i12=-5, iArr1[]=new int[N];
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -741669995L);
        FuzzerUtils.init(iArr1, -25472);

        for (long l : lArr) {
            l = i6;
        }
        for (i7 = 197; i7 > 2; i7--) {
            i5 = i8;
            for (i9 = 1; i9 < 8; ++i9) {
                iArr1[i9 - 1] >>= -62264;
            }
            for (i11 = 1; 8 > i11; i11++) {
                i8 |= i9;
                if (b1) break;
                try {
                    i12 = (-128 % i7);
                    i8 = (i10 / -115);
                    i8 = (iArr1[i11 + 1] / -319452859);
                } catch (ArithmeticException a_e) {}
                if (b1) continue;
                iArr1[i11 + 1] += i9;
                try {
                    i8 = (i6 % i5);
                    i12 = (-33313 % i10);
                    i8 = (iArr1[i11 + 1] / iArr1[i11]);
                } catch (ArithmeticException a_e) {}
                i6 <<= i5;
                Test.instanceCount = i5;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static byte byMeth(int i4) {


        vMeth1(i4, i4);
        Test.instanceCount = -1306046344275088896L;
        long meth_res = i4;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void vMeth(int i) {

        short s=2688;
        int i1=-170, i2=-31, i3=-13, i13=-117, i14=-9899, iArr[][]=new int[N][N];
        boolean b=true;

        FuzzerUtils.init(iArr, -29710);

        Test.instanceCount -= (-(Math.max(-64264, i) - (s + i)));
        for (i1 = 16; 297 > i1; i1++) {
            if (!b) continue;
            i = iArr[i1 - 1][i1 + 1];
            i3 = 6;
            while ((i3 -= 2) > 0) {
                float f=0.131F;
                Test.instanceCount |= (Test.instanceCount + (i - (65 / (i | 1))));
                i += (((i3 * i) + i) - i1);
                i2 <<= (int)(Float.intBitsToFloat((int)(i1 * f)) + ((Test.instanceCount / (s | 1)) -
                    (Test.instanceCount << Test.instanceCount)));
                i = byMeth(i2);
                for (i13 = i3; i13 < 2; ++i13) {
                    if (b) continue;
                    f += i13;
                    i += (i13 ^ i14);
                    i2 = (int)Test.instanceCount;
                    i14 *= (int)-119.550F;
                }
            }
        }
        vMeth_check_sum += i + s + i1 + i2 + (b ? 1 : 0) + i3 + i13 + i14 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-61, i16=216, i17=-165, i18=-7, i19=-11, i20=-195, i21=155, iArr2[]=new int[N];
        long l1=-2830177060L, lArr1[]=new long[N];
        short s1=-32727;
        byte by=92;
        float f1=-79.763F, fArr[]=new float[N];
        double d=-68.24392;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(fArr, 1.315F);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, -22532L);
        FuzzerUtils.init(iArr2, -234);

        vMeth(iFld);
        for (i15 = 9; i15 < 215; ++i15) {
            if (Test.bFld) {
                Test.instanceCount = -10;
                i16 >>>= i15;
                Test.instanceCount = i15;
            } else {
                i16 += (i15 * Test.instanceCount);
            }
            i16 = i15;
            l1 %= 12L;
            if (false) continue;
            for (i17 = 7; i17 < 122; i17++) {
                fArr[i17 - 1] += i18;
                bArr[i17 + 1] = false;
                iFld = i17;
                Test.instanceCount /= (l1 | 1);
                i16 |= i17;
                for (i19 = 1; i19 < 2; ++i19) {
                    s1 &= (short)i19;
                    by &= (byte)-120;
                    f1 += (float)d;
                    lArr1[(i21 >>> 1) % N] >>>= i17;
                    iArr2[i19] -= i21;
                    d = i20;
                    i20 += (i19 ^ Test.instanceCount);
                    i16 = i21;
                    i21 *= (int)57712L;
                    Test.instanceCount += (i19 - l1);
                }
                i20 += (i17 + i21);
                Test.bFld = false;
                fArr[i15] = iFld;
            }
        }

        FuzzerUtils.out.println("i15 i16 l1 = " + i15 + "," + i16 + "," + l1);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 s1 by = " + i20 + "," + s1 + "," + by);
        FuzzerUtils.out.println("f1 d i21 = " + Float.floatToIntBits(f1) + "," + Double.doubleToLongBits(d) + "," +
            i21);
        FuzzerUtils.out.println("fArr bArr lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.bFld = " + Test.instanceCount + "," + iFld + "," +
            (Test.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
