// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=225L;
    public static float fFld=35.836F;
    public int iFld=-6101;
    public static short sFld=-25958;
    public double dFld=0.24242;
    public float fArrFld[][]=new float[N][N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=13, i6=78, i7=-142, iArr[]=new int[N];
        double d=11.111208;

        FuzzerUtils.init(iArr, 2);

        i5 -= -1028;
        iArr[(i5 >>> 1) % N] -= -135;
        i5 = (int)Test.fFld;
        i5 = -2;
        i5 = i5;
        i5 -= i5;
        d += i5;
        for (i6 = 6; i6 < 133; ++i6) {
            Test.instanceCount <<= i7;
            i7 += (((i6 * i6) + i7) - i5);
            i7 += (i6 ^ i5);
            iArr[i6] += (int)-4120383705L;
            i5 |= -1;
            Test.fFld -= i5;
            iArr[i6 - 1] -= i5;
        }
        vMeth2_check_sum += i5 + Double.doubleToLongBits(d) + i6 + i7 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth1(int i1, int i2, int i3) {

        float f=90.78F, f1=-1.311F;
        int i4=7, i8=9, i9=151, iArr1[]=new int[N];
        boolean b=true;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -701004257L);
        FuzzerUtils.init(dArr, 0.98703);
        FuzzerUtils.init(iArr1, 2858);

        for (f = 14; f < 300; f++) {
            lArr[(int)(f + 1)] = i4;
            i1 += (int)Math.abs(fArrFld[(int)(f + 1)][(int)(f + 1)]);
            vMeth2();
            for (f1 = 1; 6 > f1; f1++) {
                fArrFld[(int)(f)][(int)(f - 1)] *= f;
                i4 >>= i1;
                Test.instanceCount = -1949617108L;
                dArr[(i4 >>> 1) % N] *= Test.fFld;
                if (b) continue;
                i9 = 1;
                do {
                    iArr1[i9] = i2;
                    iArr1[(int)(f)] = i1;
                } while (++i9 < 2);
                i2 >>>= i9;
            }
            fArrFld[(int)(f)][(int)(f)] *= Test.instanceCount;
        }
        vMeth1_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + i8 + (b ? 1 : 0) +
            i9 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth() {

        int i10=-219, i11=-43842, i12=36644, i13=-1, iArr2[]=new int[N];
        long l1=-216L;
        byte by=89;

        FuzzerUtils.init(iArr2, -3157);

        vMeth1(iFld, iFld, iFld);
        for (i10 = 11; 275 > i10; ++i10) {
            l1 = 1;
            do {
                Test.fFld *= (float)-26.55616;
                iArr2[(int)(l1)] = iFld;
                Test.instanceCount = Test.sFld;
                i11 = -28;
                iArr2[(int)(l1 - 1)] <<= by;
                for (i12 = 1; i12 < 1; i12++) {
                    iFld -= (int)dFld;
                    Test.iArrFld = Test.iArrFld;
                    iFld = i10;
                    i13 *= i10;
                    if (i10 != 0) {
                        vMeth_check_sum += i10 + i11 + l1 + by + i12 + i13 + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    fArrFld[i10 + 1][i10] += iFld;
                }
            } while (++l1 < 6);
        }
        vMeth_check_sum += i10 + i11 + l1 + by + i12 + i13 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        long l=-155L;
        int i=-229;

        for (l = 9; l < 257; l++) {
            i += (int)(-110.856F + (l * l));
            vMeth();
        }
        i = i;
        Test.fFld = l;
        iFld = (int)dFld;

        FuzzerUtils.out.println("l i = " + l + "," + i);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test.sFld dFld fArrFld = " + Test.sFld + "," + Double.doubleToLongBits(dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
