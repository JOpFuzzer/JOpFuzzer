// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1990325301791126702L;
    public static int iFld=-87;
    public static short sFld=32343;
    public static float fFld=-52.956F;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -3);
        FuzzerUtils.init(Test.fArrFld, 89.185F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i7, short s) {

        double d=-24.2844;
        int i8=59, i9=0, i10=-6, i11=130, i12=-17190;
        float f=37.623F, fArr[]=new float[N];
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 98.434F);
        FuzzerUtils.init(byArr, (byte)127);

        for (d = 1; d < 129; ++d) {
            i8 += (int)(((d * Test.iFld) + i7) - f);
            for (i9 = (int)(d); i9 < 12; ++i9) {
                for (i11 = 1; i11 < 1; i11 += 2) {
                    i10 = (int)Test.instanceCount;
                    s = (short)-48904;
                    f += 129L;
                    i10 = -34780;
                    b = b;
                    Test.instanceCount |= i11;
                    Test.iFld <<= i8;
                    fArr[i11] -= i12;
                    byArr[(int)(d + 1)] &= (byte)i8;
                }
            }
            Test.instanceCount += i10;
            i8 = Test.iFld;
        }
        vMeth_check_sum += i7 + s + Double.doubleToLongBits(d) + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 +
            (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth1(long l, int i3, int i4) {

        int i5=8, i6=19153;

        for (i5 = 11; i5 < 207; ++i5) {
            vMeth(25845, (short)(-6311));
        }
        Test.fArrFld[(Test.iFld >>> 1) % N] -= Test.instanceCount;
        long meth_res = l + i3 + i4 + i5 + i6;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i) {

        int i1=-78, i2=-14, i14=12, i15=-16418, i16=-248;
        float f1=1.59F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -14L);

        for (i1 = 6; i1 < 190; i1 += 2) {
            i2 *= iMeth1(Test.instanceCount, Test.iFld, Test.iFld);
            Test.iFld += (int)Test.instanceCount;
            Test.instanceCount = i2;
            i2 -= (int)Test.instanceCount;
            for (f1 = 1; f1 < 17; ++f1) {
                float f2=-2.571F;
                f2 += (f1 * f1);
            }
            for (i15 = 1; i15 < 17; ++i15) {
                Test.instanceCount *= i;
                i14 = Test.sFld;
                lArr = FuzzerUtils.long1array(N, (long)-31775L);
                Test.iFld |= (int)Test.instanceCount;
            }
            i16 += i16;
            i14 += (i1 * Test.instanceCount);
            i = (int)Test.instanceCount;
        }
        long meth_res = i + i1 + i2 + Float.floatToIntBits(f1) + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=13, i18=11, i19=-27916, i20=11, i21=202, i22=-9, i23=-55830, i24=-65430, i25=14412, i26=79;
        boolean b1=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        Test.iFld -= Test.iFld;
        Test.instanceCount = iMeth(76);
        try {
            for (i17 = 22; i17 < (387 + 400); ++i17) {
                for (i19 = i17; i19 < 63; ++i19) {
                    Test.instanceCount *= i20;
                    Test.iArrFld[i19] = (int)Test.instanceCount;
                    if (b1) continue;
                    Test.instanceCount += (((i19 * i19) + i18) - i18);
                    Test.iFld += (int)1.107080;
                    byArrFld[i19] += (byte)i17;
                    for (i21 = 1; i21 < (1 + 400); ++i21) {
                        Test.fFld += Test.instanceCount;
                        i22 = i19;
                        i22 += i18;
                    }
                    Test.instanceCount += (i19 ^ i19);
                    Test.fFld -= Test.instanceCount;
                    Test.iArrFld[i19] = i18;
                }
                i18 += (-133 + (i17 * i17));
                for (i23 = i17; i23 < (63 + 400); i23++) {
                    i20 += i24;
                    switch (((-1 >>> 1) % 2) + 27) {
                    case 27:
                        Test.iArrFld[i23] -= i19;
                        break;
                    case 28:
                        i22 <<= i18;
                        i18 -= Test.iFld;
                        i24 -= -20750;
                        for (i25 = 1 - 400; i25 < 1; i25++) {
                            Test.sFld <<= (short)2416428321L;
                            Test.fFld *= i26;
                            bArr[i17 + 1] = b1;
                        }
                        break;
                    }
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test.instanceCount -= 33012;
        }
        finally {
            Test.instanceCount += (long)1.182F;
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 b1 i21 = " + i20 + "," + (b1 ? 1 : 0) + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 bArr = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld Test.iArrFld Test.fArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
