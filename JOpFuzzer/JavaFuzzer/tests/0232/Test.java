// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3861736642L;
    public static double dFld=-1.63473;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-15574);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1) {

        float f=2.749F, f1=-122.544F;
        int i2=-23739, i3=-1, i4=-33, iArr[]=new int[N];
        double d=68.8672, d1=37.3673, dArr[]=new double[N];
        boolean b=true;
        byte by=12;
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 1.124902);
        FuzzerUtils.init(iArr, -75);
        FuzzerUtils.init(lArr, 6579668333469029189L);

        i1 = (int)f;
        for (f1 = 8; f1 < 375; f1++) {
            Test.instanceCount = i1;
            d = 1;
            while (++d < 5) {
                dArr[(int)(f1)] = i2;
                iArr[(int)(d)] = (int)Test.instanceCount;
                i2 += (int)(d + i1);
                for (i3 = (int)(f1); i3 < 1; ++i3) {
                    iArr[(int)(f1 + 1)] -= i2;
                    i2 -= i3;
                    iArr = FuzzerUtils.int1array(N, (int)-51000);
                    i4 -= (int)Test.instanceCount;
                }
            }
            d1 = i1;
            if (b) break;
            lArr[(int)(f1 + 1)] += by;
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i2 + Double.doubleToLongBits(d) +
            i3 + i4 + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i5=-16976, i6=76, i7=-23294, i8=61013, i9=-19114, i10=-4, i11=-3, i12=-50711, iArr1[]=new int[N];
        boolean b1=true;
        byte by1=-121;
        float f2=120.80F, f3=-86.450F;

        FuzzerUtils.init(iArr1, -198);

        vMeth1(i5);
        for (i6 = 1; i6 < 245; i6++) {
            Test.dFld -= i5;
            i5 -= (int)1965901504L;
            for (i8 = 1; i8 < 7; ++i8) {
                if (b1) break;
            }
            for (i10 = 1; i10 < 7; i10++) {
                iArr1[i10 + 1] <<= by1;
                for (f2 = 2; f2 > i10; --f2) {
                    f3 = i9;
                    switch ((i10 % 1) + 14) {
                    case 14:
                        if (b1) {
                            iArr1[(int)(f2 - 1)] <<= 6381;
                        } else if (false) {
                            Test.dFld = i8;
                        } else if (b1) {
                            f3 *= i6;
                        }
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + by1 + Float.floatToIntBits(f2) + i12 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i) {

        double d2=48.63029;
        int i13=-69, i14=88, i15=54420, i16=3, i17=46, i18=-52, i19=13, i20=4, i21=-36653, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -66);

        vMeth();
        for (d2 = 4; d2 < 176; ++d2) {
            i <<= i13;
            for (i14 = 1; i14 < 9; ++i14) {
                iArr2[i14] += (int)23.370F;
            }
            for (i16 = (int)(d2); 9 > i16; i16++) {
                for (i18 = (int)(d2); i18 < 1; i18++) {
                    Test.dFld += Test.dFld;
                }
                i20 = 1;
                while (--i20 > 0) {
                    Test.instanceCount = -103;
                    i15 |= i19;
                    i13 += i20;
                    i13 = i18;
                    i17 = i14;
                    i15 += i21;
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i22=179, i23=4, i24=-6, i25=6, i26=-11, i27=0, i28=-9, i29=-2, i30=78, iArr3[]=new int[N];
        byte by2=-61;
        float f4=120.324F;
        short s=818;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 1620056884L);
        FuzzerUtils.init(iArr3, -47349);

        lMeth(52976);
        for (i22 = 3; i22 < 177; i22++) {
            i23 = i23;
            Test.instanceCount += (-2177697715848128004L + (i22 * i22));
            i24 = 144;
            while ((i24 -= 2) > 0) {
                by2 <<= (byte)i24;
                i23 *= (int)Test.instanceCount;
                lArr1[i22] *= i24;
                Test.sArrFld[i22 - 1] = (short)3;
                if (true) continue;
                i23 |= 12;
                i23 /= (int)((long)(Test.dFld) | 1);
                Test.instanceCount -= i23;
                try {
                    i23 = (iArr3[i24 + 1] % -64764);
                    iArr3[i22] = (i23 / iArr3[i24 + 1]);
                    i23 = (12576 / i23);
                } catch (ArithmeticException a_e) {}
                i23 = i24;
            }
            f4 += -111;
        }
        for (i25 = 352; i25 > 7; --i25) {
            Test.instanceCount = Test.instanceCount;
            switch ((i25 % 3) + 126) {
            case 126:
                for (i27 = 1; 73 > i27; ++i27) {
                    iArr3[i25 - 1] = i24;
                    Test.instanceCount = i26;
                    for (i29 = 1; i29 < 2; ++i29) {
                        i23 *= i28;
                        i30 *= (int)Test.instanceCount;
                        i23 += (int)Test.dFld;
                    }
                    s -= (short)Test.instanceCount;
                    s += (short)f4;
                    i26 += (int)(-3L + (i27 * i27));
                }
                i28 = 6;
                break;
            case 127:
                iArr3[i25 - 1] = (int)Test.instanceCount;
                break;
            case 128:
                Test.instanceCount += (i25 - Test.instanceCount);
            default:
                i28 *= (int)f4;
            }
        }

        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("by2 f4 i25 = " + by2 + "," + Float.floatToIntBits(f4) + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 s = " + i29 + "," + i30 + "," + s);
        FuzzerUtils.out.println("lArr1 iArr3 = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
