// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12132L;
    public static double dFld=0.86654;
    public static int iFld=5;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 108);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i4, int i5) {

        short s=5665;
        float f1=17.601F;
        int iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -254);

        iArr = iArr;
        s = (short)f1;
        vMeth1_check_sum += l + i4 + i5 + s + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i, int i1, float f) {

        int i2=145, i3=62856, i6=-3177, i7=918, i8=-1, i9=-9, iArr1[]=new int[N];
        float f2=1.79F;
        short s1=5067;
        byte by=19;

        FuzzerUtils.init(iArr1, -61505);

        for (i2 = 13; 271 > i2; ++i2) {
            vMeth1(Test.instanceCount, -18598, i1);
            i += (int)-4698662266025318360L;
            f2 = 1;
            while (++f2 < 6) {
                Test.instanceCount = i;
                iArr1[i2 + 1] >>= i;
                for (i6 = 1; i6 > 1; i6 -= 2) {
                    Test.instanceCount += i6;
                    i7 += (i6 - s1);
                    iArr1[i6 + 1] += i3;
                    i = i3;
                    Test.dFld *= Test.instanceCount;
                }
                for (i8 = 1; i8 < 1; i8++) {
                    i9 = by;
                    i3 = i6;
                }
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + i3 + Float.floatToIntBits(f2) + i6 + i7 + s1 + i8 + i9
            + by + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(boolean b) {

        int i10=1, i11=24012, i12=30342, i13=-201, i14=55, i15=-177, i16=-57207, i17=221, iArr2[]=new int[N];
        float f3=1.506F, fArr[]=new float[N];
        short s2=27500;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, -14);
        FuzzerUtils.init(fArr, 0.368F);
        FuzzerUtils.init(lArr, 30L);

        iMeth(-41312, i10, -76.677F);
        i10 = i10;
        Test.dFld -= i10;
        i10 += (int)Test.instanceCount;
        for (i11 = 274; i11 > 3; --i11) {
            i13 = 117;
        }
        iArr2[(i11 >>> 1) % N] -= i13;
        if (b) {
            fArr[(i11 >>> 1) % N] -= Test.instanceCount;
            for (i14 = 16; i14 < 323; i14++) {
                Test.dFld = i16;
                i12 -= i11;
                for (f3 = 1; f3 < 5; ++f3) {
                    fArr[i14 + 1] -= s2;
                    lArr[i14 + 1] &= i14;
                }
            }
        } else {
            i10 >>= Test.iFld;
        }
        vMeth_check_sum += (b ? 1 : 0) + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f3) + i17 + s2
            + FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b1=false;
        float f4=1.259F, fArr1[]=new float[N];
        int i18=190, i19=183, i20=9, i21=-18939, i22=122, i23=244, i24=1, i25=98, i26=1, i27=0;
        byte by1=101;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-30733);
        FuzzerUtils.init(fArr1, 92.473F);

        vMeth(b1);
        Test.instanceCount = -1897883560L;
        f4 /= ((long)(f4) | 1);
        i18 = 1;
        while (++i18 < 121) {
            Test.iFld = (int)Test.instanceCount;
            Test.iArrFld[i18][i18] = (int)Test.instanceCount;
            Test.iFld += i18;
            switch (((Test.iFld >>> 1) % 6) + 13) {
            case 13:
                for (i19 = 7; i19 < 207; ++i19) {
                    Test.iFld >>= (int)17394L;
                    i20 -= (int)3494015966L;
                }
                for (i21 = 2; i21 < 207; i21 += 2) {
                    f4 *= -120;
                    Test.iArrFld[i21 + 1][i18 - 1] *= (int)86L;
                }
                break;
            case 14:
            case 15:
                for (i23 = 10; i23 < 207; ++i23) {
                    Test.iArrFld[i23 - 1][i18 + 1] >>>= i23;
                    if (b1) {
                        i24 = -50;
                        i20 += i23;
                    } else if (b1) {
                        sArr = sArr;
                    } else {
                        for (i25 = 1; 2 > i25; i25++) {
                            by1 += (byte)(21107 + (i25 * i25));
                            Test.iFld *= by1;
                            Test.instanceCount += (i25 * i20);
                        }
                        i22 = 45887;
                        i27 = 1;
                        do {
                            fArr1[i18] = i18;
                        } while (++i27 < 2);
                        Test.instanceCount = i25;
                    }
                    i26 -= (int)f4;
                }
                Test.dFld = -201L;
                break;
            case 16:
                f4 -= i20;
                break;
            case 17:
                i24 += (((i18 * i22) + i19) - i24);
                break;
            case 18:
            default:
                i20 = i23;
            }
        }

        FuzzerUtils.out.println("b1 f4 i18 = " + (b1 ? 1 : 0) + "," + Float.floatToIntBits(f4) + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 by1 = " + i25 + "," + i26 + "," + by1);
        FuzzerUtils.out.println("i27 sArr fArr1 = " + i27 + "," + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
