// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=107L;
    public float fFld=25.421F;
    public int iFld=7;
    public static int iFld1=54408;
    public float fArrFld[]=new float[N];

    public static long sMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, double d, int i4) {

        int i5=-3, i6=-65, i7=-6391, i8=132, i9=254, i10=8, i11=37123, i12=-210, i13=243, iArr1[]=new int[N];
        float f1=0.623F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 109);
        FuzzerUtils.init(lArr1, -33886L);

        Test.instanceCount = i4;
        for (i5 = 253; 6 < i5; i5--) {
            for (i7 = 1; i7 < 7; i7++) {
                try {
                    i8 = (1622467954 / i7);
                    i8 = (i8 % i7);
                    i6 = (42585 / iArr1[i7]);
                } catch (ArithmeticException a_e) {}
                i4 += i7;
                i6 -= i6;
            }
        }
        for (i9 = 1; 358 > i9; ++i9) {
            i11 = 1;
            do {
                f1 += i8;
            } while (++i11 < 5);
            lArr1[i9] = i10;
            for (i12 = 1; i12 < 5; i12++) {
                Test.instanceCount ^= i6;
                d = i13;
                i13 += (244 + (i12 * i12));
                l1 += (i12 - Test.instanceCount);
            }
        }
        long meth_res = l1 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 +
            Float.floatToIntBits(f1) + i12 + i13 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth() {

        double d1=2.85150;
        int i14=-3, i15=53, i16=58, iArr2[]=new int[N];
        byte by2=-12;
        float f2=-36.229F;
        boolean b1=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr2, 63839);
        FuzzerUtils.init(lArr2, 4L);

        Test.iFld1 = iMeth(11L, d1, Test.iFld1);
        i14 = 1;
        do {
            for (i15 = 1; i15 < 6; i15++) {
                Test.iFld1 = Test.iFld1;
                Test.iFld1 = (int)Test.instanceCount;
                i16 >>= i15;
                d1 -= d1;
                switch (((i14 % 7) * 5) + 80) {
                case 112:
                    by2 *= (byte)f2;
                    iArr2[i14 - 1] -= Test.iFld1;
                    break;
                case 105:
                    Test.iFld1 -= -28189;
                    i16 *= -8;
                    if (b1) {
                        i16 -= (int)f2;
                        iArr2[i14 - 1] -= i15;
                    } else {
                        i16 = (int)2406046420L;
                    }
                    break;
                case 91:
                    lArr2 = lArr2;
                case 84:
                    i16 += (int)(35149L + (i15 * i15));
                    break;
                case 81:
                    Test.instanceCount *= i15;
                    break;
                case 111:
                    iArr2[i15 - 1] = (int)d1;
                    break;
                case 82:
                    if (b1) break;
                    break;
                }
            }
        } while (++i14 < 273);
        long meth_res = Double.doubleToLongBits(d1) + i14 + i15 + i16 + by2 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static short sMeth(long l) {

        int i1=210, i2=12, i3=-10, iArr[]=new int[N], iArr3[]=new int[N];
        byte by1=20;
        float f=0.454F;
        boolean b=false;
        double d2=-2.126033;
        short s=24436;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 249);
        FuzzerUtils.init(lArr, 44240L);
        FuzzerUtils.init(iArr3, 42720);

        i1 = 1;
        do {
            switch (((((iArr[i1] -= by1) >>> 1) % 8) * 5) + 118) {
            case 124:
                for (i2 = 1; i2 < 7; i2 += 3) {
                    f -= i2;
                    f = lArr[i1];
                    b = bMeth();
                    iArr3[i1 + 1] *= (int)d2;
                    iArr3[i2] = i2;
                    switch (((Test.iFld1 >>> 1) % 2) + 98) {
                    case 98:
                        Test.iFld1 += Test.iFld1;
                        Test.iFld1 ^= i1;
                        break;
                    case 99:
                        iArr[i2 - 1] = i1;
                        Test.instanceCount >>= l;
                        f = 17188;
                        b = true;
                        break;
                    }
                }
                break;
            case 157:
                Test.iFld1 |= (int)-6391L;
            case 131:
                d2 -= i1;
                break;
            case 154:
                l += Test.iFld1;
                break;
            case 158:
                lArr[i1 - 1] -= (long)f;
                break;
            case 143:
                Test.iFld1 = i3;
                break;
            case 150:
                i3 = s;
                break;
            case 152:
                if (true) continue;
                break;
            }
        } while (++i1 < 240);
        long meth_res = l + i1 + by1 + i2 + i3 + Float.floatToIntBits(f) + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
            s + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr3);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=91;
        int i=-31805, i17=-39737, i18=41543, i19=0, i20=-9, i21=-7, iArr4[]=new int[N];
        double d3=18.59117;
        long l2=3704790297737187037L;
        boolean b2=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr4, -5);

        fFld *= (Test.instanceCount + iFld);
        iFld -= (int)(by - (Math.max(-2124627640L, Test.instanceCount) + (iFld++)));
        i = 1;
        do {
            bArr[i + 1] = (sMeth(-7127099308281815504L) != Test.iFld1);
        } while (++i < 302);
        d3 -= Test.iFld1;
        for (i17 = 12; i17 < 327; ++i17) {
            i19 = 80;
            while (--i19 > 0) {
                d3 += 1;
                Test.instanceCount += (((i19 * Test.iFld1) + i18) - i19);
                i18 = i19;
                for (l2 = 1; 1 > l2; ++l2) {
                    Test.iFld1 = by;
                    if (b2) {
                        Test.iFld1 += (int)(-3862874018874240477L + (l2 * l2));
                        iArr4[i17 - 1] = (int)Test.instanceCount;
                        switch ((int)(((l2 % 2) * 5) + 31)) {
                        case 34:
                            Test.iFld1 >>= i20;
                            iFld = i19;
                            i20 -= i18;
                            iArr4[i17 + 1] += Test.iFld1;
                        case 35:
                            fFld += (float)-1.104235;
                            iFld |= 216;
                            fFld += (l2 * l2);
                            break;
                        default:
                            fArrFld = fArrFld;
                            i18 += i21;
                            i21 -= by;
                        }
                    } else if (b2) {
                        i21 = (int)-35.150F;
                    }
                    i20 = -29161;
                }
                if (true) continue;
                iFld = -124;
            }
        }

        FuzzerUtils.out.println("by i d3 = " + by + "," + i + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("l2 i20 i21 = " + l2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b2 bArr iArr4 = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr) + "," +
            FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + iFld);
        FuzzerUtils.out.println("Test.iFld1 fArrFld = " + Test.iFld1 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  bMeth ->  bMeth sMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
