// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1934317971L;
    public static volatile int iFld=11641;
    public int iFld1=142;
    public static double dFld=0.12342;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -6);
        FuzzerUtils.init(Test.fArrFld, -1.459F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth(long l) {

        int i5=-10;

        i5 <<= i5;
        vMeth_check_sum += l + i5;
    }

    public static void vMeth1(float f, int i6, boolean b2) {

        int i7=7, i8=53258, i9=8, i10=-10, i11=0;
        short s=15449, sArr[]=new short[N];
        double d=109.45172;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, 2712162362L);
        FuzzerUtils.init(sArr, (short)-4351);
        FuzzerUtils.init(bArr, true);

        for (i7 = 10; 294 > i7; i7++) {
            lArr[i7] += i7;
            i8 = i6;
            Test.iArrFld[i7] = i6;
        }
        i8 = -8960;
        b2 = b2;
        for (float f1 : Test.fArrFld) {
            for (i9 = 4; 1 < i9; i9--) {
                sArr[i9] /= (short)(Test.instanceCount | 1);
                Test.iArrFld = Test.iArrFld;
                Test.instanceCount = i7;
                i10 += i8;
                i11 = 1;
                while (++i11 < 2) {
                    s = (short)d;
                    bArr[i11 - 1] = b2;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + (b2 ? 1 : 0) + i7 + i8 + i9 + i10 + i11 + s +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth1() {

        boolean b3=true;
        int i12=-4359, i13=25892, i14=-179, i15=-58648, i16=-4, i17=115, i18=-172;
        byte by=-35;
        float f2=0.200F;

        vMeth1(-1.561F, Test.iFld, b3);
        Test.instanceCount = Test.instanceCount;
        Test.iFld += (int)Test.instanceCount;
        for (i12 = 7; 176 > i12; i12++) {
            Test.instanceCount = i14;
            by += (byte)(1 + (i12 * i12));
            for (i15 = 1; 9 > i15; ++i15) {
                f2 += ((long)i15 ^ (long)i15);
                if (b3) break;
                f2 += (i15 * i15);
            }
        }
        for (i17 = 15; i17 < 307; ++i17) {
            if (i17 != 0) {
            }
            i13 += (238 + (i17 * i17));
            if (b3) break;
            Test.instanceCount += (long)f2;
        }
        long meth_res = (b3 ? 1 : 0) + i12 + i13 + i14 + by + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(boolean b1, int i4) {

        int i19=136, i20=5, i21=31333, i22=-36249, i23=-173, i24=79, i25=-14, i26=56458;
        float f3=94.813F;

        vMeth((Test.instanceCount - iMeth1()) - Test.instanceCount);
        Test.iArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        for (i19 = 7; i19 < 132; i19++) {
            try {
                Test.iFld = (-48 / i4);
                Test.iFld = (Test.iFld % -249);
                Test.iFld = (i20 / i4);
            } catch (ArithmeticException a_e) {}
            for (i21 = 1; i21 < 13; i21 += 3) {
                i22 = (int)2951052855579560962L;
            }
            i4 = (int)Test.instanceCount;
        }
        f3 -= 65152;
        Test.iArrFld[(i4 >>> 1) % N] *= (int)-6L;
        for (i23 = 1; i23 < 234; ++i23) {
            i4 += Test.iFld;
            Test.instanceCount = -38;
            for (i25 = 1; i25 < 7; ++i25) {
                i4 = i19;
                Test.fArrFld[i23 - 1] = -38467L;
            }
        }
        long meth_res = (b1 ? 1 : 0) + i4 + i19 + i20 + i21 + i22 + Float.floatToIntBits(f3) + i23 + i24 + i25 + i26;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=180, i2=-176, i3=-9635, i27=13, i28=62163, i29=-2, i30=1, i31=12941, i32=-7, i33=-95;
        boolean b=false;
        float f4=-2.626F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -105L);

        for (i = 14; i < 261; i++) {
            for (i2 = i; i2 < 102; ++i2) {
                if (b || (b = (iMeth(b, i1) < f4))) break;
                if (b) continue;
                Test.fArrFld = Test.fArrFld;
                i3 = i2;
                i27 = 1;
                while (++i27 < 1) {
                    switch ((i2 % 3) + 108) {
                    case 108:
                        Test.iFld >>= (int)Test.instanceCount;
                        Test.instanceCount += (((i27 * Test.instanceCount) + f4) - Test.instanceCount);
                        i3 = (int)f4;
                        i3 = i27;
                        break;
                    case 109:
                        i3 += (i27 * Test.instanceCount);
                        break;
                    case 110:
                        i1 += (int)Test.instanceCount;
                        Test.iFld += (((i27 * Test.instanceCount) + i27) - f4);
                        lArr1[i2] |= i3;
                        break;
                    }
                }
                f4 += i3;
                if (b) break;
            }
            Test.iArrFld = Test.iArrFld;
        }
        for (i28 = 19; i28 < 386; i28++) {
            for (i30 = 4; 69 > i30; i30++) {
                for (i32 = 1; 2 > i32; i32 += 3) {
                    i1 += i32;
                    i31 += (((i32 * iFld1) + Test.instanceCount) - Test.iFld);
                    i31 <<= i28;
                    i33 = (int)Test.instanceCount;
                    Test.dFld -= Test.iFld;
                    i1 = i1;
                    i1 >>= i28;
                }
            }
            i3 %= -24659;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 b f4 = " + i3 + "," + (b ? 1 : 0) + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 lArr1 = " + i33 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld iFld1 = " + Test.instanceCount + "," + Test.iFld + "," +
            iFld1);
        FuzzerUtils.out.println("Test.dFld Test.iArrFld Test.fArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
