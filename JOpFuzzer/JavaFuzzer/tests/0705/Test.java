// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4240056652L;
    public static int iFld=-12;
    public static int iFld1=-10;
    public static float fFld=-124.151F;
    public volatile double dFld=-60.57262;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 216);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, long l2, boolean b) {

        int i3=7, i4=-1, i5=229, i6=9, i7=2;
        short s1=2996;
        float f1=122.253F;

        i3 = 1;
        do {
            l2 += Test.iFld;
            Test.iFld *= Test.iFld;
            Test.instanceCount += (-1 + (i3 * i3));
            l2 = Test.instanceCount;
        } while (++i3 < 314);
        Test.instanceCount = s1;
        for (i4 = 7; i4 < 310; i4++) {
            for (i6 = 1; i6 < 5; ++i6) {
                f1 -= i2;
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-10);
                Test.iArrFld[(Test.iFld >>> 1) % N] >>= Test.iFld;
                i2 = i3;
                i2 += 93;
                i2 *= (int)Test.instanceCount;
                i2 += (i6 | (long)f1);
            }
        }
        vMeth2_check_sum += i2 + l2 + (b ? 1 : 0) + i3 + s1 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1);
    }

    public static void vMeth1() {

        int i=3, i1=61, i8=-12, i9=112, i10=-36636, iArr1[]=new int[N];
        boolean b1=true;
        double d1=125.120401;

        FuzzerUtils.init(iArr1, 2);

        for (i = 10; i < 212; ++i) {
            float f2=1.995F;
            i1 = (-(iArr1[i + 1] % ((--Test.iFld) | 1)));
            vMeth2(Test.iFld, Test.instanceCount, b1);
            f2 *= Test.iFld;
            for (i8 = 1; i8 < 8; ++i8) {
                Test.instanceCount += -62230L;
                i1 <<= i9;
                i10 = 1;
                while (++i10 < 2) {
                    Test.iFld += (-52 + (i10 * i10));
                    iArr1[i] = Test.iFld1;
                    iArr1[i10 - 1] <<= (int)Test.instanceCount;
                    f2 *= i;
                    d1 += d1;
                    Test.iFld1 = (int)Test.instanceCount;
                    Test.instanceCount -= 22131559321214730L;
                }
            }
        }
        vMeth1_check_sum += i + i1 + (b1 ? 1 : 0) + i8 + i9 + i10 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, long l1) {

        float f=-116.354F;
        double d=-63.111542;
        int iArr[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 20);
        FuzzerUtils.init(sArr, (short)24363);

        iArr[(Test.iFld >>> 1) % N] -= (int)((f++) * (iArr[(Test.iFld >>> 1) % N] + (Test.iFld - -113)));
        Test.iFld -= (int)((d - (9 + Math.max(Test.iFld, Test.iFld))) - (sArr[(Test.iFld >>> 1) % N]++));
        Test.iFld += 42;
        vMeth1();
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        short s=-13320;
        float f3=1.404F;
        int i11=4484, i12=-168, i13=-12, i14=-53061, i15=-1856, i16=-249, i17=-5173, i18=-81;
        double d2=114.80974, d3=0.71233;
        byte by=-21;
        boolean b2=true;

        s = (short)(((121 - (-1 * (Test.iFld++))) + (Test.instanceCount - Test.iFld)) - ((-2 * (Test.iFld + Test.iFld))
            - (Test.iFld++)));
        vMeth(Test.instanceCount, Test.instanceCount);
        for (f3 = 5; 162 > f3; ++f3) {
            Test.iFld1 += (int)Test.instanceCount;
            Test.fFld += (f3 - Test.iFld);
            Test.instanceCount *= Test.iFld1;
        }
        for (d2 = 8; d2 < 204; ++d2) {
            for (i13 = 5; i13 < 128; i13++) {
                Test.iArrFld[(int)(d2 + 1)] += (int)f3;
                Test.iArrFld = Test.iArrFld;
                i11 += (((i13 * Test.iFld) + i14) - i11);
                by = (byte)Test.iFld;
                switch (((i13 % 3) * 5) + 122) {
                case 130:
                    Test.iArrFld[(int)(d2)] /= (int)(Test.iFld | 1);
                    i12 <<= (int)Test.instanceCount;
                    for (d3 = 2; d3 > 1; d3--) {
                        Test.iArrFld[(int)(d3)] = (int)Test.instanceCount;
                        Test.instanceCount += (43097 + (d3 * d3));
                        Test.instanceCount += (long)(d3 * Test.iFld);
                        dFld += Test.iFld1;
                    }
                    break;
                case 136:
                    i11 = (int)Test.instanceCount;
                case 131:
                    Test.instanceCount /= (i16 | 1);
                    Test.instanceCount -= -9;
                    Test.iArrFld[i13 + 1] >>= (int)Test.instanceCount;
                    Test.fFld += (((i13 * Test.iFld) + i11) - i12);
                default:
                    i11 = -22968;
                    i11 -= i13;
                    for (i17 = 2; i17 > d2; --i17) {
                        try {
                            i18 = (228 / i17);
                            i12 = (32 / Test.iArrFld[i13]);
                            Test.iArrFld[i17 + 1] = (i18 / -81);
                        } catch (ArithmeticException a_e) {}
                    }
                    if (b2) continue;
                }
            }
        }

        FuzzerUtils.out.println("s f3 i11 = " + s + "," + Float.floatToIntBits(f3) + "," + i11);
        FuzzerUtils.out.println("d2 i12 i13 = " + Double.doubleToLongBits(d2) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 by d3 = " + i14 + "," + by + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 b2 = " + i18 + "," + (b2 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("Test.fFld dFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
