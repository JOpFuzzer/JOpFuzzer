// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=40473L;
    public static float fFld=1.351F;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9) {

        double d1=-2.21226;
        int i10=12, i11=-46806, i12=-178, i13=-1, i14=-6, iArr[]=new int[N];
        float f=0.330F;
        byte by=-21;

        FuzzerUtils.init(iArr, 43810);

        for (d1 = 14; 356 > d1; d1++) {
            for (i11 = 1; i11 < 5; i11++) {
                i10 = (int)f;
                for (i13 = 1; i13 < 2; i13++) {
                    i14 = (int)Test.instanceCount;
                    i10 -= 176;
                    i9 += i8;
                    switch ((i11 % 2) + 110) {
                    case 110:
                        i8 *= i9;
                        try {
                            i8 = (i11 / iArr[(int)(d1)]);
                            i9 = (-76 % iArr[i11 + 1]);
                            i10 = (-152 / i9);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 111:
                        i14 += i13;
                        i14 <<= by;
                        Test.instanceCount += (long)f;
                        break;
                    default:
                        f -= -8653;
                        i12 += (-4 + (i13 * i13));
                    }
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 +
            i14 + by + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i6, int i7) {

        byte by1=83;
        int i15=-14, i16=-52590, i17=2030, i18=25, iArr1[]=new int[N];
        float f1=1.548F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 542919426139550190L);
        FuzzerUtils.init(iArr1, 0);

        vMeth1(i7, 6);
        i6 += i7;
        for (long l : lArr) {
            boolean b=false;
            by1 >>= (byte)i6;
            i6 -= i7;
            i6 -= i7;
            iArr1[(0 >>> 1) % N] <<= -245;
            if (b) {
                lArr[(i7 >>> 1) % N] |= l;
                for (i15 = 1; i15 < 4; i15++) {
                    l >>= 3812125886344733933L;
                    i6 = (int)l;
                }
                for (i17 = 1; i17 < 4; i17++) {
                    f1 -= i17;
                    i6 += 37129;
                }
            } else {
                l -= i18;
            }
        }
        long meth_res = i6 + i7 + by1 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d, int i1, int i2) {

        int i3=11, i4=-58, i5=-187, i19=16800, i20=-186, i21=64, iArr2[]=new int[N];
        short s=12303;
        float f2=84.275F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.803F);
        FuzzerUtils.init(iArr2, 196);

        for (i3 = 6; i3 < 127; i3++) {
            boolean b1=true;
            if (b1) {
                i5 = 1;
                do {
                    s %= (short)(iMeth(44174, i3) | 1);
                    Test.instanceCount = (long)1.379F;
                    fArr[i3 - 1] *= 10;
                    for (i19 = 1; i19 < 1; ++i19) {
                        Test.instanceCount += (long)f2;
                        i20 = i3;
                        f2 = i1;
                    }
                    i1 -= (int)Test.instanceCount;
                    switch ((i3 % 5) + 9) {
                    case 9:
                        i2 *= i20;
                        i4 = i20;
                        i1 -= i20;
                        break;
                    case 10:
                        i2 = i5;
                    case 11:
                        i4 -= i1;
                        break;
                    case 12:
                        iArr2[i3] >>>= i19;
                        break;
                    case 13:
                        i4 += i5;
                        break;
                    default:
                        i2 = i21;
                    }
                } while (++i5 < 13);
                vMeth_check_sum += Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + s + i19 + i20 +
                    Float.floatToIntBits(f2) + i21 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                    FuzzerUtils.checkSum(iArr2);
                return;
            } else if (b1) {
                i20 += i3;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + s + i19 + i20 +
            Float.floatToIntBits(f2) + i21 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-11120, i22=-10, i23=42313, i24=-28994, i25=-41, i26=-103, iArr3[]=new int[N];
        double d2=2.58245;
        byte by2=68;

        FuzzerUtils.init(iArr3, 1);

        i = 1;
        do {
            vMeth(d2, i, i22);
            iArr3 = iArr3;
            for (i23 = 111; i23 > 5; i23 -= 2) {
                for (i25 = 1; i25 < 3; i25++) {
                    i22 -= i;
                    d2 = Test.fFld;
                    i24 &= i26;
                    Test.instanceCount = i;
                    iArr3[i23 + 1] <<= -44183;
                    Test.instanceCount = Test.instanceCount;
                }
                i24 += (int)-1L;
                if (true) break;
                i24 -= (int)Test.fFld;
                i24 += (((i23 * i) + i24) - Test.fFld);
            }
            try {
                i24 = (i26 % -22);
                i26 = (i26 / 4801);
                iArr3[i] = (i23 % i25);
            } catch (ArithmeticException a_e) {}
        } while (++i < 227);
        Test.instanceCount += by2;
        i24 = (int)Test.fFld;

        FuzzerUtils.out.println("i d2 i22 = " + i + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 by2 iArr3 = " + i26 + "," + by2 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
