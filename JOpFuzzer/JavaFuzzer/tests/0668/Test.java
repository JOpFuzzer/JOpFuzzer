// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4883L;
    public float fFld=-35.880F;
    public static short sFld=-19088;
    public double dFld=-2.6378;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];
    public static float fArrFld1[]=new float[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14276);
        FuzzerUtils.init(Test.fArrFld, -64.286F);
        FuzzerUtils.init(Test.fArrFld1, 2.176F);
        FuzzerUtils.init(Test.iArrFld1, 163);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, byte by) {

        int i9=-10, i10=-187, i11=-106, i12=8, i13=-38218;
        boolean b=false;
        long l1=-686441730187568697L, lArr[]=new long[N];
        double d=-93.103928;

        FuzzerUtils.init(lArr, -2148L);

        for (i9 = 10; i9 < 303; i9++) {
            b = b;
            i10 <<= 17588;
            f1 += (i9 * i10);
            for (l1 = i9; l1 < 6; l1++) {
                i12 = 1;
                do {
                    f1 += i9;
                    i10 = i12;
                    i10 -= (int)d;
                    lArr[i12 + 1] = i13;
                    i11 = 10;
                    f1 = i9;
                    i11 += (int)d;
                    i13 = (int)16.887F;
                } while (++i12 < 1);
                i13 = i11;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + by + i9 + i10 + (b ? 1 : 0) + l1 + i11 + i12 +
            Double.doubleToLongBits(d) + i13 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i6) {

        int i7=32967, i8=-247, i14=-85, i15=169, i16=22458, i17=21700;
        byte by1=111;
        double d1=0.72672;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-21654);

        for (i7 = 1; 137 > i7; i7++) {
            float f2=-88.934F;
            vMeth2(f2, by1);
        }
        Test.instanceCount |= i8;
        i8 = (int)Test.instanceCount;
        for (i14 = 250; 5 < i14; --i14) {
            i16 -= (int)Test.instanceCount;
            Test.iArrFld[i14] = i8;
            d1 -= by1;
            sArr[i14] -= (short)Test.instanceCount;
            Test.iArrFld[i14] ^= i7;
            i17 = 1;
            while (++i17 < 7) {
                by1 >>= (byte)i14;
                i16 -= (int)Test.instanceCount;
                Test.fArrFld[i17 + 1][i17] -= i8;
                if (i14 != 0) {
                    vMeth1_check_sum += i6 + i7 + i8 + by1 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + i17 +
                        FuzzerUtils.checkSum(sArr);
                    return;
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + by1 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + i17 +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i3, float f, long l) {

        int i4=20457, i5=18060;
        boolean b1=false;

        f = ((i3 - (141 >> l)) * ((Test.instanceCount = (long)f) - (++i3)));
        i3 -= (int)(Test.iArrFld[(i3 >>> 1) % N] * (l >>= i3));
        for (i4 = 10; i4 < 263; i4++) {
            vMeth1(i3);
            i5 = i4;
            i5 -= i4;
            i3 *= i3;
            b1 = b1;
            i3 = i3;
            Test.instanceCount = Test.instanceCount;
            Test.fArrFld[i4][i4 + 1] += i4;
            i3 = i5;
            i3 &= (int)l;
        }
        i5 = (int)f;
        Test.iArrFld[(i5 >>> 1) % N] *= i5;
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + l + i4 + i5 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=-42102, i1=12, i2=-14, i18=55469, i19=156, i20=-52036, i21=-1, i22=-230, i23=12;
        double d2=101.46326;
        byte by2=39;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 233L);

        for (i = 3; 159 > i; i++) {
            i2 = 1;
            do {
                fFld = (((i - 12L) - (Test.instanceCount * i2)) - (i1++));
                vMeth(i2, fFld, 2L);
            } while (++i2 < 161);
            for (d2 = 4; 161 > d2; d2 += 3) {
                i19 = 1;
                while (++i19 < 4) {
                    switch ((i19 % 2) + 45) {
                    case 45:
                        Test.fArrFld1 = FuzzerUtils.float1array(N, (float)-62.106F);
                        break;
                    case 46:
                        i18 ^= i1;
                    default:
                        Test.instanceCount += i19;
                        lArr1[(3 >>> 1) % N][i19] = Test.sFld;
                        i18 += (i19 | by2);
                        Test.instanceCount += (-9038427170018151909L + (i19 * i19));
                    }
                    Test.fArrFld1[i19] = 14;
                    Test.iArrFld1[i19 + 1] |= (int)Test.instanceCount;
                    Test.instanceCount += (i19 * i19);
                }
                for (i20 = 1; i20 < 4; ++i20) {
                    i1 += (i20 * i20);
                }
                for (i22 = 4; i22 > 1; i22--) {
                    Test.instanceCount += i19;
                    Test.fArrFld[i22][i + 1] = (float)d2;
                    i23 = i1;
                    Test.instanceCount += (3749 + (i22 * i22));
                    dFld *= Test.instanceCount;
                    fFld += i19;
                    Test.iArrFld[i22] = (int)5070054930718264440L;
                    Test.instanceCount = -156;
                    i23 ^= i18;
                    fFld += i22;
                }
                Test.iArrFld1[(int)(d2)] -= (int)dFld;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("d2 i18 i19 = " + Double.doubleToLongBits(d2) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("by2 i20 i21 = " + by2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 lArr1 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("dFld Test.iArrFld Test.fArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.fArrFld1 Test.iArrFld1 = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld1)) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
