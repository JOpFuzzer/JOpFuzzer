// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1447574006L;
    public static int iFld=-147;
    public static float fFld=71.411F;
    public static double dFld=-2.126274;
    public byte byFld=-18;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1);
        FuzzerUtils.init(Test.lArrFld, 6L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d=-43.96240;
        int i2=110, i3=-60676, i4=-63404, i5=-21354;
        float f=-123.37F;
        boolean b=true;

        Test.iArrFld[(Test.iFld >>> 1) % N] -= (int)226L;
        for (d = 16; d < 266; ++d) {
            Test.iFld = (int)f;
            for (i3 = 7; i3 > 1; i3 -= 3) {
                Test.instanceCount += Test.iFld;
                Test.iFld >>= -29;
                i2 >>>= i4;
                i5 = 1;
                while (++i5 < 4) {
                    if (Test.iFld != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 +
                            (b ? 1 : 0);
                        return;
                    }
                    f = 0;
                    Test.iFld >>= i2;
                    b = b;
                    i2 += (i5 ^ (long)f);
                    f -= Test.iFld;
                }
                Test.iFld /= -8484;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + (b ? 1 : 0);
    }

    public static int iMeth(long l1) {

        int i6=-13392, i7=-9574, i8=-3, i9=-37, i11=122, i12=-60190, i13=-24397;
        boolean b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.399F);

        vMeth1();
        for (i6 = 1; i6 < 314; i6 += 2) {
            Test.iFld -= i7;
            for (i8 = i6; i8 < 10; ++i8) {
                int i10=23972;
                if (true) break;
                i10 -= Test.iFld;
            }
            l1 += i6;
        }
        i11 = 1;
        while (++i11 < 361) {
            fArr[i11] += 18404;
            i12 = 1;
            do {
                Test.iFld = i9;
                Test.iFld |= (int)l1;
                i13 = 1;
                while (++i13 < 1) {
                    i7 += (int)l1;
                    if (b1) continue;
                }
            } while (++i12 < 5);
        }
        long meth_res = l1 + i6 + i7 + i8 + i9 + i11 + i12 + i13 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, long l) {

        double d1=0.72490;
        short s=12283;
        int i14=-7, i15=20894, i16=-17740, i17=-64307, i18=-13, iArr[][]=new int[N][N];
        float f1=-80.469F;

        FuzzerUtils.init(iArr, 44545);

        i = (int)((iMeth(Test.instanceCount) * d1) - s);
        i = -79;
        i = i;
        for (i14 = 6; i14 < 231; i14++) {
            i16 = 1;
            while (++i16 < 7) {
                iArr = iArr;
            }
            Test.lArrFld[i14 + 1] >>= i16;
            i15 += (((i14 * f1) + l) - i);
            if (i != 0) {
                vMeth_check_sum += i + i1 + l + Double.doubleToLongBits(d1) + s + i14 + i15 + i16 +
                    Float.floatToIntBits(f1) + i17 + i18 + FuzzerUtils.checkSum(iArr);
                return;
            }
            i += (((i14 * i) + Test.iFld) - Test.instanceCount);
            switch (((i14 % 1) * 5) + 74) {
            case 78:
                for (i17 = 7; i17 > 1; i17--) {
                    iArr[i14 + 1][i17 + 1] *= (int)1.31641;
                }
                i18 += i15;
                break;
            }
            i18 -= -57831;
        }
        vMeth_check_sum += i + i1 + l + Double.doubleToLongBits(d1) + s + i14 + i15 + i16 + Float.floatToIntBits(f1) +
            i17 + i18 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=6, i20=-238, i21=44966, i22=-26938, i23=-17, i24=-1, i25=57721, i26=5, i27=-36175;
        boolean b3=true;

        vMeth(10, Test.iFld, Test.instanceCount);
        Test.iFld = (int)23683L;
        Test.iFld += -66;
        for (i19 = 6; i19 < 313; i19++) {
            i20 += (((i19 * Test.instanceCount) + Test.instanceCount) - i19);
        }
        Test.iFld += (int)Test.instanceCount;
        if (b3) {
            for (i21 = 7; i21 < 133; ++i21) {
                i22 = (int)Test.fFld;
                Test.iFld <<= i19;
                Test.fFld = Test.fFld;
                for (i23 = 10; i23 < 199; ++i23) {
                    short s1=-21523;
                    i22 += (int)0L;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-7);
                    if (b3) {
                        i25 = 1;
                        while (++i25 < 2) {
                            boolean b2=true;
                            if (b2) {
                                Test.iFld |= 9;
                                i24 *= i19;
                                Test.dFld -= i20;
                            } else {
                                Test.iArrFld[i23] = (int)38551L;
                                Test.iArrFld[i25 + 1] >>= -206;
                            }
                            i22 = (int)Test.fFld;
                            Test.instanceCount *= (long)Test.dFld;
                        }
                        s1 = (short)14L;
                        for (i26 = 1; i26 < 2; ++i26) {
                            s1 += (short)11.520F;
                            Test.lArrFld[i26] = i26;
                            Test.iFld *= byFld;
                            i20 -= 4;
                        }
                    } else {
                        Test.fFld += (((i23 * Test.iFld) + Test.fFld) - i21);
                    }
                }
            }
        } else if (false) {
            Test.instanceCount += i26;
        } else if (b3) {
            Test.iFld *= i27;
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b3 = " + (b3 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld byFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + byFld +
            "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
