// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=175L;
    public boolean bFld=false;
    public static short sFld=756;
    public static volatile boolean bArrFld[]=new boolean[N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.fArrFld, 45.917F);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i5, int i6) {

        byte by=-28;
        int i8=-174, i9=143, i10=-29074, i11=-50972, i12=-208, iArr1[]=new int[N];
        boolean b=false;
        float f2=-112.162F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 12);
        FuzzerUtils.init(lArr, 3747519834109916032L);

        i5 = i6;
        for (int i7 : iArr1) {
            iArr1[(i7 >>> 1) % N] <<= by;
            i5 = (int)Test.instanceCount;
            i5 = (int)Test.instanceCount;
        }
        if (b) {
            iArr1[(i5 >>> 1) % N] = i5;
        } else if (b) {
            for (i8 = 9; i8 < 253; ++i8) {
                i5 >>= (int)Test.instanceCount;
                for (i10 = 1; 7 > i10; i10 += 2) {
                    i12 = 3;
                    do {
                        if (i11 != 0) {
                        }
                        lArr = FuzzerUtils.long1array(N, (long)-7783399194846392870L);
                        i11 |= i6;
                        lArr[i8] -= i6;
                    } while (--i12 > 0);
                }
            }
        } else {
            f2 -= -4;
        }
        long meth_res = i5 + i6 + by + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(float f1, long l, int i4) {

        boolean b1=false, b2=false;
        int i13=5, i14=-14, i15=-161, i16=-2587, i17=9, iArr2[]=new int[N];
        long l1=3828394871201932699L;

        FuzzerUtils.init(iArr2, -8);

        if (b1) {
            Test.instanceCount = lMeth1(i4, i4);
        } else {
            i4 &= i4;
            for (i13 = 353; i13 > 4; i13 -= 3) {
                iArr2[i13 - 1] += i4;
                i15 = 1;
                while (++i15 < 13) {
                    for (l1 = 1; l1 < 1; ++l1) {
                        if (i16 != 0) {
                        }
                    }
                    i14 += (i15 ^ (long)f1);
                    i14 += (int)f1;
                }
                l += (i13 - i15);
                if (b1) break;
                i17 = 1;
                do {
                    i14 += (((i17 * i17) + i16) - i13);
                    b2 = b1;
                } while (++i17 < 13);
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i4 + (b1 ? 1 : 0) + i13 + i14 + i15 + l1 + i16 + i17 + (b2 ? 1 :
            0) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d, float f, int i3) {

        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.116088);

        i3 -= (int)(((dArr[(i3 >>> 1) % N]--) * i3) - ((i3 * i3) * lMeth(f, -4579800625337712515L, i3)));
        i3 = i3;
        i3 = (int)Test.instanceCount;
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i3 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr3) {

        int i1=-3, i2=2, i18=2, i19=-29975, i20=-2093, i21=3, i22=5, i23=162, iArr[]=new int[N];
        double d1=-1.125766, d2=17.92296;
        float f3=2.176F, f4=-96.334F;
        byte by1=51, byArr[]=new byte[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(byArr, (byte)88);
        FuzzerUtils.init(iArr, 46886);
        FuzzerUtils.init(lArr1, 3051408184L);

        for (i1 = 4; i1 < 222; i1++) {
            Test.instanceCount += i1;
            byArr[i1 - 1] <<= (byte)((i2--) + i1);
            i2 += (i1 + i2);
            iArr = (iArr = (iArr = (iArr = iArr)));
            vMeth(d1, -71.977F, i2);
            iArr[i1] -= (int)f3;
            lArr1[i1 - 1] = i1;
            for (i18 = 3; i18 < 115; i18++) {
                i19 -= i1;
            }
            i2 = i2;
            i2 += (((i1 * i19) + Test.instanceCount) - i1);
        }
        f3 *= i1;
        iArr = iArr;
        i19 >>= -238;
        iArr[(i2 >>> 1) % N] *= -17313;
        for (f4 = 16; 361 > f4; f4 += 2) {
            i2 = (int)f4;
            for (i21 = 3; 146 > i21; ++i21) {
                byArr[i21] = (byte)i21;
                bFld = bFld;
                for (d2 = f4; 2 > d2; ++d2) {
                    Test.bArrFld[i21] = bFld;
                    i19 += i20;
                    by1 *= (byte)Test.sFld;
                    bFld = bFld;
                    switch ((((i18 >>> 1) % 8) * 5) + 39) {
                    case 50:
                        d1 -= i23;
                        try {
                            iArr[i21] = (iArr[(int)(f4 - 1)] % i21);
                            i23 = (i1 / 46);
                            i23 = (i2 % -15);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 48:
                        i20 = 61174;
                    case 69:
                        Test.instanceCount += (33 + (d2 * d2));
                    case 77:
                        Test.instanceCount <<= i1;
                        break;
                    case 72:
                        Test.fArrFld[(int)(d2 - 1)] = 179;
                        break;
                    case 73:
                        if (bFld) break;
                        break;
                    case 59:
                        i23 += (int)((long)d2 ^ (long)f3);
                        break;
                    case 64:
                        i19 += i23;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i1 i2 d1 = " + i1 + "," + i2 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("f3 i18 i19 = " + Float.floatToIntBits(f3) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f4 i20 i21 = " + Float.floatToIntBits(f4) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d2 i23 = " + i22 + "," + Double.doubleToLongBits(d2) + "," + i23);
        FuzzerUtils.out.println("by1 byArr iArr = " + by1 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.sFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.bArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
