// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3173425661058846680L;
    public static float fFld=126.456F;
    public static short sFld=1835;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 114.330F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i5) {

        long l1=3736L;
        int i6=0, i7=-124, i8=-235, i9=-28767, i10=-3, i11=-14, iArr1[]=new int[N];
        float f1=-2.210F;
        boolean b=true;
        short s=-2320;

        FuzzerUtils.init(iArr1, 5);

        for (l1 = 1; l1 < 247; ++l1) {
            if (b) {
                for (i7 = 1; i7 < 7; ++i7) {
                    i8 = i8;
                    switch (((i5 >>> 1) % 1) + 58) {
                    case 58:
                        l = l1;
                        i5 -= i6;
                        for (i9 = 1; i9 < 2; i9++) {
                            iArr1[(int)(l1 - 1)] = (int)Test.instanceCount;
                            f1 -= i10;
                            i10 += i9;
                            switch (((-52416 >>> 1) % 2) + 78) {
                            case 78:
                            case 79:
                                i6 >>= i7;
                                if (b) continue;
                                if (b) continue;
                                break;
                            default:
                                s *= (short)i10;
                            }
                        }
                        break;
                    }
                }
            } else if (b) {
                i5 = i5;
            } else {
                Test.instanceCount = i11;
            }
        }
        vMeth2_check_sum += l + i5 + l1 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + (b ? 1 : 0) + s + i11 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i3=-53475, i4=-5, i12=167, i13=-228, i14=-9;
        double d=-97.100524;
        float f2=-1.275F;
        boolean b1=false;

        for (i3 = 13; i3 < 239; i3++) {
            vMeth2(Test.instanceCount, i4);
            for (d = 7; d > i3; d -= 3) {
                i12 *= (int)f2;
                Test.fArrFld[(int)(d - 1)] -= 59;
                f2 -= (float)d;
                Test.instanceCount += (long)(((d * i12) + i12) - i3);
                if (b1) {
                    i12 = i12;
                    i12 += (int)(d * d);
                } else if (true) {
                    i12 |= i3;
                    for (i13 = 1; i13 < 1; ++i13) {
                        i12 += i13;
                        Test.instanceCount += -146;
                        i12 += 44534;
                    }
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i12 + Float.floatToIntBits(f2) + i13 + i14 + (b1 ? 1
            : 0);
    }

    public static void vMeth(int i) {

        int i1=18741, i2=-8501, i15=247, i16=100, iArr[]=new int[N];
        float f=1.487F;
        boolean b2=true;

        FuzzerUtils.init(iArr, -58682);

        for (i1 = 7; i1 < 186; i1++) {
            i2 = (int)(Math.min(i1 - i2, Test.instanceCount | Test.instanceCount) + ((++f) + i1));
        }
        i2 = (int)(++Test.instanceCount);
        i -= (++iArr[(i >>> 1) % N]);
        vMeth1();
        i2 = (int)Test.instanceCount;
        i = (int)1487811280041792241L;
        b2 = b2;
        i2 = i;
        iArr[(i >>> 1) % N] /= (int)(Test.instanceCount | 1);
        for (i15 = 7; 187 > i15; i15++) {
            Test.instanceCount *= (long)2.884F;
            Test.instanceCount += (-37982 + (i15 * i15));
            Test.instanceCount = i1;
            f -= f;
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + (b2 ? 1 : 0) + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=22345, i18=10105, i19=135, i20=-14, i21=-1, i22=228, iArr2[]=new int[N];
        boolean b3=false;
        byte by=-105, byArr[][]=new byte[N][N];
        double d1=-42.49470;
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-59);
        FuzzerUtils.init(lArr, -163L);
        FuzzerUtils.init(iArr2, 0);

        vMeth(i17);
        for (i18 = 3; i18 < 206; i18++) {
            Test.instanceCount = Test.instanceCount;
            b3 = true;
            if (b3) {
                Test.fFld += by;
                for (d1 = 7; d1 < 124; d1++) {
                    for (i21 = 1; 2 > i21; i21 += 2) {
                        Test.fFld += (i21 * i20);
                        Test.instanceCount >>= Test.instanceCount;
                        i20 >>= i17;
                        Test.instanceCount <<= Test.instanceCount;
                        byArr[i21 + 1][i21 - 1] <<= by;
                        i22 += (((i21 * i21) + i21) - Test.fFld);
                        i22 -= i17;
                        switch (((i17 >>> 1) % 10) + 30) {
                        case 30:
                            Test.instanceCount *= -10;
                            Test.fFld = i21;
                            break;
                        case 31:
                            i22 = i17;
                            break;
                        case 32:
                            if (false) continue;
                            i20 += (i21 * Test.instanceCount);
                            break;
                        case 33:
                            lArr[i21 - 1] |= 15622;
                            if (false) {
                                i22 *= (int)Test.instanceCount;
                                Test.fFld = -6513245834103587955L;
                                if (false) break;
                                iArr2[i18 + 1] = (int)Test.fFld;
                            } else {
                                i17 += (int)(-6L + (i21 * i21));
                                i20 += i20;
                                i20 += i21;
                            }
                        case 34:
                            by = (byte)Test.instanceCount;
                        case 35:
                            Test.fFld += i19;
                            break;
                        case 36:
                            i22 += (i21 - i17);
                        case 37:
                            i17 = i21;
                        case 38:
                            i20 = i19;
                            break;
                        case 39:
                            i19 = Test.sFld;
                            break;
                        }
                    }
                }
            } else if (b3) {
                iArr2[i18] -= i19;
            } else if (b3) {
                i17 += (int)Test.instanceCount;
            } else {
                lArr[i18] += Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b3 by d1 = " + (b3 ? 1 : 0) + "," + by + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("byArr lArr iArr2 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr)
            + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
