// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-51327L;
    public static float fFld=0.799F;
    public static short sFld=2606;
    public static int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i9=58945, i10=-158, i11=106, i12=-179, i13=-52957, i14=-7;
        double d=-2.116048;

        i9 >>= i9;
        i9 *= 55;
        for (i10 = 11; i10 < 232; i10++) {
            i9 += (i10 | i11);
            i11 -= i9;
            for (d = 1; 7 > d; ++d) {
                i13 = 1;
                do {
                    byte by=-16;
                    double d1=-58.61399;
                    i14 = by;
                    switch ((int)((d % 2) + 36)) {
                    case 36:
                        d1 += d;
                        Test.fFld -= i13;
                        i12 = i9;
                        i9 += (int)Test.instanceCount;
                        break;
                    case 37:
                        d1 *= Test.instanceCount;
                        Test.fFld += -10220;
                        break;
                    default:
                        Test.instanceCount -= 28;
                    }
                } while ((i13 += 2) < 2);
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + i14;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1() {

        int i7=23528, i8=8, i15=-52343, i16=2, i17=7161, iArr[]=new int[N];
        double d2=117.13133;

        FuzzerUtils.init(iArr, 8);

        for (i7 = 3; i7 < 243; i7++) {
            iArr[i7] = (int)(dMeth() + i8);
            i8 -= i7;
            Test.instanceCount = i7;
            iArr[i7 - 1] += 44967;
            i8 += i7;
            i8 >>= i7;
            iArr[i7 - 1] *= (int)Test.instanceCount;
            for (d2 = 7; d2 > 1; --d2) {
                i8 = i8;
                iArr[(int)(d2)] -= i7;
                for (i16 = 1; 2 > i16; i16 += 2) {
                    i17 = i15;
                    Test.fFld += i17;
                    iArr[i7] -= 13;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + Double.doubleToLongBits(d2) + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, int i5) {

        int i6=-204, i18=-220, i20=-173, i21=8368, i22=-6, i23=1017;
        boolean b1=true;
        byte by1=-60;

        i6 = 1;
        while (++i6 < 194) {
            i5 += i6;
            vMeth1();
            if (b1) {
                Test.sFld %= (short)(i18 | 1);
                i18 += (12 + (i6 * i6));
            } else if (b1) {
                Test.instanceCount += l;
                vMeth_check_sum += l + i5 + i6 + i18 + (b1 ? 1 : 0) + i20 + i21 + i22 + i23 + by1;
                return;
            }
            i5 += (((i6 * i5) + i18) - i6);
            i5 *= i6;
            for (i20 = i6; i20 < 8; i20++) {
                for (i22 = 1; i22 < 1; ++i22) {
                    if (b1) continue;
                    Test.iArrFld[i20] = i23;
                    Test.sFld = (short)i22;
                    i18 += (((i22 * i18) + i18) - by1);
                }
            }
        }
        vMeth_check_sum += l + i5 + i6 + i18 + (b1 ? 1 : 0) + i20 + i21 + i22 + i23 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i=-58126, i1=29508, i2=-210, i3=125, i4=139, i24=-3, i25=-27481;
        boolean b=false;
        double d3=78.80451;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -12L);

        for (i = 10; i < 327; i++) {
            i2 = 1;
            do {
                if (b) break;
                for (i3 = 1; i3 > 1; i3 -= 2) {
                    i4 = i1;
                    i1 += (((i3 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                }
                i4 = (++i1);
                i1 = (--i4);
                vMeth(-13L, i);
                Test.iArrFld[i] = 14;
                switch ((i2 % 8) + 62) {
                case 62:
                    for (i24 = 1; i24 < 1; ++i24) {
                        i25 += i24;
                        lArr[(i3 >>> 1) % N] += i25;
                        i4 += (i24 * i24);
                        Test.iArrFld[i24 + 1] *= (int)Test.instanceCount;
                    }
                    Test.iArrFld[i2] += (int)d3;
                    break;
                case 63:
                    dArrFld[i] = -75;
                    i1 |= i;
                    if (b) break;
                    break;
                case 64:
                    i4 >>= i24;
                    break;
                case 65:
                    i4 += i2;
                    Test.iArrFld[i2] = (int)Test.instanceCount;
                    i25 += (((i2 * Test.instanceCount) + i25) - i24);
                    switch (((i2 % 2) * 5) + 36) {
                    case 41:
                        i25 += (i2 ^ i24);
                        break;
                    case 37:
                        Test.instanceCount >>= i3;
                        i4 += i25;
                        i4 += -13;
                        i1 <<= -144;
                        break;
                    default:
                        i4 *= (int)Test.instanceCount;
                    }
                    break;
                case 66:
                    Test.iArrFld = Test.iArrFld;
                case 67:
                    Test.instanceCount *= i2;
                    break;
                case 68:
                    i4 >>>= -163;
                case 69:
                    i1 = i24;
                default:
                    Test.iArrFld[i] = i1;
                }
            } while (++i2 < 79);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("b i3 i4 = " + (b ? 1 : 0) + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i24 i25 d3 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
