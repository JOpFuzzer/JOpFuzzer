// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static short sFld=21227;
    public static double dFld=0.90229;
    public int iFld=186;
    public static float fFld=-2.797F;
    public float fFld1=0.619F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 52433);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, int i7, long l1) {

        double d2=2.125068, dArr[]=new double[N];
        int i8=-210, i9=8, i10=-14, i11=15, i12=-16685;
        float f2=-74.251F;

        FuzzerUtils.init(dArr, 0.8159);

        for (d2 = 342; d2 > 16; --d2) {
            i7 += (int)(d2 + i7);
            for (i9 = 5; i9 > d2; --i9) {
                l += i9;
                Test.iArrFld[(int)(d2)] -= Test.sFld;
                i11 = 1;
                while (++i11 < 1) {
                    f2 = -2306246724L;
                    i10 = i8;
                    i8 <<= 121;
                    dArr[i11 - 1] = l1;
                    i10 = i8;
                    i8 += (((i11 * i9) + i10) - i10);
                    i12 <<= i12;
                    i12 = i10;
                    i8 = 6;
                }
            }
        }
        long meth_res = l + i7 + l1 + Double.doubleToLongBits(d2) + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) +
            i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i4) {

        double d1=16.90181;
        int i5=7, i6=11, i13=-241, i14=7, i15=10, i16=17286, i17=-9, i18=-28775;
        short s=27292;
        float f1=0.518F;
        byte by1=-9;

        d1 *= ((-(i4 - 14)) + Test.iArrFld[(i4 >>> 1) % N]);
        for (i5 = 16; i5 < 364; ++i5) {
            i6 += (int)(Test.instanceCount * i5);
            s *= (short)(~i4);
        }
        f1 -= iMeth(-5845138124786182056L, -12, Test.instanceCount);
        Test.iArrFld[(i4 >>> 1) % N] <<= (int)Test.instanceCount;
        Test.iArrFld = Test.iArrFld;
        for (i13 = 7; i13 < 231; ++i13) {
            i6 = i6;
            for (i15 = 1; i15 < 7; ++i15) {
                for (i17 = 1; i17 < 2; i17++) {
                    i4 = i14;
                    if (true) break;
                    i6 <<= -44888;
                    by1 *= (byte)Test.instanceCount;
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d1) + i5 + i6 + s + Float.floatToIntBits(f1) + i13 + i14 + i15 +
            i16 + i17 + i18 + by1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        float f=95.128F;
        double d=2.76220;
        int i=5, i2=12, i3=-222;
        byte by=-101;

        f += (float)d;
        i = (int)Long.reverseBytes((long)(Math.abs(0.509F) + (47L * (d + by))));
        for (int i1 : Test.iArrFld) {
            i2 = 1;
            while (++i2 < 4) {
                i1 += (((i2 * i2) + i1) - i2);
                i1 += i2;
                i3 = 1;
                while (++i3 < 1) {
                    Test.instanceCount *= (++i1);
                    i1 += (((i3 * i1) + i3) - Test.instanceCount);
                    i += (int)((Test.instanceCount++) + (lMeth(i1) * i1));
                    i1 -= (int)Test.instanceCount;
                    switch (((i2 % 6) * 5) + 14) {
                    case 36:
                        by = (byte)i;
                        Test.instanceCount = i;
                        i1 = (int)Test.instanceCount;
                        break;
                    case 42:
                        i <<= 181;
                        break;
                    case 19:
                        i1 = i3;
                        break;
                    case 43:
                        Test.iArrFld[i3] += (int)d;
                        break;
                    case 25:
                        i1 *= i2;
                        break;
                    case 23:
                        i1 *= -34676;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i + by + i2 + i3;
    }

    public void mainTest(String[] strArr1) {

        int i19=1, i20=-85, i21=8968, i22=102, i23=63708, i24=-102, i25=-6, i26=-4, i27=51730;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9L);

        vMeth();
        Test.dFld += Test.instanceCount;
        iFld -= iFld;
        for (i19 = 4; i19 < 128; ++i19) {
            Test.iArrFld[i19 + 1] -= -9;
            i20 -= iFld;
        }
        Test.iArrFld[(32318 >>> 1) % N] += i19;
        Test.sFld = (short)11;
        iFld += (int)-115.351F;
        for (i21 = 8; i21 < 233; i21++) {
            i20 = Test.sFld;
            for (i23 = 6; i23 < 112; i23++) {
                Test.dFld = i24;
                switch (((i21 % 1) * 5) + 15) {
                case 17:
                    lArr[i21] = i23;
                    break;
                default:
                    i20 = -6657;
                }
            }
            for (i25 = 3; i25 < 112; i25++) {
                byte by2=85;
                by2 += (byte)(i25 * i25);
                i27 = 1;
                do {
                    i20 = i23;
                    iFld <<= iFld;
                    i24 = (int)Test.instanceCount;
                    Test.dFld += Test.dFld;
                    i22 = (int)Test.fFld;
                    iFld >>= i25;
                    fFld1 *= Test.fFld;
                    b = b;
                    i24 |= i19;
                } while (++i27 < 2);
                i26 -= i26;
                Test.instanceCount &= i20;
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b lArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iFld Test.fFld fFld1 = " + iFld + "," + Float.floatToIntBits(Test.fFld) + "," +
            Float.floatToIntBits(fFld1));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
