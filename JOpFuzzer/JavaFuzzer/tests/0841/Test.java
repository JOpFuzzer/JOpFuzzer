// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-65L;
    public static volatile boolean bFld=true;
    public static volatile double dFld=-2.62100;
    public static volatile float fFld=2.276F;
    public static volatile int iFld1=112;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-8212);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i11) {

        int i12=60256, i13=13, i14=-14, i15=-8, i16=-45101, i17=6, iArr[]=new int[N];
        byte by1=-126;
        double dArr[]=new double[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(dArr, -122.88045);
        FuzzerUtils.init(fArr1, 0.543F);
        FuzzerUtils.init(iArr, -12);

        for (i12 = 13; i12 < 216; ++i12) {
            dArr[i12] -= i12;
            if (Test.bFld) {
                Test.dFld += i12;
            }
            if (Test.bFld) {
                i14 = 1;
                while (++i14 < 8) {
                    for (i15 = 1; i15 < 1; i15++) {
                        Test.fFld += (float)-127.47445;
                        Test.instanceCount *= 2;
                        i16 -= i16;
                        fArr1[i12 - 1] *= 9;
                    }
                    i11 -= 35584;
                    i17 = 1;
                    do {
                        Test.fFld += (i17 + i11);
                        iArr = iArr;
                    } while (++i17 < 1);
                }
            } else if (Test.bFld) {
                by1 = (byte)i16;
            } else {
                i11 -= i17;
            }
        }
        long meth_res = i11 + i12 + i13 + i14 + i15 + i16 + i17 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))
            + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i8, int i9) {

        int i10=-11, i18=-61, i19=-912;
        double d1=-1.29301;
        long l=39474L;
        short s=-3603;

        i10 = 1;
        while ((i10 += 3) < 185) {
            if (Test.bFld || (Test.bFld = (!(i10 > d1)))) break;
            fMeth(i9);
            Test.instanceCount = i9;
            l = 1;
            while (++l < 25) {
                Test.bFld = Test.bFld;
                for (i18 = 1; i18 < 1; i18++) {
                    i8 *= s;
                }
                Test.instanceCount = i10;
                i8 += (int)(l - i8);
                if (Test.bFld) {
                    Test.instanceCount >>= Test.instanceCount;
                    Test.fFld -= i9;
                } else {
                    Test.fFld -= l;
                    i19 &= i8;
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + Double.doubleToLongBits(d1) + l + i18 + i19 + s;
    }

    public static void vMeth(float f, double d) {

        int i1=-7515, i2=214, i3=219, i4=-8, i5=-88, i6=-94, i7=50582, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.463F);
        FuzzerUtils.init(iArr1, 236);

        i1 = 1;
        do {
            for (i2 = 1; i2 < 7; i2 += 3) {
                i3 -= (int)Math.min(-i2, Test.instanceCount * (++Test.instanceCount));
                switch ((i2 % 4) + 84) {
                case 84:
                    i3 = (int)(Test.instanceCount--);
                case 85:
                    for (i4 = 1; 4 > i4; i4++) {
                        byte by=20;
                        Test.instanceCount = (Test.instanceCount++);
                        fArr[i2] *= by;
                        i5 *= -116;
                    }
                    f = (float)-122.95425;
                    Test.instanceCount = i3;
                    break;
                case 86:
                    for (i6 = i1; 4 > i6; i6++) {
                        vMeth1(i1, 10);
                        Test.instanceCount -= (long)f;
                        iArr1[i1 - 1] = i7;
                    }
                case 87:
                    fArr[i2] = Test.iFld1;
                default:
                    i5 += (((i2 * Test.fFld) + i4) - i3);
                }
            }
        } while (++i1 < 248);
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr3) {

        int i=8153, i20=-8, i21=60, i22=-18, i23=-62463, i24=-10, i25=-30, i26=112, i27=8, i28=-230, i29=-212,
            iArr2[]=new int[N];
        short s1=25412;
        byte by2=10;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -160);
        FuzzerUtils.init(bArr, false);

        i = 1;
        do {
            vMeth(0.28F, Test.dFld);
            for (i20 = 2; i20 < 70; i20++) {
                for (i22 = 1; i22 < 2; i22++) {
                    iArr2[i - 1] >>= -12890;
                    s1 <<= (short)-77L;
                    Test.dFld -= i;
                    Test.instanceCount -= i20;
                    Test.instanceCount &= Test.instanceCount;
                    Test.iFld1 <<= 24;
                    Test.fFld = i22;
                }
                Test.sArrFld[i - 1] |= (short)-19030L;
                Test.fFld = Test.fFld;
                Test.iFld1 /= (int)(i | 1);
                Test.dFld = by2;
                for (i24 = i20; i24 < 2; ++i24) {
                    Test.dFld += Test.iFld1;
                    i25 += (((i24 * i24) + i24) - i23);
                    by2 *= (byte)i24;
                    i25 = i21;
                    i25 >>>= (int)Test.instanceCount;
                }
                for (i26 = 1; i26 < 2; i26++) {
                    i25 += i26;
                    Test.iFld1 = (int)-1.68466;
                    if (Test.bFld) break;
                }
                i25 = i20;
            }
            for (i28 = 4; i28 < 70; ++i28) {
                iArr2[i28 + 1] = Test.iFld1;
                bArr[i + 1] = true;
                i29 = i20;
            }
        } while (++i < 358);

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 s1 = " + i22 + "," + i23 + "," + s1);
        FuzzerUtils.out.println("by2 i24 i25 = " + by2 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 iArr2 bArr = " + i29 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.iFld1 Test.sArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.iFld1 + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
