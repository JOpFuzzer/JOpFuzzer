// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2326722857513006199L;
    public static int iFld=30895;
    public static volatile short sFld=1396;
    public static double dFld=65.41714;
    public static float fFld=-102.387F;
    public byte byFld=-87;
    public static float fArrFld[]=new float[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.851F);
        FuzzerUtils.init(Test.lArrFld, 1670036061957307795L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, boolean b) {

        int i6=2, i7=-51134, iArr1[]=new int[N];
        float f2=-1.547F;
        short s=13386;

        FuzzerUtils.init(iArr1, -12255);

        i6 = 1;
        do {
            Test.iFld *= (int)Test.instanceCount;
            i5 = Test.iFld;
            Test.iFld = Test.iFld;
            if (b) {
                Test.instanceCount >>= i5;
                Test.instanceCount -= Test.instanceCount;
                i7 = 1;
                do {
                    Test.iFld -= -205;
                    Test.iFld ^= i5;
                    iArr1[i6] += (int)f2;
                    Test.iFld = i5;
                    Test.iFld = i5;
                    Test.iFld -= (int)-42334L;
                    iArr1[i6] = s;
                } while (++i7 < 7);
            }
        } while (++i6 < 217);
        vMeth2_check_sum += i5 + (b ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f2) + s + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(float f1) {

        int i8=31570, i9=8, i10=11, iArr[]=new int[N];
        float f3=-55.278F;
        byte by=-49;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(lArr, 54L);

        iArr[(Test.iFld >>> 1) % N] += (int)((Test.fArrFld[(-131 >>> 1) % N]++) - (--Test.iFld));
        vMeth2(Test.iFld, false);
        Test.sFld -= (short)Test.iFld;
        for (i8 = 17; i8 < 368; ++i8) {
            i9 |= i9;
            Test.iFld += (((i8 * f1) + Test.instanceCount) - i9);
            Test.iFld <<= (int)-14L;
            lArr[i8 + 1] <<= i9;
            lArr[i8] -= 1425474395L;
            i9 += i8;
            i9 += (i8 + Test.instanceCount);
            for (f3 = 5; f3 > 1; f3 -= 3) {
                Test.iFld += (int)f3;
                by += (byte)f3;
                i10 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i8 + i9 + Float.floatToIntBits(f3) + i10 + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth() {

        float f=0.493F;
        int i4=0;

        f = (Test.instanceCount = i4);
        vMeth1(-114.91F);
        Test.iFld -= Test.iFld;
        Test.dFld = -59789;
        vMeth_check_sum += Float.floatToIntBits(f) + i4;
    }

    public void mainTest(String[] strArr1) {

        int i=-39238, i1=-11, i2=-169, i3=1, i11=0, i12=58986, i13=-4151, i14=-2023, i15=-3, iArr2[]=new int[N];
        boolean b1=true;
        long l=0L;

        FuzzerUtils.init(iArr2, -21882);

        for (i = 9; i < 212; i++) {
            for (i2 = 124; i2 > 6; --i2) {
                float f4=2.926F;
                vMeth();
                i1 += (((i2 * Test.instanceCount) + i1) - f4);
                Test.iFld += Test.iFld;
                i1 += (i2 * i2);
                b1 = b1;
                for (i11 = 1; i11 < 2; i11++) {
                    f4 += (((i11 * i2) + Test.iFld) - f4);
                    i3 = i12;
                    i12 = (int)Test.dFld;
                    i12 -= (int)f4;
                    i1 += (int)Test.instanceCount;
                    i3 |= i11;
                    i3 += (-2254 + (i11 * i11));
                    i12 += (i11 * i11);
                }
            }
            Test.iFld -= (int)Test.instanceCount;
            for (i13 = 5; 124 > i13; i13++) {
                switch ((i13 % 8) + 106) {
                case 106:
                    switch (((i11 >>> 1) % 4) + 11) {
                    case 11:
                        i15 = 2;
                        do {
                            i12 = (int)l;
                            i14 += (i15 ^ i13);
                            i1 += (((i15 * i15) + i11) - l);
                            Test.lArrFld[i13] <<= Test.iFld;
                            l += (i15 - i11);
                            iArr2[i13] += (int)Test.dFld;
                            i12 = (int)Test.fFld;
                        } while ((i15 -= 3) > 0);
                        i3 = (int)l;
                        if (b1) continue;
                        break;
                    case 12:
                        byFld >>= (byte)i11;
                    case 13:
                        Test.lArrFld[i13] ^= i3;
                        break;
                    case 14:
                        iArr2[i] = Test.sFld;
                        break;
                    default:
                        i14 -= i15;
                    }
                    break;
                case 107:
                    i1 *= i14;
                    break;
                case 108:
                    i12 = (int)l;
                    break;
                case 109:
                    Test.instanceCount += (-16823 + (i13 * i13));
                    break;
                case 110:
                case 111:
                    i12 -= i2;
                    break;
                case 112:
                    i1 = i13;
                    break;
                case 113:
                    Test.dFld += i2;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 b1 i11 = " + i3 + "," + (b1 ? 1 : 0) + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 l iArr2 = " + i15 + "," + l + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.fFld byFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Float.floatToIntBits(Test.fFld) + "," + byFld);
        FuzzerUtils.out.println("Test.fArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
