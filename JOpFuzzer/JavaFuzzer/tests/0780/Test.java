// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=7699985076831493401L;
    public static volatile double dFld=89.113673;
    public static byte byFld=73;
    public static volatile short sFld=-27972;
    public float fFld=-12.473F;
    public static long lFld=-9018404633923173132L;
    public static int iArrFld[][]=new int[N][N];
    public static short sArrFld[]=new short[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -57);
        FuzzerUtils.init(Test.sArrFld, (short)13995);
        FuzzerUtils.init(Test.lArrFld, -3377280485558026554L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f2, int i4) {

        float f3=0.167F;
        long l=10L, l1=0L;
        int i5=-50919, i6=3;
        double d=2.110493;
        short s=-3997;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)72);

        Test.instanceCount >>= i4;
        f3 = 1;
        do {
            for (l = 1; 6 > l; ++l) {
                switch ((((i4 >>> 1) % 1) * 5) + 109) {
                case 114:
                    Test.dFld -= i4;
                    for (d = 1; d < 2; d++) {
                        Test.iArrFld = Test.iArrFld;
                        i5 >>= s;
                        i4 *= 125;
                        i4 += (42113 + (d * d));
                        Test.instanceCount += (long)(((d * l) + i5) - i4);
                        i6 += i6;
                        i4 >>>= (int)l1;
                    }
                    byArr[(int)(f3 + 1)] &= (byte)Test.instanceCount;
                    break;
                default:
                    i5 += (int)(((l * l) + f3) - f3);
                }
            }
        } while (++f3 < 252);
        vMeth2_check_sum += Float.floatToIntBits(f2) + i4 + Float.floatToIntBits(f3) + l + i5 +
            Double.doubleToLongBits(d) + i6 + s + l1 + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i2, int i3) {

        float f4=-2.129F, f5=43.167F;
        int i7=45426, i8=46105, i9=2085, i10=72;
        long l2=0L, lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.78085);
        FuzzerUtils.init(lArr, -30128L);

        i3 += (int)Float.intBitsToFloat(i3);
        vMeth2(f4, i3);
        for (f5 = 13; f5 < 339; ++f5) {
            if (true) break;
            i2 += (int)(((f5 * f4) + i3) - i3);
            Test.iArrFld[(int)(f5 - 1)][(int)(f5)] -= (int)Test.dFld;
            if (true) break;
            Test.sArrFld[(int)(f5 + 1)] <<= (short)i3;
            for (i8 = 1; 5 > i8; ++i8) {
                i3 >>= i8;
                Test.byFld = (byte)i3;
                switch ((((i3 >>> 1) % 7) * 5) + 40) {
                case 73:
                    i10 = 1;
                    while (++i10 < 2) {
                        Test.instanceCount >>= i2;
                        f4 += -8;
                    }
                case 43:
                    l2 *= i3;
                    break;
                case 52:
                    dArr[i8] /= 186;
                    break;
                case 60:
                    Test.instanceCount = i9;
                    break;
                case 62:
                    i3 -= (int)Test.instanceCount;
                    break;
                case 44:
                    lArr[(int)(f5)] += i3;
                    break;
                case 71:
                default:
                    i7 += (int)(-26.266F + (i8 * i8));
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f4) + Float.floatToIntBits(f5) + i7 + i8 + i9 + i10 + l2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i=18983, i1=-14, i11=-9, i12=-6, i13=-44306;
        float f=-30.947F, f1=0.499F;
        boolean b=true;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 0.18649);

        for (i = 15; i < 344; i++) {
            f -= Test.instanceCount;
            switch ((i % 4) + 61) {
            case 61:
                i1 >>= (int)((Math.abs(i) - (--f)) * (Test.instanceCount * (-209 + (i1 + f1))));
                vMeth1(-5553, i);
                switch (((i % 5) * 5) + 11) {
                case 30:
                    i1 = Test.byFld;
                    i1 <<= (int)Test.instanceCount;
                    break;
                case 26:
                    f *= i1;
                    i11 = 1;
                    do {
                        dArr1[i11] -= Test.instanceCount;
                        for (i12 = 1; i12 < 1; ++i12) {
                            if (i11 != 0) {
                                vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i11 +
                                    i12 + i13 + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
                                return;
                            }
                        }
                        i1 >>>= 245;
                        i13 += 10;
                    } while (++i11 < 5);
                    break;
                case 23:
                    i1 = (int)Test.instanceCount;
                    break;
                case 16:
                    Test.lArrFld[i][i] &= Test.instanceCount;
                    break;
                case 19:
                    i1 += (i * i);
                default:
                    Test.dFld = i11;
                }
                break;
            case 62:
                i13 <<= i1;
                break;
            case 63:
                Test.instanceCount = i;
            case 64:
                b = b;
                break;
            default:
                Test.instanceCount += (((i * Test.instanceCount) + Test.sFld) - f1);
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i11 + i12 + i13 + (b ? 1 : 0)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i14=54555, i15=40135, i16=-11, i17=-4, i18=51926, i19=-1, i20=-142, i21=5;
        boolean b1=false;
        double dArr2[]=new double[N];

        FuzzerUtils.init(dArr2, 110.4548);

        vMeth();
        for (i14 = 390; i14 > 9; i14 -= 2) {
            i15 = (int)fFld;
            Test.instanceCount |= i15;
            i15 *= -44671;
            i15 += i14;
            i15 >>= i15;
            dArr2[i14 + 1] += Test.instanceCount;
            Test.byFld += (byte)(i14 + i14);
            Test.iArrFld[i14][i14 + 1] -= i15;
        }
        Test.instanceCount = -1432648515498090467L;
        i16 = 1;
        while (++i16 < 158) {
            i17 = 159;
            while ((i17 -= 3) > 0) {
                for (i18 = 1; i18 < 3; i18 += 3) {
                    i15 = i18;
                    fFld += i14;
                    i19 -= i20;
                    b1 = false;
                    i15 += (i18 * i18);
                    Test.instanceCount += (i18 * i18);
                }
                i15 += (int)Test.instanceCount;
            }
            b1 = true;
            i15 += i14;
            i20 += (i16 - i17);
            Test.iArrFld[i16][i16] *= (int)Test.dFld;
            switch ((((14 >>> 1) % 3) * 5) + 84) {
            case 94:
                Test.lFld %= (i15 | 1);
                Test.iArrFld[i16][i16 + 1] -= -57;
                break;
            case 97:
            case 91:
                Test.lFld += i19;
                try {
                    i20 = (i14 % -1663880105);
                    i19 = (i14 % -34739);
                    i21 = (Test.iArrFld[i16][i16 - 1] % i16);
                } catch (ArithmeticException a_e) {}
                break;
            default:
                i19 += i16;
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 b1 i21 = " + i20 + "," + (b1 ? 1 : 0) + "," + i21);
        FuzzerUtils.out.println("dArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld fFld Test.lFld = " + Test.sFld + "," + Float.floatToIntBits(fFld) + "," +
            Test.lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.sArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
