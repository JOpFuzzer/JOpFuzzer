// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-19763L;
    public static int iFld=-7;
    public static float fFld=85.358F;
    public volatile short sFld=32216;
    public static float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 6.668F);
        FuzzerUtils.init(Test.lArrFld, -3317159224L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i1, float f, int i2) {

        int i3=-62857, i4=34388, i5=-9, i6=-43363, i7=8, i8=26889;
        byte by1=115;
        short s=-6848;
        boolean b=true, b1=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -5L);

        for (i3 = 9; 301 > i3; ++i3) {
            f += i3;
            f += (i3 * i3);
            by1 -= (byte)f;
            for (i5 = 1; i5 < 6; i5++) {
                s <<= (short)i6;
                if (b1) {
                    i2 <<= i2;
                    for (i7 = 1; 2 > i7; ++i7) {
                        b = b1;
                        if (b) {
                            lArr2[i3] -= i7;
                            i6 += (int)(-4712361050341255413L + (i7 * i7));
                            i2 <<= i5;
                        } else if (b1) {
                            i2 >>>= (int)-63797L;
                        } else {
                            i6 = Test.iFld;
                        }
                    }
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + by1 + i5 + i6 + s + i7 + i8 + (b ? 1 : 0) + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(lArr2);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1() {

        float f1=-50.149F;
        int i9=-63103, i10=60762;
        long lArr1[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr1, 121L);
        FuzzerUtils.init(dArr, 6.125013);

        Test.iFld = (int)((lArr1[(Test.iFld >>> 1) % N] - iMeth2(-16833, f1, Test.iFld)) - -6384176356557427394L);
        for (i9 = 2; i9 < 131; ++i9) {
            dArr[i9 - 1] = Test.iFld;
        }
        long meth_res = Float.floatToIntBits(f1) + i9 + i10 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i) {

        byte by=77;
        int i11=2, i12=13, i13=12, i14=-200, i15=-14, i16=38;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 155L);

        lArr[(i >>> 1) % N] <<= ((i * by) - iMeth1());
        for (i11 = 17; i11 < 363; ++i11) {
            if (i11 != 0) {
            }
        }
        Test.iFld = by;
        for (i13 = 17; i13 < 303; i13++) {
            for (i15 = 1; i15 < 6; ++i15) {
                Test.fArrFld[(i11 >>> 1) % N] -= Test.iFld;
                Test.instanceCount *= -190;
                Test.iFld *= Test.iFld;
                switch (((-6 >>> 1) % 4) + 51) {
                case 51:
                    b2 = b2;
                    Test.iFld -= Test.iFld;
                    by = (byte)i13;
                    Test.instanceCount <<= i;
                    break;
                case 52:
                    Test.instanceCount += (((i15 * Test.fFld) + i13) - i11);
                    break;
                case 53:
                    if (b2) continue;
                    break;
                case 54:
                    Test.instanceCount >>= i14;
                default:
                    by += (byte)i15;
                }
            }
        }
        long meth_res = i + by + i11 + i12 + i13 + i14 + i15 + i16 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-6.123164;
        int i17=-30456, i18=212, i19=-183, i20=-11287, i21=-2, i22=-214, i23=7892, i24=11, i25=147, i26=11, i27=62;
        float f2=2.966F;

        Test.iFld *= iMeth(-24867);
        iArrFld[(Test.iFld >>> 1) % N] *= Test.iFld;
        Test.iFld *= (int)d;
        for (i17 = 165; i17 > 7; i17 -= 3) {
            Test.instanceCount -= -112;
            for (i19 = 21; i19 < 355; i19++) {
                byte by2=-85;
                Test.iFld >>>= (int)Test.instanceCount;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.fArrFld[i21] = Test.fFld;
                    Test.lArrFld[i21 + 1] -= (long)d;
                    i18 += i17;
                }
                d -= i20;
                i18 -= i21;
                i22 += (((i19 * Test.instanceCount) + by2) - i19);
            }
            Test.iFld += (i17 * i20);
            i23 = 1;
            do {
                f2 = 2;
                while (--f2 > 0) {
                    Test.instanceCount = 1;
                    Test.fFld += (((f2 * i23) + sFld) - i19);
                }
                Test.iFld += (int)Test.instanceCount;
                for (i24 = 1; i24 < 2; ++i24) {
                    iArrFld[i23 + 1] -= (int)-82.607F;
                    i20 = i24;
                    sFld >>= (short)i18;
                }
                iArrFld[i17] = i17;
                for (i26 = 1; i26 < 2; i26++) {
                    i20 -= i27;
                    Test.instanceCount -= i22;
                    i27 -= i17;
                    d -= i25;
                }
            } while (++i23 < 342);
        }

        FuzzerUtils.out.println("d i17 i18 = " + Double.doubleToLongBits(d) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f2 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("sFld Test.fArrFld iArrFld = " + sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
