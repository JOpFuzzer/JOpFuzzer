// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static int iFld=-1;
    public static short sFld=18235;
    public static int iFld1=17111;
    public static float fFld=1.150F;
    public static byte byFld=81;
    public boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d) {

        int i12=13377, i13=5816, i14=-125, i15=-47094, i16=-23066, i17=44051, iArr1[][]=new int[N][N];
        byte by=-74;
        float f=15.538F;

        FuzzerUtils.init(iArr1, -5);

        Test.iFld <<= Test.iFld;
        Test.instanceCount = (long)1.129071;
        for (i12 = 2; i12 < 331; i12++) {
            Test.instanceCount *= Test.iFld;
            i13 = i13;
            i13 = (int)Test.instanceCount;
            Test.sFld -= by;
        }
        for (i14 = 17; i14 < 298; ++i14) {
            i16 = 1;
            while (++i16 < 6) {
                Test.instanceCount += i16;
                i13 += (int)(-8690706646462068969L + (i16 * i16));
                iArr1[i16][i16] += 41748;
                for (f = 1; f > 1; f--) {
                    Test.iFld += (int)f;
                }
                i13 += i16;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + i12 + i13 + by + i14 + i15 + i16 + Float.floatToIntBits(f) +
            i17 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i9, int i10, int i11) {

        int i19=6, i20=162, i21=0, i22=6, iArr2[]=new int[N];
        float f1=-86.1F;

        FuzzerUtils.init(iArr2, -201);

        Test.instanceCount = Integer.reverseBytes(--i11);
        vMeth2(1.62672);
        for (int i18 : iArr2) {
            Test.instanceCount -= Test.iFld;
            iArr2[(Test.iFld1 >>> 1) % N] ^= i10;
            try {
                iArr2[(131 >>> 1) % N] = (i18 / Test.iFld);
                i11 = (Test.iFld % 30);
                Test.iFld = (17059 % i9);
            } catch (ArithmeticException a_e) {}
            for (i19 = 1; i19 < 4; ++i19) {
                i9 -= (int)f1;
                for (i21 = 2; i21 > i19; i21 -= 3) {
                    double d1=1.129276;
                    d1 = i21;
                    i22 = (int)Test.instanceCount;
                    iArr2 = iArr2;
                }
                Test.instanceCount %= -1351539482L;
                i18 ^= i11;
                i9 += (i19 * i10);
            }
        }
        vMeth1_check_sum += i9 + i10 + i11 + i19 + i20 + Float.floatToIntBits(f1) + i21 + i22 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l, int i4) {

        int i5=-7, i6=-90, i7=21447, i8=229, i23=-97;

        Test.instanceCount ^= 12;
        i4 += (int)(Test.iFld = (int)((Test.iFld++) + (Test.iFld + Test.instanceCount)));
        for (i5 = 20; i5 < 396; ++i5) {
            Test.iFld = (int)(i4 + l);
            for (i7 = 1; i7 < 4; i7 += 3) {
                i4 += (i7 - Test.sFld);
                i4 += (i7 * i7);
                vMeth1(i23, i6, i6);
            }
        }
        vMeth_check_sum += l + i4 + i5 + i6 + i7 + i8 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=42192, i2=-18974, i3=193, i24=-40209, i25=-4, i26=-29, i27=0, i28=12, iArr[]=new int[N];
        double d2=-47.66435;

        FuzzerUtils.init(iArr, 7);

        for (i = 201; i > 12; i--) {
            try {
                i1 = (-16022 % i1);
                Test.iFld = (17643 / i);
                iArr[i] = (i % 24560);
            } catch (ArithmeticException a_e) {}
            for (i2 = 5; i2 < 133; ++i2) {
                Test.iFld += (i2 ^ Test.iFld);
            }
            vMeth(Test.instanceCount, i);
            Test.fFld += Test.byFld;
            Test.instanceCount += (long)Test.fFld;
            Test.instanceCount += 129;
            Test.iFld = -5;
            switch ((((171 >>> 1) % 9) * 5) + 39) {
            case 40:
                i1 += (i * i);
                Test.byFld += (byte)(i - i);
                break;
            case 46:
                Test.instanceCount >>= Test.iFld;
                Test.iFld = -1;
                i24 = 1;
                while (++i24 < 133) {
                    Test.iFld1 -= i1;
                    i1 >>= 174;
                }
                break;
            case 57:
            case 54:
                Test.iFld1 = i24;
                for (i25 = 2; i25 < 133; i25++) {
                    iArr[i - 1] += (int)Test.instanceCount;
                    Test.iFld = (int)1.171F;
                    i1 = i25;
                    Test.iFld1 += (i25 * i25);
                    for (i27 = i; i27 < 2; ++i27) {
                        Test.instanceCount += (((i27 * i24) + i26) - i27);
                        i26 += (((i27 * Test.instanceCount) + Test.instanceCount) - i28);
                        d2 += -14;
                        Test.iFld = i27;
                        if (bFld) continue;
                        d2 -= i26;
                    }
                }
                break;
            case 44:
                Test.instanceCount >>= i25;
                break;
            case 79:
                i3 = Test.iFld;
                break;
            case 60:
                Test.byFld -= (byte)Test.instanceCount;
            case 78:
                Test.fFld = Test.instanceCount;
                break;
            case 48:
                Test.fFld *= i1;
                break;
            default:
                Test.iFld += Test.iFld;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i24 i25 = " + i3 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("d2 iArr = " + Double.doubleToLongBits(d2) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld1 Test.fFld Test.byFld = " + Test.iFld1 + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("bFld = " + (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
