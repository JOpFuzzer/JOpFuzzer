// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3387300242L;
    public static boolean bFld=true;
    public short sFld=5585;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 62591);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=9, i6=-1, i7=-43375, i8=-4, i9=-2, i10=-50750, i11=-37378;
        byte by1=45;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 13L);

        i5 += (int)Test.instanceCount;
        Test.instanceCount *= i5;
        for (i6 = 203; i6 > 4; i6 -= 2) {
            for (i8 = i6; 16 > i8; ++i8) {
                i9 -= i5;
                Test.instanceCount += (i8 * i8);
                Test.iArrFld[i6 - 1] *= (int)Test.instanceCount;
                for (i10 = 1; i10 < 1; ++i10) {
                    lArr[i6 - 1] *= i5;
                    Test.instanceCount = i7;
                    Test.iArrFld[i6] <<= i5;
                    Test.bFld = Test.bFld;
                    Test.iArrFld[i8 - 1] = i7;
                    i11 = i5;
                    by1 += (byte)i10;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l2, byte by, int i3) {

        int i4=-61238, i12=4, i13=-27628, i14=178, i15=-7;
        double d=-2.79093;
        float f=40.7F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)14171);

        i4 = 1;
        while (++i4 < 213) {
            vMeth2();
            i3 = i3;
        }
        i3 = (int)Test.instanceCount;
        for (d = 4; d < 137; d++) {
            double d1=-2.94709;
            i3 = i3;
            sArr[(int)(d)] += (short)i4;
            i12 >>>= i4;
            d1 *= i4;
            by = (byte)i12;
            i3 += (int)d;
            i13 = 1;
            do {
                for (i14 = 1; i14 > 1; --i14) {
                    d1 -= i13;
                    Test.iArrFld[(int)(d + 1)] -= (int)f;
                }
            } while (++i13 < 12);
        }
        vMeth1_check_sum += l2 + by + i3 + i4 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(long l, int i2, long l1) {

        byte by2=-37;

        vMeth1(5568483292859813351L, by2, i2);
        i2 = (int)-505479855482725814L;
        vMeth_check_sum += l + i2 + l1 + by2;
    }

    public void mainTest(String[] strArr1) {

        int i=-33, i1=-4849, i16=43, i17=31282, i18=-7, i19=-191, i20=-30;
        float f1=-2.227F;
        double d2=-2.102856, d3=-43.50399, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.40307);

        for (i = 6; i < 133; i++) {
            vMeth(Test.instanceCount, i, Test.instanceCount);
        }
        f1 = (float)d2;
        i16 = 1;
        do {
            Test.instanceCount += (long)102.469F;
            Test.instanceCount += (0 + (i16 * i16));
            Test.instanceCount -= i1;
            Test.iArrFld = Test.iArrFld;
            i17 = 1;
            while (++i17 < 84) {
                f1 += i;
                Test.iArrFld[i17 + 1] |= 159;
                Test.instanceCount += (i17 + i1);
                switch (((i17 % 5) * 5) + 124) {
                case 134:
                case 137:
                    i1 += (i17 - f1);
                    i1 <<= i1;
                case 142:
                    switch (((i16 % 9) * 5) + 22) {
                    case 63:
                        i1 += (i17 * i17);
                        switch (((i17 % 3) * 5) + 85) {
                        case 89:
                            i1 *= i16;
                            i1 -= 158;
                            i1 -= (int)Test.instanceCount;
                        case 90:
                            for (i18 = i16; 1 > i18; i18++) {
                                i1 >>= i18;
                            }
                            i1 >>= -28390;
                            Test.instanceCount += (i17 ^ (long)f1);
                            break;
                        case 94:
                            for (d3 = 1; 1 > d3; ++d3) {
                                i1 += (int)d3;
                                if (true) break;
                                Test.iArrFld[i16] <<= i18;
                            }
                            i20 += (int)f1;
                        default:
                            Test.iArrFld[i17 - 1] = i18;
                        }
                        break;
                    case 48:
                        Test.instanceCount &= Test.instanceCount;
                        break;
                    case 44:
                        lArrFld[i17] += i18;
                        break;
                    case 52:
                        i1 >>= i;
                    case 56:
                        i19 = i20;
                        break;
                    case 49:
                        i1 = (int)Test.instanceCount;
                        break;
                    case 34:
                        Test.iArrFld[i17] -= i17;
                    case 58:
                        sFld -= (short)Test.instanceCount;
                    case 62:
                        Test.iArrFld[i17 + 1] = i18;
                        break;
                    default:
                        dArr[i17 - 1] += i17;
                    }
                case 145:
                    i19 = i1;
                    break;
                case 132:
                    i19 = i18;
                    break;
                }
            }
        } while (++i16 < 298);

        FuzzerUtils.out.println("i i1 f1 = " + i + "," + i1 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("d2 i16 i17 = " + Double.doubleToLongBits(d2) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 d3 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i20 dArr = " + i20 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld sFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + sFld);
        FuzzerUtils.out.println("Test.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
