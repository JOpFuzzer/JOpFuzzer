// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=7751379178008877425L;
    public int iFld=44;
    public static float fFld=-83.735F;
    public static volatile short sFld=4410;
    public volatile boolean bFld=true;
    public static volatile int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -26821);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i4) {

        long l2=2837227343L, l3=3580L;
        int i5=63459, i6=-60328, i7=-200, i8=20355;

        Test.iArrFld = Test.iArrFld;
        i4 -= i4;
        Test.iArrFld[(i4 >>> 1) % N] >>= i4;
        i4 *= (int)5079L;
        i4 = i4;
        i4 += i4;
        for (l2 = 13; l2 < 230; l2++) {
            i4 += i5;
            Test.iArrFld[(int)(l2 + 1)] *= i5;
            switch ((int)(((l2 % 1) * 5) + 95)) {
            case 100:
                for (l3 = 1; l3 < 7; l3++) {
                    i6 += (int)Test.instanceCount;
                    for (i7 = 1; i7 < 2; ++i7) {
                        i5 %= (int)(i8 | 1);
                        Test.sFld += (short)(i7 ^ l3);
                    }
                }
                break;
            }
        }
        long meth_res = l1 + i4 + l2 + i5 + l3 + i6 + i7 + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i2=195, i3=2, i9=-14, i10=-108, i11=23792, i12=-12;
        long l=93L;
        short s=1132;
        byte by=60;
        boolean b=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 28.491F);

        i2 = 215;
        while ((i2 -= 3) > 0) {
            for (l = 1; l < 21; l++) {
                i3 += (-39107 + (l * l));
                s = (short)(14L - Math.min(iMeth(l, i3), i2));
                fArr[i2 - 1] *= i2;
            }
            i3 = by;
            for (i9 = 1; 21 > i9; i9++) {
                if (b) continue;
                i10 = i9;
                i10 += (int)Test.instanceCount;
                Test.fFld += l;
                for (i11 = 1; i11 < 2; i11++) {
                    i3 = -14;
                    by = (byte)233;
                    Test.instanceCount += -2;
                }
            }
        }
        vMeth1_check_sum += i2 + l + i3 + s + by + i9 + i10 + (b ? 1 : 0) + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth() {

        int i13=11, i14=149, i15=12595, i16=-234, iArr[]=new int[N];
        double d1=2.63470;
        boolean b1=true;

        FuzzerUtils.init(iArr, -31);

        iFld = (int)((iArr[(iFld >>> 1) % N] * (Test.fFld + 6)) + iFld);
        vMeth1();
        for (i13 = 22; 362 > i13; i13++) {
            Test.fFld -= i14;
            if (b1) {
                i14 >>= 148;
                i15 = 1;
                while (++i15 < 5) {
                    i14 ^= (int)-5L;
                    d1 -= 172;
                    switch ((((i15 >>> 1) % 6) * 5) + 107) {
                    case 134:
                        i16 = 1;
                        while (++i16 < 1) {
                            i14 += (i16 + i13);
                            Test.iArrFld[i15 + 1] >>= i14;
                            iArrFld1[(i14 >>> 1) % N] += i13;
                            i14 += (int)Test.fFld;
                        }
                    case 128:
                        Test.instanceCount += (-5 + (i15 * i15));
                        break;
                    case 121:
                        i14 = iFld;
                        break;
                    case 118:
                        if (b1) continue;
                    case 109:
                        i14 *= (int)Test.instanceCount;
                    case 114:
                        i14 = (int)Test.instanceCount;
                        break;
                    }
                }
                vMeth_check_sum += i13 + i14 + i15 + Double.doubleToLongBits(d1) + i16 + (b1 ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr);
                return;
            } else if (b1) {
                i14 += -53131;
            } else {
                iFld <<= (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i13 + i14 + i15 + Double.doubleToLongBits(d1) + i16 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=14752, i17=-6, i18=199, i19=104, i20=-50847, i21=-52599, i22=-13;
        double d=-60.4574;
        float f=-2.351F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -15470L);

        for (i = 6; i < 239; ++i) {
            i1 >>= (int)(((i1 * 60.120692) - (i1--)) - ((i1--) - (i1 * d)));
            f *= (float)d;
            i1 += i;
            lArr[i] -= (long)(Math.abs(++Test.instanceCount) + ((i + i1) + (-17145 - (f--))));
            vMeth();
            if (bFld) {
                for (i17 = 6; i17 < 108; ++i17) {
                    if (bFld) continue;
                    for (i19 = i17; i19 < 2; i19++) {
                        i1 += (((i19 * i17) + i1) - Test.instanceCount);
                        iFld /= (int)(i19 | 1);
                        Test.instanceCount = Test.instanceCount;
                        i20 <<= (int)Test.instanceCount;
                        iFld |= i18;
                        f = i19;
                    }
                    Test.fFld = Test.instanceCount;
                    i20 += (i17 * i17);
                    iArrFld1[i17 + 1] = i20;
                    for (i21 = 1; i21 < 2; i21++) {
                        iArrFld1[i17 + 1] = i21;
                        Test.instanceCount -= Test.instanceCount;
                        Test.instanceCount += Test.instanceCount;
                        i22 = i18;
                        iFld += Test.sFld;
                    }
                    Test.iArrFld[i + 1] += (int)Test.instanceCount;
                    i18 += (i17 - i19);
                }
                if (bFld) break;
                i22 = i19;
                i20 = (int)f;
            } else {
                iFld = i1;
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("f i17 i18 = " + Float.floatToIntBits(f) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 lArr = " + i22 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld bFld Test.iArrFld = " + Test.sFld + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("iArrFld1 = " + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
