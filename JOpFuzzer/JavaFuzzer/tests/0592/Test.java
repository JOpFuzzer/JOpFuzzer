// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static double dFld=-1.49216;
    public static boolean bFld=true;
    public int iFld=-60815;
    public float fFld=0.382F;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13065);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s, float f, int i3) {

        long l=-646522777L, l1=128L, lArr[][]=new long[N][N];
        int i4=16023, i5=2818, i6=-63, i7=-62834;

        FuzzerUtils.init(lArr, 581197271L);

        Test.instanceCount *= l;
        l1 = 1;
        while (++l1 < 384) {
            for (i4 = 1; i4 < 4; ++i4) {
                Test.dFld *= i5;
                i3 = i5;
                i3 += (int)-109.686F;
                i5 += i5;
                Test.instanceCount *= (long)f;
                for (i6 = 1; 2 > i6; ++i6) {
                    switch ((i6 % 5) + 100) {
                    case 100:
                        i5 = (int)f;
                        s *= (short)i5;
                        break;
                    case 101:
                        i5 = i4;
                        break;
                    case 102:
                        i3 += (0 + (i6 * i6));
                        i5 >>= i4;
                        break;
                    case 103:
                        Test.dFld *= 19478;
                        break;
                    case 104:
                        Test.dFld += i5;
                    default:
                        lArr[(int)(l1 - 1)][i4 - 1] -= Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = s + Float.floatToIntBits(f) + i3 + l + l1 + i4 + i5 + i6 + i7 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        short s1=20373;
        float f1=0.431F;
        int i8=-22946, i9=-27, i10=2, i11=235, i12=-14, i13=35141, i14=7;

        Test.instanceCount = iMeth1(s1, f1, i8);
        for (i9 = 197; i9 > 9; i9--) {
            f1 += i9;
            i8 >>= i8;
            for (i11 = i9; 8 > i11; ++i11) {
                f1 += i11;
                Test.instanceCount += s1;
                for (i13 = 1; i13 < 1; i13++) {
                    f1 -= i13;
                }
                Test.iArrFld[i11 - 1] *= 38;
                i10 = (int)Test.instanceCount;
                i12 += (i11 + Test.instanceCount);
                i8 += i8;
                f1 += f1;
            }
            i8 = i10;
        }
        long meth_res = s1 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + i12 + i13 + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i15=-14, i16=-136, i17=32210, i18=-4179, i19=-246, i20=-110;
        float f2=0.256F;
        byte by=-98;

        i = (Math.max(i1 - i, iMeth()) + i2);
        Test.instanceCount -= -9;
        for (i15 = 21; i15 < 364; ++i15) {
            for (i17 = 5; i17 > i15; i17 -= 3) {
                i1 -= (int)Test.instanceCount;
                i18 <<= (int)Test.instanceCount;
                f2 += by;
                i16 += i17;
                if (Test.bFld) {
                    i18 |= i17;
                    f2 = 188;
                } else if (Test.bFld) {
                    for (i19 = 1; i15 < i19; --i19) {
                        Test.dFld = Test.instanceCount;
                        i1 += i19;
                        f2 += (i19 * i19);
                    }
                } else {
                    Test.dFld = i1;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f2) + by + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i21=48795, i22=8, i23=9, i24=225, i25=-7, i26=8, i27=53078, i28=-5, i29=51897;
        byte by1=-44;
        short s2=-2772;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth(i21, i21, 0);
        Test.iArrFld[(i21 >>> 1) % N] = iFld;
        i21 = -18681;
        iFld = iFld;
        by1 += (byte)i21;
        for (i22 = 14; i22 < 254; ++i22) {
            for (i24 = 6; 105 > i24; ++i24) {
                Test.instanceCount = iFld;
                i21 <<= i23;
                i26 = 1;
                while (++i26 < 2) {
                    bArr[i26] = Test.bFld;
                }
                by1 += (byte)(i24 ^ iFld);
            }
            i27 = 1;
            do {
                if (false) break;
                i23 += (((i27 * i21) + i27) - i21);
                bArr[i22 + 1] = Test.bFld;
                iFld = i21;
                i25 += (int)Test.instanceCount;
                for (i28 = i27; 1 > i28; ++i28) {
                    float f3=114.88F;
                    Test.iArrFld[i22] = iFld;
                    s2 = s2;
                    Test.iArrFld[i22 - 1] -= iFld;
                    if (false) break;
                    by1 >>>= (byte)i23;
                    i23 += (i28 * i28);
                    i23 = i28;
                    byArrFld[i28] *= (byte)iFld;
                    f3 += (i28 - Test.instanceCount);
                }
                s2 += (short)i27;
                fFld += (i27 * Test.instanceCount);
            } while (++i27 < 105);
        }

        FuzzerUtils.out.println("i21 by1 i22 = " + i21 + "," + by1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 s2 bArr = " + i29 + "," + s2 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld fFld Test.iArrFld = " + iFld + "," + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
