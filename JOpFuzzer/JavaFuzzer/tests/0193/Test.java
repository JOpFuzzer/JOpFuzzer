// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5102408463519896006L;
    public byte byFld=-20;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 8765124813996657075L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=-6, i8=-28752, i9=49450, i10=16448, i11=12, iArr1[][]=new int[N][N];
        float f1=0.314F, fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, -157);
        FuzzerUtils.init(fArr, 2.747F);

        i7 = 387;
        while ((i7 -= 2) > 0) {
            for (i8 = 1; i8 < 8; i8++) {
                short s=-18604;
                i6 = (int)Test.instanceCount;
                switch ((((i10 >>> 1) % 2) * 5) + 111) {
                case 121:
                    try {
                        iArr1[i7 + 1][i8] = (-650785880 % i10);
                        i6 = (i10 % 376541224);
                        i10 = (i6 / -62166);
                    } catch (ArithmeticException a_e) {}
                    i5 += i8;
                    i11 = 1;
                    while (++i11 < 2) {
                        Test.instanceCount = i5;
                        i9 ^= i6;
                        f1 = 9;
                        iArr1[i11 - 1][i7] = (int)Test.instanceCount;
                        fArr[i8][i7] = i7;
                    }
                    if (true) continue;
                case 112:
                    i5 = s;
                    f1 += -8568;
                    break;
                default:
                    i5 += i9;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i3=9, i4=1, i12=212, i13=9, i14=-21, i15=48047;
        float f2=-1.75F;
        boolean b=false;
        short s1=31643;

        for (i3 = 1; i3 < 318; ++i3) {
            vMeth1(i4, 1);
            i4 += 3;
            Test.instanceCount = (long)f2;
            i4 -= i4;
            i4 &= (int)Test.instanceCount;
            for (i12 = 1; i12 < 5; ++i12) {
                f2 += (((i12 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                b = true;
                b = b;
            }
            Test.instanceCount = (long)f2;
        }
        s1 = (short)i13;
        for (i14 = 4; i14 < 145; i14++) {
            f2 += i14;
            i13 += (-9 + (i14 * i14));
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f2) + i12 + i13 + (b ? 1 : 0) + s1 + i14 + i15;
    }

    public long lMeth(long l, int i2, float f) {

        float f3=-39.229F;
        int i16=-11;

        vMeth();
        i2 = 28734;
        i2 = (int)l;
        for (f3 = 323; 12 < f3; --f3) {
            i2 -= i16;
            i16 += (int)f3;
        }
        long meth_res = l + i2 + Float.floatToIntBits(f) + Float.floatToIntBits(f3) + i16;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i1=-242, i18=0, i19=134, i20=-4257, i21=3071, i22=-9, i23=-26561, i24=-10, i25=22, i26=0, i27=1506,
            i28=8, iArr[]=new int[N];
        float f4=18.730F, fArr1[]=new float[N];
        boolean b1=true;
        double d=35.202;
        short s2=12836, sArr[]=new short[N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(sArr, (short)-29623);
        FuzzerUtils.init(fArr1, -1.143F);

        for (i = 2; 129 > i; i++) {
            iArr[i] = (int)((++Test.instanceCount) >> Long.reverseBytes(lMeth(Test.instanceCount, i, f4)));
            for (i18 = 12; i18 < 197; ++i18) {
                for (i20 = 1; i20 < 2; ++i20) {
                    f4 *= byFld;
                    i21 += (int)(-10L + (i20 * i20));
                    byFld = (byte)Test.instanceCount;
                    i1 -= i19;
                }
                i1 += (i18 | Test.instanceCount);
                i21 = i22;
                for (i23 = i; 2 > i23; i23++) {
                    b1 = b1;
                    Test.instanceCount <<= -14;
                    d *= Test.instanceCount;
                    sArr[i + 1] += (short)d;
                    if (b1) continue;
                    Test.lArrFld[i23 + 1] = (long)90.31116;
                    d += -2.443F;
                    i22 += i;
                }
                for (i25 = 1; i25 < 2; i25++) {
                    fArr1[i25 - 1] = 1;
                    i19 += (((i25 * i1) + Test.instanceCount) - Test.instanceCount);
                }
                for (i27 = 1; i27 < 2; i27++) {
                    i22 += s2;
                    i24 = (int)Test.instanceCount;
                    i24 += (i27 ^ Test.instanceCount);
                    Test.lArrFld[i + 1] += Test.instanceCount;
                    f4 += (54 + (i27 * i27));
                    Test.instanceCount <<= -8;
                    i1 = (int)-2.113826;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f4 = " + i + "," + i1 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 b1 d = " + i24 + "," + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 s2 iArr = " + i28 + "," + s2 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("sArr fArr1 = " + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount byFld iArrFld = " + Test.instanceCount + "," + byFld + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
