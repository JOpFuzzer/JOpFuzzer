// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3783L;
    public static byte byFld=25;
    public static boolean bFld=false;
    public double dFld=100.102364;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 59751);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3) {

        int i4=11, i5=-27, i6=7, i7=210, i8=-198, i9=47799, iArr[]=new int[N];
        float f=-38.247F;
        short s=2275;
        double d=-34.105691;

        FuzzerUtils.init(iArr, 10008);

        i3 *= (int)Test.instanceCount;
        i3 += i3;
        for (i4 = 5; i4 < 392; ++i4) {
            f -= s;
            Test.instanceCount = 1L;
            iArr[i4] &= i3;
            i5 -= i3;
            if (false) break;
            i3 <<= (int)Test.instanceCount;
            for (i6 = 1; i6 < 4; ++i6) {
                iArr[i6 + 1] -= (int)-99.653F;
                for (i8 = 1; 2 > i8; i8++) {
                    d -= i8;
                    Test.instanceCount += i6;
                }
                i3 = i3;
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + s + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, long l) {

        int i10=1, i11=-4;
        float f1=0.1017F;
        double d1=2.75266;
        short s1=-23792;

        i2 = (int)(Test.instanceCount * Test.byFld);
        vMeth2(i2);
        i2 *= i2;
        for (i10 = 3; i10 < 192; ++i10) {
            f1 += (i10 * i10);
            d1 = 1;
            do {
                i11 += (int)(d1 * d1);
                Test.instanceCount = Test.byFld;
                i11 = s1;
            } while (++d1 < 8);
            switch (((i10 >>> 1) % 5) + 61) {
            case 61:
                l += (5 + (i10 * i10));
                i11 *= i11;
                break;
            case 62:
                i11 += (int)Test.instanceCount;
                l += i11;
                break;
            case 63:
                Test.instanceCount *= i11;
                break;
            case 64:
                Test.bFld = Test.bFld;
                break;
            case 65:
                i11 += i10;
                break;
            }
        }
        vMeth1_check_sum += i2 + l + i10 + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + s1;
    }

    public void vMeth() {

        int i12=7;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5122308181992487668L);

        vMeth1(i12, -13L);
        lArr = FuzzerUtils.long1array(N, (long)-44329L);
        vMeth_check_sum += i12 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=92, i1=-25594, i13=-208, i14=60, i15=-193, i16=-12, i17=-14;
        long l1=-7L, lArr1[]=new long[N];
        float f2=-64.373F, fArr[]=new float[N];

        FuzzerUtils.init(lArr1, 12L);
        FuzzerUtils.init(fArr, 0.545F);

        for (i = 4; i < 392; ++i) {
            Test.instanceCount += (i - i);
            vMeth();
            lArr1 = lArr1;
            for (i13 = 1; i13 < 65; i13++) {
                for (l1 = i13; l1 < 2; l1++) {
                    Test.byFld *= (byte)i15;
                    i1 -= i14;
                    fArr[(int)(l1 + 1)] -= i14;
                    i14 += (int)Test.instanceCount;
                    fArr[i13 + 1] = i13;
                    i14 += (61874 + (l1 * l1));
                }
                i15 = i14;
                f2 += f2;
                Test.instanceCount = (long)f2;
                f2 += i15;
                i16 = 1;
                while (++i16 < 2) {
                    Test.instanceCount *= i;
                    i15 = i13;
                }
                i14 -= (int)dFld;
            }
            lArr1[i + 1] -= i16;
            if (true) break;
        }
        f2 = i15;
        i14 >>= i1;
        Test.byFld += (byte)dFld;
        Test.iArrFld = Test.iArrFld;
        i17 = 1;
        while (++i17 < 192) {
            Test.iArrFld[i17 + 1] += i;
        }
        i1 -= (int)0L;
        Test.instanceCount = i;

        FuzzerUtils.out.println("i i1 i13 = " + i + "," + i1 + "," + i13);
        FuzzerUtils.out.println("i14 l1 i15 = " + i14 + "," + l1 + "," + i15);
        FuzzerUtils.out.println("f2 i16 i17 = " + Float.floatToIntBits(f2) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("lArr1 fArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
