// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2031720256L;
    public static boolean bFld=true;
    public static float fFld=-2.417F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];
    public static float fArrFld[]=new float[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1);
        FuzzerUtils.init(Test.lArrFld, 10L);
        FuzzerUtils.init(Test.fArrFld, 15.95F);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9) {

        int i10=59815, i11=-46465, i12=1, i13=-56318, i14=3;

        i8 = i8;
        i10 = 1;
        while (++i10 < 315) {
            Test.iArrFld[i10 - 1] -= (int)-61.108439;
            switch ((i10 % 3) + 51) {
            case 51:
                i9 += i9;
                for (i11 = 1; i11 < 5; ++i11) {
                    i12 += i11;
                    for (i13 = 1; i13 < 2; ++i13) {
                        if (Test.bFld) break;
                        i8 &= (int)Test.instanceCount;
                        Test.lArrFld[i13][i13 - 1] = -4;
                        i8 >>>= (int)Test.instanceCount;
                    }
                }
                Test.instanceCount *= i13;
                break;
            case 52:
                i9 += (int)Test.instanceCount;
                if (Test.bFld) break;
                break;
            case 53:
                Test.iArrFld[i10 - 1] <<= 25362;
                break;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14;
    }

    public static void vMeth(int i6) {

        short s=19425;
        byte by=-70;
        int i15=-3, iArr[]=new int[N];
        double d=1.72599;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -204);
        FuzzerUtils.init(fArr, 2.24F);

        i6 = i6;
        for (int i7 : iArr) {
            fArr[(i7 >>> 1) % N] += i6;
        }
        Test.instanceCount >>>= i6;
        vMeth1(30683, i6);
        Test.iArrFld = FuzzerUtils.int1array(N, (int)223);
        s = (short)Test.instanceCount;
        try {
            i6 = (int)Test.instanceCount;
            iArr[(6 >>> 1) % N] &= 0;
            by *= (byte)-98;
            i15 = 236;
            do {
                fArr[i15 + 1] *= (float)d;
                i6 = (int)Test.instanceCount;
            } while ((i15 -= 3) > 0);
        }
        catch (ArithmeticException exc1) {
            Test.instanceCount += (long)2.806F;
        }
        vMeth_check_sum += i6 + s + by + i15 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth(int i4, boolean b, int i5) {

        byte by1=57;

        vMeth(-7);
        by1 = (byte)i4;
        vSmallMeth_check_sum += i4 + (b ? 1 : 0) + i5 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i=215, i1=-14304, i2=-24, i3=-4362, i16=-9, i17=-11, i18=-13;

        for (i = 5; i < 345; i++) {
            for (i2 = 4; i2 < 74; i2++) {
                for (int smallinvoc=0; smallinvoc<1; smallinvoc++) vSmallMeth(i3, Test.bFld, 142);
                Test.lArrFld[i2 - 1][i2] = i16;
            }
        }
        Test.fArrFld[(i16 >>> 1) % N] = i16;
        for (i17 = 3; i17 < 197; i17++) {
            Test.instanceCount += (((i17 * i1) + Test.fFld) - i3);
            if (Test.bFld) break;
            Test.bArrFld[i17 + 1] = Test.bFld;
            Test.instanceCount += -1;
            if (Test.bFld) break;
            i16 += i2;
        }
        Test.iArrFld[(i17 >>> 1) % N] += 55371;
        i16 = i1;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i16 i17 = " + i3 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 = " + i18);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
