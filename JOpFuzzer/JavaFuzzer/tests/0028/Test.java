// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2111L;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vSmallMeth() {

        int i=-6, iArr[]=new int[N];
        float f=-111.935F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-25974);
        FuzzerUtils.init(iArr, -223);

        iArr[(i >>> 1) % N] *= (int)(Integer.reverseBytes((int)(f + Test.instanceCount)) * ((102 * (i--)) +
            (Test.instanceCount * i)));
        vSmallMeth_check_sum += i + Float.floatToIntBits(f) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i8=-10, i9=3, i10=6, i11=0, i12=7, i13=219, i14=-162, iArr2[]=new int[N];
        byte by=97;
        float f2=1.921F;
        long l=3802792336300517354L;

        FuzzerUtils.init(iArr2, -28010);

        vSmallMeth();
        i8 = i8;
        for (i9 = 3; i9 < 146; ++i9) {
            i8 |= i9;
            for (i11 = 1; i11 < 11; ++i11) {
                switch ((i9 % 5) + 57) {
                case 57:
                    iArr2[i9] *= i12;
                    i10 += i11;
                    for (i13 = 1; i13 < 2; i13++) {
                        i12 = i13;
                        i10 = 2;
                        i10 = i11;
                        Test.instanceCount >>= i12;
                        i8 >>= (int)Test.instanceCount;
                    }
                case 58:
                    by = (byte)f2;
                    break;
                case 59:
                    Test.instanceCount |= i10;
                case 60:
                    i12 -= (int)Test.instanceCount;
                    break;
                case 61:
                    i14 >>= (int)l;
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + i14 + by + Float.floatToIntBits(f2) + l +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i3=-224, i4=-25363, i5=-13, i6=198, i7=-65329, iArr1[][]=new int[N][N];
        float f1=-1.63F, f3=-1.336F;
        short s1=12708;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 162);
        FuzzerUtils.init(dArr, -2.69011);
        FuzzerUtils.init(lArr, -10L);

        iArr1 = (iArr1 = (iArr1 = (iArr1 = iArr1)));
        for (i3 = 9; i3 < 347; i3 += 2) {
            for (f1 = 1; 9 > f1; f1 += 2) {
                for (i6 = 3; i6 > 1; i6--) {
                    dArr = (dArr = (dArr = (dArr = dArr)));
                    lArr[i3 - 1] = (iMeth() - i5);
                    Test.instanceCount <<= i5;
                    i5 += (i6 + i5);
                    switch ((int)(((f1 % 7) * 5) + 119)) {
                    case 142:
                        iArr1[i3][i3 - 1] = (int)f1;
                    case 130:
                        i4 = -125;
                        iArr1[i3 - 1][(int)(f1)] = (int)f3;
                        s1 += (short)i6;
                        iArr1[(int)(f1 + 1)][(int)(f1)] *= -42880;
                        break;
                    case 134:
                        iArr1[i6][(int)(f1)] >>= i3;
                    case 148:
                        iArr1[i6][i3] += i4;
                        break;
                    case 143:
                        i4 *= (int)Test.instanceCount;
                    case 121:
                        i4 |= i6;
                        break;
                    case 120:
                        f3 = i3;
                        break;
                    default:
                        i7 = i4;
                    }
                }
            }
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + Float.floatToIntBits(f3) + s1 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i1=-11, i2=10;

        for (int smallinvoc=0; smallinvoc<684; smallinvoc++) vSmallMeth();
        for (i1 = 18; i1 < 316; i1++) {
            i2 = i1;
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            vSmallMeth();
        }
        vMeth();

        FuzzerUtils.out.println("i1 i2 = " + i1 + "," + i2);

        FuzzerUtils.out.println("Test.instanceCount = " + Test.instanceCount);

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test iMeth vMeth
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
