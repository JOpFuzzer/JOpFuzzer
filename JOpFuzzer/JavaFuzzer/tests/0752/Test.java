// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=40493L;
    public static byte byFld=123;
    public static volatile float fFld=0.749F;
    public static boolean bFld=false;
    public volatile int iFld=214;
    public static int iArrFld[][]=new int[N][N];
    public static double dArrFld[][]=new double[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -78);
        FuzzerUtils.init(Test.dArrFld, 0.107838);
        FuzzerUtils.init(Test.lArrFld, 3L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i6=54224, i7=79, i8=10, i9=-25520, iArr[]=new int[N];
        short s=-9749;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr, 20111);
        FuzzerUtils.init(fArr, 0.933F);

        for (int i5 : iArr) {
            if (Test.bFld) continue;
            if (Test.bFld) continue;
            for (i6 = 1; 4 > i6; i6++) {
                switch (((i6 % 5) * 5) + 52) {
                case 53:
                    for (i8 = 1; i8 < 2; i8++) {
                        Test.instanceCount = i9;
                        fArr[i6 - 1][i8 + 1] += -50;
                        s &= (short)Test.instanceCount;
                        i7 = i7;
                        i9 = i6;
                        if (Test.bFld) break;
                        i9 += i6;
                    }
                    Test.dArrFld[i6][i6] = i9;
                    i5 += i6;
                    break;
                case 58:
                    Test.fFld = s;
                    break;
                case 70:
                    if (i5 != 0) {
                    }
                case 73:
                    i7 = i8;
                case 63:
                    Test.instanceCount = i9;
                    break;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + s + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i2=0, i3=-1, i4=6182, i10=-8, i11=3, i12=-207, i13=58878;
        boolean b=true;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -1.658F);

        i2 = 127;
        while (--i2 > 0) {
            for (i3 = 1; i3 < 12; ++i3) {
                i4 = (i4 * Test.iArrFld[i3 - 1][i2 - 1]);
                i4 -= (int)((++Test.instanceCount) - (35450 * i2));
            }
            if (b = (b | (lMeth() == i2))) continue;
            i4 += -10;
            try {
                i4 = (i3 / 1178579275);
                i4 = (i2 / 967612260);
                i4 = (43158 / i3);
            } catch (ArithmeticException a_e) {}
            i4 = i4;
        }
        for (i10 = 9; i10 < 210; i10++) {
            Test.fFld *= Test.fFld;
            for (i12 = 1; i12 < 8; ++i12) {
                if (Test.bFld) continue;
                fArr1[i12] += i4;
                i13 = (int)Test.fFld;
                i13 += (int)1.109F;
            }
        }
        long meth_res = i2 + i3 + i4 + (b ? 1 : 0) + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {


        i1 *= (int)((long)((6721L << (Test.byFld--)) * (i - Test.fFld)) << iMeth());
        vMeth_check_sum += i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i14=167, i15=0;

        vMeth(iFld, 87);
        for (i14 = 4; 157 > i14; ++i14) {
            Test.fFld *= 54446;
            Test.fFld = i15;
            iFld += (((i14 * iFld) + Test.instanceCount) - i14);
            i15 <<= Test.byFld;
            Test.lArrFld[i14] += i14;
            i15 ^= 14;
            Test.bFld = Test.bFld;
            Test.iArrFld[i14][i14 + 1] += (int)-4L;
        }

        FuzzerUtils.out.println("i14 i15 = " + i14 + "," + i15);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld iFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," + iFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
