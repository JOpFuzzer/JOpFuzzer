// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-770472104917933677L;
    public static float fFld=107.955F;
    public static boolean bFld=false;
    public static volatile int iFld=-16732;
    public static long lFld=1622742977L;
    public short sFld=15143;
    public boolean bFld1=false;
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3231968968L);
        FuzzerUtils.init(Test.fArrFld, -93.722F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, double d1) {

        int i8=19, i9=-2, i10=-11, iArr1[]=new int[N];
        short s1=28405;
        float f=0.682F;
        boolean b1=false;

        FuzzerUtils.init(iArr1, -7);

        i8 = 1;
        while (++i8 < 250) {
            iArr1[i8 - 1] <<= i8;
            s1 = (short)i7;
            i7 *= i7;
            s1 = (short)i7;
            Test.fFld = -94;
            f = 7;
            do {
                i7 += (int)((long)f ^ (long)Test.fFld);
                for (i9 = 1; i9 > 1; i9--) {
                    Test.bFld = b1;
                    i10 = (int)Test.instanceCount;
                    i10 += i8;
                    Test.bFld = Test.bFld;
                    iArr1[(int)(f)] = i8;
                    iArr1 = iArr1;
                }
            } while (--f > 0);
        }
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d1) + i8 + s1 + Float.floatToIntBits(f) + i9 + i10 + (b1 ? 1 :
            0) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(double d, int i2, boolean b) {

        int i3=41583, i4=-32693, i5=3, i6=0;
        short s2=1366;

        for (i3 = 319; i3 > 9; i3--) {
            i5 = 5;
            while (--i5 > 0) {
                i6 = 1;
                do {
                    i2 >>= (int)(((Test.fFld - i5) - (i6 * -59825)) * i6);
                    switch ((i6 % 1) + 110) {
                    case 110:
                        i4 = Integer.reverseBytes(--i4);
                        d += 14526;
                        break;
                    default:
                        vMeth1(i6, d);
                    }
                    i2 += (((i6 * i4) + i3) - i5);
                    d *= i6;
                    i4 >>= i5;
                    if (Test.bFld) {
                        i2 -= (int)2.40873;
                        i4 *= (int)1.41F;
                    } else if (Test.bFld) {
                        if (i6 != 0) {
                        }
                    } else if (false) {
                        Test.lArrFld[i5] *= -6;
                    } else {
                        s2 >>= (short)i3;
                    }
                } while (++i6 < 1);
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + s2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1) {

        short s=30765;
        int iArr[]=new int[N], iArr2[][]=new int[N][N];

        FuzzerUtils.init(iArr, 23209);
        FuzzerUtils.init(iArr2, -30);

        iArr[(i1 >>> 1) % N] = (-(i1--));
        Test.fFld = (((Test.instanceCount - 3) / (s | 1)) + iMeth(1.80069, i, Test.bFld));
        iArr2 = FuzzerUtils.int2array(N, (int)-12);
        i1 %= (int)(i1 | 1);
        vMeth_check_sum += i + i1 + s + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i11=-67, i12=6631, i13=-49136, i14=225, i15=6, i16=236, i17=-136, i18=-5, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, -2785);

        vMeth(Test.iFld, i11);
        for (i12 = 6; i12 < 177; ++i12) {
            for (i14 = 8; i14 < 147; i14++) {
                i16 = 2;
                do {
                    Test.instanceCount = i15;
                    Test.lArrFld[i14] = 61;
                    if (Test.bFld) continue;
                    if (true) {
                        i11 = i14;
                        i15 += (((i16 * i15) + i16) - i12);
                        i11 >>= i16;
                        i13 = i12;
                    } else if (false) {
                        Test.lFld *= (long)Test.fFld;
                        iArr3[i16 - 1] -= (int)Test.instanceCount;
                        Test.fFld += (i16 - Test.fFld);
                        sArrFld = sArrFld;
                    }
                } while (--i16 > 0);
                Test.instanceCount *= Test.lFld;
                i11 += (int)186L;
                i15 += (i14 + Test.fFld);
                Test.fArrFld[i12] = i11;
                i13 += Test.iFld;
                Test.lFld += (((i14 * Test.iFld) + i13) - i12);
                for (i17 = 1; i17 < 2; ++i17) {
                    sFld -= (short)8;
                    Test.iFld &= i15;
                    Test.fFld = i16;
                    Test.fFld -= i17;
                    i18 >>= 49510;
                    i13 = i17;
                }
                Test.bFld = bFld1;
            }
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 iArr3 = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.lFld sFld = " + Test.iFld + "," + Test.lFld + "," + sFld);
        FuzzerUtils.out.println("bFld1 Test.lArrFld sArrFld = " + (bFld1 ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
