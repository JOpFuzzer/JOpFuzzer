// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-25L;
    public static int iFld=-168;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 174);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5) {

        int i6=55, i7=-2, i8=-21, i9=-79, i10=235;
        double d2=0.80361;
        byte by1=61;
        float f=5.770F;

        i6 = 134;
        do {
            d2 -= i5;
            i5 >>>= i4;
            if (i5 != 0) {
                vMeth2_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d2) + i7 + i8 + i9 + i10 + by1 +
                    Float.floatToIntBits(f);
                return;
            }
        } while (--i6 > 0);
        i4 &= 30730;
        for (i7 = 3; i7 < 229; ++i7) {
            i8 = i4;
            Test.iArrFld[i7] >>>= i8;
            for (i9 = 1; i9 < 7; ++i9) {
                Test.instanceCount += Test.instanceCount;
                i10 = i4;
                if (i5 != 0) {
                    vMeth2_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d2) + i7 + i8 + i9 + i10 + by1 +
                        Float.floatToIntBits(f);
                    return;
                }
                by1 >>= (byte)i7;
                f -= i7;
                i4 += (((i9 * i4) + i5) - Test.instanceCount);
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d2) + i7 + i8 + i9 + i10 + by1 +
            Float.floatToIntBits(f);
    }

    public static void vMeth1(double d1, byte by) {

        int i11=-36727, i12=45658;
        short s=-4664;
        float f1=0.1021F;
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -40822L);
        FuzzerUtils.init(byArr, (byte)-60);

        vMeth2(Test.iFld, Test.iFld);
        for (long l : lArr) {
            Test.iArrFld = Test.iArrFld;
            for (i11 = 1; i11 < 4; ++i11) {
                i12 <<= i12;
                i12 ^= s;
                by -= (byte)d1;
                switch ((i11 % 4) + 89) {
                case 89:
                    by = (byte)Test.instanceCount;
                    s = (short)2;
                case 90:
                case 91:
                case 92:
                    byArr[i11 - 1] = (byte)-19622;
                    i12 -= i11;
                    Test.iFld = i12;
                    break;
                default:
                    i12 = (int)f1;
                    f1 = Test.iFld;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + by + i11 + i12 + s + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i, int i1, double d) {

        int i2=50639, i3=41653, i13=-15581, i14=41063, i15=-68, i16=6;
        byte by2=26;
        float f2=-24.827F;

        for (i2 = 11; i2 < 271; i2++) {
            vMeth1(d, by2);
            for (i13 = 1; i13 < 6; i13 += 3) {
                i3 += i13;
                i15 = 1;
                do {
                    Test.instanceCount = i14;
                    Test.instanceCount >>= 12L;
                    Test.iFld -= (int)-114L;
                    i = i16;
                } while (++i15 < 6);
                i += (((i13 * f2) + f2) - f2);
                d *= i15;
                Test.iFld >>>= i15;
                i += (14 + (i13 * i13));
            }
            i3 += -2;
            Test.iFld -= 1;
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + i2 + i3 + by2 + i13 + i14 + i15 + i16 +
            Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        double d3=15.123821;
        short s1=-14934;
        float f3=42.954F, fArr[]=new float[N];
        int i17=24, i18=42269, i19=-31653, i20=14, i21=10, i22=0, i23=3, i24=-124, i25=-94;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -23953L);
        FuzzerUtils.init(fArr, 0.157F);

        vMeth(Test.iFld, Test.iFld, d3);
        Test.instanceCount -= s1;
        switch (((Test.iFld >>> 1) % 3) + 42) {
        case 42:
            Test.iFld = (int)f3;
            d3 = 3329;
            Test.iFld += -5;
        case 43:
            i17 = 1;
            while (++i17 < 141) {
                for (i18 = 178; 4 < i18; --i18) {
                    Test.instanceCount += (long)d3;
                    Test.iArrFld[i17] = Test.iFld;
                    f3 -= i18;
                }
                i20 = 1;
                while (++i20 < 178) {
                    for (i21 = 1; i21 < 1; i21++) {
                        lArr1[i20 + 1] *= i19;
                        f3 += i21;
                        if (bFld) break;
                        if (bFld) continue;
                        i19 += (-33 + (i21 * i21));
                        lArr1[i20] >>= Test.instanceCount;
                        i19 += i21;
                        Test.iFld = i20;
                    }
                    i22 = (int)f3;
                    for (i23 = 1; i23 < 1; ++i23) {
                        i24 >>>= i25;
                        i25 = -203;
                        lArr1 = FuzzerUtils.long1array(N, (long)-12L);
                        Test.instanceCount <<= Test.instanceCount;
                        fArr = fArr;
                        Test.iArrFld = Test.iArrFld;
                    }
                    i25 += i20;
                }
            }
            break;
        case 44:
        default:
            Test.instanceCount = (long)f3;
        }

        FuzzerUtils.out.println("d3 s1 f3 = " + Double.doubleToLongBits(d3) + "," + s1 + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("lArr1 fArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld bFld = " + Test.instanceCount + "," + Test.iFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
