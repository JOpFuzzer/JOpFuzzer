// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-95L;
    public static float fFld=0.260F;
    public static byte byFld=-69;
    public long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-43);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, long l1, float f1) {

        int i3=-7, i4=32056, i5=3, i6=-66, iArr[]=new int[N];
        double d1=-98.30828;

        FuzzerUtils.init(iArr, 85);

        i2 &= i2;
        i2 *= i2;
        for (i3 = 16; i3 < 361; i3++) {
            i2 += i2;
            i4 = i2;
            i2 += i3;
            i2 >>= i2;
            l1 += i4;
        }
        iArr = iArr;
        i4 -= i3;
        for (i5 = 7; i5 < 225; i5++) {
            boolean b=true;
            l1 *= i3;
            if (b) continue;
        }
        i4 += (int)d1;
        i4 = i5;
        vMeth1_check_sum += i2 + l1 + Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(short s, float f) {

        int i7=77, i8=-9, i9=-13, i10=240, i11=-10790, i12=-41580, i13=-14;
        double d2=66.110479;

        vMeth1(90, Test.instanceCount, f);
        i7 = 1;
        do {
            for (i8 = 6; i8 > 1; i8--) {
                f *= i8;
                i9 += (((i8 * s) + i7) - Test.instanceCount);
            }
            d2 *= -252;
            Test.instanceCount = i8;
            for (i10 = 1; i10 < 6; i10 += 2) {
                s <<= (short)Test.instanceCount;
                for (i12 = 1; i12 < 3; i12 += 2) {
                    switch (((i10 % 6) * 5) + 111) {
                    case 123:
                        i13 = i9;
                        if (i9 != 0) {
                            vMeth_check_sum += s + Float.floatToIntBits(f) + i7 + i8 + i9 + Double.doubleToLongBits(d2)
                                + i10 + i11 + i12 + i13;
                            return;
                        }
                        i11 = 81;
                        Test.instanceCount -= i10;
                        break;
                    case 116:
                        i9 >>= i10;
                        break;
                    case 136:
                        i13 = -26385;
                        break;
                    case 115:
                        s -= (short)46517;
                    case 133:
                        i13 *= (int)f;
                        break;
                    case 119:
                        i11 = i13;
                    }
                }
            }
        } while (++i7 < 272);
        vMeth_check_sum += s + Float.floatToIntBits(f) + i7 + i8 + i9 + Double.doubleToLongBits(d2) + i10 + i11 + i12 +
            i13;
    }

    public int iMeth(long l) {

        double d=28.29472;
        int i1=21077;
        byte by=74;

        for (d = 226; 12 < d; --d) {
            by = (byte)(-(Math.max(l, l) - d));
        }
        vMeth((short)(-26825), Test.fFld);
        long meth_res = l + Double.doubleToLongBits(d) + i1 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8, i14=254, i15=-64166, i16=-12, i17=-212, i18=-32903, i19=-50908, i20=-24, i21=0, i22=61, iArr1[]=new
            int[N];
        double d3=66.7997;
        long l2=-48684L;
        byte by1=-116;
        boolean b1=true;
        short s1=-5462;

        FuzzerUtils.init(iArr1, 217);

        i *= (--i);
        i = iMeth(Test.instanceCount);
        for (i14 = 9; i14 < 305; ++i14) {
            Test.fFld = (float)d3;
            iArr1[i14 - 1] = i15;
            l2 = 1;
            do {
                i = (int)d3;
                i15 <<= i;
                lArrFld = FuzzerUtils.long1array(N, (long)2117930925L);
                by1 += (byte)Test.fFld;
            } while (++l2 < 85);
            iArr1[i14] |= by1;
            i16 = 1;
            do {
                i += (int)5183533061205420335L;
                iArr1[i16] += 5;
            } while (++i16 < 85);
            b1 = true;
            for (i17 = 85; 4 < i17; i17--) {
                Test.fFld -= Test.fFld;
                i18 += (i17 | i14);
                i >>>= i15;
                for (i19 = 1; i19 < 2; i19++) {
                    i = i;
                }
                switch (((i14 % 6) * 5) + 102) {
                case 128:
                    for (i21 = i17; i21 < 2; i21 += 2) {
                        i20 += (i21 + i);
                        i22 &= i20;
                        lArrFld[i21] -= i22;
                        Test.byArrFld[(i15 >>> 1) % N] = (byte)s1;
                        i18 = i22;
                        i15 = i15;
                    }
                    i20 += i17;
                    break;
                case 116:
                    i18 -= (int)l2;
                    break;
                case 119:
                    i20 += i17;
                case 118:
                    Test.instanceCount += (-142 + (i17 * i17));
                case 123:
                    s1 <<= (short)111L;
                    break;
                case 107:
                    lArrFld[i17 + 1] *= Test.byFld;
                    break;
                default:
                    try {
                        i15 = (i15 / i18);
                        iArr1[i14 - 1] = (i14 % i15);
                        i18 = (-192 % i21);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("d3 l2 by1 = " + Double.doubleToLongBits(d3) + "," + l2 + "," + by1);
        FuzzerUtils.out.println("i16 b1 i17 = " + i16 + "," + (b1 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 s1 = " + i21 + "," + i22 + "," + s1);
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("lArrFld Test.byArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
