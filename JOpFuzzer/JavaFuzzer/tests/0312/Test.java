// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6204508701891806516L;
    public static short sFld=-9278;
    public static float fFld=1.543F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 53903);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i6) {

        int i7=-39046, i8=-1056, i9=0, i10=-115, i11=-9538, iArr[]=new int[N];
        float f1=-2.329F;
        boolean b=false;

        FuzzerUtils.init(iArr, 25);

        Test.instanceCount *= i6;
        iArr[(i6 >>> 1) % N] = (int)-24L;
        i6 += i6;
        for (i7 = 172; i7 > 4; i7 -= 2) {
            i8 -= (int)Test.instanceCount;
            for (i9 = 1; 18 > i9; ++i9) {
                if (b) {
                    f1 -= 1.1019F;
                } else if (true) {
                    iArr[i9 + 1] = i11;
                    i11 += (i9 * i9);
                    i8 -= i11;
                }
                i8 += (((i9 * i7) + i9) - f1);
                i8 = Test.sFld;
                iArr[i7 + 1] &= 1921;
                i8 >>= i7;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i3) {

        int i4=-7, i5=-20418;

        for (i4 = 3; i4 < 213; ++i4) {
            i5 += (((i4 * i5) + i5) - Test.sFld);
            i3 += (int)fMeth(i5);
            Test.fFld += (((i4 * Test.instanceCount) + i3) - i4);
        }
        long meth_res = i3 + i4 + i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i2=38, i12=-8, i13=-17263;
        short s=28227;
        double d1=-76.55923, d2=-38.29556;
        float f2=-2.592F;
        byte by=-101;
        boolean b1=true;

        i2 = 142;
        do {
            s += (short)iMeth(i2);
            d1 = i2;
            d2 = s;
            if (b1) {
                Test.instanceCount %= ((long)(Test.fFld) | 1);
                i12 *= i12;
            } else if (false) {
                switch ((i2 % 2) + 52) {
                case 52:
                    for (f2 = 1; f2 < 11; ++f2) {
                        switch ((int)((f2 % 1) + 112)) {
                        case 112:
                            Test.fFld += f2;
                            d1 += Test.instanceCount;
                            i12 += (int)(f2 * f2);
                            i13 = (int)-12L;
                        }
                        Test.iArrFld[(int)(f2)] += by;
                    }
                case 53:
                    if (b1) continue;
                    break;
                default:
                    if (b1) break;
                }
            } else {
                d1 = i12;
            }
        } while (--i2 > 0);
        long meth_res = i2 + s + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i12 +
            Float.floatToIntBits(f2) + i13 + by + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=125.14768, d3=-124.19136;
        int i=46294, i1=192, i14=12, i15=-227, i16=229, i17=14399, i18=219, i19=-14, i20=117;
        float f=1.95F;
        byte by1=10;
        boolean b2=false;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)17422);
        FuzzerUtils.init(lArr, 431792522L);

        for (d = 206; d > 3; d--) {
            i += (int)d;
            for (f = 1; f < 124; ++f) {
                i1 <<= (int)lMeth();
                Test.instanceCount >>= i;
            }
            i1 -= i1;
            sArr[(int)(d - 1)] -= (short)7;
            for (i14 = 124; i14 > d; i14--) {
                i15 &= i14;
                i16 = 1;
                do {
                    Test.instanceCount += i15;
                    i = (int)24.495F;
                    lArr[i16] *= (long)31.108801;
                    i1 += (i16 * i16);
                    by1 -= (byte)Test.instanceCount;
                    Test.instanceCount >>= i15;
                    i = i14;
                    if (true) continue;
                    Test.sFld -= (short)i16;
                } while (++i16 < 1);
                Test.sFld -= (short)i15;
            }
            d3 = 670735745L;
            for (i17 = 124; i17 > 3; --i17) {
                switch (((i15 >>> 1) % 1) + 37) {
                case 37:
                    if (b2) break;
                    i1 += (int)Test.instanceCount;
                    lArr = lArr;
                    Test.iArrFld[i17] += -31;
                default:
                    for (i19 = 1; i19 < 2; ++i19) {
                        i20 *= i18;
                    }
                }
                if (b2) continue;
            }
        }

        FuzzerUtils.out.println("d i f = " + Double.doubleToLongBits(d) + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 i14 i15 = " + i1 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 by1 d3 = " + i16 + "," + by1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i17 i18 b2 = " + i17 + "," + i18 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i19 i20 sArr = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
