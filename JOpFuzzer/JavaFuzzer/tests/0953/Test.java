// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static boolean bFld=true;
    public short sFld=16067;
    public long lFld=56L;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        int i6=4, i7=-14, i8=3, i9=-5, i10=141, i11=-2, iArr2[]=new int[N], iArr3[]=new int[N];
        double d=-2.44497;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 118L);
        FuzzerUtils.init(iArr2, -13);
        FuzzerUtils.init(iArr3, 226);

        i6 = 1;
        do {
            i5 <<= i5;
        } while (++i6 < 388);
        lArr[(i5 >>> 1) % N] -= i6;
        for (i7 = 16; i7 < 301; ++i7) {
            switch ((i7 % 1) + 57) {
            case 57:
                i5 |= i5;
                for (i9 = 1; i9 < 6; i9++) {
                    for (d = 1; d < 2; ++d) {
                        Test.instanceCount = i6;
                        try {
                            i5 = (i9 % 469567535);
                            iArr2[i7] = (iArr2[i9 + 1] / i10);
                            i11 = (iArr3[i7] / i7);
                        } catch (ArithmeticException a_e) {}
                        i11 *= i10;
                        iArr3[i9 + 1] = -24884;
                        if (b) continue;
                        i8 >>= (int)Test.instanceCount;
                    }
                    i8 -= i10;
                }
                break;
            default:
                i10 += (i7 ^ i8);
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3);
    }

    public static void vMeth1(int i4, float f, long l) {

        int i12=-8863, i13=60970, i14=55842, i15=-9, iArr1[]=new int[N];
        double d1=-83.38153, dArr[]=new double[N];
        short s=-30453;

        FuzzerUtils.init(iArr1, -252);
        FuzzerUtils.init(dArr, -2.94093);

        iArr1[(i4 >>> 1) % N] >>>= Math.min(i4, i4++);
        i4 = (int)((-iArr1[(i4 >>> 1) % N]) - (++Test.instanceCount));
        vMeth2(i12);
        i12 = -9;
        i12 = i4;
        d1 = 11.62865;
        i4 -= -7;
        for (i13 = 8; 271 > i13; i13++) {
            i15 = 6;
            do {
                switch ((i13 % 7) + 103) {
                case 103:
                    s += (short)l;
                    iArr1[i15] += i4;
                    f += i15;
                    dArr[i15 + 1] -= -3;
                    break;
                case 104:
                    i14 = i4;
                    break;
                case 105:
                    i12 += (((i15 * i4) + Test.instanceCount) - i12);
                case 106:
                    f += i15;
                    break;
                case 107:
                case 108:
                    Test.bFld = Test.bFld;
                    break;
                case 109:
                    f += (i15 * i15);
                }
            } while (--i15 > 0);
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + l + i12 + Double.doubleToLongBits(d1) + i13 + i14 + i15 + s
            + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i3) {

        float f1=-39.825F, fArr[]=new float[N];
        int i16=21114, i17=52331, i18=1, i19=-26081, i20=-3, i21=219, iArr4[]=new int[N];

        FuzzerUtils.init(fArr, -2.232F);
        FuzzerUtils.init(iArr4, -30);

        vMeth1(i3, f1, Test.instanceCount);
        i3 >>= i3;
        for (i16 = 2; i16 < 176; ++i16) {
            switch (((i16 % 1) * 5) + 101) {
            case 104:
                iArr4[i16] <<= (int)Test.instanceCount;
            default:
                for (i18 = 1; i18 < 9; ++i18) {
                    for (i20 = 1; i20 < 2; ++i20) {
                        Test.instanceCount = Test.instanceCount;
                        i19 += (((i20 * i19) + i3) - i17);
                        if (Test.bFld) break;
                        i19 = i3;
                        i17 >>= -5;
                        i3 += i17;
                    }
                    i21 = i21;
                    iArr4[i16 + 1] -= i18;
                }
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f1) + i16 + i17 + i18 + i19 + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr4);
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=-21939, i2=-7, i22=-11, i23=-108, i24=-2, i25=-5, i26=-10, i27=12, i28=-30189, i29=119, i30=-9,
            i31=-6990, iArr[]=new int[N];
        byte by=-72;
        float f3=84.796F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 8745);
        FuzzerUtils.init(lArr1, -73L);

        for (i = 4; i < 377; ++i) {
            i1 = i1;
            iArr[i] = by;
            i2 = 68;
            do {
                i1 = i2;
                vMeth(i2);
            } while (--i2 > 0);
            i1 += (i + i1);
        }
        for (i22 = 9; i22 < 246; i22++) {
            i1 *= (int)f3;
            f3 -= sFld;
            lArr1[i22] = i22;
            i23 += (i22 * i22);
        }
        i24 = 1;
        do {
            i25 = 1;
            do {
                i1 = (int)Test.instanceCount;
                Test.instanceCount = 60965;
                for (i26 = 1; i26 > 1; --i26) {
                    sFld *= (short)f3;
                    i1 = 54;
                    i23 *= by;
                    try {
                        iArr[i26] = (i28 % 16);
                        iArr[i25 + 1] = (i26 % -37197);
                        i28 = (iArr[i26] % 115);
                    } catch (ArithmeticException a_e) {}
                    if (Test.bFld) break;
                }
                for (i29 = 1; i29 < 1; i29++) {
                    i27 |= i30;
                    i28 = i30;
                    Test.instanceCount += (i29 * i29);
                    f3 += (((i29 * i22) + i26) - lFld);
                    lArr1[i25 - 1] = i31;
                    f3 *= (float)83.114523;
                    iArr[i25 + 1] -= 135;
                }
            } while (++i25 < 183);
        } while (++i24 < 137);

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("i2 i22 i23 = " + i2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("iArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld sFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + sFld);
        FuzzerUtils.out.println("lFld = " + lFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
