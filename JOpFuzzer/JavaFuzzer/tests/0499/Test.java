// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-33185L;
    public short sFld=-16449;
    public boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3213837949L);
        FuzzerUtils.init(Test.byArrFld, (byte)-57);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static void vMeth1(float f, double d) {

        int i7=1;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 11L);

        lArr[(i7 >>> 1) % N] -= Integer.reverseBytes(Math.min(i7, i7) * (i7++));
        vMeth1_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i7 + FuzzerUtils.checkSum(lArr);
    }

    public static byte byMeth(int i8, short s, float f2) {

        int i9=38014, i10=62751, i11=220, i12=50455, i13=-13837;
        double d1=95.41549;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 1.125F);

        for (i9 = 12; 340 > i9; i9++) {
            vMeth1(22.114F, d1);
            i11 = 1;
            do {
                for (i12 = i9; 1 > i12; ++i12) {
                    i10 &= i11;
                    switch (((i9 >>> 1) % 2) + 15) {
                    case 15:
                        Test.instanceCount = (long)f2;
                        i13 += i12;
                        i8 -= i8;
                        break;
                    case 16:
                        i10 >>>= s;
                        switch (((i9 % 5) * 5) + 118) {
                        case 139:
                            i13 += i12;
                            i13 = i10;
                            Test.instanceCount += i12;
                            fArr1[i9 + 1] -= i8;
                        case 138:
                            i13 *= -131;
                            break;
                        case 119:
                            i8 += i12;
                            break;
                        case 133:
                            f2 *= f2;
                        case 121:
                            i8 = 41782;
                            break;
                        }
                        break;
                    }
                }
            } while (++i11 < 5);
        }
        long meth_res = i8 + s + Float.floatToIntBits(f2) + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth() {

        int i2=-2, i3=4, i4=-242, i5=-45339, i6=8008, i14=-49547, iArr[]=new int[N];
        float f1=-46.900F, fArr[]=new float[N];
        short s1=-793;
        boolean b=false, bArr[]=new boolean[N];
        double d3=124.92509, d4=-37.49942, dArr[]=new double[N];
        byte by1=-52, by2=31;

        FuzzerUtils.init(fArr, -46.549F);
        FuzzerUtils.init(iArr, 48325);
        FuzzerUtils.init(dArr, -1.13067);
        FuzzerUtils.init(bArr, false);

        for (i2 = 133; 5 < i2; i2--) {
            switch (i2 + 60) {
            case 60:
                i4 = 1;
                do {
                    for (i5 = 1; i5 > 1; --i5) {
                        double d2=1.53155;
                        byte by=120;
                        i6 -= (int)(-(fArr[i5 - 1] * (i3--)));
                        iArr[i2] = (-(iArr[i5] - (-i5)));
                        switch (((((--i6) >>> 1) % 6) * 5) + 80) {
                        case 81:
                            vMeth1(-(f1--), dArr[i4]);
                            f1 += (i6 + (i4 + (i5 * i6)));
                            break;
                        case 102:
                            i3 += iArr[i5 + 1];
                            i3 += (int)Test.instanceCount;
                            i6 = (int)(((Test.instanceCount--) + (++f1)) - ((-1.71473 - byMeth(i2, s1, f1)) - 91));
                            break;
                        case 110:
                            if (b) break;
                            d2 = i5;
                            if (b) continue;
                            break;
                        case 99:
                            by = (byte)11;
                            break;
                        case 106:
                            i3 = (int)f1;
                            break;
                        case 92:
                            i6 += i3;
                            break;
                        default:
                            i6 += (int)d2;
                        }
                    }
                } while (++i4 < 12);
                break;
            case 61:
                i3 %= (int)(i2 | 1);
            case 62:
                Test.instanceCount += i5;
                break;
            case 63:
                d3 *= i2;
                break;
            case 64:
                Test.instanceCount = i4;
            case 65:
                i6 = i4;
                break;
            case 66:
                Test.instanceCount = -70;
                break;
            case 67:
                i3 = -179;
            case 68:
                f1 = s1;
                break;
            case 69:
                i6 *= (int)3782716703997362844L;
            case 70:
            case 71:
                i3 += (i2 * i2);
                break;
            case 72:
                Test.instanceCount = i2;
                break;
            case 73:
                Test.lArrFld[i2 + 1] += i4;
                break;
            case 74:
                i3 = (int)f1;
            case 75:
                i6 >>= (int)Test.instanceCount;
                break;
            case 76:
                Test.lArrFld[i2] <<= i4;
                break;
            case 77:
                Test.instanceCount = s1;
            case 78:
            case 79:
                i3 *= i3;
                break;
            case 80:
                iArr[i2] += i3;
                break;
            case 81:
                by1 += (byte)(-6943 + (i2 * i2));
            case 82:
                iArr[i2 - 1] -= i4;
                break;
            case 83:
                i6 = (int)Test.instanceCount;
                break;
            case 84:
                d3 += by1;
            case 85:
                i6 *= 60178;
            case 86:
                Test.instanceCount += i14;
                break;
            case 87:
                i6 = (int)d3;
            case 88:
                bArr[(156 >>> 1) % N] = true;
                break;
            case 89:
                i14 += i14;
                break;
            case 90:
                Test.instanceCount -= s1;
                break;
            case 91:
                d3 += i6;
                break;
            case 92:
                i6 -= i14;
                break;
            case 93:
                i14 = i14;
                break;
            case 94:
                Test.instanceCount <<= 150;
                break;
            case 95:
                i14 = (int)d3;
            case 96:
                i3 *= i5;
                break;
            case 97:
                i14 = i5;
                break;
            case 98:
                iArr = FuzzerUtils.int1array(N, (int)-13037);
            case 99:
                iArr[i2 - 1] = -94;
                break;
            case 100:
                by1 += (byte)(125 + (i2 * i2));
            case 101:
                i14 += (int)6153L;
            case 102:
                by1 += (byte)i2;
                break;
            case 103:
                by1 = by1;
                break;
            case 104:
                i14 ^= i14;
            case 105:
                Test.lArrFld[i2 + 1] >>= i4;
            case 106:
                i6 += i2;
                break;
            case 107:
                Test.instanceCount >>= by2;
                break;
            case 108:
                i14 >>>= i4;
                break;
            case 109:
                d4 = s1;
                break;
            case 110:
                b = b;
            case 111:
                i3 += (int)(-114.609F + (i2 * i2));
                break;
            case 112:
                Test.instanceCount >>>= i6;
            case 113:
                i6 = (int)d3;
            case 114:
                iArr[i2 - 1] ^= (int)Test.instanceCount;
            case 115:
                Test.instanceCount <<= by1;
            case 116:
                Test.instanceCount += i14;
                break;
            case 117:
                i3 += (((i2 * i5) + f1) - Test.instanceCount);
                break;
            case 118:
                s1 -= (short)i14;
                break;
            case 119:
                if (b) continue;
            case 120:
                i6 -= i6;
                break;
            case 121:
                Test.byArrFld[i2 + 1] = (byte)i5;
                break;
            case 122:
                i14 <<= -126;
                break;
            case 123:
                Test.instanceCount += (i2 * i2);
                break;
            case 124:
                i14 *= (int)-33L;
            case 125:
                fArr[i2] -= (float)d3;
                break;
            case 126:
                s1 |= (short)-5580268929172090056L;
                break;
            case 127:
                i6 += (i2 ^ Test.instanceCount);
                break;
            case 128:
                Test.instanceCount += i6;
                break;
            case 129:
                s1 += (short)(i2 - i4);
            default:
                i6 += (18270 + (i2 * i2));
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + s1 + (b ? 1 : 0) +
            Double.doubleToLongBits(d3) + by1 + i14 + by2 + Double.doubleToLongBits(d4) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=15352, i1=2, i17=-13, i18=-35194, i19=13, i20=-135, i21=16880, i22=100, i23=5219, i24=12, iArr1[]=new
            int[N];
        byte by3=110;
        float f4=1.510F, fArr2[][]=new float[N][N];

        FuzzerUtils.init(fArr2, 1.7F);
        FuzzerUtils.init(iArr1, -6271);

        for (i = 12; i < 384; i++) {
            i1 += (i * i);
        }
        vMeth();
        Test.lArrFld[(i1 >>> 1) % N] += i1;
        for (i17 = 1; i17 < 123; ++i17) {
            for (i19 = 7; i19 < 205; ++i19) {
                for (i21 = 1; i21 < 2; ++i21) {
                    double d5=54.112518;
                    if (bFld) {
                        Test.instanceCount = 3;
                        i1 += (((i21 * by3) + Test.instanceCount) - i17);
                    } else if (bFld) {
                        f4 *= i17;
                        d5 = i;
                        Test.instanceCount = (long)d5;
                        i1 += i21;
                    } else if (bFld) {
                        sFld -= (short)Test.instanceCount;
                    } else {
                        by3 -= (byte)243;
                        fArr2[i17 + 1][i21 - 1] = Test.instanceCount;
                    }
                    sFld *= (short)-89;
                    i22 = i17;
                    i1 = (int)Test.instanceCount;
                    iArr1[i21] = 2;
                    Test.instanceCount *= i20;
                    iArr1[i19] = (int)76.566F;
                }
                i1 <<= i23;
                if (bFld) continue;
                i20 >>= i22;
                i23 += (int)f4;
                i24 = 2;
                do {
                    i1 -= (int)Test.instanceCount;
                    i18 = sFld;
                } while (--i24 > 0);
            }
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 by3 = " + i21 + "," + i22 + "," + by3);
        FuzzerUtils.out.println("f4 i23 i24 = " + Float.floatToIntBits(f4) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("fArr2 iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount sFld bFld = " + Test.instanceCount + "," + sFld + "," + (bFld ? 1 :
            0));
        FuzzerUtils.out.println("Test.lArrFld Test.byArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest byMeth
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
