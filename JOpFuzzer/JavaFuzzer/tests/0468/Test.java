// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static short sFld=15089;
    public static boolean bFld=true;
    public static double dFld=-88.48413;
    public static short sArrFld[]=new short[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)30028);
        FuzzerUtils.init(Test.byArrFld, (byte)-30);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        int i6=-51, i7=-134, i8=-228, i9=-22449, i10=-4981, i11=-1, iArr1[]=new int[N];
        byte by=9;
        float f1=124.772F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 134);
        FuzzerUtils.init(lArr, -2L);

        Test.instanceCount = i5;
        i5 <<= (int)-18632L;
        i6 = 1;
        while (++i6 < 365) {
            Test.instanceCount = by;
        }
        Test.sFld = (short)24731;
        for (f1 = 5; f1 < 150; ++f1) {
            for (i8 = 1; i8 < 11; i8++) {
                i7 = -66;
                Test.instanceCount = i5;
                for (i10 = 1; 2 > i10; ++i10) {
                    i11 = by;
                    i7 += (((i10 * i9) + i9) - i6);
                }
                Test.sFld |= (short)20585;
                iArr1 = iArr1;
            }
            lArr[(int)(f1)] -= i9;
        }
        vMeth1_check_sum += i5 + i6 + by + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth() {

        int i12=-13, i13=20757, i14=99, i15=253, i16=47851, i17=-2, iArr2[]=new int[N];
        float f2=-39.653F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr2, -36963);

        vMeth1(23756);
        for (i12 = 11; i12 < 197; i12++) {
            f2 = -10L;
            i13 = (int)f2;
            i13 += (i12 ^ i12);
        }
        for (i14 = 7; 131 > i14; i14++) {
            i13 *= i13;
            for (i16 = 1; 13 > i16; i16 += 2) {
                i15 *= i14;
                bArr[i16] = Test.bFld;
                if (i12 != 0) {
                }
                i13 = i13;
                iArr2 = FuzzerUtils.int1array(N, (int)-4);
                i13 -= (int)Test.instanceCount;
                iArr2[i14 + 1] &= i15;
            }
        }
        long meth_res = i12 + i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d, int i) {

        int i1=-71, i2=-1, i3=80, i4=-15, i18=-7, i19=-15350, iArr[]=new int[N];
        float f=37.97F, f3=1.375F;

        FuzzerUtils.init(iArr, -37894);

        d -= 2007293662L;
        for (i1 = 6; 386 > i1; ++i1) {
            for (i3 = 1; i3 < 4; ++i3) {
                i2 += i;
                f += ((--i4) + ((90 + (-1.307F + (iArr[i1]++))) * (i1 - 47205)));
            }
            i2 = (int)((lMeth() + i4) * i4);
            i = i2;
            for (f3 = 4; i1 < f3; f3--) {
                Test.sArrFld = Test.sArrFld;
                i19 = 1;
                while (++i19 < 1) {
                    byte by1=-93;
                    i4 <<= (int)Test.instanceCount;
                    Test.byArrFld[i19] = by1;
                    Test.instanceCount >>= i;
                    i2 -= by1;
                    i4 <<= i3;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) +
            Float.floatToIntBits(f3) + i18 + i19 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i20=16, iArr3[]=new int[N];
        float f4=-7.325F;

        FuzzerUtils.init(iArr3, -9);

        vMeth(Test.dFld, i20);
        Test.bFld = Test.bFld;
        iArr3[(-212 >>> 1) % N] >>= i20;
        f4 -= i20;

        FuzzerUtils.out.println("i20 f4 iArr3 = " + i20 + "," + Float.floatToIntBits(f4) + "," +
            FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.sArrFld Test.byArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
