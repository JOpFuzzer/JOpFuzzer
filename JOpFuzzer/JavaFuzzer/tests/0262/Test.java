// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-65L;
    public static short sFld=11419;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -384418741L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {


        Test.instanceCount -= Test.instanceCount;
        long meth_res = i5 + i6 + i7;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1) {

        int i2=-4, i3=-2, i4=7282, i8=-134, i9=-51092;
        double d1=1.118018;
        float f=-116.383F;
        boolean bArr[]=new boolean[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(sArr, (short)-29974);

        for (i2 = 10; 226 > i2; ++i2) {
            i4 = 1;
            do {
                if (bArr[i2 - 1] = ((d1 > (d1 * i3)) || bArr[i4 - 1])) {
                    Test.instanceCount += (i4 * i4);
                    i3 += i4;
                    i3 += (int)Test.instanceCount;
                } else {
                    vMeth1_check_sum += i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + i8 + i9 +
                        Float.floatToIntBits(f) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(sArr);
                    return;
                }
                i1 += i4;
            } while (++i4 < 7);
            i3 ^= (((i2 + -6) * iMeth(i3, i1, i1)) + -113);
            for (i8 = i2; i8 < 7; ++i8) {
                short s1=-9259;
                d1 = -15657;
                s1 += (short)-34;
                i3 += i4;
                f = 30902;
                Test.instanceCount = i8;
                sArr[i8] += (short)i9;
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + i8 + i9 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(short s, byte by, int i) {

        double d=-2.83784;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -165L);

        Test.instanceCount -= (i--);
        i *= (int)lArr[(-20182 >>> 1) % N];
        d += (i = (int)Test.instanceCount);
        vMeth1(i);
        vMeth_check_sum += s + by + i + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i10=-2, i11=-11, i12=10, i13=-137, i14=58, i15=9, i16=6011, i17=5, i18=11857, i19=-20375, iArr[]=new int[N];
        double d2=0.25323, d3=91.34847, dArr[]=new double[N];
        float f2=-82.51F, f3=51.720F, f4=-90.82F;

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(dArr, 16.109485);

        vMeth(Test.sFld, (byte)(61), i10);
        for (i11 = 14; 268 > i11; ++i11) {
            if (false) {
                i12 += (-9 + (i11 * i11));
                for (i13 = 99; i13 > i11; i13--) {
                    float f1=0.654F;
                    Test.lArrFld[i11] -= i10;
                    iArr[i11] = (int)f1;
                    try {
                        i10 = (i13 % iArr[i11]);
                        iArr[i13 - 1] = (i13 / -56);
                        i15 = (20780 % i14);
                    } catch (ArithmeticException a_e) {}
                }
                i14 *= Test.sFld;
            }
            i16 = 1;
            do {
                i14 += i11;
                for (d2 = 1; d2 < 1; ++d2) {
                    iArr[i16 - 1] = (int)d3;
                    i15 = (int)Test.instanceCount;
                    Test.instanceCount += i11;
                    i15 = i13;
                    i10 |= i10;
                }
                i10 *= (int)d3;
                Test.instanceCount = i11;
                Test.lArrFld = Test.lArrFld;
                f2 -= i11;
                i12 = (int)Test.instanceCount;
                d3 *= i15;
                dArr[i11] = i12;
            } while (++i16 < 99);
            for (f3 = 1; f3 < 99; ++f3) {
                for (f4 = 1; f4 < 2; f4++) {
                    i12 += 14;
                    i12 -= i14;
                    iArr[(int)(f3 - 1)] -= i10;
                    i18 += i17;
                }
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 d2 i17 = " + i16 + "," + Double.doubleToLongBits(d2) + "," + i17);
        FuzzerUtils.out.println("d3 f2 f3 = " + Double.doubleToLongBits(d3) + "," + Float.floatToIntBits(f2) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i18 f4 i19 = " + i18 + "," + Float.floatToIntBits(f4) + "," + i19);
        FuzzerUtils.out.println("iArr dArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.lArrFld = " + Test.instanceCount + "," + Test.sFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
