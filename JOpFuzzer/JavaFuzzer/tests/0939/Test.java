// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-39557127L;
    public float fFld=107.84F;
    public boolean bFld=false;
    public static double dFld=-29.119023;
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.lArrFld, 106L);
        FuzzerUtils.init(Test.iArrFld, 9);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7, short s, double d) {

        int i8=46, i9=-9956, i10=-67, i11=4, i12=222, iArr1[][]=new int[N][N];
        byte by=-56;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 86.307F);
        FuzzerUtils.init(iArr1, 12798);

        fArr[(-154 >>> 1) % N] += i7;
        i7 &= (int)Test.instanceCount;
        for (i8 = 5; i8 < 359; i8++) {
            for (i10 = 1; i10 < 5; ++i10) {
                switch ((((94 >>> 1) % 2) * 5) + 112) {
                case 118:
                    i7 -= (int)-6584035846723211687L;
                    i9 -= (int)Test.instanceCount;
                    break;
                case 114:
                    i7 += (i10 * i10);
                    iArr1[i8][i8 + 1] *= i10;
                    i9 = by;
                    break;
                default:
                    i12 = 1;
                    while (++i12 < 2) {
                        i7 ^= i11;
                        d -= -185;
                        i11 |= i7;
                        if (i12 != 0) {
                        }
                    }
                }
            }
        }
        long meth_res = i7 + s + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + by + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i3=-108, i4=107, i5=1, i6=0, i13=212, iArr[][]=new int[N][N];
        double d1=2.94978;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -109L);
        FuzzerUtils.init(iArr, -61200);

        for (i3 = 17; i3 < 301; ++i3) {
            for (i5 = 1; i5 < 6; i5++) {
                i4 = i5;
                lArr[i5] &= (iArr[i3][i5 - 1] - ((++iArr[i3 - 1][i5 - 1]) << iMeth(i6, (short)(-8827), d1)));
                i4 += (i5 | i3);
                iArr[i5 + 1][i5] += i3;
                i4 >>>= -12;
            }
            if (false) {
                i6 -= i5;
                i4 &= i6;
            } else if (b1) {
                Test.bArrFld[i3] = false;
                i13 = 1;
                while (++i13 < 6) {
                    i6 <<= i3;
                    iArr[i3][i3] += 2;
                    i4 = i6;
                }
                vMeth1_check_sum += i3 + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i13 + (b1 ? 1 : 0) +
                    FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                return;
            } else {
                i4 <<= -8804;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i13 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(boolean b) {

        int i14=-161, i15=0, i16=-42553, i17=52764, i18=53483, i19=-11, iArr2[]=new int[N];
        double d2=2.58388;

        FuzzerUtils.init(iArr2, 15023);

        vMeth1();
        for (i14 = 5; i14 < 182; ++i14) {
            i15 *= -42440;
            for (i16 = 1; i16 < 9; i16++) {
                for (i18 = i16; 2 > i18; ++i18) {
                    iArr2 = iArr2;
                }
            }
            i17 -= i18;
            i15 += i16;
            if (b) {
                i15 += (int)d2;
                if (b) break;
            } else if (b) {
                b = b;
                i19 += (((i14 * Test.instanceCount) + fFld) - i15);
            } else if (b) {
                i17 >>>= i15;
                i15 = i18;
            } else {
                d2 = i19;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=-7, i2=-8, i20=-1, i21=-6, i22=-64921, i23=1, i24=-7489, i25=86, i26=1;

        for (i = 8; i < 180; ++i) {
            i2 = 1;
            do {
                vMeth(bFld);
                Test.instanceCount += -207;
                i20 = 1;
                do {
                    Test.instanceCount += i2;
                    Test.dFld += i1;
                    bFld = bFld;
                    i1 += (((i20 * Test.instanceCount) + i2) - Test.instanceCount);
                    Test.instanceCount >>= 39266L;
                    i1 += (int)Test.instanceCount;
                    Test.instanceCount -= -6;
                } while (++i20 < 1);
                Test.instanceCount = i1;
                i1 += i20;
                switch (((i1 >>> 1) % 2) + 36) {
                case 36:
                    Test.lArrFld[i + 1] = i2;
                    if (false) break;
                    break;
                case 37:
                    for (i21 = 1; 1 > i21; ++i21) {
                        Test.iArrFld[i2][i + 1] = i;
                    }
                    i1 = i20;
                    i22 = (int)fFld;
                    break;
                }
                for (i23 = 1; i23 < 1; i23++) {
                    i24 += (i23 + i);
                }
            } while (++i2 < 146);
            i24 += (int)fFld;
            for (i25 = 146; 6 < i25; --i25) {
                i24 += (-57 + (i25 * i25));
                bFld = bFld;
                Test.iArrFld[i + 1][i25] = 29;
            }
            i22 ^= (int)Test.instanceCount;
            Test.instanceCount += Test.instanceCount;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 = " + i26);

        FuzzerUtils.out.println("Test.instanceCount fFld bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.bArrFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.bArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
