// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2624541834L;
    public static long lFld=-2199802378L;
    public static short sFld=6765;
    public static double dFld=-1.36662;
    public static volatile float fFld=0.507F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3608695968L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, short s, int i7) {

        int i8=-55994, i9=-240, i10=-93, i11=251, i12=56, i13=-84, iArr1[]=new int[N];
        float f1=-38.52F, fArr[]=new float[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, 55985);
        FuzzerUtils.init(fArr, 101.347F);

        for (i8 = 6; i8 < 162; ++i8) {
            double d=0.2314;
            d = i8;
            for (i10 = 10; i10 > i8; i10 -= 2) {
                Test.instanceCount = 8805808037690374991L;
                i9 = i11;
                f1 = i7;
                Test.instanceCount -= Test.lFld;
                i11 <<= i10;
                if (b1) {
                    d = i7;
                    i11 *= i9;
                    iArr1[i10] = (int)Test.lFld;
                } else {
                    for (i12 = 1; i12 < 1; i12++) {
                        f1 -= i13;
                        fArr[i12 + 1] = 21;
                    }
                }
            }
        }
        vMeth1_check_sum += l + s + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i12 + i13 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(float f) {

        int i5=57682, i6=-21, i14=5, i15=151, i16=-3, iArr2[]=new int[N];
        long l1=10833L;
        byte by=45;

        FuzzerUtils.init(iArr2, -155);

        i5 = 1;
        while (++i5 < 137) {
            f = (++i6);
            vMeth1(0L, Test.sFld, i5);
            for (l1 = 11; l1 > i5; --l1) {
                i14 += (int)(((l1 * i6) + i14) - i14);
                i6 = i5;
            }
            i14 += (i5 * i5);
            i6 = i6;
            for (i15 = 1; i15 < 11; i15++) {
                Test.sFld ^= (short)i5;
                i6 -= 166;
                Test.dFld += f;
                i14 += (i15 ^ Test.sFld);
            }
            i6 += (i5 - i16);
        }
        iArr2[(i5 >>> 1) % N] -= by;
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + l1 + i14 + i15 + i16 + by + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, boolean b, int i4) {

        int i17=12, i18=-62822, i19=12, i20=-34162, i21=-9, i22=9, i23=36;
        byte by1=12, by2=-122, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-122);

        iMeth(Test.fFld);
        for (i17 = 5; 314 > i17; ++i17) {
            Test.fFld -= i4;
            Test.dFld += i18;
            for (i19 = 1; i19 < 5; ++i19) {
                i18 += (i19 * Test.instanceCount);
                i3 -= by1;
                i4 = (int)Test.lFld;
                i3 = 19650;
                Test.fFld -= i17;
                Test.instanceCount = i19;
                Test.dFld = i21;
                for (i22 = i19; i22 < 2; ++i22) {
                    Test.fFld *= by2;
                    byArr[i17 + 1] -= (byte)Test.sFld;
                }
            }
        }
        vMeth_check_sum += i3 + (b ? 1 : 0) + i4 + i17 + i18 + i19 + i20 + by1 + i21 + i22 + i23 + by2 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-210, i1=7, i2=7, i24=-27124, i25=-11, i26=31835, i27=165, i28=185, i29=-30, i30=-13, i31=29082, i32=4,
            i33=39, iArr[]=new int[N], iArr3[]=new int[N];
        boolean b2=false;

        FuzzerUtils.init(iArr, -162);
        FuzzerUtils.init(iArr3, -12);

        iArr = (iArr = (iArr = (iArr = iArr)));
        i = (int)(-(Math.min(i, i) + Test.instanceCount));
        for (i1 = 3; 209 > i1; ++i1) {
            i += -89;
            vMeth(i2, b2, i2);
        }
        for (i24 = 3; i24 < 380; ++i24) {
            Test.lFld -= i;
            for (i26 = i24; i26 < 67; ++i26) {
                for (i28 = 1; i28 < 1; ++i28) {
                    Test.sFld >>= (short)i26;
                    Test.fFld -= 6733511151769824681L;
                    i29 -= i26;
                    Test.lFld *= i27;
                    Test.instanceCount /= (i | 1);
                    Test.instanceCount >>= i29;
                    i *= 136;
                }
                Test.lArrFld[i26 + 1] = i1;
                i = (int)8763728039382205725L;
                Test.instanceCount += (i26 | Test.instanceCount);
                Test.instanceCount += i26;
                Test.lFld = i2;
            }
            i2 += 83;
            for (i30 = 4; i30 < 67; i30++) {
                i31 /= (int)(i2 | 1);
                for (i32 = 1; i32 < 2; i32++) {
                    iArr3[i24 - 1] = i31;
                    i33 = (int)95L;
                    i29 += (((i32 * i32) + i28) - Test.lFld);
                    i2 -= (int)Test.dFld;
                    Test.fFld -= i25;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("b2 i24 i25 = " + (b2 ? 1 : 0) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 iArr = " + i32 + "," + i33 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.sFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.fFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
