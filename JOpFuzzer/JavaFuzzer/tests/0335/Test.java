// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2427455706L;
    public int iFld=177;
    public int iFld1=-11840;
    public static byte byFld=-24;
    public float fFld=-67.222F;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
        FuzzerUtils.init(Test.lArrFld, 17052L);
        FuzzerUtils.init(Test.fArrFld, 69.115F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5) {

        int i6=55, i7=55250, i8=41, i9=-93, i10=-6019;
        double d=38.44323;
        short s=-30614;
        float f1=-116.288F;
        boolean b=true;

        for (i6 = 386; i6 > 13; --i6) {
            i5 /= (int)(i5 | 1);
            Test.lArrFld[i6] /= (Test.instanceCount | 1);
            for (i8 = 1; 5 > i8; ++i8) {
                i9 -= (int)-1L;
                d *= i5;
                i9 = i8;
                Test.instanceCount = i6;
                Test.iArrFld[i6] *= s;
                for (f1 = 2; f1 > 1; --f1) {
                    Test.instanceCount += i6;
                    if (b) {
                        i7 |= -3;
                        d -= i7;
                        i7 += (int)Test.instanceCount;
                    } else if (true) {
                        Test.iArrFld[i6] += i7;
                    } else {
                        i10 -= i5;
                    }
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + s + Float.floatToIntBits(f1) + i10 + (b ?
            1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i3=-60, i4=7, i11=11, i12=-192, i13=8;
        boolean b1=true;
        float f2=-1.618F;

        for (i3 = 10; i3 < 207; ++i3) {
            double d1=32.46611;
            Test.instanceCount -= ((iMeth(-34) * -5) - 1959);
            if (b1) continue;
            switch (((i3 % 2) * 5) + 45) {
            case 50:
                Test.instanceCount += i3;
                break;
            case 52:
                Test.iArrFld = Test.iArrFld;
                for (f2 = 1; f2 < 8; ++f2) {
                    Test.instanceCount += (long)(((f2 * i11) + Test.instanceCount) - Test.instanceCount);
                    for (i12 = 1; i12 < 2; ++i12) {
                        Test.iArrFld[(int)(f2 + 1)] = i11;
                        i13 = (int)2.4F;
                        Test.iArrFld[i12 + 1] += i13;
                        Test.instanceCount = -12;
                    }
                }
                break;
            default:
                Test.iArrFld[i3] -= i12;
                d1 -= -1.92F;
            }
        }
        vMeth1_check_sum += i3 + i4 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) + i11 + i12 + i13;
    }

    public static void vMeth(long l) {

        float f=1.989F, f3=109.931F;
        int i=-55494, i1=-89, i2=26687, i14=0;

        for (f = 348; f > 9; f--) {
            for (i1 = 1; i1 < 5; ++i1) {
                try {
                    i = (i2 % i2);
                    i2 = (-182 / i1);
                    i2 = (i % i1);
                } catch (ArithmeticException a_e) {}
                Test.byFld *= (byte)(i--);
                switch ((int)((f % 2) + 58)) {
                case 58:
                    i += (int)f;
                    i -= i1;
                    i += (i1 | Test.instanceCount);
                    break;
                case 59:
                    vMeth1();
                    i2 += -60831;
                    f3 = -15064;
                    i2 <<= (int)-85L;
                    break;
                }
                i14 = 1;
                do {
                    Test.instanceCount = i2;
                    Test.instanceCount += (((i14 * Test.instanceCount) + Test.instanceCount) - i1);
                } while (++i14 < 2);
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i + i1 + i2 + Float.floatToIntBits(f3) + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=48402, i16=-53, i17=40105, i18=1, i19=7, i20=246, i21=20195, i22=-2, iArr[]=new int[N];
        double d2=0.52603;
        short s1=-31081;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5L);
        FuzzerUtils.init(iArr, 41978);

        Test.iArrFld[(iFld >>> 1) % N] += (int)(Test.instanceCount *= lArr[(iFld1 >>> 1) % N]);
        vMeth(Test.instanceCount);
        Test.instanceCount = iFld;
        Test.fArrFld[(176 >>> 1) % N] = FuzzerUtils.float1array(N, (float)26.29F);
        for (i15 = 13; i15 < 275; i15++) {
            Test.fArrFld[i15 - 1][i15] *= -110L;
            for (i17 = i15; i17 < 96; i17++) {
                for (i19 = 1; i19 < 1; i19++) {
                    iFld = i21;
                    switch (((i17 % 1) * 5) + 11) {
                    case 13:
                        iFld1 -= 18847;
                        i16 &= i17;
                        Test.instanceCount += (i19 * i19);
                        break;
                    default:
                        d2 += i19;
                        Test.instanceCount += i19;
                        i18 <<= (int)Test.instanceCount;
                        d2 = i18;
                    }
                    iArr = FuzzerUtils.int1array(N, (int)40443);
                }
                i22 = 1;
                do {
                    s1 = (short)i15;
                    Test.instanceCount += (((i22 * fFld) + i20) - i17);
                    iFld -= (int)fFld;
                    i21 = (int)fFld;
                    iFld = (int)-99.604F;
                    Test.byFld = (byte)i22;
                    switch ((((i20 >>> 1) % 1) * 5) + 79) {
                    case 83:
                        Test.instanceCount += (-57402 + (i22 * i22));
                        iFld -= (int)Test.instanceCount;
                        break;
                    default:
                        Test.instanceCount = iFld1;
                        iFld *= i19;
                    }
                } while (++i22 < 1);
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d2 i22 = " + i21 + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("s1 lArr iArr = " + s1 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount iFld iFld1 = " + Test.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test.byFld fFld Test.iArrFld = " + Test.byFld + "," + Float.floatToIntBits(fFld) + ","
            + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
