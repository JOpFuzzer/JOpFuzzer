// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-71L;
    public static float fFld=-1.207F;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(short s1, int i5) {

        int i6=-45924, i7=58419, i8=-4, i9=-50313, i10=12348, i11=-6, i12=-60182, iArr[][]=new int[N][N];
        boolean b=false;
        double d1=0.59837;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 0.525F);
        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(iArr, 116);

        for (i6 = 9; i6 < 212; ++i6) {
            i7 -= (int)Test.instanceCount;
            fArr[i6 + 1] = i7;
        }
        i7 >>= i7;
        Test.instanceCount -= Test.instanceCount;
        for (i8 = 1; i8 < 178; ++i8) {
            lArr[i8 - 1] = 35688;
            i7 >>= i9;
            iArr[i8 + 1][i8 + 1] >>= i5;
            i10 = 1;
            while (++i10 < 9) {
                i5 += (((i10 * s1) + i8) - i9);
                switch (((i9 >>> 1) % 2) + 105) {
                case 105:
                    for (i11 = i10; 1 > i11; i11++) {
                        b = b;
                    }
                    d1 -= i11;
                    break;
                case 106:
                    i12 *= (int)-1660183602L;
                    break;
                default:
                    i7 -= i9;
                }
            }
        }
        long meth_res = s1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2, byte by, long l) {

        int i3=-1, i4=4, i13=-9, i14=190, i15=14608, iArr1[]=new int[N];
        short s=-27647;
        double d2=-72.123312;
        float f1=-62.302F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -10);
        FuzzerUtils.init(lArr1, -165867827980772876L);

        for (i3 = 19; i3 < 360; ++i3) {
            i4 += (((i3 * l) + s) - i3);
            l = (++i4);
            i2 -= (++i4);
            iMeth(s, -168);
            i13 = 1;
            while (++i13 < 5) {
                iArr1[i3] <<= i2;
            }
            i2 *= i3;
            for (d2 = 1; d2 < 5; ++d2) {
                lArr1[(int)(d2)] = l;
                i4 += i3;
                i2 += (int)(((d2 * Test.instanceCount) + i14) - i3);
            }
            i15 = 1;
            while (++i15 < 5) {
                l += (165 + (i15 * i15));
                f1 = Test.instanceCount;
            }
        }
        vMeth1_check_sum += i2 + by + l + i3 + i4 + s + i13 + Double.doubleToLongBits(d2) + i14 + i15 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(float f, int i1) {

        double d=101.100997;
        byte by1=107;

        d -= 6088795148319947281L;
        vMeth1(i1, by1, Test.instanceCount);
        d -= 33089L;
        i1 += (int)-7L;
        f -= -244L;
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + Double.doubleToLongBits(d) + by1;
    }

    public void mainTest(String[] strArr1) {

        int i=40391, i16=24075, i17=-11444, i18=-1, i19=5, i20=-1, i21=61029, i22=-24418, i23=103, i24=2443;
        long l1=52387L;
        short s2=-27108, sArr[]=new short[N];
        double d3=88.127869;

        FuzzerUtils.init(sArr, (short)6465);

        i *= i;
        i &= Math.abs(i * sArr[(-63116 >>> 1) % N]);
        vMeth(Test.fFld, i);
        i = (int)Test.fFld;
        for (i16 = 5; i16 < 221; ++i16) {
            for (l1 = 116; i16 < l1; l1--) {
                for (i19 = 1; 1 > i19; i19++) {
                    if (Test.bFld) {
                        i18 = (int)52160L;
                    } else if (Test.bFld) {
                        i18 += (i19 * i19);
                    }
                    s2 >>= (short)-3134435145L;
                    i += i20;
                    i17 = i18;
                    Test.fFld += i16;
                }
                Test.iArrFld[i16 + 1] = i16;
                i18 += (int)(l1 + Test.instanceCount);
                for (i21 = 1; i21 < 1; ++i21) {
                    Test.instanceCount >>= i16;
                }
                for (i23 = 1; i23 < 1; i23++) {
                    byte by2=99;
                    Test.iArrFld[i23 - 1] *= i18;
                    try {
                        i = (i24 % 48159);
                        i18 = (18625 / Test.iArrFld[i23]);
                        i18 = (i22 % 13076);
                    } catch (ArithmeticException a_e) {}
                    i22 += i23;
                    i24 += i18;
                    switch ((int)(((l1 % 2) * 5) + 10)) {
                    case 16:
                        i += (i23 * i23);
                        i += (((i23 * i18) + by2) - i21);
                        break;
                    case 18:
                        i *= i22;
                        Test.fFld = (float)d3;
                        Test.fFld += i23;
                        i += (i23 + i20);
                        break;
                    default:
                        i24 -= i16;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("l1 i18 i19 = " + l1 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 s2 i21 = " + i20 + "," + s2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d3 sArr = " + Double.doubleToLongBits(d3) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
