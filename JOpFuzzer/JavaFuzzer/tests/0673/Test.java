// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3429L;
    public static int iFld=34495;
    public static int iFld1=2;
    public static byte byFld=-72;
    public static boolean bFld=false;
    public short sFld=16859;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
        FuzzerUtils.init(Test.sArrFld, (short)-20571);
        FuzzerUtils.init(Test.dArrFld, -69.49145);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=0, i7=14, i8=132, i9=65301, i10=54205, iArr1[]=new int[N];
        byte by1=-99;
        short s1=-20880;
        double d=-1.14486;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -155);
        FuzzerUtils.init(lArr1, 1910115690L);

        i6 = 1;
        do {
            switch (((i6 >>> 1) % 8) + 1) {
            case 1:
                switch (((i6 % 1) * 5) + 113) {
                case 116:
                    i7 = 1;
                    while (++i7 < 7) {
                        Test.iFld += (i7 * i7);
                        Test.iFld <<= i8;
                        by1 = (byte)i8;
                        Test.instanceCount = i6;
                        Test.iFld -= i7;
                        for (i9 = 1; 1 > i9; i9 += 2) {
                            float f=72.192F;
                            switch (((i7 % 9) * 5) + 6) {
                            case 43:
                                try {
                                    i10 = (58378 % Test.iArrFld[i6 - 1]);
                                    Test.iArrFld[i9 - 1] = (-40072 / i6);
                                    i10 = (Test.iFld / i7);
                                } catch (ArithmeticException a_e) {}
                                i8 *= 0;
                                by1 += (byte)i9;
                                Test.iFld |= (int)Test.instanceCount;
                            case 36:
                                Test.iFld >>= s1;
                                break;
                            case 7:
                                i8 = 0;
                                break;
                            case 24:
                                d += 0;
                                break;
                            case 33:
                                i10 -= i9;
                            case 41:
                                Test.iArrFld = iArr1;
                                break;
                            case 45:
                                f = 56L;
                            case 13:
                                if (false) continue;
                                break;
                            case 16:
                                Test.instanceCount = 12;
                                break;
                            default:
                                i10 += (((i9 * i10) + i7) - s1);
                            }
                        }
                    }
                    break;
                }
                break;
            case 2:
                Test.instanceCount += i9;
                break;
            case 3:
                Test.iFld >>= i6;
                break;
            case 4:
                lArr1[i6 + 1] = (long)d;
                break;
            case 5:
                try {
                    Test.iFld = (i8 / 496924374);
                    Test.iFld = (i10 / -34191);
                    i8 = (211 / iArr1[i6 + 1]);
                } catch (ArithmeticException a_e) {}
                break;
            case 6:
                Test.instanceCount = i8;
            case 7:
                i10 = i6;
                break;
            case 8:
                d += Test.iFld1;
                break;
            }
        } while (++i6 < 224);
        vMeth1_check_sum += i6 + i7 + i8 + by1 + i9 + i10 + s1 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i2, int i3, long l1) {

        int i4=12, i5=-10, i11=34601, i12=-50, i13=54463, iArr[]=new int[N];
        byte by=6, byArr[]=new byte[N];
        boolean b=false;
        short s2=-9077;

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(byArr, (byte)94);

        for (i4 = 6; i4 < 323; ++i4) {
            by /= (byte)94;
            try {
                i3 = (iArr[i4] % -283565921);
                iArr[i4 - 1] = (i5 / 139);
                i3 = (iArr[i4 + 1] / i5);
            } catch (ArithmeticException a_e) {}
            vMeth1();
            i2 = i2;
            i11 = 1;
            do {
                l1 += i11;
                for (i12 = 1; i12 < 1; i12++) {
                    switch ((i12 % 1) + 88) {
                    case 88:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    }
                    i3 -= (int)l1;
                    if (b) break;
                    s2 <<= (short)i4;
                    Test.iFld += 3;
                    byArr[i11 + 1] = (byte)i4;
                }
            } while (++i11 < 5);
        }
        vMeth_check_sum += i2 + i3 + l1 + i4 + i5 + by + i11 + i12 + i13 + (b ? 1 : 0) + s2 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i1, short s, long l) {

        int i14=2, i15=4, i16=-10, i17=-9, i18=-21695, i19=-10;
        float f1=-17.112F;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, 2267611977L);

        if (Test.bFld) {
            if (Test.bFld) {
                vMeth(Test.iFld, i1, 47151L);
                for (i14 = 11; i14 < 183; i14++) {
                    for (i16 = 9; i16 > 1; i16 -= 2) {
                        l *= (long)f1;
                        for (i18 = i16; i18 < 3; ++i18) {
                            Test.instanceCount = 0;
                            i1 -= Test.iFld1;
                            l = 5035561213178177187L;
                            l = Test.iFld1;
                            i15 /= (int)(Test.iFld1 | 1);
                            lArr2[i16][i18 + 1] *= Test.iFld;
                            Test.byFld += (byte)(i18 * i18);
                            Test.sArrFld[i14 + 1] >>= (short)Test.iFld1;
                        }
                    }
                }
            } else if (Test.bFld) {
                Test.iFld = -2;
            } else if (Test.bFld) {
                i17 -= i16;
            } else {
                Test.byFld -= (byte)i17;
            }
        } else if (Test.bFld) {
            Test.iArrFld[(i16 >>> 1) % N] -= (int)-22.108372;
        } else if (Test.bFld) {
            Test.byFld -= (byte)i18;
        } else {
            i17 -= i1;
        }
        long meth_res = i1 + s + l + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) + i18 + i19 +
            FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-245, i22=7, i23=-186, i24=15906, i25=236;
        double d1=-53.64142;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)11377);
        FuzzerUtils.init(lArr, -14L);

        sArr = sArr;
        i &= (int)(lArr[(i >>> 1) % N] >>> ((-33947L * (i + i)) * iMeth(Test.iFld1, sFld, -248L)));
        for (int i20 : Test.iArrFld) {
            lArr[(i >>> 1) % N] += Test.iFld1;
            Test.iFld1 = (int)Test.instanceCount;
            Test.instanceCount -= 223;
            Test.iFld -= 4;
        }
        for (i22 = 10; i22 < 368; ++i22) {
            sFld = Test.byFld;
            d1 = Test.iFld;
            d1 -= -94;
            Test.byFld -= (byte)-223L;
            sFld += (short)(i22 * Test.iFld1);
            Test.instanceCount += (((i22 * i) + Test.instanceCount) - Test.instanceCount);
            Test.iFld += (((i22 * Test.iFld) + Test.instanceCount) - i23);
            Test.iFld = i22;
            for (i24 = 1; 70 > i24; ++i24) {
                Test.iFld1 += (((i24 * Test.iFld) + i23) - i22);
                Test.dArrFld[i22 + 1] = d1;
                i = (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i22 i23 = " + i + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d1 i24 i25 = " + Double.doubleToLongBits(d1) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("sArr lArr = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("Test.byFld Test.bFld sFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," + sFld);
        FuzzerUtils.out.println("Test.iArrFld Test.sArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.sArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
