// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-4007465329L;
    public static float fFld=-1.946F;
    public static byte byFld=-14;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i7, int i8) {

        int i9=0, i10=37472, i11=75, i12=-24378, i13=180, i14=54763, i15=20709, i16=56, i17=-7, iArr1[]=new int[N];
        byte by=39;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 181L);
        FuzzerUtils.init(iArr1, -10);

        Test.instanceCount >>= i8;
        for (i9 = 7; i9 < 353; ++i9) {
            i7 = i9;
            i8 += (int)(3075920874L + (i9 * i9));
            for (i11 = 1; i11 < 5; ++i11) {
                i10 = (int)Test.fFld;
                for (i13 = 1; 2 > i13; ++i13) {
                    i14 -= i8;
                    i15 = (int)Test.instanceCount;
                    i12 -= i12;
                    lArr1[i9 - 1] = by;
                }
                for (i16 = 1; i16 < 2; i16++) {
                    iArr1[i9] = i15;
                    b = true;
                    i7 /= (int)(i15 | 1);
                }
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + by + i16 + i17 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i5, int i6) {

        int i18=-7, i19=-124, i20=1, i21=-102, i22=54871, i23=-7;
        float f=89.208F;
        boolean b1=false;
        short s=-11601;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12L);

        if (b1) {
            lArr[(i5 >>> 1) % N] -= iMeth1(i5, i6);
            for (i18 = 8; i18 < 129; ++i18) {
                for (i20 = 1; 13 > i20; ++i20) {
                    for (i22 = 1; i22 < 2; i22 += 3) {
                        i21 <<= i23;
                        switch (((i19 >>> 1) % 6) + 127) {
                        case 127:
                            f = -174;
                            i6 = (int)Test.instanceCount;
                            if (b1) break;
                            break;
                        case 128:
                        case 129:
                            i6 = i6;
                            i19 -= (int)Test.instanceCount;
                        case 130:
                            i19 += i22;
                        case 131:
                            i5 += (i22 + i19);
                            Test.instanceCount *= i21;
                            break;
                        case 132:
                            if (i23 != 0) {
                            }
                            break;
                        default:
                            f = i21;
                        }
                    }
                }
            }
        } else {
            s *= (short)Test.fFld;
        }
        long meth_res = i5 + i6 + i18 + i19 + i20 + i21 + i22 + i23 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + s +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l1) {

        int i1=-29593, i2=-21233, i3=0, i4=-35, i24=-11, i25=148, iArr[]=new int[N];
        byte by1=49;
        boolean b2=true;

        FuzzerUtils.init(iArr, -157);

        for (i1 = 8; i1 < 178; i1 += 3) {
            i2 = (i2 = (iArr[i1]--));
            for (i3 = 1; i3 < 27; i3++) {
                iArr[i3 + 1] = (i3 * (iMeth(i2, -62066) - i1));
                for (i24 = 1; i24 < 2; i24++) {
                    double d1=-5.65947;
                    i25 -= -243;
                    i4 += i1;
                    if (b2) {
                        iArr[i24 + 1] >>>= i3;
                        Test.fFld = i25;
                        l1 += (long)Test.fFld;
                        i25 -= (int)d1;
                    } else if (b2) {
                        i2 |= (int)Test.instanceCount;
                        i25 = -22939;
                        i25 <<= i24;
                    } else if (b2) {
                        by1 = (byte)i2;
                    } else {
                        i2 *= (int)Test.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += l1 + i1 + i2 + i3 + i4 + i24 + i25 + by1 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        long l=9048401085214712692L, lArr2[]=new long[N];
        int i=36894, i26=183, i27=-11, i28=-33103, i29=185, i30=45947, iArr2[]=new int[N];
        double d=2.116289, dArr[]=new double[N];
        boolean b3=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -45826);
        FuzzerUtils.init(dArr, 1.69448);
        FuzzerUtils.init(lArr2, -3421054334817978386L);
        FuzzerUtils.init(fArr, 0.124F);

        for (l = 17; l < 327; l++) {
            d -= l;
            vMeth(Test.instanceCount);
            i = i;
            i26 = 1;
            do {
                iArr2[(int)(l - 1)] >>>= i;
                if (b3) {
                    d += i26;
                }
                if (b3) {
                    dArr[(int)(l - 1)] = l;
                    i += (((i26 * i) + i) - l);
                }
            } while (++i26 < 81);
            Test.byFld += (byte)(l + Test.instanceCount);
            lArr2[(int)(l)] += (long)Test.fFld;
            iArr2[(int)(l - 1)] = (int)l;
            if (b3) {
                i = (int)24L;
                for (i27 = 4; i27 < 81; ++i27) {
                    i28 -= (int)l;
                    Test.instanceCount += i26;
                    i28 += 24141;
                    i *= (int)3275540384L;
                    fArr = fArr;
                }
                i28 += i27;
                Test.byFld ^= (byte)i;
            }
        }
        i >>>= i26;
        d -= l;
        i28 = i28;
        for (i29 = 9; 177 > i29; i29++) {
            Test.fFld -= i27;
            Test.instanceCount >>>= i27;
        }

        FuzzerUtils.out.println("l i d = " + l + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i26 b3 i27 = " + i26 + "," + (b3 ? 1 : 0) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("iArr2 dArr lArr2 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
