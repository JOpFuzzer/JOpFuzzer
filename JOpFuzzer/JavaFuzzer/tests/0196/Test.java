// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public int iFld=40634;
    public static double dFld=52.72897;
    public static short sFld=2966;
    public static volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=9, i3=-4196, i4=61780, i5=-13331, iArr[]=new int[N];
        boolean b=true;
        float f=-79.641F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 26484);
        FuzzerUtils.init(lArr, -6L);

        for (i2 = 9; i2 < 297; ++i2) {
            i3 = i2;
            for (i4 = 1; i4 < 6; ++i4) {
                Test.dFld += i2;
                i3 = i3;
                Test.dFld = Test.instanceCount;
                switch ((i4 % 5) + 3) {
                case 3:
                    if (b) {
                        iArr = iArr;
                        if (b) break;
                        f *= i4;
                        lArr[i4 + 1] |= Test.sFld;
                    } else {
                        i5 = i4;
                    }
                    break;
                case 4:
                    try {
                        i3 = (26314 / i5);
                        i3 = (-161 / i5);
                        i3 = (i5 % 194);
                    } catch (ArithmeticException a_e) {}
                case 5:
                    i5 += (i4 + i3);
                    break;
                case 6:
                    i5 = i2;
                    break;
                case 7:
                    i3 = i3;
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l) {

        int i=-11, i1=-8100, i6=24791, i7=78, iArr1[]=new int[N];
        double d=0.29236;
        float f1=-61.484F, fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 218);
        FuzzerUtils.init(fArr, 0.615F);

        for (i = 11; i < 178; i++) {
            vMeth2();
            l += 85;
            i6 = 1;
            while ((i6 += 3) < 9) {
                for (d = 1; d < 3; ++d) {
                    i1 += i1;
                    f1 += 14;
                    switch ((int)((d % 4) + 27)) {
                    case 27:
                        i7 *= i;
                        break;
                    case 28:
                        iArr1[i6 + 1] += i1;
                        i1 *= i6;
                        break;
                    case 29:
                        l += (long)d;
                        fArr[(int)(d)] *= (float)d;
                        iArr1[i + 1] *= i7;
                    case 30:
                        iArr1[i6 - 1] = (int)Test.dFld;
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i + i1 + i6 + Double.doubleToLongBits(d) + i7 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i8=7, i9=1, i10=-11, i11=-80, i12=-155, i13=-13940, i14=160, i15=-3;
        boolean b1=false;

        vMeth1(Test.instanceCount);
        Test.iArrFld[(i8 >>> 1) % N][(i8 >>> 1) % N] *= (int)Test.instanceCount;
        for (i9 = 390; i9 > 16; --i9) {
            if (b1) break;
            if (b1) break;
            for (i11 = i9; i11 < 5; ++i11) {
                i12 = (int)Test.instanceCount;
                Test.instanceCount %= (Test.instanceCount | 1);
                i12 = i12;
                for (i13 = 1; i13 < 1; ++i13) {
                    try {
                        Test.iArrFld[i11 - 1][i9] = (Test.iArrFld[i11][i9 + 1] / i12);
                        i10 = (-58050 / i9);
                        i10 = (-2083579383 % i11);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount /= (i10 | 1);
                    i8 = i13;
                }
            }
            Test.instanceCount += i15;
            i10 += Test.sFld;
        }
        vMeth_check_sum += i8 + i9 + i10 + (b1 ? 1 : 0) + i11 + i12 + i13 + i14 + i15;
    }

    public void mainTest(String[] strArr1) {


        iFld >>>= iFld;
        vMeth();
        iFld = iFld;


        FuzzerUtils.out.println("Test.instanceCount iFld Test.dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.sFld Test.iArrFld = " + Test.sFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
