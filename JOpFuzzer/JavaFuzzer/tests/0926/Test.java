// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1L;
    public static volatile int iFld=-8;
    public static boolean bFld=false;
    public static float fArrFld[][]=new float[N][N];
    public static volatile byte byArrFld[]=new byte[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.387F);
        FuzzerUtils.init(Test.byArrFld, (byte)90);
        FuzzerUtils.init(Test.sArrFld, (short)28000);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i9, long l, int i10) {

        int i11=56, i12=129, i13=14, i14=-12, i15=-22226, iArr1[]=new int[N];
        short s1=24622;
        byte by=-9;
        boolean b=false;
        double d=-2.86201;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 5);
        FuzzerUtils.init(lArr, -6778781824096249854L);

        Test.sArrFld[(i9 >>> 1) % N] /= (short)(i9 | 1);
        i10 += -5;
        for (i11 = 364; i11 > 14; i11--) {
            i9 -= i10;
            i13 = i12;
            s1 = (short)l;
            i13 += (i11 * i12);
            switch ((((-129 >>> 1) % 1) * 5) + 101) {
            case 106:
            default:
                i13 = by;
                b = b;
            }
        }
        for (i14 = 12; i14 < 192; i14 += 3) {
            l = (long)d;
            iArr1[i14] += (int)Test.instanceCount;
            lArr[i14 - 1] = 13;
            Test.instanceCount += i14;
        }
        long meth_res = i9 + l + i10 + i11 + i12 + i13 + s1 + by + (b ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i7, int i8) {


        Test.instanceCount = (long)fMeth(i8, Test.instanceCount, -28639);
        long meth_res = i7 + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=37049, i4=-7, i5=-80, i16=7, i17=-55874, iArr[][]=new int[N][N];
        short s=-12401;
        boolean b1=false;
        byte by1=0;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 6);
        FuzzerUtils.init(fArr, 1.753F);

        Test.fArrFld[(i3 >>> 1) % N][(i1 >>> 1) % N] -= (i2++);
        i4 = 1;
        do {
            i5 = 1;
            while (++i5 < 5) {
                int i6=-10;
                i2 = (int)(24.272F * (Integer.reverseBytes(i5) + (i - s)));
                i = i1;
                Test.instanceCount <<= (i6--);
            }
        } while (++i4 < 335);
        Test.byArrFld[(i3 >>> 1) % N] = (byte)(((++iArr[(i >>> 1) % N][(i1 >>> 1) % N]) - iMeth(37774, i1)) + i1);
        s += (short)i5;
        for (float f : fArr) {
            double d1=110.78162;
            i2 *= (int)d1;
            Test.instanceCount = (long)f;
            b1 = b1;
            for (i16 = 1; i16 < 4; ++i16) {
                Test.instanceCount = by1;
                i2 = i2;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + s + (b1 ? 1 : 0) + i16 + i17 + by1 + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i18=-27641, i19=87, i20=-135, i21=-54603, i22=1, i23=9, i24=0, iArr2[]=new int[N];
        double d2=0.125967, d3=-2.51287;
        float f1=-107.563F;

        FuzzerUtils.init(iArr2, 54);

        vMeth(Test.iFld, Test.iFld, Test.iFld);
        Test.sArrFld[(Test.iFld >>> 1) % N] >>= (short)Test.iFld;
        for (i18 = 5; i18 < 373; ++i18) {
            i19 *= i18;
            i19 += Test.iFld;
            d2 = 1;
            while (++d2 < 68) {
                for (i20 = (int)(d2); i20 < 1; i20++) {
                    i21 *= Test.iFld;
                    i19 ^= (int)Test.instanceCount;
                }
            }
            i22 = 1;
            while (++i22 < 68) {
                iArr2[i22 + 1] = i22;
                for (i23 = 1; i23 < 1; i23++) {
                    Test.iFld += (i23 * i23);
                    iArr2[i18 - 1] = Test.iFld;
                    if (Test.bFld) {
                        switch ((i23 % 10) + 29) {
                        case 29:
                            Test.iFld += (4 + (i23 * i23));
                            Test.fArrFld[i22 + 1][i23 - 1] += i23;
                            i19 += (i23 * i23);
                            break;
                        case 30:
                            Test.instanceCount = i21;
                            i24 += (((i23 * i24) + Test.instanceCount) - i19);
                            i19 += i20;
                            break;
                        case 31:
                        case 32:
                            i21 *= (int)d2;
                            break;
                        case 33:
                            Test.iFld += (i23 | i20);
                            iArr2[i18 - 1] *= 4;
                            break;
                        case 34:
                            d3 = i20;
                            f1 += Test.instanceCount;
                            d3 += d2;
                        case 35:
                            iArr2[i23 + 1] -= Test.iFld;
                            Test.iFld += (((i23 * i19) + i18) - i18);
                            break;
                        case 36:
                            Test.instanceCount >>= i19;
                            break;
                        case 37:
                            Test.iFld += i23;
                            break;
                        case 38:
                            Test.instanceCount *= (long)f1;
                            break;
                        default:
                            Test.iFld *= (int)564576331L;
                        }
                    } else if (Test.bFld) {
                        Test.instanceCount += (((i23 * Test.instanceCount) + Test.instanceCount) - i20);
                    } else {
                        i19 = i22;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 d2 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 d3 = " + i23 + "," + i24 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("f1 iArr2 = " + Float.floatToIntBits(f1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fArrFld Test.byArrFld Test.sArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.byArrFld) +
            "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
