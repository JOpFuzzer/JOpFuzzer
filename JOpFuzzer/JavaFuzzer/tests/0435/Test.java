// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8404903163171405303L;
    public static float fFld=24.647F;
    public static byte byFld=74;
    public static int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 82);
        FuzzerUtils.init(Test.lArrFld, 40L);
    }

    public static long sMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i8=-20485, i9=-114, i10=13, i11=-4, i12=-26827, i13=-13083, i14=42216;
        long l1=-246L, l2=-155L, l3=-7130847271849020966L;
        boolean b1=true;
        float f1=-66.942F;
        double d1=3.2753;

        for (i8 = 8; i8 < 260; i8++) {
            for (l1 = 6; l1 > i8; l1 -= 3) {
                i9 += (-2 + (l1 * l1));
                b1 = b1;
            }
            i10 *= i11;
            f1 += (float)-21.129709;
            for (i12 = 1; 6 > i12; i12++) {
                if (false) continue;
                l2 = 4;
                i9 = (int)d1;
                for (l3 = 1; l3 < 2; l3++) {
                    switch (((i8 % 2) * 5) + 19) {
                    case 26:
                        i13 += (int)d1;
                        i11 += (int)f1;
                        l2 += (((l3 * i14) + l1) - i14);
                        break;
                    case 28:
                        i11 ^= (int)l2;
                        break;
                    default:
                        i10 *= 37;
                    }
                }
            }
        }
        long meth_res = i8 + i9 + l1 + i10 + (b1 ? 1 : 0) + i11 + Float.floatToIntBits(f1) + i12 + i13 + l2 +
            Double.doubleToLongBits(d1) + l3 + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(double d, long l) {

        int i7=11, i16=76, i17=195, iArr1[]=new int[N];
        boolean b2=false;

        FuzzerUtils.init(iArr1, -9);

        i7 = 1;
        while (++i7 < 379) {
            int i15=-40840;
            if (b2) {
                l = Math.max((i7 * i7) << i7, (int)(iMeth() >> Test.instanceCount));
                i15 += (int)Test.fFld;
            } else if (b2) {
                i15 <<= (int)1062904284L;
            }
            Test.iArrFld[i7 - 1][(i15 >>> 1) % N] >>= (int)l;
            if (false) continue;
        }
        Test.lArrFld[(i7 >>> 1) % N] <<= l;
        for (i16 = 17; 382 > i16; ++i16) {
            i17 <<= 19;
        }
        if (true) {
            for (int i18 : iArr1) {
                Test.fFld *= i16;
                i17 = (int)Test.instanceCount;
                try {
                    i18 = (-28716 / i16);
                    i17 = (i16 / 440822558);
                    Test.iArrFld[(i16 >>> 1) % N][(i7 >>> 1) % N] = (-927093629 / Test.iArrFld[(i7 >>> 1) % N][(-46825
                        >>> 1) % N]);
                } catch (ArithmeticException a_e) {}
            }
        } else {
            i17 <<= i7;
        }
        long meth_res = Double.doubleToLongBits(d) + l + i7 + (b2 ? 1 : 0) + i16 + i17 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static short sMeth(int i6) {

        short s=20460;
        double d2=0.62018;
        int i19=23, i20=-6;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)122);

        i6 -= byArr[(i6 >>> 1) % N];
        s += (short)dMeth(d2, Test.instanceCount);
        for (i19 = 5; i19 < 394; i19++) {
            i20 += (((i19 * Test.instanceCount) + Test.instanceCount) - i6);
        }
        i6 ^= (int)Test.instanceCount;
        long meth_res = i6 + s + Double.doubleToLongBits(d2) + i19 + i20 + FuzzerUtils.checkSum(byArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i1=3128, i2=28132, i3=-61087, i4=63652, i5=10, i21=-5, iArr[][]=new int[N][N];
        float f=2.364F;
        short s1=-2734;
        double d3=1.114054;

        FuzzerUtils.init(iArr, -54547);

        for (i = 7; 227 > i; ++i) {
            f = (i1 + i1);
            for (i2 = 114; i2 > 7; i2--) {
                i1 <<= (int)(i3 + (Test.instanceCount++));
                for (i4 = i2; i4 < 2; ++i4) {
                    boolean b=false;
                    b = (i1 != ((++iArr[i + 1][i]) - i4));
                    i3 += (i3 = sMeth(i5));
                    i5 <<= i3;
                    i3 = i;
                    s1 += (short)i4;
                    if (true) continue;
                    i5 *= s1;
                    i1 = (int)-143L;
                }
                Test.instanceCount += (57 + (i2 * i2));
                switch (((i3 >>> 1) % 1) + 100) {
                case 100:
                    iArr[i][i2] += i3;
                    break;
                }
                d3 -= Test.fFld;
                i21 = 1;
                while (++i21 < 2) {
                    iArr[i2 - 1][i2 + 1] = (int)Test.instanceCount;
                    iArr[i][i21 + 1] *= (int)f;
                    iArr[i21 + 1][i + 1] = (int)-8359929956183122052L;
                    i1 = Test.byFld;
                    d3 *= 46.35279;
                    Test.instanceCount += i21;
                    i1 = i4;
                    Test.instanceCount = 231;
                    Test.instanceCount *= i4;
                    i3 += 9;
                }
                Test.instanceCount += s1;
                if (false) continue;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 s1 d3 = " + i5 + "," + s1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i21 iArr = " + i21 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  dMeth ->  dMeth sMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
