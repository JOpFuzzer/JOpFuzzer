// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2109447195L;
    public static short sFld=319;
    public static boolean bFld=true;
    public static int iFld=184;
    public static float fFld=-60.616F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4866);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2) {

        int i6=-114, i7=-4, i8=10;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.80F);

        i6 = 1;
        while (++i6 < 287) {
            for (i7 = 1; 6 > i7; ++i7) {
                fArr[i6 - 1] *= i6;
                if (Test.bFld) break;
                i8 = i8;
                l2 = i7;
                l2 -= 3068517090955012830L;
                i8 += -8;
                i8 *= 6;
                i8 += (i7 | i8);
                i8 = 251;
            }
            i8 += i6;
            i8 = i6;
            i8 >>= -5;
            Test.iFld = Test.iFld;
        }
        vMeth2_check_sum += l1 + l2 + i6 + i7 + i8 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(short s) {

        float f2=0.686F, f3=-14.374F;
        int i9=1789, i10=6, iArr1[][]=new int[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -56900);
        FuzzerUtils.init(lArr, 8198812646417687747L);

        vMeth2(Test.instanceCount, Test.instanceCount);
        f2 = 168;
        while ((f2 -= 3) > 0) {
            Test.instanceCount -= Test.iFld;
            if (Test.bFld) continue;
            iArr1 = iArr1;
            Test.iFld >>= (int)Test.instanceCount;
            lArr[(int)(f2)] <<= Test.iFld;
            Test.fFld *= Test.instanceCount;
            i9 = 1;
            do {
                Test.iFld = (int)Test.instanceCount;
                Test.iFld -= (int)Test.instanceCount;
            } while (++i9 < 27);
            Test.iFld = (int)Test.instanceCount;
            for (f3 = 1; 27 > f3; ++f3) {
                Test.instanceCount = i9;
                Test.iFld = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += s + Float.floatToIntBits(f2) + i9 + Float.floatToIntBits(f3) + i10 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i=16789, i1=-14, i2=-10, i3=-29682, i4=0, i5=-205, iArr[]=new int[N];
        float f=-1.245F, f1=-1.835F;
        double d=75.85836;
        long l=-19798L;

        FuzzerUtils.init(iArr, 12);

        for (i = 10; i < 174; i++) {
            f = 1;
            do {
                switch ((int)((f % 2) + 107)) {
                case 107:
                    for (i2 = 1; i2 < 1; ++i2) {
                        i1 = (int)2.937F;
                        i3 += (i2 * i2);
                    }
                    Test.instanceCount -= (--Test.sFld);
                    i1 |= i3;
                    d = (i1++);
                    break;
                case 108:
                    i1 -= (int)(f1++);
                    break;
                default:
                    iArr[(int)(f)] &= ((-(++i3)) - (Test.sFld * (i1++)));
                    try {
                        i4 = (137 % i1);
                        i1 = (-33298 / i);
                        i1 = (iArr[(int)(f - 1)] / iArr[(int)(f - 1)]);
                    } catch (ArithmeticException a_e) {}
                    for (l = 1; l > 1; --l) {
                        vMeth1(Test.sFld);
                        iArr[i] = i;
                    }
                }
            } while (++f < 10);
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + i4 + l + i5 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i11=-6, i12=25458, i13=-13;

        vMeth();
        Test.iArrFld[(Test.iFld >>> 1) % N] -= Test.iFld;
        Test.iFld = Test.iFld;
        Test.iFld += Test.iFld;
        for (i11 = 3; i11 < 258; i11++) {
            Test.instanceCount += (i11 ^ i12);
            Test.iFld = i12;
            i13 = 1;
            while (++i13 < 99) {
                byte by=78;
                if (Test.bFld) continue;
                switch ((Test.iFld >>> 1) % 4) {
                case 0:
                    i12 -= (int)Test.fFld;
                    Test.iArrFld[i11] <<= i12;
                    Test.iFld += i11;
                case 1:
                    Test.iArrFld[i11] = Test.iFld;
                    Test.fFld = i13;
                    Test.instanceCount = i13;
                    break;
                case 2:
                    i12 >>>= 8686;
                    break;
                case 3:
                    i12 = (int)-33.31924;
                    Test.iFld *= Test.iFld;
                    Test.bFld = true;
                    by -= (byte)Test.instanceCount;
                }
                Test.bFld = Test.bFld;
                Test.sFld += (short)(i13 + Test.instanceCount);
                switch (((i12 >>> 1) % 1) + 59) {
                case 59:
                    switch ((i11 % 2) + 76) {
                    case 76:
                        Test.iArrFld[i13] = 30447;
                        Test.instanceCount += i11;
                        Test.sFld >>>= (short)-11;
                        Test.iArrFld[i11 + 1] += 5724;
                        break;
                    case 77:
                        Test.iArrFld[i13 - 1] -= (int)Test.fFld;
                        break;
                    }
                    break;
                default:
                    Test.fFld *= i12;
                }
            }
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.fFld Test.iArrFld = " + Test.iFld + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
