// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=7640359048475181441L;
    public static int iFld=40;
    public static float fFld=0.565F;
    public static double dFld=-1.72888;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 57L);
        FuzzerUtils.init(Test.dArrFld, -39.11590);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        double d1=66.106729, d2=0.1327, dArr[]=new double[N];
        int i2=-191, i3=-801, i4=-4;
        short s1=-651;

        FuzzerUtils.init(dArr, -40.129531);

        d1 += Test.iFld;
        Test.iFld = -11;
        dArr[(20686 >>> 1) % N] = Test.iFld;
        for (d2 = 398; d2 > 20; --d2) {
            Test.iFld = i2;
            for (i3 = 1; i3 < 4; ++i3) {
                s1 += (short)(((i3 * i2) + Test.iFld) - Test.iFld);
                Test.instanceCount -= i2;
                Test.iFld += (-78 + (i3 * i3));
                Test.instanceCount += (29 + (i3 * i3));
                i2 = (int)48L;
            }
            Test.fFld -= i3;
            i4 = (int)d2;
            i4 = i2;
            if (true) break;
        }
        vMeth2_check_sum += Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i2 + i3 + i4 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(byte by, long l, short s) {

        int i5=45962, i6=-43191, i7=212, i8=34983, i9=-12, i10=-4, i11=-3, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -63806L);
        FuzzerUtils.init(iArr, 4);

        s = (short)lArr[(Test.iFld >>> 1) % N];
        vMeth2();
        for (i5 = 125; i5 > 3; i5 -= 3) {
            for (i7 = 1; i7 < 38; i7 += 2) {
                iArr[i5 + 1] -= i7;
            }
            iArr[i5] += i7;
            for (i9 = 2; 38 > i9; i9++) {
                by -= (byte)Test.iFld;
                Test.iFld = Test.iFld;
                i10 &= i5;
                i11 = 1;
                do {
                    l += (long)Test.dFld;
                    Test.instanceCount = l;
                } while (++i11 < 2);
                i6 *= (int)l;
                Test.instanceCount = i9;
            }
        }
        vMeth1_check_sum += by + l + s + i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(double d, int i, int i1) {

        byte by1=113;
        short s2=-27246;
        int i12=-146, i13=-54447, i14=-1144, i15=-17667, i16=-7, iArr1[][]=new int[N][N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 37235);

        vMeth1(by1, -3520L, s2);
        by1 = (byte)i;
        if (true) {
            for (i12 = 389; i12 > 6; --i12) {
                Test.iFld = i1;
                Test.instanceCount += (i12 + i13);
                if (b) break;
                i14 = 1;
                do {
                    if (b) continue;
                    for (i15 = 1; i15 > 1; --i15) {
                        Test.lArrFld[i12] = 252;
                        if (i1 != 0) {
                            vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + by1 + s2 + i12 + i13 + (b ? 1 : 0)
                                + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                        i += (i15 ^ i16);
                        iArr1[i15][i12] = i16;
                        iArr1[i15][i14 - 1] <<= i12;
                    }
                } while (++i14 < 4);
            }
        } else if (b) {
            Test.instanceCount = i14;
        } else if (b) {
            Test.iFld -= (int)Test.instanceCount;
        } else {
            Test.instanceCount ^= Test.iFld;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + by1 + s2 + i12 + i13 + (b ? 1 : 0) + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i17=2471, i18=-12;

        vMeth(65.86935, Test.iFld, Test.iFld);
        Test.iFld = Test.iFld;
        Test.lArrFld[(Test.iFld >>> 1) % N] += Test.iFld;
        for (i17 = 18; 297 > i17; i17++) {
            i18 -= (int)Test.instanceCount;
            Test.instanceCount = Test.instanceCount;
            Test.iFld = (int)Test.dFld;
            Test.instanceCount += i17;
        }

        FuzzerUtils.out.println("i17 i18 = " + i17 + "," + i18);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.lArrFld Test.dArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
