// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-224L;
    public int iFld=-3049;
    public static int iFld1=-146;
    public static boolean bFld=false;
    public static volatile double dFld=127.96988;
    public volatile int iFld2=10;
    public int iArrFld[]=new int[N];

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i1, long l2) {

        int i2=13, i3=8, i4=-34713, i5=-234, i6=-103, iArr[]=new int[N];
        short s=7042;

        FuzzerUtils.init(iArr, -5);

        for (i2 = 9; i2 < 365; ++i2) {
            iArr[i2 + 1] *= i3;
            if (Test.bFld) {
                i3 -= -12;
            } else if (Test.bFld) {
                i3 += (i2 ^ i2);
                if (true) continue;
                for (i4 = 1; 5 > i4; i4 += 3) {
                    if (i3 != 0) {
                        vMeth_check_sum += i1 + l2 + i2 + i3 + i4 + i5 + i6 + s + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    if (i2 != 0) {
                        vMeth_check_sum += i1 + l2 + i2 + i3 + i4 + i5 + i6 + s + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    i6 = 1;
                    do {
                        boolean b=true;
                        if (b) break;
                        Test.instanceCount += i6;
                        Test.iFld1 += i6;
                        i1 *= -57329;
                        s *= (short)i5;
                    } while (++i6 < 5);
                }
            } else if (Test.bFld) {
                l2 ^= i3;
            } else {
                Test.instanceCount += (long)(-104.130F + (i2 * i2));
            }
        }
        vMeth_check_sum += i1 + l2 + i2 + i3 + i4 + i5 + i6 + s + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l1) {

        double d1=1.77217;
        int i=173;

        d1 = ((long)((d1 - Test.instanceCount) - i) << ((i++) - (i - -6)));
        vMeth(Test.iFld1, Test.instanceCount);
        long meth_res = l1 + Double.doubleToLongBits(d1) + i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(double d, long l) {

        float f1=-13.641F;
        int i7=49, i8=29, i9=-8, i10=179, i11=51, iArr1[][]=new int[N][N];
        short s1=-14334;
        boolean b1=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-108);
        FuzzerUtils.init(iArr1, -152);

        switch ((((iMeth(-11L) >>> 1) % 4) * 5) + 94) {
        case 112:
            byArr[(8432 >>> 1) % N] -= (byte)f1;
            Test.iFld1 = Test.iFld1;
            Test.iFld1 >>= -19360;
            for (i7 = 1; 355 > i7; ++i7) {
                Test.iFld1 += (int)l;
                f1 = i8;
                switch (((i7 % 5) * 5) + 56) {
                case 79:
                    switch (((-186 >>> 1) % 7) + 118) {
                    case 118:
                        i9 = 1;
                        do {
                            f1 += (((i9 * i7) + Test.iFld1) - i7);
                            Test.iFld1 += (((i9 * f1) + i8) - s1);
                            for (i10 = i9; i10 < 1; i10++) {
                                Test.iFld1 = (int)l;
                                Test.iFld1 = -8;
                            }
                        } while (++i9 < 5);
                        break;
                    case 119:
                        f1 *= Test.instanceCount;
                    case 120:
                        f1 = Test.instanceCount;
                        break;
                    case 121:
                        i8 += (((i7 * i11) + f1) - i7);
                        break;
                    case 122:
                        i11 += (i7 ^ i9);
                        break;
                    case 123:
                        Test.iFld1 += (int)f1;
                        break;
                    case 124:
                        iArr1[i7 + 1][i7 + 1] = (int)-4855284332435843608L;
                        break;
                    default:
                        iArr1[i7][i7] = i8;
                    }
                    break;
                case 71:
                    iArr1[i7 - 1][i7] -= (int)f1;
                    break;
                case 75:
                    Test.instanceCount = i11;
                case 61:
                    f1 = -59;
                case 59:
                    i8 += (((i7 * l) + i7) - Test.iFld1);
                    break;
                default:
                    i8 |= i11;
                }
            }
            break;
        case 106:
            Test.iFld1 = (int)f1;
            break;
        case 114:
            Test.instanceCount = Test.instanceCount;
            break;
        case 104:
            i11 >>>= 172;
        default:
            b1 = Test.bFld;
        }
        long meth_res = Double.doubleToLongBits(d) + l + Float.floatToIntBits(f1) + i7 + i8 + i9 + s1 + i10 + i11 + (b1
            ? 1 : 0) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=91.88F;
        int i12=8, i13=46444, i14=-214, i15=-7, i16=20, iArr2[]=new int[N];
        byte by=124;
        long l3=-1567454872L, lArr[]=new long[N];
        short s2=-17452;

        FuzzerUtils.init(lArr, -12639L);
        FuzzerUtils.init(iArr2, 92);

        f -= ((Math.min(iFld, iFld) + lMeth(Test.dFld, -53L)) << Test.iFld1);
        i12 = 1;
        while ((i12 += 3) < 142) {
            by = (byte)Test.iFld1;
        }
        for (i13 = 6; i13 < 126; ++i13) {
            if (Test.bFld) break;
            Test.dFld -= 59251L;
            for (i15 = i13; i15 < 209; i15++) {
                l3 = 1;
                while (++l3 < 1) {
                    switch ((((Test.iFld1 >>> 1) % 9) * 5) + 39) {
                    case 82:
                        Test.instanceCount = Test.instanceCount;
                        iFld2 -= (int)Test.dFld;
                        lArr[(int)(l3)] = 32204;
                        iArr2[(int)(l3)] += i16;
                        break;
                    case 59:
                        i14 += (int)(l3 * l3);
                        f = Test.instanceCount;
                        break;
                    case 63:
                        s2 += (short)iFld;
                        break;
                    case 74:
                        i14 += (int)l3;
                        Test.iFld1 = s2;
                    case 46:
                        iArr2[i15 - 1] -= Test.iFld1;
                    case 51:
                        i16 ^= (int)l3;
                        i16 += (int)Test.instanceCount;
                    case 43:
                        iFld <<= (int)Test.instanceCount;
                        switch ((int)(((l3 % 7) * 5) + 21)) {
                        case 22:
                        case 39:
                        case 36:
                            i16 += (int)l3;
                            Test.instanceCount += (((l3 * by) + i14) - iFld);
                            break;
                        case 48:
                            i14 = -214;
                            Test.instanceCount += (l3 * f);
                            lArr[i13] >>= i16;
                            i16 = i13;
                        case 35:
                            f -= Test.iFld1;
                            break;
                        case 26:
                            i14 += (int)(((l3 * i15) + l3) - by);
                            break;
                        case 41:
                            iArrFld[(int)(l3 - 1)] -= (int)f;
                            break;
                        default:
                            Test.dFld = Test.dFld;
                        }
                        break;
                    case 55:
                        lArr[(int)(l3 - 1)] -= -5440;
                        break;
                    case 73:
                        iFld += (int)(l3 * l3);
                        break;
                    default:
                        Test.instanceCount = i16;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i12 by = " + Float.floatToIntBits(f) + "," + i12 + "," + by);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 l3 s2 = " + i16 + "," + l3 + "," + s2);
        FuzzerUtils.out.println("lArr iArr2 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.bFld Test.dFld iFld2 = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + iFld2);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
