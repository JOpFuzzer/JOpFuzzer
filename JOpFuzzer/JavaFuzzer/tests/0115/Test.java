// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9010079115529553673L;
    public static byte byFld=110;
    public static int iFld=-8;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 27206);
        FuzzerUtils.init(Test.lArrFld, 227L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        int i10=-211, i11=-251;

        for (i10 = 2; 398 > i10; ++i10) {
            i8 = (-47399 * (i9 + (--i8)));
        }
        Test.iArrFld[(i9 >>> 1) % N] >>= i9;
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11;
    }

    public static short sMeth(int i13) {

        float f2=-127.726F;

        f2 = f2;
        Test.byFld += (byte)227L;
        long meth_res = i13 + Float.floatToIntBits(f2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(long l, long l1, long l2) {

        int i12=0, i15=-6, i16=-21366, i17=0, i18=-3, i19=-125;
        float f3=2.373F, f4=29.168F;
        double d=0.114267, d1=1.56232;

        i12 *= (int)(sMeth(i12) / ((long)(f3) | 1));
        try {
            d = 1;
            do {
                for (f4 = 1; f4 < 9; ++f4) {
                    for (i16 = 1; 2 > i16; ++i16) {
                        Test.iArrFld[(int)(f4 - 1)] = (int)d;
                        Test.iArrFld = Test.iArrFld;
                        i15 = i12;
                        Test.instanceCount = (long)d1;
                    }
                    Test.iArrFld[(int)(d)] = (int)d1;
                    for (i18 = 1; i18 < 2; ++i18) {
                        f3 = i12;
                    }
                    i12 *= (int)1.859F;
                }
            } while (++d < 186);
            i12 = i17;
            i19 = i19;
        }
        catch (NullPointerException exc1) {
            Test.iArrFld[(580 >>> 1) % N] += 11386;
        }
        long meth_res = l + l1 + l2 + i12 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f4) + i15 + i16 + i17 + Double.doubleToLongBits(d1) + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i6, float f1) {

        byte by=-100;
        int i20=45600, i21=-207, i22=61, i23=15498;
        boolean b=false;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 7185262914018841081L);
        FuzzerUtils.init(fArr, 2.819F);

        i6 = by;
        vMeth1(iMeth(Test.instanceCount, 21125L, Test.instanceCount), i6, i6);
        i20 = 300;
        do {
            lArr[i20] += 8;
            fArr[i20 + 1] *= 77.100F;
            i21 = 1;
            while (++i21 < 6) {
                if (b) continue;
                switch (((i20 % 1) * 5) + 99) {
                case 101:
                }
                if (i20 != 0) {
                    vMeth_check_sum += i6 + Float.floatToIntBits(f1) + by + i20 + i21 + (b ? 1 : 0) + i22 + i23 +
                        FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                i6 += i20;
                i6 *= 30;
                i6 += (i21 - i20);
            }
            for (i22 = i20; i22 < 6; i22++) {
                if (i6 != 0) {
                    vMeth_check_sum += i6 + Float.floatToIntBits(f1) + by + i20 + i21 + (b ? 1 : 0) + i22 + i23 +
                        FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
            if (true) break;
        } while (--i20 > 0);
        vMeth_check_sum += i6 + Float.floatToIntBits(f1) + by + i20 + i21 + (b ? 1 : 0) + i22 + i23 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=8253, i1=38135, i2=-7, i3=-10, i4=-179, i5=-70, i24=8, i25=-10, i26=-139, i27=-115, i28=0, i29=217;
        float f=0.1014F;
        boolean b1=false;
        short s=-9925;

        for (i = 10; i < 225; ++i) {
            switch ((((Math.abs(i1) >>> 1) % 1) * 5) + 125) {
            case 126:
                for (i2 = 7; 117 > i2; ++i2) {
                    for (i4 = 2; i4 > 1; i4--) {
                        i3 -= (int)(f++);
                        vMeth(i2, f);
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)-97);
                    }
                    if (b1) break;
                    Test.instanceCount -= i2;
                    f -= i5;
                    i3 += i2;
                    for (i24 = 1; i24 < 2; ++i24) {
                        i5 += (4 + (i24 * i24));
                        Test.byFld >>= (byte)i4;
                        Test.instanceCount = s;
                    }
                    for (i26 = i; i26 < 2; i26++) {
                        i25 *= Test.iFld;
                        i27 *= i27;
                        i5 -= i26;
                        i25 *= i24;
                        Test.lArrFld[i] = s;
                        Test.instanceCount &= i;
                    }
                    i3 = 119;
                }
                for (i28 = 5; i28 < 117; ++i28) {
                    Test.instanceCount >>>= Test.instanceCount;
                    i27 *= (int)Test.instanceCount;
                }
                if (b1) continue;
            }
            i29 += i;
            i3 += i5;
            i25 += (-4 + (i * i));
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("f b1 i24 = " + Float.floatToIntBits(f) + "," + (b1 ? 1 : 0) + "," + i24);
        FuzzerUtils.out.println("i25 s i26 = " + i25 + "," + s + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
