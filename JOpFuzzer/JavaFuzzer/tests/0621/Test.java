// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=20283L;
    public int iFld=-219;
    public byte byFld=102;
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.543F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=5, i5=-196, i6=-184, i7=-41187, iArr1[]=new int[N];
        float f1=111.377F, f2=1.802F;
        double d=1.85478, dArr[]=new double[N];
        short s=-25861;
        boolean b=false;

        FuzzerUtils.init(iArr1, 192);
        FuzzerUtils.init(dArr, 2.26909);

        for (int i3 : iArr1) {
            iArr1[(i3 >>> 1) % N] = i3;
            switch (((i3 >>> 1) % 8) + 21) {
            case 21:
                i3 -= (int)Test.instanceCount;
                for (i4 = 1; i4 < 4; i4++) {
                    i5 -= i4;
                    switch (((i4 >>> 1) % 9) + 32) {
                    case 32:
                        i3 += (int)f1;
                        break;
                    case 33:
                        i5 += (int)Test.instanceCount;
                        i5 -= (int)Test.instanceCount;
                        if (b) {
                            for (i6 = 1; i6 < 2; i6++) {
                                f2 += i6;
                                i3 *= 192;
                                d -= s;
                            }
                        } else if (false) {
                            Test.instanceCount <<= i7;
                        }
                        break;
                    case 34:
                        iArr1[i4] -= (int)f2;
                    case 35:
                        i3 = (int)Test.instanceCount;
                        break;
                    case 36:
                        i7 = i4;
                        break;
                    case 37:
                        f2 += (33400L + (i4 * i4));
                    case 38:
                        i3 = (int)f2;
                        break;
                    case 39:
                        i3 *= -56760;
                        break;
                    case 40:
                        iArr1[i4 + 1] = -11;
                    }
                }
            case 22:
                i5 = (int)584908743325984527L;
                break;
            case 23:
            case 24:
                Test.instanceCount <<= Test.instanceCount;
                break;
            case 25:
                s = (short)i4;
                break;
            case 26:
                i3 -= i5;
                break;
            case 27:
                dArr[(i7 >>> 1) % N] = -69;
                break;
            case 28:
                Test.fArrFld[(-4 >>> 1) % N] *= f2;
                break;
            default:
                Test.instanceCount = i6;
            }
        }
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d) + s + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth() {

        int i8=143, i9=14, i10=21093, i11=23, i12=-19, i13=150, iArr2[][]=new int[N][N];
        double d1=-1.76862;
        byte by=-90;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -63L);
        FuzzerUtils.init(iArr2, 12159);

        vMeth1();
        Test.instanceCount += i8;
        i9 = 1;
        do {
            for (d1 = i9; d1 < 5; ++d1) {
                float f3=-23.73F;
                i8 |= (int)Test.instanceCount;
                switch ((i9 % 4) + 122) {
                case 122:
                    if (b1) {
                        switch ((int)(((d1 % 10) * 5) + 108)) {
                        case 151:
                            i8 += i11;
                            break;
                        case 116:
                            for (i12 = (int)(d1); i12 < 1; ++i12) {
                                i10 = i10;
                                i8 *= (int)Test.instanceCount;
                                Test.instanceCount += -88;
                                i10 *= i8;
                                i10 <<= (int)Test.instanceCount;
                            }
                            break;
                        case 120:
                            by += (byte)-44.436F;
                            break;
                        case 119:
                            i11 += i8;
                            break;
                        case 133:
                            lArr[(int)(d1)] += i9;
                            break;
                        case 122:
                            Test.fArrFld[i9] = Test.instanceCount;
                            break;
                        case 153:
                            i11 >>= i11;
                        case 155:
                            f3 *= i10;
                            break;
                        case 117:
                            iArr2[i9 + 1][i9] >>= 4;
                            break;
                        case 141:
                            by -= (byte)i10;
                            break;
                        default:
                            i11 = (int)f3;
                        }
                    } else {
                        Test.instanceCount = Test.instanceCount;
                    }
                    break;
                case 123:
                    Test.instanceCount >>= 7313;
                    break;
                case 124:
                    Test.instanceCount <<= -18932;
                case 125:
                    Test.instanceCount *= i10;
                    break;
                default:
                    i11 += (int)d1;
                }
            }
        } while (++i9 < 353);
        long meth_res = i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + by + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i1, float f, int i2) {

        int i14=136, i15=12, i16=53187, i17=11, i18=61, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, 10);

        switch (((iMeth() >>> 1) % 7) + 98) {
        case 98:
            iArr3[(i1 >>> 1) % N] += 189;
            break;
        case 99:
            Test.instanceCount -= Test.instanceCount;
            i14 = 1;
            do {
                iArr3[i14] -= (int)f;
                i1 = i14;
                i2 *= i1;
                Test.instanceCount += iFld;
                for (i15 = 1; i15 < 5; ++i15) {
                    iArr3[i14] -= 56;
                    Test.instanceCount -= iFld;
                    iFld += (i15 * i15);
                    for (i17 = 1; i17 < 2; ++i17) {
                        f -= -5;
                        i1 -= (int)Test.instanceCount;
                    }
                }
            } while (++i14 < 311);
            break;
        case 100:
            Test.instanceCount -= byFld;
            break;
        case 101:
            iArr3[(iFld >>> 1) % N] >>= byFld;
            break;
        case 102:
            Test.fArrFld[(39312 >>> 1) % N] += -9;
            break;
        case 103:
            lArrFld = lArrFld;
            break;
        case 104:
            iFld += -7;
            break;
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i20=-22, i21=-2, i22=-15666, iArr[]=new int[N];
        float f4=-1.518F;
        double d2=-1.97541;
        short s1=-24690;

        FuzzerUtils.init(iArr, 21969);

        i = 236;
        do {
            iArr[i] = (++iFld);
            iFld += (i ^ Test.instanceCount);
            vMeth(i, f4, i);
            f4 += iFld;
            f4 += i;
            iFld += (((i * iFld) + i) - f4);
            Test.fArrFld[i + 1] += (float)d2;
            f4 += iFld;
            Test.instanceCount >>= iFld;
        } while (--i > 0);
        Test.instanceCount -= i;
        for (int i19 : iArr) {
            iFld *= iFld;
            i19 = byFld;
            for (i20 = 3; i20 < 63; i20++) {
                Test.instanceCount += i21;
                i22 = 1;
                while (++i22 < 2) {
                    i19 = i;
                    switch ((i22 % 5) + 109) {
                    case 109:
                        i21 += i22;
                        s1 <<= (short)Test.instanceCount;
                        f4 += i21;
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 110:
                        s1 *= byFld;
                        Test.instanceCount = iFld;
                        lArrFld[i22 + 1] = i;
                        i21 += (i22 * i22);
                        break;
                    case 111:
                        i19 *= -57;
                        break;
                    case 112:
                    case 113:
                        try {
                            i21 = (i20 / i20);
                            i19 = (-17400 / i);
                            i19 = (i22 % i20);
                        } catch (ArithmeticException a_e) {}
                    default:
                        i21 += i22;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f4 d2 = " + i + "," + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s1 iArr = " + s1 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount iFld byFld = " + Test.instanceCount + "," + iFld + "," + byFld);
        FuzzerUtils.out.println("Test.fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))
            + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
