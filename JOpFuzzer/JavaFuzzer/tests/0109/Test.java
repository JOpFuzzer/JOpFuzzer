// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=53998L;
    public double dFld=1.47080;
    public static int iFld=55;
    public static float fFld=0.502F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -32534);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i5) {

        int i6=10, i7=20, i8=-91, i9=-233, i10=17465;

        Test.iArrFld = Test.iArrFld;
        for (i6 = 156; i6 > 1; i6--) {
            i7 = 8;
        }
        i7 += -33043;
        Test.iFld = i5;
        Test.instanceCount *= Test.instanceCount;
        for (i8 = 176; 2 < i8; i8 -= 3) {
            i7 += (43 + (i8 * i8));
            switch (((i8 % 2) * 5) + 57) {
            case 67:
            case 61:
                i7 += i7;
                i10 = 1;
                do {
                    Test.instanceCount += Test.instanceCount;
                    if (i10 != 0) {
                    }
                    i7 ^= (int)Test.instanceCount;
                    Test.instanceCount = i5;
                } while (++i10 < 26);
                break;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth() {

        int i11=38456, i12=-180, i13=128, i14=-90, i15=1, i16=5;
        short s1=14873;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 22191L);

        Test.instanceCount = (long)(dMeth(Test.iFld) * Test.iFld);
        Test.instanceCount >>= Test.instanceCount;
        Test.iFld <<= Test.iFld;
        i11 = 1;
        while (++i11 < 227) {
            Test.iFld -= (int)Test.instanceCount;
            Test.iFld -= i12;
            for (i13 = 1; 7 > i13; ++i13) {
                try {
                    i14 = (-42636 % Test.iFld);
                    Test.iFld = (-558792786 % i13);
                    i12 = (1347359631 / Test.iFld);
                } catch (ArithmeticException a_e) {}
                try {
                    i14 = (Test.iArrFld[i11 - 1] % 170);
                    Test.iFld = (Test.iArrFld[i13 + 1] / 34309);
                    Test.iArrFld[i11 - 1] = (Test.iArrFld[i11] / i13);
                } catch (ArithmeticException a_e) {}
                for (i15 = 1; i15 < 2; ++i15) {
                    Test.iFld += (((i15 * i12) + Test.iFld) - i14);
                    i12 &= 203;
                    s1 = (short)Test.iFld;
                    i16 += i15;
                    i12 = i15;
                }
            }
        }
        long meth_res = i11 + i12 + i13 + i14 + i15 + i16 + s1 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i1, int i2) {

        int i3=-27644, i4=-81, i17=-11, i18=-32614, i19=5, i20=-10, iArr[]=new int[N];
        short s=-17758;
        double d=-115.109424;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 32202);
        FuzzerUtils.init(lArr, -5L);

        for (i3 = 3; i3 < 376; i3 += 3) {
            boolean b=true;
            iArr[i3 + 1] -= (int)(f * (++i1));
            s += (short)i3;
            b = (lArr[i3 - 1] > (-(d - -3)));
        }
        i4 += iMeth();
        i1 *= (int)Test.instanceCount;
        Test.instanceCount = i3;
        i1 = (int)76.21644;
        i4 ^= i4;
        for (i17 = 1; i17 < 230; i17++) {
            Test.instanceCount <<= i18;
            for (i19 = 7; i19 > 1; i19 -= 3) {
                s /= (short)(i4 | 1);
                i18 += (((i19 * Test.instanceCount) + i3) - i18);
                i2 = i18;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + s + Double.doubleToLongBits(d) + i17 + i18 +
            i19 + i20 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-47, i21=28703, i22=-160, i23=116, i24=33623, i25=0, i26=11, i27=2, i28=-10, i29=219;
        short s2=-22937;
        double d1=104.129757;
        byte by=-13;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        Test.instanceCount = (long)((Math.abs(dFld) + (Test.iFld + 13L)) + Test.iFld);
        i = 278;
        do {
            vMeth(Test.fFld, Test.iFld, i);
            Test.iFld += (((i * i) + Test.iFld) - Test.iFld);
            for (i21 = 10; i21 < 269; ++i21) {
                Test.instanceCount |= Test.instanceCount;
            }
            for (i23 = 8; i23 < 269; ++i23) {
                Test.fFld -= 14;
                s2 += (short)i23;
                for (i25 = 2; i25 > 1; --i25) {
                    bArr[i - 1] = false;
                    i22 ^= (int)-228L;
                }
                for (i27 = 1; i27 < 2; ++i27) {
                    i28 = 18749;
                    Test.iFld += i21;
                    i22 -= (int)Test.fFld;
                }
                Test.iArrFld[i23 - 1] += -3;
                Test.iArrFld[i + 1] = (int)-22.9F;
                Test.fFld += (((i23 * i25) + i22) - i26);
                i26 ^= Test.iFld;
                for (d1 = 1; d1 < 2; d1++) {
                    Test.instanceCount += i29;
                    if (true) break;
                    by -= (byte)i25;
                    Test.instanceCount = i27;
                    Test.instanceCount += Test.instanceCount;
                    Test.instanceCount += i22;
                }
            }
            Test.iArrFld[i - 1] <<= i28;
            Test.instanceCount = -155;
            Test.iArrFld[i + 1] ^= i28;
        } while ((i -= 3) > 0);

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 s2 = " + i23 + "," + i24 + "," + s2);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 d1 i29 = " + i28 + "," + Double.doubleToLongBits(d1) + "," + i29);
        FuzzerUtils.out.println("by bArr = " + by + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.fFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
