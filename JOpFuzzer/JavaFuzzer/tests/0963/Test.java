// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3122671987L;
    public static int iFld=251;
    public float fFld=-2.848F;

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d) {

        int i6=2, i7=42079, i8=-142, i9=32439, i10=-4, iArr[]=new int[N];
        float f1=97.97F;
        byte by1=-76;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)13592);
        FuzzerUtils.init(iArr, -10);

        for (i6 = 20; 347 > i6; ++i6) {
            Test.iFld *= Test.iFld;
            i7 = i7;
            Test.instanceCount += (-223 + (i6 * i6));
            f1 = -153;
            sArr[i6 + 1] *= (short)Test.iFld;
            if (true) continue;
            iArr[i6 - 1] *= -3;
            by1 = (byte)f1;
            for (i8 = 1; i8 < 5; i8++) {
                i9 &= Test.iFld;
                Test.iFld = i10;
                f1 -= i6;
                iArr[i8 - 1] = i8;
                try {
                    i10 = (i10 % -220);
                    i7 = (Test.iFld % 42972);
                    i9 = (i7 / i9);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i7 + Float.floatToIntBits(f1) + by1 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth() {

        double d1=2.114531;

        vMeth(d1);
        Test.instanceCount += Test.instanceCount;
        Test.iFld = Test.iFld;
        long meth_res = Double.doubleToLongBits(d1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(int i2, long l, int i3) {

        int i4=-6, i5=-191, i11=13, i12=-48976, i13=9, i14=-31, i15=22508, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, -201);

        i2 = -48;
        for (i4 = 4; i4 < 165; ++i4) {
            float f2=1.250F;
            i3 = (int)dMeth();
            if (b1) {
                f2 = i2;
                iArr1[i4] += (int)-104.435F;
                i5 = (int)l;
            } else if (b1) {
                for (i11 = 10; i11 > 1; i11--) {
                    Test.instanceCount >>>= Test.instanceCount;
                }
                i13 = 1;
                while (++i13 < 10) {
                    i2 = 3;
                    i3 = i13;
                    for (i14 = 1; 1 > i14; ++i14) {
                        f2 = i12;
                        i2 = -192;
                    }
                }
            } else {
                f2 += (((i4 * i12) + i4) - Test.instanceCount);
            }
        }
        long meth_res = i2 + l + i3 + i4 + i5 + i11 + i12 + i13 + i14 + i15 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        byte by=-6;
        float f=1.640F, f3=-10.757F;
        int i=27184, i1=-5, i16=-239, i17=-10, i18=89, i19=10, i20=6, i21=5, iArr2[]=new int[N];
        double d2=-2.52703, d3=-76.130068, dArr[]=new double[N];
        long l1=-8L, lArr[]=new long[N];
        short s=11069;

        FuzzerUtils.init(lArr, -8014344538619366361L);
        FuzzerUtils.init(iArr2, -32034);
        FuzzerUtils.init(dArr, 121.75924);

        if ((((-3357092462L + (Test.instanceCount + Test.iFld)) - (++lArr[(Test.iFld >>> 1) % N])) -
            ((Test.instanceCount - Test.instanceCount) + (--Test.iFld))) != Math.min((Test.iFld - by) * (Test.iFld *
            by), (int)(223 - (f++)))) {
            b = true;
        } else {
            Test.iFld >>= (int)(lArr[(Test.iFld >>> 1) % N]--);
            i = 253;
            do {
                Test.iFld *= (int)fFld;
                i1 = 295;
                do {
                    f += (iMeth(-206, 24694L, Test.iFld) * Test.iFld);
                    for (d2 = i; 3 > d2; d2++) {
                        Test.iFld += (int)d2;
                    }
                    l1 = Test.iFld;
                    Test.instanceCount = i16;
                } while ((i1 -= 3) > 0);
                i16 >>= 10;
                for (d3 = 6; d3 < 295; d3++) {
                    iArr2 = iArr2;
                    try {
                        i17 = (iArr2[i] % iArr2[(int)(d3 - 1)]);
                        Test.iFld = (-204 / Test.iFld);
                        Test.iFld = (i1 / 6);
                    } catch (ArithmeticException a_e) {}
                }
                by += (byte)i;
                i17 += i;
                i17 += i;
                f3 += (i * i);
                for (i18 = 3; i18 < 295; i18++) {
                    l1 = 2654183427L;
                    switch (((i18 % 3) * 5) + 67) {
                    case 80:
                    case 74:
                    case 78:
                        dArr[i18] = 180;
                        for (i20 = 1; i20 < 2; i20++) {
                            s = (short)41611;
                            dArr[i18 - 1] += i20;
                            iArr2[i18] -= (int)l1;
                            l1 = Test.iFld;
                            if (true) continue;
                            dArr[i18] = l1;
                        }
                        break;
                    default:
                        if (b) break;
                    }
                }
            } while ((i -= 3) > 0);
        }

        FuzzerUtils.out.println("b by f = " + (b ? 1 : 0) + "," + by + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i16 l1 d3 = " + i16 + "," + l1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i17 f3 i18 = " + i17 + "," + Float.floatToIntBits(f3) + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s lArr iArr2 = " + s + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld fFld = " + Test.instanceCount + "," + Test.iFld + "," +
            Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
