// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3642399499L;
    public static int iFld=0;
    public static long lArrFld[][]=new long[N][N];
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -60L);
        FuzzerUtils.init(Test.fArrFld, -100.897F);
        FuzzerUtils.init(Test.iArrFld, 7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i7=88, i8=-10799, i9=49283, i10=63, iArr[]=new int[N];
        short s=-2980;

        FuzzerUtils.init(iArr, -167);

        Test.fArrFld[(Test.iFld >>> 1) % N] -= Test.instanceCount;
        for (i7 = 13; i7 < 225; ++i7) {
            for (i9 = i7; i9 < 8; i9++) {
                Test.iFld += Test.iFld;
                switch ((i9 % 1) + 5) {
                case 5:
                    Test.iFld = i10;
                    Test.iFld <<= (int)Test.instanceCount;
                    Test.fArrFld[i9 + 1] += Test.instanceCount;
                    i8 = (int)Test.instanceCount;
                    break;
                default:
                    i10 += i7;
                    i8 -= s;
                    i10 *= i8;
                }
                Test.lArrFld[i7 + 1][i7 - 1] >>= 65;
                iArr[i7] *= i8;
                i10 -= Test.iFld;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + s + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1() {

        int i3=-172, i4=22012, i5=-162, i6=231, i11=100, i12=-2, i13=10, i14=54, i15=9;
        boolean b=true;
        byte by=114;

        Test.lArrFld[(i3 >>> 1) % N][(i3 >>> 1) % N] -= Test.instanceCount;
        i4 = 1;
        do {
            i5 = 1;
            while (++i5 < 5) {
                i6 += i5;
                i6 &= (int)((-i3) - (-dMeth()));
                Test.iArrFld[i4] >>>= i5;
            }
            if (b) {
                i6 -= -11858;
            } else if (b) {
            } else {
                for (i11 = 1; i11 < 5; i11++) {
                    if (b) break;
                    i3 -= by;
                }
                for (i13 = 1; i13 < 5; i13++) {
                    i14 = -7;
                    if (i15 != 0) {
                        vMeth1_check_sum += i3 + i4 + i5 + i6 + (b ? 1 : 0) + i11 + i12 + by + i13 + i14 + i15;
                        return;
                    }
                    i14 += (i13 | i3);
                }
            }
        } while (++i4 < 301);
        vMeth1_check_sum += i3 + i4 + i5 + i6 + (b ? 1 : 0) + i11 + i12 + by + i13 + i14 + i15;
    }

    public static void vMeth(int i) {

        int i1=83, i2=-1, i16=5, i17=-14321, i18=0, i19=3, i20=-46, i21=-167;
        float f=-116.736F;
        double d=0.120528;

        i *= (int)(i -= (int)Test.instanceCount);
        for (i1 = 262; i1 > 2; --i1) {
            i2 = (int)(Test.instanceCount--);
        }
        vMeth1();
        i16 = 1;
        do {
            for (i17 = i16; i17 < 13; ++i17) {
                for (i19 = i16; 1 > i19; ++i19) {
                    i2 = 11;
                    i18 = i18;
                    i20 &= i1;
                    f *= i18;
                }
                for (d = 1; d < 1; ++d) {
                    i18 = i19;
                    Test.instanceCount *= i;
                    Test.iFld = i16;
                }
            }
        } while (++i16 < 121);
        vMeth_check_sum += i + i1 + i2 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(d) + i21;
    }

    public void mainTest(String[] strArr1) {

        boolean b1=false;

        vMeth(Test.iFld);
        Test.iArrFld[(Test.iFld >>> 1) % N] = (int)2L;
        b1 = b1;

        FuzzerUtils.out.println("b1 = " + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.lArrFld = " + Test.instanceCount + "," + Test.iFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld Test.iArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
