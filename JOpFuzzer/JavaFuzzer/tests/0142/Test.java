// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-51834L;
    public static volatile int iFld=4;
    public static volatile int iFld1=55977;
    public short sFld=14169;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -139);
        FuzzerUtils.init(Test.fArrFld, 1.525F);
        FuzzerUtils.init(Test.lArrFld, 14L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=-25388, i3=51, i4=2514, i5=-11;
        long l1=-8115944654411727828L;
        short s=-5448;
        double d1=74.67888;

        Test.instanceCount = i2;
        l1 = 1;
        while (++l1 < 259) {
            for (i3 = (int)(l1); i3 < 6; i3++) {
                float f=78.67F;
                try {
                    i4 = (-49516 / Test.iFld);
                    i5 = (24 % i3);
                    Test.iFld = (-4143 % i2);
                } catch (ArithmeticException a_e) {}
                i4 *= i2;
                i2 += (int)Test.instanceCount;
                Test.iArrFld[(int)(l1 - 1)] -= Test.iFld;
                Test.instanceCount = 2722304233L;
                f += -167L;
                s /= (short)-118L;
                i5 = 7575;
                Test.iArrFld[i3 - 1] = i5;
            }
            i2 = (int)l1;
            Test.instanceCount += (l1 ^ Test.iFld);
        }
        d1 = l1;
        vMeth1_check_sum += i2 + l1 + i3 + i4 + i5 + s + Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i1, byte by) {

        int i6=144, i7=-14, i8=62, i9=-11, i10=-41935, i11=0;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1997344263L);

        vMeth1();
        Test.instanceCount += i1;
        Test.instanceCount = -75;
        i1 = (int)Test.instanceCount;
        for (i6 = 127; i6 > 3; --i6) {
            Test.iArrFld[i6 + 1] += i6;
            Test.instanceCount += i1;
            i7 *= (int)Test.instanceCount;
            for (i8 = 13; i8 > i6; --i8) {
                i9 >>>= i7;
                Test.iFld -= by;
            }
            lArr[i6] = Test.instanceCount;
            for (i10 = i6; i10 < 13; ++i10) {
                i1 = 62639;
                Test.fArrFld = FuzzerUtils.float2array(N, (float)-1.508F);
            }
        }
        vMeth_check_sum += i1 + by + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l, double d) {

        byte by1=-23;
        int i12=-212, i13=-3026, i14=39595, i15=-19873;
        float f1=18.604F;
        short s1=-30209;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 1L);

        for (int i : Test.iArrFld) {
            vMeth(-20879, by1);
            Test.iArrFld[(Test.iFld >>> 1) % N] += (int)Test.instanceCount;
            l = l;
            for (i12 = 1; i12 < 4; i12++) {
                i13 *= (int)d;
                for (i14 = 1; i14 < 2; i14++) {
                    Test.instanceCount += (long)f1;
                    d += s1;
                    Test.iFld *= (int)d;
                    lArr1[i14] += (long)d;
                    Test.instanceCount *= l;
                    i13 += i12;
                    f1 -= Test.instanceCount;
                }
                Test.iArrFld[i12 + 1] >>= i13;
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + by1 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + s1 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d2=0.109674;
        boolean b=true, bArr[]=new boolean[N];
        int i16=-43356, i17=-13, i18=48451, i20=33230, i21=36844, i22=-58869, i23=132;
        float f2=20.162F;
        byte by2=-100;

        FuzzerUtils.init(bArr, true);

        iMeth(-10L, d2);
        b = b;
        for (i16 = 16; 288 > i16; ++i16) {
            d2 += Test.iFld;
            Test.iFld1 = i16;
        }
        Test.instanceCount += Test.iFld;
        for (f2 = 5; f2 < 122; f2 += 3) {
            Test.instanceCount -= i16;
            Test.lArrFld[(int)(f2)] = sFld;
            i18 += (int)(((f2 * f2) + i18) - Test.iFld1);
            for (int i19 : Test.iArrFld) {
                for (i20 = 1; i20 < 2; i20++) {
                    Test.iFld += (i20 | i19);
                    Test.instanceCount += (((i20 * Test.instanceCount) + i19) - i20);
                    i17 = i17;
                }
                for (i22 = 1; 2 > i22; i22++) {
                    sFld |= (short)i19;
                    bArr[i22] = b;
                    try {
                        i23 = (i22 % 45872);
                        i23 = (i20 % -82);
                        Test.iFld = (i22 / -217);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = (long)d2;
                    i21 %= (int)(by2 | 1);
                    by2 += (byte)i22;
                    i21 <<= i19;
                    Test.instanceCount += (((i22 * Test.iFld1) + i16) - i23);
                    i17 += (((i22 * f2) + Test.instanceCount) - i22);
                    if (false) continue;
                }
                switch (((37322 >>> 1) % 2) + 76) {
                case 76:
                    Test.instanceCount += (10931L + (f2 * f2));
                    Test.iArrFld[(int)(f2 - 1)] = -113;
                    Test.instanceCount = 11558;
                case 77:
                    i17 = i16;
                }
            }
        }

        FuzzerUtils.out.println("d2 b i16 = " + Double.doubleToLongBits(d2) + "," + (b ? 1 : 0) + "," + i16);
        FuzzerUtils.out.println("i17 f2 i18 = " + i17 + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by2 bArr = " + i23 + "," + by2 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("sFld Test.iArrFld Test.fArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test.iArrFld) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
