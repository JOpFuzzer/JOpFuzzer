// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-237L;
    public static int iFld=246;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4, byte by) {

        int i5=64941, i6=59156, i7=8, i8=-1, i9=-180, i10=-158;
        boolean b1=false;
        float f=-22.302F;
        double d=-5.26907;

        for (i5 = 3; i5 < 161; ++i5) {
            b1 = b1;
            for (i7 = 1; 10 > i7; ++i7) {
                i3 += i7;
                switch ((((i4 >>> 1) % 3) * 5) + 19) {
                case 33:
                    f /= (Test.instanceCount | 1);
                    f = 113.721F;
                    Test.instanceCount = (long)f;
                    for (i9 = 1; i9 < 2; i9++) {
                        i3 >>>= (int)Test.instanceCount;
                    }
                    break;
                case 20:
                    if (true) break;
                    break;
                case 25:
                    d = 64061;
                    i4 <<= 33;
                    i6 = i6;
                    by += (byte)i6;
                    break;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + by + i5 + i6 + (b1 ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f) + i9 + i10 +
            Double.doubleToLongBits(d);
    }

    public static void vMeth1(long l, int i2, long l1) {

        byte by1=118;

        vMeth2(i2, i2, by1);
        vMeth1_check_sum += l + i2 + l1 + by1;
    }

    public static void vMeth(int i, boolean b, int i1) {

        int i11=-64626, i12=-5406, i13=-46620, i14=9, i15=-132, iArr[]=new int[N];
        float f1=-1.696F;

        FuzzerUtils.init(iArr, 17);

        vMeth1(Test.instanceCount, i1, Test.instanceCount);
        i1 *= -2;
        Test.instanceCount = i;
        Test.instanceCount += i;
        i11 = 1;
        while (++i11 < 155) {
            iArr[i11 - 1] <<= i;
            for (i12 = i11; 10 > i12; i12++) {
                i += (((i12 * i11) + Test.instanceCount) - f1);
                Test.instanceCount <<= i1;
                f1 += i12;
                f1 += i13;
                for (i14 = 1; 1 > i14; i14++) {
                    f1 *= Test.instanceCount;
                    i13 = (int)f1;
                    f1 = i15;
                }
            }
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b2=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth(Test.iFld, b2, Test.iFld);
        bArr[(Test.iFld >>> 1) % N] = b2;

        FuzzerUtils.out.println("b2 bArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld = " + Test.instanceCount + "," + Test.iFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
