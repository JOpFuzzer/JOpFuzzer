// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3497574583251941089L;
    public static byte byFld=-57;
    public static boolean bFld=false;
    public static byte byFld1=-46;
    public static int iFld=-49;
    public int iArrFld[]=new int[N];
    public static volatile byte byArrFld[]=new byte[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-76);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by, int i4, int i5) {

        int i6=-27979, i7=-14, i8=14, i9=-10, i10=3, i11=-7;
        double d1=-77.72149;
        float f1=104.912F;

        i6 = 1;
        do {
            Test.bFld = false;
            Test.instanceCount += i6;
            i5 += (i6 * i5);
            if (i5 != 0) {
                vMeth1_check_sum += by + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 +
                    Float.floatToIntBits(f1);
                return;
            }
            Test.instanceCount += (((i6 * i5) + i4) - by);
        } while (++i6 < 306);
        Test.instanceCount = -47609L;
        for (d1 = 3; d1 < 286; ++d1) {
            if (false) {
                Test.instanceCount = Test.instanceCount;
            } else if (Test.bFld) {
                for (i8 = 6; 1 < i8; --i8) {
                    for (i10 = 1; i10 < 2; i10++) {
                        i11 /= -59830;
                        i4 *= -64924;
                        f1 = i8;
                    }
                }
            }
        }
        vMeth1_check_sum += by + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 +
            Float.floatToIntBits(f1);
    }

    public static float fMeth(double d, int i1) {

        float f=-121.581F, fArr[]=new float[N];
        int i2=9560, i3=-9409, i12=150, i13=76;
        short s=5632;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -2L);
        FuzzerUtils.init(fArr, 30.155F);

        f += ((lArr[(i1 >>> 1) % N]++) / ((Test.byFld--) | 1));
        for (i2 = 13; i2 < 270; ++i2) {
            vMeth1(Test.byFld, i2, i2);
            for (i12 = 1; i12 < 6; i12++) {
                f *= -3379;
                f += (((i12 * Test.instanceCount) + f) - i2);
                d = 12.13693;
                Test.instanceCount = i1;
                i1 *= i2;
                Test.instanceCount &= i12;
                fArr = fArr;
            }
            i3 += (i2 ^ i13);
            if (Test.bFld) {
                i3 = Test.byFld;
                f += i12;
            } else if (Test.bFld) {
                s <<= (short)i13;
            } else {
                Test.byFld1 = (byte)-5640;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + Float.floatToIntBits(f) + i2 + i3 + i12 + i13 + s +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i=7, i14=-4, i15=-51619, i16=-21326, i17=237, i18=-72;
        float f2=-127.461F;
        double d2=79.54661;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)43);

        i -= (int)(-50566 - fMeth(30.49781, Test.iFld));
        i14 = 318;
        do {
            if (Test.bFld) {
                for (i15 = 1; 10 > i15; i15 += 2) {
                    f2 -= Test.instanceCount;
                    Test.iFld = (int)f2;
                    if (Test.bFld) break;
                    Test.instanceCount = (long)f2;
                    switch (((i14 % 4) * 5) + 88) {
                    case 103:
                        i16 -= i16;
                        d2 += i16;
                        break;
                    case 94:
                        for (i17 = 1; i17 < 3; ++i17) {
                            i18 /= (int)(Test.instanceCount | 1);
                            byArr = byArr;
                            Test.iFld += (i17 * f2);
                        }
                        break;
                    case 102:
                        f2 /= (i15 | 1);
                        break;
                    case 91:
                        Test.iFld += (((i15 * i14) + i) - i15);
                        break;
                    }
                }
            }
        } while ((i14 -= 2) > 0);
        vMeth_check_sum += i + i14 + i15 + i16 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i17 + i18 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        double d3=-1.127437, d4=-5.80954;
        int i19=53982, i20=107, i22=-19495;
        float f3=72.940F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -8996928526909602951L);

        vMeth();
        for (d3 = 260; d3 > 6; d3 -= 3) {
            i19 = Test.iFld;
            Test.instanceCount <<= Test.iFld;
            i20 = 1;
            while (++i20 < 298) {
                int i21=-4;
                Test.iFld += i20;
                Test.instanceCount += (long)d3;
                if (Test.bFld) continue;
                Test.iFld += i21;
                i21 *= Test.iFld;
                switch (((i20 % 10) * 5) + 28) {
                case 37:
                    i19 *= (int)78393354788239458L;
                    break;
                case 67:
                    i22 = 1;
                    do {
                        Test.iFld = (int)Test.instanceCount;
                        Test.instanceCount += (long)f3;
                        f3 = i22;
                        i19 -= (int)2739881007682630504L;
                        Test.iFld -= (int)d3;
                        switch ((i20 % 9) + 77) {
                        case 77:
                            i19 += (((i22 * Test.iFld) + i22) - f3);
                            i21 -= -179;
                            Test.iFld += (((i22 * Test.iFld) + i22) - Test.instanceCount);
                        case 78:
                            iArrFld[i20 - 1] += (int)d4;
                            Test.instanceCount += i19;
                        case 79:
                        case 80:
                            Test.instanceCount = i20;
                            switch ((int)((d3 % 10) + 5)) {
                            case 5:
                                iArrFld[(i22 >>> 1) % N] = (int)2511331536297343727L;
                                Test.instanceCount *= i22;
                                break;
                            case 6:
                                f3 -= Test.iFld;
                                Test.iFld += (((i22 * f3) + Test.instanceCount) - Test.iFld);
                                break;
                            case 7:
                                iArrFld[(int)(d3)] >>= 12;
                                break;
                            case 8:
                            case 9:
                                Test.iFld += (int)Test.instanceCount;
                                break;
                            case 10:
                                Test.byArrFld[i22 + 1] >>= (byte)i19;
                            case 11:
                                Test.instanceCount >>= i22;
                                break;
                            case 12:
                                Test.iFld += (i22 * i22);
                            case 13:
                                Test.instanceCount += i22;
                                break;
                            case 14:
                                if (true) break;
                                break;
                            default:
                                iArrFld[i22 + 1] = Test.iFld;
                            }
                        case 81:
                            Test.iFld = (int)Test.instanceCount;
                            break;
                        case 82:
                            if (false) continue;
                            break;
                        case 83:
                            iArrFld[i20 - 1] ^= 8;
                            break;
                        case 84:
                            Test.instanceCount += (i22 | i22);
                        case 85:
                            f3 += -156;
                            break;
                        }
                    } while (++i22 < 1);
                    break;
                case 42:
                    if (Test.bFld) continue;
                case 51:
                    dArrFld[i20 - 1] -= 1621310935L;
                    break;
                case 32:
                    Test.iFld = -212;
                    break;
                case 45:
                    f3 *= Test.instanceCount;
                    break;
                case 44:
                    i19 >>= i21;
                case 50:
                    Test.iFld += (((i20 * Test.iFld) + i20) - Test.instanceCount);
                case 38:
                    if (Test.bFld) break;
                    break;
                case 48:
                    lArr1 = FuzzerUtils.long1array(N, (long)-31180L);
                    break;
                default:
                    if (Test.bFld) continue;
                }
            }
        }

        FuzzerUtils.out.println("d3 i19 i20 = " + Double.doubleToLongBits(d3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i22 f3 d4 = " + i22 + "," + Float.floatToIntBits(f3) + "," +
            Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld1 Test.iFld iArrFld = " + Test.byFld1 + "," + Test.iFld + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.byArrFld dArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
