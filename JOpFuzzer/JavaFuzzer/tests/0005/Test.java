// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5635488940251595837L;
    public static byte byFld=-73;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 55377);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2) {

        double d1=0.119279;
        int i5=51572, i6=-114, i7=-60909, i8=34439, i9=22878;
        boolean b1=false;
        long l1=129L;

        Test.instanceCount *= (long)d1;
        i5 = 1;
        do {
            for (i6 = 1; i6 < 5; i6++) {
                Test.instanceCount /= ((long)(f2) | 1);
                b1 = b1;
                i7 *= i5;
                for (i8 = i5; i8 < 2; ++i8) {
                    try {
                        i7 = (364497817 % i5);
                        Test.iArrFld[i8 - 1] = (i5 % -62);
                        i9 = (i9 / i7);
                    } catch (ArithmeticException a_e) {}
                    i7 &= i9;
                    i7 <<= i7;
                }
                i7 += (40 + (i6 * i6));
            }
            l1 = 1;
            while (++l1 < 5) {
                f2 = 37593;
            }
            Test.iArrFld[i5 + 1] -= (int)l1;
            f2 += (i5 + Test.byFld);
        } while (++i5 < 340);
        vMeth1_check_sum += Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i5 + i6 + i7 + (b1 ? 1 : 0) + i8 +
            i9 + l1;
    }

    public static long lMeth(float f1, int i1, int i2) {

        int i3=-236, i4=-28505, i10=6, i11=-251, i12=-3632, i13=6, i14=26813;
        boolean b=false;
        float f3=-88.696F;

        i2 -= (int)(i1 = (int)Test.instanceCount);
        for (i3 = 336; i3 > 2; i3 -= 3) {
            if (b) {
                Test.byFld *= (byte)i4;
                if (b) break;
                vMeth1(f1);
            } else if (b) {
                i2 += (((i3 * i1) + i1) - Test.instanceCount);
                for (f3 = 1; f3 < 14; f3++) {
                    Test.iArrFld = Test.iArrFld;
                    Test.iArrFld[i3 - 1] >>= 5;
                }
            }
            i10 = (int)Test.instanceCount;
        }
        for (i11 = 8; i11 < 142; ++i11) {
            for (i13 = 1; i13 < 12; i13++) {
                i2 = 3;
                Test.iArrFld[i13] >>= i12;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i1 + i2 + i3 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f3) + i10 +
            i11 + i12 + i13 + i14;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f, long l) {

        int i=-171, i15=-43229, i16=-18547, i17=-243, i18=-134;
        double d=115.47060, d2=35.120403;
        byte by=-49, byArr[]=new byte[N];
        short s=-8011;
        boolean b2=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-15);
        FuzzerUtils.init(lArr, -4257163779L);

        i = (int)((--i) * (++Test.instanceCount));
        i -= (int)(((f + i) - (Test.instanceCount - d)) - ((by & i) - (-2.22093 + i)));
        Test.iArrFld[(i >>> 1) % N] = (int)lMeth(f, i, i);
        i &= s;
        i >>= s;
        for (i15 = 14; i15 < 391; ++i15) {
            for (d2 = 1; d2 < 4; d2++) {
                s += (short)(((d2 * i16) + i) - i16);
                i18 = 1;
                while (++i18 < 2) {
                    d *= s;
                    lArr[(i16 >>> 1) % N] = (long)d2;
                    f += -25679;
                }
                if (b2) continue;
                i16 -= (int)l;
            }
        }
        i = 4;
        vMeth_check_sum += Float.floatToIntBits(f) + l + i + Double.doubleToLongBits(d) + by + s + i15 + i16 +
            Double.doubleToLongBits(d2) + i17 + i18 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        double d3=0.37657, d4=40.85973;
        int i19=3, i20=-1, i21=-13, i22=-13, i23=-46120, i24=0, i25=-7;
        float f4=126.729F;
        boolean b3=true;

        vMeth(0.585F, Test.instanceCount);
        for (d3 = 367; 15 < d3; d3--) {
            i19 *= i19;
            for (i20 = (int)(d3); i20 < 72; ++i20) {
                i19 ^= i19;
                Test.instanceCount = 8712L;
                i21 *= (int)f4;
                Test.instanceCount += (i20 ^ i20);
                f4 += (i20 * i20);
            }
            Test.iArrFld[(int)(d3)] *= (int)d3;
            i19 += (int)(((d3 * Test.instanceCount) + i20) - i20);
            i19 = i21;
            b3 = b3;
        }
        Test.instanceCount >>= Test.instanceCount;
        i22 = 290;
        do {
            i23 = 1;
            while (++i23 < 87) {
                switch ((i22 % 2) + 113) {
                case 113:
                case 114:
                    i19 >>= i21;
                    i21 = (int)f4;
                    for (i24 = i23; i24 < 1; ++i24) {
                        int i26=-194;
                        Test.instanceCount += (i24 + i26);
                        Test.iArrFld[i22 - 1] = i25;
                        i21 >>= i21;
                        switch (((i23 % 3) * 5) + 76) {
                        case 83:
                            i25 += (i24 - Test.instanceCount);
                        case 78:
                            d4 -= Test.byFld;
                            d4 -= i26;
                            break;
                        case 84:
                            Test.instanceCount += (-189 + (i24 * i24));
                            Test.instanceCount += (i24 * i24);
                            break;
                        default:
                            Test.iArrFld[i23 - 1] += (int)Test.instanceCount;
                        }
                    }
                    break;
                }
            }
        } while (--i22 > 0);

        FuzzerUtils.out.println("d3 i19 i20 = " + Double.doubleToLongBits(d3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f4 b3 = " + i21 + "," + Float.floatToIntBits(f4) + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 d4 = " + i25 + "," + Double.doubleToLongBits(d4));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iArrFld = " + Test.instanceCount + "," + Test.byFld
            + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
