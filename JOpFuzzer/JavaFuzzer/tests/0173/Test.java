// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=56811L;
    public static byte byFld=61;
    public static int iFld=2;
    public static float fFld=2.117F;
    public static long lArrFld[][]=new long[N][N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -154L);
        FuzzerUtils.init(Test.fArrFld, 1.284F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, int i5, int i6) {

        int i7=-208, i8=4, i9=-11, i10=-5, i11=-56516, iArr[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, -30630);

        iArr[(i5 >>> 1) % N] -= (int)f1;
        for (i7 = 12; i7 < 298; i7++) {
            Test.instanceCount ^= -61890;
            i8 = i7;
            if (false) break;
            f1 -= -2548273399L;
            i6 += (i7 ^ i8);
            b = b;
            i8 = (int)Test.instanceCount;
            i9 = 1;
            while (++i9 < 6) {
                i6 %= (int)(i5 | 1);
                Test.instanceCount *= -111;
                for (i10 = 1; i10 > i7; i10 -= 3) {
                    iArr[i10 + 1] -= i6;
                    b = b;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i3, int i4) {

        int i12=51533, i13=50222, i14=3, i15=-58253, i16=14562, i17=68;
        boolean b1=false;
        double d=-19.34129, d1=123.106841;
        float f2=0.888F;

        vMeth1(-75.76F, i3, i4);
        for (i12 = 331; 15 < i12; --i12) {
            i13 += (int)Test.instanceCount;
            i4 = i4;
            if (b1) break;
            if (b1) break;
            Test.lArrFld[i12 - 1][i12 - 1] <<= i3;
            for (i14 = 5; i14 > i12; i14--) {
                for (d = 1; d < 1; ++d) {
                    d1 -= i3;
                    i17 += (int)(d + i3);
                    f2 -= Test.instanceCount;
                    i3 ^= i17;
                    i17 -= i12;
                    b1 = b1;
                }
            }
        }
        long meth_res = i3 + i4 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d) + i16 +
            Double.doubleToLongBits(d1) + i17 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i2) {

        int i18=3, i19=51809, i20=-7, iArr1[]=new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr1, 7);

        i2 = (((i2++) + (++Test.byFld)) + iMeth(i2, i2));
        i18 = 1;
        do {
            double d2=-118.125399;
            switch (((i18 % 2) * 5) + 88) {
            case 97:
                for (i19 = 1; i19 < 5; i19++) {
                    i20 = 172;
                    i20 *= i18;
                    iArr1[i19 + 1] = Test.iFld;
                }
                break;
            case 89:
                d2 %= 229L;
                i20 = (int)-2L;
                i20 += (i18 * i18);
            }
            switch (((i18 % 3) * 5) + 96) {
            case 111:
                i20 *= (int)Test.instanceCount;
                iArr1 = iArr1;
                Test.instanceCount >>>= -8L;
                i20 += (int)-187L;
                break;
            case 110:
                Test.instanceCount = Test.iFld;
                break;
            case 106:
                Test.lArrFld = Test.lArrFld;
                break;
            default:
                if (b2) break;
            }
        } while (++i18 < 361);
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i18 + i19 + i20 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=10, i1=9, i21=53806, i22=29763, i23=-88, i24=28815, i25=7, i26=7721, iArr2[]=new int[N];
        short s=-17021;
        double d3=-67.104239;

        FuzzerUtils.init(iArr2, 35158);

        for (i = 8; i < 161; ++i) {
            vMeth(-124.504F, i1);
            Test.fArrFld[i] = i1;
            Test.iFld += (i | s);
            for (i21 = 164; i21 > 7; i21 -= 2) {
                Test.lArrFld[i21 + 1][i - 1] = Test.byFld;
                Test.iFld = i22;
                iArr2[i - 1] *= Test.byFld;
                i22 = i21;
                i1 = i;
                i1 = i1;
            }
            i1 = Test.iFld;
            Test.iFld += (((i * Test.iFld) + Test.instanceCount) - i1);
            i22 = i22;
            for (i23 = 2; i23 < 164; i23++) {
                Test.fFld %= (Test.instanceCount | 1);
                for (i25 = i23; i25 < 2; i25++) {
                    iArr2[i25] <<= s;
                    iArr2[i23 + 1] = (int)Test.instanceCount;
                    switch ((i23 % 10) + 98) {
                    case 98:
                        i1 %= (int)((long)(Test.fFld) | 1);
                        i26 += (int)1.878F;
                        switch ((i25 % 1) + 3) {
                        case 3:
                            i24 = (int)Test.instanceCount;
                            Test.instanceCount >>>= Test.instanceCount;
                            Test.iFld = (int)d3;
                            i1 *= (int)Test.instanceCount;
                        default:
                            Test.iFld = i23;
                            Test.iFld -= (int)Test.instanceCount;
                        }
                        break;
                    case 99:
                        i26 -= (int)Test.instanceCount;
                    case 100:
                        i1 += i25;
                        break;
                    case 101:
                        i22 += i1;
                        break;
                    case 102:
                        iArr2[i + 1] *= 25915;
                        break;
                    case 103:
                        i1 = (int)Test.fFld;
                        break;
                    case 104:
                        Test.byFld = Test.byFld;
                        break;
                    case 105:
                        iArr2[i + 1] >>>= 13;
                        break;
                    case 106:
                        Test.fFld *= (float)d3;
                        break;
                    case 107:
                        Test.fFld = 1L;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d3 iArr2 = " + Double.doubleToLongBits(d3) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.fFld Test.lArrFld Test.fArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
