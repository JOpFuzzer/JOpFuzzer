// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=55350L;
    public static double dFld=0.99474;
    public static boolean bFld=false;
    public static byte byFld=3;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 16584);
        FuzzerUtils.init(Test.lArrFld, -2358924630L);
        FuzzerUtils.init(Test.byArrFld, (byte)9);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, long l) {

        int i4=11, i5=0, i6=149, i7=23, i8=-6, i9=-1, i10=47609, i11=55, i12=-1;
        byte by1=-54;
        short s=-7837;
        double d1=0.130647;

        for (i4 = 309; i4 > 1; i4 -= 3) {
            Test.instanceCount <<= i3;
            by1 = (byte)-2630;
            s -= by1;
            i5 = i3;
        }
        for (d1 = 150; d1 > 4; --d1) {
            for (i7 = 1; i7 < 11; i7++) {
                for (i9 = 1; i9 < 2; i9 += 2) {
                    l >>>= Test.instanceCount;
                }
            }
            Test.iArrFld = Test.iArrFld;
        }
        for (i11 = 4; i11 < 169; i11++) {
            by1 = (byte)s;
            Test.iArrFld[i11] = i12;
            by1 *= (byte)i6;
            if (Test.bFld) break;
        }
        vMeth2_check_sum += i3 + l + i4 + i5 + by1 + s + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + i11 +
            i12;
    }

    public void vMeth1(double d) {

        int i1=169, i2=-196, i13=59517, i14=-93, i15=-172;
        byte by=-2;
        float f=-95.652F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.885F);

        for (i1 = 24; i1 < 392; ++i1) {
            by += (byte)(i1 * f);
            vMeth2(i2, Test.instanceCount);
            i13 = 1;
            do {
                f = i2;
                for (i14 = 1; 1 > i14; i14++) {
                    i15 = i1;
                    fArr[i13 - 1] += Test.instanceCount;
                    i2 = (int)Test.instanceCount;
                    i2 >>>= -98;
                    by *= (byte)5;
                    i15 |= i15;
                }
                Test.iArrFld[i13 - 1] <<= i2;
                fArr[i1 - 1] -= i13;
                Test.lArrFld[i1] ^= Test.instanceCount;
            } while (++i13 < 5);
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i1 + i2 + by + Float.floatToIntBits(f) + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(int i) {

        int i16=59829, i17=0, i18=-148, i19=11, i20=-8, i21=-105, i22=14, iArr[]=new int[N];
        float f1=32.676F;

        FuzzerUtils.init(iArr, 120);

        Test.dFld -= ((Test.instanceCount + (Test.instanceCount + i)) - (--iArr[(189 >>> 1) % N]));
        vMeth1(-45.6400);
        Test.iArrFld[(i >>> 1) % N] /= (int)(Test.instanceCount | 1);
        for (i16 = 3; 249 > i16; i16++) {
            long l1=5886802043217756138L;
            i17 = (int)l1;
            i17 += (i16 * i16);
        }
        i18 = 387;
        while ((i18 -= 3) > 0) {
            switch (((i16 >>> 1) % 10) + 75) {
            case 75:
            case 76:
                for (i19 = 12; i19 > 1; --i19) {
                    i17 >>= i17;
                    f1 -= f1;
                    f1 += i19;
                    for (i21 = 2; 1 < i21; --i21) {
                        i = i18;
                        Test.instanceCount += (i21 | i21);
                    }
                }
            case 77:
                Test.instanceCount += i18;
                break;
            case 78:
                i20 = i19;
            case 79:
                if (i20 != 0) {
                    vMeth_check_sum += i + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f1) + i21 + i22 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
            case 80:
                Test.instanceCount <<= Test.instanceCount;
                break;
            case 81:
                if (i != 0) {
                    vMeth_check_sum += i + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f1) + i21 + i22 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                break;
            case 82:
                Test.instanceCount = i20;
                break;
            case 83:
                Test.instanceCount = 2731264094L;
            case 84:
                i22 += (((i18 * f1) + i18) - i21);
                break;
            default:
                Test.dFld = i22;
            }
        }
        vMeth_check_sum += i + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f1) + i21 + i22 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i23=-14, i24=12, i25=-26599, i26=40642, i27=8, i28=103;
        float f2=0.428F, fArr1[]=new float[N];
        short s1=-18013;

        FuzzerUtils.init(fArr1, 2.538F);

        vMeth(14);
        i23 = 302;
        while (--i23 > 0) {
            i24 = 1;
            do {
                i25 += (int)f2;
                fArr1[i23] += i25;
                switch ((i24 % 6) + 119) {
                case 119:
                    Test.instanceCount = i24;
                    i25 += (i24 * i24);
                    Test.dFld -= Test.instanceCount;
                    for (i26 = 1; i26 < 1; i26++) {
                        Test.instanceCount -= (long)f2;
                        Test.byFld += (byte)Test.instanceCount;
                        Test.iArrFld[i24 + 1] -= i25;
                        Test.instanceCount = 8408891107726877377L;
                        i25 <<= (int)-3517455356L;
                        Test.byFld = (byte)s1;
                        Test.iArrFld[i23 - 1] *= i26;
                        Test.instanceCount += (long)2.52530;
                        Test.instanceCount += (((i26 * i24) + i23) - f2);
                    }
                    break;
                case 120:
                    f2 += i24;
                    i25 += i24;
                    break;
                case 121:
                    Test.iArrFld[i23 - 1] -= i24;
                    break;
                case 122:
                    i28 = 1;
                    while ((i28 -= 2) > 0) {
                        f2 = f2;
                        Test.lArrFld[i28] -= i24;
                        Test.iArrFld[i28 + 1] /= 5;
                        Test.instanceCount -= Test.instanceCount;
                        Test.byArrFld[i24] = (byte)-160;
                        f2 *= (float)Test.dFld;
                    }
                    break;
                case 123:
                    Test.instanceCount += i24;
                    break;
                case 124:
                    Test.instanceCount = i28;
                    break;
                }
            } while (++i24 < 83);
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 i26 i27 = " + Float.floatToIntBits(f2) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s1 i28 fArr1 = " + s1 + "," + i28 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld Test.iArrFld Test.lArrFld = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
