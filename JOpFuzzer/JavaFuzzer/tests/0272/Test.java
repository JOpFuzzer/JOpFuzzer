// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=45436L;
    public static short sFld=-30326;
    public static float fFld=0.24F;
    public static boolean bFld=true;
    public static int iFld=-115;
    public static byte byFld=-65;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.188F);
    }

    public static long dMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4) {


        Test.instanceCount = i4;
        long meth_res = i4;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth() {

        int i3=8, i5=-7, i6=79, i7=-58341, i8=27031, i9=39563, i10=165, iArr[]=new int[N];
        double d1=2.93484;

        FuzzerUtils.init(iArr, -1);

        i3 = iMeth(i3);
        d1 += 24550;
        for (i5 = 12; i5 < 215; ++i5) {
            iArr[i5] = i3;
            Test.fFld += i5;
            i3 -= i5;
            for (i7 = 1; i7 < 8; i7++) {
                Test.fFld += i5;
                i8 = i5;
            }
            iArr[i5 + 1] += i5;
            for (i9 = 1; i9 < 8; ++i9) {
                i8 |= i5;
                if (Test.bFld) continue;
            }
            iArr[i5 - 1] *= i8;
            iArr[i5] *= i6;
        }
        long meth_res = i3 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public double dMeth(int i1, double d, int i2) {

        byte by=-99;
        int i11=-7, i12=8, i13=4, i14=14;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.10110);

        by += (byte)fMeth();
        for (i11 = 6; 211 > i11; i11++) {
            i1 = i2;
            Test.fFld += (((i11 * Test.fFld) + i2) - i11);
            for (i13 = 1; i13 < 8; i13++) {
                i12 += (i13 + i14);
                i14 *= i13;
                i1 -= (int)Test.instanceCount;
                switch (((i13 >>> 1) % 2) + 125) {
                case 125:
                    Test.fFld += (i13 * i12);
                    dArr[i11] = d;
                    i12 = (int)1.250F;
                    break;
                case 126:
                    by = (byte)-7;
                    i1 += (i13 | i12);
                    break;
                }
                Test.instanceCount += (i13 * i13);
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + i2 + by + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=217, i15=65, i16=10, i17=-2, i18=39893, iArr1[]=new int[N];
        double d2=2.108549;
        float f=-95.397F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)4);
        FuzzerUtils.init(iArr1, 154);

        i = 1;
        while (++i < 214) {
            Test.sFld = (short)(i - (byArr[i] -= (byte)(i + Test.fFld)));
            switch (((((int)(-28678 - dMeth(i, d2, i))) >>> 1) % 3) + 82) {
            case 82:
                Test.iFld += (((i * i) + i) - Test.iFld);
                Test.sFld = (short)i;
            case 83:
                for (i15 = 2; 117 > i15; ++i15) {
                    i16 = Test.byFld;
                }
                Test.fFld += (((i * Test.iFld) + i15) - Test.instanceCount);
                break;
            case 84:
                Test.iFld = i;
                Test.byFld += (byte)i;
                i16 -= (int)f;
                break;
            default:
                Test.iFld += (int)Test.instanceCount;
                Test.iFld *= i15;
            }
            i16 += 14;
            Test.iFld += i;
        }
        Test.fArrFld = Test.fArrFld;
        for (i17 = 2; i17 < 224; i17++) {
            iArr1 = iArr1;
        }
        Test.fArrFld[(Test.iFld >>> 1) % N] = (float)d2;
        f = (float)d2;
        Test.bFld = Test.bFld;

        FuzzerUtils.out.println("i d2 i15 = " + i + "," + Double.doubleToLongBits(d2) + "," + i15);
        FuzzerUtils.out.println("i16 f i17 = " + i16 + "," + Float.floatToIntBits(f) + "," + i17);
        FuzzerUtils.out.println("i18 byArr iArr1 = " + i18 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld Test.iFld Test.byFld = " + (Test.bFld ? 1 : 0) + "," + Test.iFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  fMeth ->  fMeth dMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
