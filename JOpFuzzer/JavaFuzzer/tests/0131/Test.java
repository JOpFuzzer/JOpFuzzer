// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-22L;
    public static double dFld=70.80376;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1L);
        FuzzerUtils.init(Test.iArrFld, 39535);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1) {

        int i3=13599, i4=10, i5=8, i6=-62824, i7=-247, i8=-15;
        float f=-2.976F;

        for (i3 = 2; i3 < 355; ++i3) {
            i4 -= i3;
        }
        i4 -= (int)-5995264682536425020L;
        Test.instanceCount += (long)Test.dFld;
        for (i5 = 3; i5 < 215; i5 += 3) {
            i6 *= -13;
            i7 = 1;
            do {
                switch ((i7 % 2) + 1) {
                case 1:
                    Test.lArrFld[i5 + 1] -= i7;
                    i8 = 1;
                    do {
                        l1 = i3;
                        i6 >>= (int)l1;
                        f = f;
                        Test.iArrFld[i5] *= i5;
                    } while (++i8 < 1);
                    f += i5;
                case 2:
                    Test.dFld -= f;
                    break;
                }
            } while (++i7 < 22);
        }
        long meth_res = l1 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(int i1) {

        int i2=-54287, i9=-122, i10=96, i11=26157, i12=35, i13=3;
        short s1=29900;
        byte by=26;

        i2 = 1;
        while (++i2 < 204) {
            Test.instanceCount += (++i1);
            Test.instanceCount = iMeth(Test.instanceCount);
            for (i9 = 1; i9 < 8; ++i9) {
                i10 = s1;
                for (i11 = 1; 2 > i11; ++i11) {
                    i13 -= i2;
                    Test.instanceCount += (i11 ^ i2);
                    i13 = by;
                    Test.instanceCount += (-41 + (i11 * i11));
                    try {
                        i12 = (i13 % -178);
                        Test.iArrFld[i11] = (Test.iArrFld[i9 - 1] % 40220);
                        i12 = (i2 / -44223);
                    } catch (ArithmeticException a_e) {}
                    i12 += (((i11 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    Test.dFld += i9;
                    i10 += (i11 + Test.instanceCount);
                }
            }
            s1 += (short)(14681 + (i2 * i2));
        }
        vMeth1_check_sum += i1 + i2 + i9 + i10 + s1 + i11 + i12 + i13 + by;
    }

    public void vMeth(long l, short s) {

        int i=-20210, i14=-1, i15=34, i16=-54871, i17=-29, i18=155, i19=74;
        float f1=122.973F;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 34.6383);

        dArr[(i >>> 1) % N][(i >>> 1) % N] += (i - (i++));
        vMeth1(16583);
        dArr[(i >>> 1) % N][(i >>> 1) % N] = 104.16F;
        for (i14 = 3; i14 < 285; i14++) {
            for (i16 = 1; 6 > i16; i16++) {
                i15 = (int)Test.instanceCount;
                for (i18 = 1; i18 < 2; i18++) {
                    i -= -51671;
                    l = i19;
                    i -= i19;
                    Test.bFld = Test.bFld;
                    Test.lArrFld[i18] = -46608;
                    i19 += (((i18 * f1) + i16) - i19);
                    i17 <<= i;
                    f1 += i;
                }
            }
        }
        vMeth_check_sum += l + s + i + i14 + i15 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.instanceCount, (short)(26411));


        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
