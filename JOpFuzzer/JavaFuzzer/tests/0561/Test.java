// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=8898673397501949406L;
    public static byte byFld=62;
    public float fFld=25.86F;
    public static boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6, int i7) {

        int i8=41660, i9=24, i10=-63649, i11=-8, i12=25863, iArr[]=new int[N];
        double d=50.50633, dArr[]=new double[N];
        boolean b=false;
        float f1=-92.111F;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -103);
        FuzzerUtils.init(sArr, (short)21154);
        FuzzerUtils.init(dArr, -118.130700);

        i5 -= i7;
        i6 = i5;
        i8 = 393;
        while ((i8 -= 3) > 0) {
            try {
                i7 = (i6 / iArr[i8]);
                iArr[i8 - 1] = (-237 / i5);
                iArr[i8 - 1] = (i6 % 250);
            } catch (ArithmeticException a_e) {}
        }
        if (b) {
            i7 &= 115;
            i6 += (int)d;
        } else if (false) {
            Test.byFld *= (byte)Test.instanceCount;
        } else if (b) {
            sArr[(i9 >>> 1) % N] -= (short)i8;
            i10 = 150;
            while ((i10 -= 2) > 0) {
                Test.instanceCount = i5;
                if (b) break;
                for (i11 = 1; i11 < 21; i11++) {
                    dArr[i10 - 1] = i12;
                    if (b) break;
                }
            }
        } else {
            Test.byFld = (byte)f1;
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + (b ? 1 : 0) + i11 + i12 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static long lMeth() {

        int i4=-14, i13=167, i14=2712, i15=-46677, i16=-230, iArr1[]=new int[N];
        double d1=-93.45692;
        float f2=-116.77F;

        FuzzerUtils.init(iArr1, -33458);

        switch (((i4 >>> 1) % 4) + 62) {
        case 62:
            vMeth1(-22096, i4, i4);
            iArr1[(i4 >>> 1) % N] += i4;
            i4 = 13;
            for (i13 = 6; 129 > i13; i13++) {
                i14 <<= (int)Test.instanceCount;
                for (i15 = 1; 13 > i15; ++i15) {
                    i14 -= (int)Test.instanceCount;
                    i16 += (int)d1;
                    d1 = d1;
                    i16 = (int)d1;
                    Test.instanceCount = 84L;
                    i14 = i4;
                    i16 *= -162;
                    i4 = i13;
                }
            }
            break;
        case 63:
            iArr1[(6 >>> 1) % N] = i14;
            break;
        case 64:
            i14 = i4;
            break;
        case 65:
            f2 += Test.instanceCount;
            break;
        }
        long meth_res = i4 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f, int i) {

        int i1=-174, i2=-49555, i3=-55, i17=120;
        float fArr[][]=new float[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -1.973F);
        FuzzerUtils.init(lArr, 3L);

        i1 = 1;
        while ((i1 += 3) < 379) {
            for (i2 = 1; i2 < 12; ++i2) {
                Test.instanceCount <<= ((-lMeth()) - i2);
                fArr[i2][i1] += -8897604094823913705L;
                f = -496;
                i3 *= i;
                i3 = (int)Test.instanceCount;
                i17 = 1;
                while (++i17 < 2) {
                    lArr[i17] *= i3;
                    Test.instanceCount += Test.instanceCount;
                    i |= i2;
                    i >>= i3;
                    i3 |= i2;
                }
                i3 = (int)Test.instanceCount;
                i += (i2 * i2);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i3 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-66, i19=-14981, i20=-29788, i21=-206, i22=-9, iArr2[]=new int[N];
        double d2=0.48024;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -7L);
        FuzzerUtils.init(iArr2, 10);

        vMeth(fFld, i18);
        for (long l : lArr1) {
            for (i19 = 2; i19 < 63; i19++) {
                i18 >>= i19;
                i18 <<= i20;
                switch (((i19 % 2) * 5) + 126) {
                case 130:
                    if (Test.bFld) break;
                    break;
                case 133:
                    i18 -= (int)l;
                    i18 = (int)l;
                    break;
                }
                i18 -= i19;
                i20 = i18;
                for (i21 = 2; 1 < i21; i21--) {
                    short s=-901;
                    lArr1[i21] = i20;
                    i20 += (((i21 * i22) + i19) - i18);
                    switch (((i19 >>> 1) % 9) + 90) {
                    case 90:
                        s *= (short)-12;
                        Test.byFld >>= (byte)i22;
                        i20 += (i21 | l);
                        Test.byFld >>= (byte)i21;
                    case 91:
                    case 92:
                        if (Test.bFld) continue;
                        d2 = Test.instanceCount;
                        lArr1[i21 + 1] = i20;
                        iArr2[i19 - 1] = -3;
                        break;
                    case 93:
                        i18 += i21;
                        if (Test.bFld) break;
                        i18 = i21;
                        break;
                    case 94:
                        i22 -= (int)86.45410;
                        i18 = (int)1.704F;
                        break;
                    case 95:
                        i20 = i19;
                        fFld = i22;
                        break;
                    case 96:
                        Test.instanceCount -= i22;
                        break;
                    case 97:
                        if (false) continue;
                        break;
                    case 98:
                        fFld += (((i21 * Test.instanceCount) + i22) - l);
                        break;
                    default:
                        i20 = (int)d2;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 d2 = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("lArr1 iArr2 = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld fFld = " + Test.instanceCount + "," + Test.byFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.bFld = " + (Test.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
