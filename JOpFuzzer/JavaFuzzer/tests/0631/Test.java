// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static float fFld=-1.59F;
    public static volatile float fFld1=35.493F;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, double d, long l1) {

        int i8=-7, i9=21435, i10=-46964, i11=-9, i12=8;
        float f=0.317F, fArr[]=new float[N];
        double d1=-49.83629;
        boolean b=true;

        FuzzerUtils.init(fArr, -8.561F);

        i7 = (int)d;
        Test.iArrFld[(i7 >>> 1) % N] = i7;
        i7 = (int)Test.instanceCount;
        for (i8 = 2; i8 < 248; i8 += 3) {
            l1 += i9;
            i9 += (((i8 * f) + Test.instanceCount) - i8);
        }
        fArr[(i9 >>> 1) % N] = (float)d;
        for (i10 = 19; 392 > i10; i10++) {
            if (b) {
                for (d1 = 1; d1 < 5; ++d1) {
                    i12 = i7;
                }
                l1 = -75;
            } else if (b) {
                i7 = i10;
                try {
                    i12 = (i11 % -840548569);
                    i7 = (i9 % Test.iArrFld[i10 + 1]);
                    i9 = (i7 % 12551);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld[i10 + 1] = i12;
            } else if (true) {
                i7 += -27705;
            } else {
                f = i8;
            }
        }
        vMeth2_check_sum += i7 + Double.doubleToLongBits(d) + l1 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 +
            Double.doubleToLongBits(d1) + i12 + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i4, int i5, int i6) {

        double d2=-96.74460;
        int i14=97, i15=-959, i16=0, i17=10, i18=49603, i19=126;
        boolean b1=false;
        float f1=22.813F;
        short s=4440;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 16L);

        Test.iArrFld[(i4 >>> 1) % N] = i5;
        vMeth2(-13, d2, Test.instanceCount);
        i5 = (int)-1470726836107340219L;
        Test.fFld += Test.fFld;
        if (b1) {
            i14 = 1;
            while (++i14 < 191) {
                lArr[i14 + 1][i14 + 1] += i6;
            }
        }
        for (i15 = 6; i15 < 306; i15++) {
            for (i17 = 1; i17 < 6; i17++) {
                for (f1 = 1; f1 < 2; ++f1) {
                    switch ((i15 % 5) + 30) {
                    case 30:
                        Test.instanceCount += i5;
                        b1 = b1;
                        Test.instanceCount = i16;
                        break;
                    case 31:
                        try {
                            Test.iArrFld[i17] = (i17 % i19);
                            i4 = (i5 / i4);
                            i19 = (i6 / Test.iArrFld[i15]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 32:
                    case 33:
                        i19 = i14;
                        break;
                    case 34:
                        lArr[i15 + 1][(int)(f1)] -= s;
                        break;
                    default:
                        lArr[i17][i15 - 1] *= Test.instanceCount;
                    }
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d2) + i14 + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 +
            Float.floatToIntBits(f1) + i19 + s + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i, int i1, long l) {

        int i2=-10, i3=-10287, i20=7, i21=48430;
        double d3=-2.70443;

        for (i2 = 4; i2 < 203; i2++) {
            switch ((i2 % 5) + 73) {
            case 73:
                vMeth1(i2, i2, i);
                break;
            case 74:
                i3 >>= i3;
                break;
            case 75:
                l &= i2;
                break;
            case 76:
                switch ((i2 % 5) + 26) {
                case 26:
                    Test.instanceCount *= i;
                    d3 -= i2;
                case 27:
                    for (i20 = 8; i20 > i2; i20 -= 3) {
                        byte by=-3;
                        by >>>= by;
                        if (i1 != 0) {
                            vMeth_check_sum += i + i1 + l + i2 + i3 + Double.doubleToLongBits(d3) + i20 + i21;
                            return;
                        }
                        try {
                            Test.iArrFld[i2] = (-1542338921 / i);
                            i = (-64 % i3);
                            i3 = (i % 190);
                        } catch (ArithmeticException a_e) {}
                        i21 += i20;
                    }
                    Test.fFld += 142;
                    i21 += (i2 - Test.fFld);
                    break;
                case 28:
                    i21 = (int)-6L;
                    break;
                case 29:
                case 30:
                    Test.iArrFld[(i2 >>> 1) % N] |= i20;
                }
                break;
            case 77:
                Test.instanceCount = -14;
                break;
            }
        }
        vMeth_check_sum += i + i1 + l + i2 + i3 + Double.doubleToLongBits(d3) + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i22=43, i23=12, i24=7, i25=30298, i26=14, i27=35567, i28=111;
        boolean b2=true, bArr[]=new boolean[N];
        float f3=119.80F;
        double d4=0.61738;
        short s1=14616;

        FuzzerUtils.init(bArr, true);

        vMeth(i22, i22, Test.instanceCount);
        i22 -= (int)Test.instanceCount;
        bArr[(i22 >>> 1) % N] = b2;
        for (float f2 : fArrFld) {
            for (i23 = 3; i23 < 63; ++i23) {
                i24 *= (int)Test.fFld1;
                Test.iArrFld[i23 + 1] ^= i23;
                i24 += i22;
                Test.fFld1 *= i23;
                i22 = (int)Test.instanceCount;
                i22 &= (int)Test.instanceCount;
                i24 += (int)Test.instanceCount;
                i24 *= (int)Test.instanceCount;
            }
            i22 -= (int)64.80541;
            if (b2) break;
            switch (((i23 >>> 1) % 3) + 65) {
            case 65:
                for (i25 = 1; 63 > i25; i25++) {
                    Test.fFld1 += ((long)i25 | (long)Test.fFld1);
                    f3 = i24;
                    i24 = (int)Test.instanceCount;
                }
                i27 = 1;
                do {
                    Test.fFld1 *= i27;
                    i22 += (((i27 * i25) + i24) - i22);
                    d4 += Test.instanceCount;
                    i28 = 1;
                    while (--i28 > 0) {
                        f2 -= 0;
                        byArrFld[(i27 >>> 1) % N] += (byte)i22;
                        Test.instanceCount += (i28 ^ s1);
                        i24 *= i27;
                        Test.instanceCount = -9;
                    }
                } while (++i27 < 63);
                break;
            case 66:
                i26 *= i28;
            case 67:
                d4 = i24;
                break;
            }
        }

        FuzzerUtils.out.println("i22 b2 i23 = " + i22 + "," + (b2 ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f3 i27 d4 = " + Float.floatToIntBits(f3) + "," + i27 + "," +
            Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i28 s1 bArr = " + i28 + "," + s1 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.fFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println("Test.iArrFld fArrFld byArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
