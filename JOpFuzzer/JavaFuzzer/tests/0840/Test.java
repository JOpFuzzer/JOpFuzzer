// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-925554577L;
    public static float fArrFld[]=new float[N];
    public static volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 11.961F);
        FuzzerUtils.init(Test.iArrFld, -2);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, int i3, int i4) {


        Test.iArrFld = Test.iArrFld;
        vMeth1_check_sum += l1 + i3 + i4;
    }

    public static float fMeth(int i2) {

        byte by=-92;
        float f1=-1.875F;
        int i5=56468, i6=-1, i7=-135, i8=-23079, i9=-10;
        double d=0.4306, dArr[]=new double[N];
        short sArr[][]=new short[N][N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(sArr, (short)9448);
        FuzzerUtils.init(lArr2, -40708L);
        FuzzerUtils.init(dArr, 88.35814);

        by = (byte)(--sArr[(i2 >>> 1) % N][(i2 >>> 1) % N]);
        f1 += (sArr[(i2 >>> 1) % N][(i2 >>> 1) % N] - (lArr2[(i2 >>> 1) % N] - (by + 14)));
        vMeth1(11L, i2, -16792);
        for (i5 = 4; i5 < 279; ++i5) {
            i7 = 1;
            do {
                Test.instanceCount += (i7 - Test.instanceCount);
                Test.iArrFld[i7 + 1][i5] &= i5;
                d *= i6;
                Test.instanceCount *= 13;
                dArr[i7] -= Test.instanceCount;
            } while (++i7 < 6);
        }
        for (i8 = 9; i8 < 357; ++i8) {
            Test.iArrFld[i8 + 1][i8 - 1] -= i6;
            i9 += (i8 * i5);
            Test.iArrFld[i8] = Test.iArrFld[i8 + 1];
            if (i6 != 0) {
            }
        }
        long meth_res = i2 + by + Float.floatToIntBits(f1) + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + i9 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i1=10683, i10=-234, i11=10, i12=-100, i13=12, i14=205;
        float f2=-94.168F, f3=-2.640F;
        boolean b=false;
        short s=-1939;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -7L);

        lArr1 = lArr1;
        Test.fArrFld[(i1 >>> 1) % N] += fMeth(i1);
        for (i10 = 324; i10 > 16; i10--) {
            for (f2 = i10; f2 < 5; f2++) {
                if (b) continue;
                Test.instanceCount += Test.instanceCount;
                i11 += (int)((long)f2 ^ Test.instanceCount);
                i12 += (int)((long)f2 ^ i11);
                try {
                    i1 = (1881865677 % i1);
                    i12 = (2092558318 % i11);
                    Test.iArrFld[(int)(f2)][i10] = (i12 % i11);
                } catch (ArithmeticException a_e) {}
                s = (short)i11;
                if (b) {
                    lArr1[i10] = lArr1[i10];
                    for (i13 = 1; i13 < 1; ++i13) {
                        i1 = (int)Test.instanceCount;
                        f3 -= f3;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i10 + i11 + Float.floatToIntBits(f2) + i12 + (b ? 1 : 0) + s + i13 + i14 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f=-2.392F, f4=-48.283F;
        int i=-49136, i15=-36988, i16=-12, i17=173, i18=29425;
        byte by1=117;
        long l2=-46739L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, -39364L);

        for (f = 192; f > 5; f--) {
            vMeth();
            i = i;
            Test.instanceCount -= i;
            i15 = 1;
            while (++i15 < 134) {
                boolean b1=false;
                i16 = 1;
                while (++i16 < 1) {
                    Test.instanceCount += i16;
                    Test.instanceCount -= Test.instanceCount;
                    Test.instanceCount <<= -4L;
                }
                i += (-64898 + (i15 * i15));
                i17 = 1;
                while (++i17 < 1) {
                    Test.iArrFld[i15 - 1][i17] *= i17;
                    by1 += (byte)(i17 * i17);
                    f4 += i16;
                    i += i17;
                    Test.instanceCount = Test.instanceCount;
                    i += i17;
                    f4 += (((i17 * by1) + i17) - i15);
                    Test.iArrFld[(int)(f)][i17 + 1] -= (int)Test.instanceCount;
                }
                switch ((int)((f % 8) + 28)) {
                case 28:
                    if (false) {
                        i = i17;
                        for (l2 = 1; l2 < 1; ++l2) {
                            i = i15;
                            f4 += (l2 * l2);
                            Test.instanceCount = i18;
                            i += (int)(((l2 * i17) + l2) - Test.instanceCount);
                            Test.iArrFld[(int)(l2)][(int)(f + 1)] = (int)l2;
                        }
                        Test.instanceCount >>>= -10;
                    } else if (b1) {
                        i = -95;
                    } else {
                        i18 >>= i15;
                    }
                    break;
                case 29:
                    b1 = b1;
                    break;
                case 30:
                    i18 += (int)Test.instanceCount;
                    break;
                case 31:
                    by1 += (byte)i16;
                case 32:
                    i18 *= -240;
                    break;
                case 33:
                    Test.iArrFld[(int)(f + 1)][(int)(f)] <<= (int)l2;
                    break;
                case 34:
                    Test.instanceCount += 18795L;
                    break;
                case 35:
                    Test.fArrFld[(int)(f + 1)] = Test.instanceCount;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("f i i15 = " + Float.floatToIntBits(f) + "," + i + "," + i15);
        FuzzerUtils.out.println("i16 i17 by1 = " + i16 + "," + i17 + "," + by1);
        FuzzerUtils.out.println("f4 l2 i18 = " + Float.floatToIntBits(f4) + "," + l2 + "," + i18);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fArrFld Test.iArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
