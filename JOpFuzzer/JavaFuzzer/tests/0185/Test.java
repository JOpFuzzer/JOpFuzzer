// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-26577L;
    public static float fFld=-83.562F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5628L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth(byte by) {

        int i=-1, i1=-19636;

        i -= i1;
        vMeth_check_sum += by + i + i1;
    }

    public static int iMeth1(long l2) {

        int i5=-35910, i6=-27511, i7=-24196, i8=53429, i9=21, i10=-10790, i11=18488, i12=-13;
        boolean b=false;

        for (i5 = 5; i5 < 210; i5++) {
            l2 |= i6;
            for (i7 = 1; i7 < 8; ++i7) {
                i8 = -10;
            }
            i6 += (((i5 * l2) + i8) - i7);
            Test.instanceCount = 5290L;
        }
        i6 = (int)Test.instanceCount;
        Test.fFld -= -118;
        if (b) {
            for (i9 = 2; 324 > i9; ++i9) {
                i11 = 1;
                while (++i11 < 5) {
                    l2 -= 25987;
                    i12 = 1;
                    do {
                        i8 = i5;
                        try {
                            i6 = (i11 / -14575);
                            i6 = (i8 % 877671899);
                            i8 = (i10 / 5);
                        } catch (ArithmeticException a_e) {}
                    } while (++i12 < 1);
                }
            }
        } else {
            Test.instanceCount *= i10;
        }
        long meth_res = l2 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i4=-179, i13=-111, i14=63, i15=-13, i16=14733, i17=91, i18=-41, iArr1[]=new int[N];
        byte by1=76;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.67183);
        FuzzerUtils.init(iArr1, 136);

        dArr[(i4 >>> 1) % N][(i4 >>> 1) % N] = iMeth1(Test.instanceCount);
        i13 = 1;
        do {
            for (i14 = 1; i14 < 12; i14++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    short s=25561;
                    Test.lArrFld[i16 - 1] = -10;
                    i15 >>= i4;
                    iArr1[i16 - 1] -= by1;
                    iArr1[i14 + 1] = s;
                    i18 -= (int)Test.instanceCount;
                    i4 += i16;
                    Test.lArrFld[i16 - 1] -= 206;
                    Test.fFld += i18;
                }
                i15 = (int)Test.instanceCount;
                Test.fFld -= Test.fFld;
                i18 -= (int)-3.415F;
            }
        } while (++i13 < 133);
        vMeth1_check_sum += i4 + i13 + i14 + i15 + i16 + i17 + by1 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, int i3, long l1) {


        vMeth1();
        Test.fFld += i3;
        long meth_res = l + i3 + l1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i2=5, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 1);

        vMeth((byte)(iArr[(i2 >>> 1) % N] - (i2 + (6 + iMeth(Test.instanceCount, i2, Test.instanceCount)))));

        FuzzerUtils.out.println("i2 iArr = " + i2 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.lArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
