// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=52454L;
    public static float fFld=0.300F;
    public boolean bFld=true;
    public static boolean bArrFld[]=new boolean[N];
    public double dArrFld[]=new double[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i1=40867, i2=100, i3=-6811, i4=-52496, i5=-187, i6=204, iArr1[]=new int[N];
        float f=-2.745F, f1=0.220F;
        short s=1140;

        FuzzerUtils.init(iArr1, 6);

        i1 = 1;
        do {
            i2 = 1;
            while (++i2 < 11) {
                Test.instanceCount += i2;
                i3 += i2;
                i3 = i1;
                for (f = i2; f < 1; ++f) {
                    iArr1[i2 - 1] -= -40;
                    iArr1[i1 - 1] = i3;
                    f1 += (((f * i4) + i4) - Test.instanceCount);
                    i3 = i1;
                    Test.instanceCount += (long)f;
                    i4 += (int)(f - s);
                }
                for (i5 = 1; 1 > i5; ++i5) {
                    i4 -= i2;
                    i3 += s;
                }
            }
        } while (++i1 < 144);
        vMeth2_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + s + i5 + i6 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i) {

        byte by=111;
        boolean b=false;
        int i7=-18, i8=7, i9=-64763, iArr[]=new int[N];
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -63432);
        FuzzerUtils.init(dArr, 2.40121);
        FuzzerUtils.init(lArr, 4305324578040929652L);

        i >>= (int)(iArr[(i >>> 1) % N] * (Test.instanceCount += by));
        vMeth2();
        if (b) {
            dArr[(i >>> 1) % N] = i;
        }
        i ^= i;
        for (i7 = 17; i7 < 369; ++i7) {
            double d1=66.48802;
            lArr[i7] *= (long)Test.fFld;
            i -= i8;
            i >>= (int)-4266494663869272208L;
            Test.bArrFld[i7 - 1] = b;
            i9 = (int)d1;
        }
        Test.fFld -= i7;
        vMeth1_check_sum += i + by + (b ? 1 : 0) + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(double d) {

        int i10=8, i11=-83, i12=242, i13=-64698, i14=1, i15=-57963, i16=0, i17=-237, iArr2[][]=new int[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr2, 9893);
        FuzzerUtils.init(byArr, (byte)-116);

        vMeth1(i10);
        for (i11 = 4; i11 < 131; i11++) {
            int i18=58663;
            i13 += i12;
            iArr2[i11][(2 >>> 1) % N] = i13;
            Test.fFld = i12;
            switch ((((i10 >>> 1) % 2) * 5) + 86) {
            case 90:
                for (i14 = 1; i14 < 12; i14 += 3) {
                    iArr2[i14 + 1][i11] = i11;
                    for (i16 = 1; i16 < 4; ++i16) {
                        switch ((i16 % 7) + 61) {
                        case 61:
                            byArr[i14 + 1] -= (byte)i10;
                            iArr2[i16][i11] -= (int)d;
                            Test.instanceCount += (i16 - Test.instanceCount);
                            dArrFld[i16] *= Test.fFld;
                            break;
                        case 62:
                            i15 += (-3 + (i16 * i16));
                            break;
                        case 63:
                            i10 += i11;
                            break;
                        case 64:
                            Test.instanceCount *= 1360193900L;
                            break;
                        case 65:
                        case 66:
                            i15 += i11;
                            break;
                        case 67:
                            i13 -= -14;
                        default:
                            i13 = (int)Test.fFld;
                        }
                    }
                }
            case 91:
                i17 += (((i11 * i16) + i14) - i18);
                break;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        double d2=70.108883;
        int i19=-55192, i20=-10675, i21=89, i22=-238, i23=-90, i24=-5, i25=28638, i26=-1, i27=11, i28=-214, iArr3[]=new
            int[N];
        long l=-8L;
        short s1=9589;

        FuzzerUtils.init(iArr3, -63383);

        vMeth(d2);
        i19 = -14984;
        l = 1;
        do {
            for (i20 = 3; i20 < 70; ++i20) {
                for (i22 = 1; 2 > i22; ++i22) {
                    bFld = bFld;
                    if (bFld) break;
                    i19 *= s1;
                    i21 = i23;
                    Test.instanceCount = i23;
                    i23 -= i20;
                    d2 -= d2;
                    iArr3 = iArr3;
                    Test.instanceCount -= i21;
                    i23 >>>= -190;
                }
                i21 = i20;
                i23 -= (int)l;
                iArr3[i20 + 1] = i22;
                i24 = 1;
                while (++i24 < 2) {
                    iArr3[(int)(l - 1)] |= -26;
                }
            }
            fArrFld[(int)(l)] = i20;
            if (bFld) break;
            bFld = false;
            i19 += (13 + (l * l));
            for (i25 = (int)(l); i25 < 70; i25++) {
                i21 += (i25 | i26);
                for (i27 = 1; i27 < 1; i27++) {
                    i19 -= (int)Test.fFld;
                    i21 *= i23;
                    i19 = (int)Test.fFld;
                }
            }
        } while (++l < 358);

        FuzzerUtils.out.println("d2 i19 l = " + Double.doubleToLongBits(d2) + "," + i19 + "," + l);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 s1 i24 = " + i23 + "," + s1 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 iArr3 = " + i28 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.bArrFld dArrFld fArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
