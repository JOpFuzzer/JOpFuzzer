// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=126L;
    public static byte byFld=-54;
    public static boolean bFld=true;
    public static double dFld=-31.78104;
    public static volatile short sFld=5511;
    public static volatile byte byArrFld[][]=new byte[N][N];
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)127);
        FuzzerUtils.init(Test.dArrFld, 65.50946);
        FuzzerUtils.init(Test.fArrFld, 0.315F);
        FuzzerUtils.init(Test.iArrFld, -3828);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i12) {

        int i13=-14, i14=42379, i15=-12630, i16=2, i17=-4215, iArr[]=new int[N];
        float f1=2.213F, f2=-22.213F, fArr[]=new float[N];
        double d1=1.22605;
        boolean b=false;

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(fArr, 0.883F);

        iArr[(-52368 >>> 1) % N] -= 11;
        for (i13 = 6; i13 < 160; i13++) {
            i12 = i14;
            fArr[i13 - 1] *= i13;
            Test.byArrFld[i13 - 1][i13] -= (byte)62491;
            try {
                i14 = (iArr[i13 - 1] % 120);
                i12 = (945419840 % i14);
                i12 = (207 / i12);
            } catch (ArithmeticException a_e) {}
            if (b) {
                i14 += (int)f1;
                for (f2 = i13; f2 < 10; ++f2) {
                    Test.dArrFld[(int)(f2)] = i15;
                    Test.instanceCount *= i13;
                    for (i16 = 1; i16 < 1; ++i16) {
                        d1 -= Test.instanceCount;
                    }
                    i15 = i16;
                }
                f1 = f1;
            }
        }
        vMeth2_check_sum += i12 + i13 + i14 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i15 + i16 + i17 +
            Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i8, int i9) {

        int i10=7, i11=11, i18=12, i19=-38079, i20=41, i21=7;
        float f3=-1.289F;
        double d2=-1.96626;
        short s=-20187;

        i9 = i8;
        for (i10 = 135; i10 > 5; i10 -= 2) {
            vMeth2(i8);
            Test.instanceCount *= Test.instanceCount;
        }
        for (i18 = 6; i18 < 221; ++i18) {
            Test.instanceCount /= (i9 | 1);
            f3 += (i18 * i18);
            i20 = 1;
            while (++i20 < 7) {
                i9 += (i20 * i20);
                i21 = 1;
                while (++i21 < 1) {
                    switch ((i20 % 6) + 46) {
                    case 46:
                        i19 = (int)d2;
                        break;
                    case 47:
                        i11 = (int)1.374F;
                        i19 += (i21 + s);
                        i11 += (((i21 * i19) + s) - i9);
                        break;
                    case 48:
                        f3 += i19;
                        break;
                    case 49:
                        Test.instanceCount += i10;
                    case 50:
                        Test.byFld -= (byte)d2;
                        break;
                    case 51:
                        Test.fArrFld = FuzzerUtils.float1array(N, (float)0.834F);
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i18 + i19 + Float.floatToIntBits(f3) + i20 + i21 +
            Double.doubleToLongBits(d2) + s;
    }

    public void vMeth(double d, long l, long l1) {

        float f=80.254F;
        int i4=220, i5=117, i6=-15481, i7=221, iArr1[]=new int[N];
        long l2=-7L;

        FuzzerUtils.init(iArr1, 2);

        f = 1;
        while (++f < 192) {
            for (i4 = (int)(f); 8 > i4; ++i4) {
                i5 *= (int)(l1--);
                for (i6 = 1; i6 < 1; ++i6) {
                    vMeth1(9, i5);
                    i7 -= -51393;
                    d -= f;
                    iArr1[i6 - 1] -= (int)d;
                    i7 += (((i6 * l) + l) - i7);
                    if (Test.bFld) break;
                    l2 *= i6;
                    Test.instanceCount = -81;
                    i5 = i5;
                    i7 <<= i5;
                }
                iArr1[(int)(f)] = 27820;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l + l1 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + l2 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=142, i2=-20202, i3=13, i22=-13, i23=191, i24=46117, i25=91, i26=-35, i27=-154, i28=16357, i29=14,
            i30=-61;
        float f4=-1.909F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9L);

        for (i = 245; i > 1; i--) {
            for (i2 = i; i2 < 103; i2++) {
                vMeth(Test.dFld, Test.instanceCount, Test.instanceCount);
                Test.iArrFld[i] = FuzzerUtils.int1array(N, (int)-221);
                i1 += i2;
            }
            i3 <<= (int)Test.instanceCount;
            Test.iArrFld[i][i] = -13243;
            for (i22 = 4; i22 < 103; i22++) {
                for (i24 = 1; i24 < 2; ++i24) {
                    Test.iArrFld[i - 1][i] += i3;
                    i1 -= (int)Test.instanceCount;
                }
            }
            Test.sFld <<= (short)Test.instanceCount;
            i23 = (int)Test.instanceCount;
        }
        for (i26 = 5; i26 < 128; ++i26) {
            i28 = 1;
            while (++i28 < 204) {
                Test.dFld -= 0;
                lArr[i26] >>= 191L;
                i23 = i23;
            }
            i23 -= -43;
            Test.instanceCount <<= i;
            if (Test.bFld) {
                Test.iArrFld[i26 + 1][i26 + 1] *= i23;
            } else {
                if (Test.bFld) {
                    switch ((i26 % 2) + 7) {
                    case 7:
                        for (i29 = 2; i29 < 204; ++i29) {
                            switch (((i1 >>> 1) % 2) + 102) {
                            case 102:
                                i27 ^= i29;
                                i27 += (int)-44.94F;
                                Test.iArrFld[i26][i26 + 1] = 3;
                                break;
                            case 103:
                                f4 += (float)Test.dFld;
                                break;
                            default:
                                i25 /= (int)-94.123718;
                            }
                        }
                        break;
                    case 8:
                        Test.fArrFld[i26 - 1] *= 15196;
                    default:
                        lArr[i26] = Test.instanceCount;
                    }
                } else if (Test.bFld) {
                    i23 += i23;
                } else if (Test.bFld) {
                    Test.iArrFld[i26 + 1] = Test.iArrFld[i26 - 1];
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i22 i23 = " + i3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 f4 lArr = " + i30 + "," + Float.floatToIntBits(f4) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.sFld Test.byArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.sFld + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("Test.dArrFld Test.fArrFld Test.iArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
