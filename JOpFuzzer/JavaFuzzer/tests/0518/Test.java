// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-90L;
    public static float fFld=0.53F;
    public static int iFld=-237;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static volatile long lArrFld[]=new long[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 3);
        FuzzerUtils.init(Test.dArrFld, 0.127026);
        FuzzerUtils.init(Test.lArrFld, -2L);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static float fMeth(float f, int i2, int i3) {

        double d=-2.31428;

        i2 *= (int)(++d);
        i3 = (int)(((i3 >>>= (int)Test.instanceCount) + (i2 + -135)) + (Math.abs(Test.instanceCount) *
            (Test.instanceCount * f)));
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static byte byMeth(int i7, long l) {

        int i8=0, i9=-18738, i10=219, i11=-3, i12=12, i13=-94, i14=60578, i15=8157;
        short s1=6841;
        float f2=20.562F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 150L);

        for (i8 = 1; 197 > i8; ++i8) {
            i7 = i9;
        }
        i7 -= (int)Test.instanceCount;
        s1 *= (short)l;
        f2 *= i7;
        i7 = i9;
        for (i10 = 293; 18 < i10; i10--) {
            for (i12 = 1; i12 < 6; ++i12) {
                for (i14 = 1; i14 < 2; i14++) {
                    i13 *= i15;
                    switch ((i14 % 7) + 53) {
                    case 53:
                        l += (42810 + (i14 * i14));
                        lArr[i10] += i10;
                        break;
                    case 54:
                        i9 *= -6;
                        f2 = i7;
                        break;
                    case 55:
                        i9 >>= i7;
                    case 56:
                        i9 = i9;
                        break;
                    case 57:
                        Test.iArrFld[i14 - 1] -= s1;
                    case 58:
                        f2 = 3;
                        break;
                    case 59:
                        i15 -= (int)l;
                    default:
                        Test.iArrFld[i12 + 1] %= (int)((long)(f2) | 1);
                    }
                }
            }
        }
        long meth_res = i7 + l + i8 + i9 + s1 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(lArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static long lMeth(int i4, int i5, int i6) {

        short s=-22445;
        int i16=6, i17=9, i18=63769, i19=-36094, i20=5112;
        long l1=4614L;
        boolean b=false;
        byte by=42;

        s >>= byMeth(-108, Test.instanceCount);
        i6 = i4;
        try {
            Test.dArrFld[(i6 >>> 1) % N] -= i6;
            for (i16 = 19; i16 < (336 + 400); ++i16) {
                for (i18 = 1; i18 < 4; ++i18) {
                    i17 += (int)Test.instanceCount;
                    i17 += (i18 * i16);
                    for (l1 = i16; l1 < (2 + 400); ++l1) {
                        switch ((i18 % 7) + 75) {
                        case 75:
                            switch ((((i6 >>> 1) % 1) * 5) + 111) {
                            case 112:
                                switch ((((i19 >>> 1) % 2) * 5) + 28) {
                                case 38:
                                    i17 += (-5674 + (l1 * l1));
                                    Test.lArrFld[(int)(l1 + 1)] = l1;
                                    Test.bArrFld[i16 + 1] = b;
                                case 31:
                                    i19 = i6;
                                    break;
                                default:
                                    Test.fFld += (((l1 * i6) + i16) - i6);
                                }
                                break;
                            default:
                                i17 -= -333;
                            }
                        case 76:
                            i5 += i20;
                            break;
                        case 77:
                            i4 += i20;
                            break;
                        case 78:
                            Test.iArrFld[i16 - 1] = i18;
                            break;
                        case 79:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 80:
                            Test.iArrFld[i16 + 1] = i16;
                        case 81:
                            i20 += (-1 + (l1 * l1));
                            break;
                        default:
                            i5 += (int)(l1 * l1);
                        }
                    }
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            by += (byte)120;
        }
        long meth_res = i4 + i5 + i6 + s + i16 + i17 + i18 + i19 + l1 + i20 + (b ? 1 : 0) + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth() {

        int i=-142, i1=12, i22=226, i23=168, i24=5, i25=-33563;
        float f1=0.367F;
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)84);

        for (i = 17; i < 328; i++) {
            i1 = (int)(((Test.instanceCount * i1) - fMeth(f1, i1, i1)) - ((--i1) - lMeth(i1, i1, i1)));
            if (b1) {
                for (i22 = 1; i22 < 5; ++i22) {
                    if (b1) {
                        Test.instanceCount += i22;
                    } else {
                        for (i24 = 1; i24 < 2; ++i24) {
                            i25 *= i25;
                            b1 = b1;
                            if (i25 != 0) {
                            }
                            Test.instanceCount = Test.iFld;
                            Test.instanceCount = i1;
                            i23 = i23;
                            i23 += i24;
                        }
                        byArr[i] = (byte)Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f1) + i22 + i23 + (b1 ? 1 : 0) + i24 + i25 +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s2=-31955;
        int i26=-3, i27=-27463, i28=-2, i29=67, i30=19, i31=-11819, i32=0, i33=-1, i34=42312, i35=28756;
        double d1=1.45031;

        Test.instanceCount = (iMeth() + Test.iFld);
        Test.iArrFld[(-197 >>> 1) % N] -= s2;
        for (i26 = 1; i26 < 139; i26 += 2) {
            Test.instanceCount *= Test.instanceCount;
            Test.iFld = i26;
            Test.instanceCount <<= i26;
            Test.iFld += i26;
        }
        for (i28 = 1; i28 < 215; i28++) {
            i29 = i28;
            Test.instanceCount = Test.iFld;
            for (i30 = 4; 117 > i30; i30++) {
                i31 = s2;
                i31 = i27;
                i27 -= 21974;
                Test.iFld *= 28304;
            }
            for (i32 = 4; i32 < 117; i32++) {
                boolean b2=false;
                for (i34 = 1; i34 < 2; ++i34) {
                    i29 *= (int)d1;
                    Test.iArrFld[i32] *= (int)d1;
                    Test.instanceCount *= i30;
                }
                Test.instanceCount += (i32 * Test.instanceCount);
                Test.dArrFld[i32 + 1] = i26;
                Test.iArrFld[i32 - 1] = (int)Test.instanceCount;
                if (b2) {
                    d1 = 188;
                } else {
                    Test.dArrFld[i28 - 1] += i35;
                    d1 = Test.instanceCount;
                }
                i35 = (int)-67.794F;
                d1 = i28;
                i33 -= (int)1.146F;
            }
        }

        FuzzerUtils.out.println("s2 i26 i27 = " + s2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 i35 d1 = " + i34 + "," + i35 + "," + Double.doubleToLongBits(d1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
