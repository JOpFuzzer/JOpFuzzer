// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-41808L;
    public int iFld=24705;
    public static volatile float fFld=74.228F;
    public static boolean bFld=true;
    public static float fFld1=-2.444F;
    public static double dFld=-2.89301;
    public volatile byte byFld=23;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 12);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i3) {

        float f1=0.556F;
        int i5=-46904, i6=-23, i7=193, i8=-9, i9=-201, i10=-9, iArr[]=new int[N];
        long l=-185043921L;
        short s1=-21683;

        FuzzerUtils.init(iArr, -7);

        f1 += Test.instanceCount;
        for (int i4 : iArr) {
            for (i5 = 1; i5 < 4; ++i5) {
                f1 += (((i5 * l) + i5) - i5);
                for (i7 = 1; i7 < 2; i7++) {
                    i3 += 12;
                    i3 = i4;
                    if (i8 != 0) {
                    }
                    f1 += (((i7 * i8) + i4) - i8);
                    s1 -= (short)5502;
                    f1 += i5;
                }
                for (i9 = 1; i9 < 2; i9++) {
                    try {
                        i8 = (13758 % i3);
                        i6 = (iArr[i9 - 1] % iArr[i5]);
                        i3 = (i6 % -159);
                    } catch (ArithmeticException a_e) {}
                    i10 *= -13;
                    i3 = i7;
                }
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f1) + i5 + i6 + l + i7 + i8 + s1 + i9 + i10 +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth() {

        int i2=-14890, i11=13220, i12=109, i13=170, i14=-14, i15=127, i16=146, i17=-103, i18=-21387;
        short s2=25354;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 101.317F);

        i2 -= iMeth1(29959);
        for (i11 = 318; 1 < i11; i11--) {
            if (Test.bFld) {
                Test.fFld = i11;
                Test.fFld += i11;
                if (Test.bFld) continue;
            } else if (Test.bFld) {
                for (i13 = 1; i13 < 5; i13++) {
                    fArr[i13][i13 + 1] /= (i11 | 1);
                    for (i15 = 1; i15 < 2; ++i15) {
                        Test.instanceCount = i16;
                    }
                    for (i17 = 1; i17 < 2; ++i17) {
                        i18 = (int)Test.instanceCount;
                    }
                    i18 -= 36547;
                }
                Test.iArrFld1[i11] -= s2;
            } else {
                Test.iArrFld1[i11 - 1] = (int)33472L;
            }
        }
        long meth_res = i2 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + s2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(double d, int i, short s) {

        int i1=13, i19=-6, i20=4, i21=-9, i22=35210, i23=178, i24=-8;
        float f=76.236F, f2=-1.183F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -24377L);

        i1 = 1;
        while (++i1 < 204) {
            f = (float)dMeth();
            for (i19 = 1; i19 < 8; i19++) {
                i += i19;
                i20 = (int)Test.fFld;
                for (i21 = 1; 2 > i21; i21++) {
                    Test.instanceCount *= (long)Test.fFld1;
                    i20 -= -13;
                    Test.instanceCount += (((i21 * i20) + i23) - i22);
                }
                if (i21 != 0) {
                }
                i23 -= (int)Test.instanceCount;
                for (f2 = 1; 2 > f2; ++f2) {
                    lArr[(int)(f2 + 1)] -= i22;
                    i += i20;
                    i24 = i21;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i + s + i1 + Float.floatToIntBits(f) + i19 + i20 + i21 + i22 + i23
            + Float.floatToIntBits(f2) + i24 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i25=-29146, i26=9, i27=-9, i28=-6410, i29=118, i30=-5, i31=-6, i32=-153, i33=-66, i34=-243;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)30952);

        iArrFld[(iFld >>> 1) % N] -= iMeth(Test.dFld, iFld, (short)(4386));
        for (i25 = 8; i25 < 268; ++i25) {
            Test.dFld *= i26;
            if (Test.bFld) continue;
            i26 += (((i25 * i26) + Test.instanceCount) - i26);
        }
        for (i27 = 1; i27 < 143; i27++) {
            for (i29 = 11; 177 > i29; ++i29) {
                i30 = i27;
                for (i31 = 1; i31 < 2; i31++) {
                    i28 += i29;
                    iFld += (i31 - i25);
                    i26 += i31;
                    Test.iArrFld1[i31 + 1] = -235;
                    iFld += (i31 ^ Test.instanceCount);
                    sArr = FuzzerUtils.short2array(N, (short)12069);
                    Test.instanceCount += (1 + (i31 * i31));
                    i26 = byFld;
                    Test.instanceCount += Test.instanceCount;
                }
                for (i33 = i29; i33 < 2; i33++) {
                    i26 >>= (int)Test.instanceCount;
                    iFld = (int)-22281L;
                    i26 += (i33 - i25);
                    Test.instanceCount += (i33 * Test.instanceCount);
                    Test.fFld += (6 + (i33 * i33));
                    Test.fFld1 -= iFld;
                }
                Test.iArrFld1[i29] = (int)Test.instanceCount;
                i34 = 217;
                i28 += (i29 + i29);
                i32 -= (int)Test.instanceCount;
            }
        }
        Test.instanceCount &= Test.instanceCount;

        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 sArr = " + i34 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld Test.fFld1 Test.dFld = " + (Test.bFld ? 1 : 0) + "," +
            Float.floatToIntBits(Test.fFld1) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("byFld iArrFld Test.iArrFld1 = " + byFld + "," + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
