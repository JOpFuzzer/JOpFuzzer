// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-73L;
    public static byte byFld=-33;
    public static volatile int iFld=12;
    public static int iFld1=-4;
    public static boolean bFld=true;
    public static double dFld=-1.89373;
    public float fFld=77.559F;
    public short sFld=-24497;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 20);
        FuzzerUtils.init(Test.fArrFld, -1.874F);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, long l) {

        long l1=48591L;
        int i8=-124, i9=43246, i10=7, i11=9727, i12=16658, i13=24803, i14=21309, iArr[][]=new int[N][N];
        short s=-28249;
        float f=-101.842F;
        double d=-1.86458;

        FuzzerUtils.init(iArr, 5);

        for (l1 = 4; l1 < 274; ++l1) {
            i7 %= (int)(Test.byFld | 1);
        }
        Test.instanceCount -= l;
        i8 = i8;
        for (i9 = 11; i9 < 328; i9++) {
            switch (((i9 % 2) * 5) + 123) {
            case 127:
                i10 += i7;
                for (i11 = i9; i11 < 5; i11++) {
                    i10 += (i11 + i11);
                    for (i13 = 1; i13 < 1; i13++) {
                        iArr[i11][i11 - 1] = (int)l1;
                        s = (short)i14;
                        Test.instanceCount = 2;
                    }
                    f += i11;
                    i12 += -199;
                }
            case 132:
                i12 >>= (int)-3062521405L;
                break;
            default:
                d += Test.byFld;
            }
        }
        vMeth1_check_sum += i7 + l + l1 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + s + Float.floatToIntBits(f) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static short sMeth(int i, int i1, int i2) {

        int i3=-64505, i4=50159, i5=77, i6=15323, i16=37027, i17=-33775;
        long l2=4257665995L;
        float f1=-109.980F;

        i3 = 1;
        while (++i3 < 300) {
            for (i4 = 6; i4 > 1; i4 -= 2) {
                if (Test.bFld) {
                    i6 = 1;
                    while (++i6 < 3) {
                        int i15=237;
                        vMeth1(i3, Test.instanceCount);
                        i5 += (int)(14L + (i6 * i6));
                        i15 += (i6 + i4);
                    }
                    Test.iFld -= (int)Test.instanceCount;
                    i += -5;
                    for (i16 = 1; i16 < 3; ++i16) {
                        i += (int)l2;
                        i *= (int)l2;
                        Test.iFld1 += (122 + (i16 * i16));
                        i1 = 23;
                        i5 -= -139;
                    }
                } else {
                    f1 = (float)Test.dFld;
                }
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + i5 + i6 + i16 + i17 + l2 + Float.floatToIntBits(f1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth() {

        int i18=36795, i19=-1, i20=-7058, i21=-8, i22=-12, i23=5701, i24=-20146, iArr1[]=new int[N];
        short s1=-17920;
        float f2=2.244F;
        long l3=-4266942605L;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -178);
        FuzzerUtils.init(dArr, -2.56569);

        sMeth(Test.iFld, Test.iFld, Test.iFld1);
        for (i18 = 3; i18 < 136; i18++) {
            for (i20 = 1; i20 < 12; ++i20) {
                iArr1[i18 - 1] = (int)-19.1023F;
                i19 %= (int)(i21 | 1);
            }
            iArr1[i18] <<= s1;
            iArr1[i18 + 1] += (int)f2;
            Test.iFld += i18;
            for (i22 = i18; i22 < 12; i22++) {
                dArr[i22] += i22;
                Test.iFld1 += -25048;
                if (i22 != 0) {
                    vMeth_check_sum += i18 + i19 + i20 + i21 + s1 + Float.floatToIntBits(f2) + i22 + i23 + l3 + i24 +
                        FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                for (l3 = 1; l3 < 1; l3++) {
                    i24 += s1;
                    iArr1[i22 + 1] <<= Test.byFld;
                }
            }
        }
        vMeth_check_sum += i18 + i19 + i20 + i21 + s1 + Float.floatToIntBits(f2) + i22 + i23 + l3 + i24 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i25=-7, i26=0, i27=5330, i28=179, i29=-8, i30=29782;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 42865L);

        vMeth();
        Test.iFld -= (int)fFld;
        Test.iFld = (int)3713454323L;
        Test.iArrFld[(i25 >>> 1) % N] &= 189;
        i26 = 1;
        while (++i26 < 212) {
            for (i27 = 118; i27 > i26; i27--) {
                i29 = 1;
                while (++i29 < 1) {
                    Test.fArrFld[i27] = (float)Test.dFld;
                    Test.iFld1 -= i25;
                    Test.instanceCount >>= i29;
                    i28 *= i28;
                    Test.instanceCount |= Test.iFld1;
                }
                Test.iFld1 += 20220;
                Test.instanceCount += (i27 * i27);
                i28 -= (int)fFld;
                i25 += (int)Test.instanceCount;
                i30 = 1;
                do {
                    if (Test.bFld) {
                        Test.iArrFld[i26 - 1] <<= Test.iFld1;
                        Test.iFld *= i29;
                        sFld -= (short)i29;
                    } else if (Test.bFld) {
                        Test.instanceCount = sFld;
                        Test.iFld >>>= (int)Test.instanceCount;
                    } else if (Test.bFld) {
                        i25 += (int)(72.817F + (i30 * i30));
                        i25 = i25;
                        Test.iArrFld[i26 + 1] = (int)Test.dFld;
                    } else {
                        lArr[i27] = -8;
                    }
                    sFld = (short)i26;
                } while (++i30 < 1);
                i28 *= (int)Test.dFld;
                Test.instanceCount -= i25;
            }
        }

        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.iFld1 Test.bFld Test.dFld = " + Test.iFld1 + "," + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("fFld sFld Test.iArrFld = " + Float.floatToIntBits(fFld) + "," + sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
