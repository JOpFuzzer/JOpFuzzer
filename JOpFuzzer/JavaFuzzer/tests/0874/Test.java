// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3L;
    public int iFld=93;
    public static int iFld1=-85;
    public static double dFld=-114.128938;
    public static double dArrFld[][]=new double[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -2.117516);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        byte by=29;
        int i6=246, i7=4, i8=-39973, i9=73, i10=208, iArr1[]=new int[N];
        float f=-3.897F, f1=1.913F;
        short s=15715;

        FuzzerUtils.init(iArr1, -12285);

        Test.instanceCount *= by;
        Test.iFld1 += 10;
        iArr1[(Test.iFld1 >>> 1) % N] -= 7;
        for (i6 = 8; i6 < 139; i6++) {
            for (f = 1; 12 > f; ++f) {
                Test.iFld1 = Test.iFld1;
                Test.iFld1 *= -32446;
                for (i9 = 1; i9 < 2; i9++) {
                    switch (((i9 % 7) * 5) + 124) {
                    case 157:
                        f1 += Test.instanceCount;
                        Test.instanceCount += (i9 ^ s);
                        i8 *= 11528;
                        i8 *= (int)Test.instanceCount;
                        break;
                    case 141:
                        i10 *= i6;
                        break;
                    case 128:
                        if (i7 != 0) {
                            vMeth2_check_sum += by + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 +
                                Float.floatToIntBits(f1) + s + FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                    case 133:
                        Test.instanceCount >>= i10;
                    case 159:
                        iArr1[(int)(f - 1)] = i10;
                        break;
                    case 150:
                        Test.instanceCount = i10;
                        break;
                    case 149:
                        i8 += (((i9 * Test.iFld1) + f1) - Test.instanceCount);
                        break;
                    }
                }
            }
        }
        vMeth2_check_sum += by + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + Float.floatToIntBits(f1) + s +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i3, int i4, int i5) {

        int i11=-173, i12=225, i13=-2, i14=-59101, i15=1, i16=100, i17=69, i18=27344;
        boolean b=false;
        byte by1=87;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -103.661F);

        vMeth2();
        for (i11 = 8; i11 < 140; i11++) {
            if (b) break;
            for (i13 = 1; 12 > i13; ++i13) {
                i3 += (int)Test.instanceCount;
                Test.instanceCount = i4;
                i15 = 1;
                while (++i15 < 2) {
                    i16 += i13;
                    fArr[i11 + 1] = i15;
                    Test.instanceCount = Test.iFld1;
                    by1 = (byte)i14;
                }
                i12 += i13;
            }
            for (i17 = 1; i17 < 12; i17++) {
                Test.instanceCount += (i17 * Test.instanceCount);
                i14 += i14;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i11 + i12 + (b ? 1 : 0) + i13 + i14 + i15 + i16 + by1 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1, long l) {

        int i19=-834, i20=8, i21=-8, iArr[]=new int[N];
        float f2=0.322F, fArr1[]=new float[N];
        byte by2=-37;
        boolean b1=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(sArr, (short)-19614);
        FuzzerUtils.init(fArr1, 111.803F);

        for (int i2 : iArr) {
            try {
                iArr[(i >>> 1) % N] = (i1 % i2);
                i1 = (-1628 % i2);
                iArr[(i1 >>> 1) % N] = (iArr[(i >>> 1) % N] / -129);
            } catch (ArithmeticException a_e) {}
            vMeth1(Test.iFld1, i1, Test.iFld1);
            for (i19 = 1; i19 < 4; ++i19) {
                i21 = 1;
                do {
                    Test.iFld1 /= (int)(l | 1);
                    sArr[i21] += (short)l;
                    l *= i1;
                    switch ((i21 % 7) + 102) {
                    case 102:
                        Test.iFld1 += i;
                        Test.dArrFld[i21][i19] -= i2;
                        break;
                    case 103:
                        f2 = i2;
                        i20 += -19381;
                        break;
                    case 104:
                        Test.iFld1 += (((i21 * Test.instanceCount) + i1) - by2);
                        break;
                    case 105:
                    case 106:
                        fArr1 = FuzzerUtils.float1array(N, (float)-67.40F);
                        break;
                    case 107:
                        if (b1) break;
                    case 108:
                        Test.iFld1 <<= (int)4L;
                        break;
                    default:
                        l = i2;
                    }
                } while (++i21 < 2);
            }
        }
        vMeth_check_sum += i + i1 + l + i19 + i20 + i21 + Float.floatToIntBits(f2) + by2 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        float f3=-2.231F, f4=56.701F, f5=101.920F;
        int i22=-3, i23=12855, i24=-31293, i25=17469, i26=37, i27=2, i28=114, iArr2[]=new int[N];
        boolean b2=false;
        short s1=3947;

        FuzzerUtils.init(iArr2, 0);

        Test.instanceCount += (long)Test.dArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N];
        vMeth(Test.iFld1, Test.iFld1, Test.instanceCount);
        switch ((((Test.iFld1 >>> 1) % 2) * 5) + 18) {
        case 25:
            Test.dFld = iFld;
            break;
        case 24:
            iFld *= (int)Test.dFld;
            lArrFld[(Test.iFld1 >>> 1) % N] -= Test.instanceCount;
            break;
        }
        f3 = 1;
        do {
            for (i22 = 2; 68 > i22; i22++) {
                iFld -= -6;
                i23 = i22;
                Test.instanceCount += (i22 * i22);
                Test.instanceCount -= -20336;
                for (f4 = 1; f4 < 2; f4++) {
                    switch ((int)(((f4 % 1) * 5) + 62)) {
                    case 67:
                        iFld <<= i25;
                        break;
                    }
                    if (b2) continue;
                }
                for (i26 = 2; i26 > 1; i26 -= 3) {
                    Test.instanceCount >>= -140L;
                    i27 = iFld;
                    s1 += (short)-46603;
                    i24 <<= i24;
                    b2 = b2;
                }
                i23 += i22;
                Test.dFld *= s1;
                i28 = 1;
                while (++i28 < 2) {
                    i23 *= Test.iFld1;
                    iFld >>>= 48;
                    i27 -= iFld;
                    iArr2 = FuzzerUtils.int1array(N, (int)-57972);
                    f5 = s1;
                }
            }
        } while (++f3 < 373);

        FuzzerUtils.out.println("f3 i22 i23 = " + Float.floatToIntBits(f3) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f4 i24 i25 = " + Float.floatToIntBits(f4) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 i26 i27 = " + (b2 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s1 i28 f5 = " + s1 + "," + i28 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.dFld Test.dArrFld lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
