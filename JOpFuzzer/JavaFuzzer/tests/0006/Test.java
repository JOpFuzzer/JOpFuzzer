// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6584510954573061094L;
    public static volatile float fFld=-1.167F;
    public static byte byFld=103;
    public static short sFld=8326;
    public static boolean bFld=false;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f1=0.825F;
        int i3=51, i4=-44888, i5=10, i6=201, i7=-60422, iArr[]=new int[N];
        double d=86.67038, dArr[]=new double[N];
        boolean b=true;

        FuzzerUtils.init(dArr, 112.128928);
        FuzzerUtils.init(iArr, -191);

        for (f1 = 14; f1 < 260; ++f1) {
            dArr[(int)(f1 + 1)] %= (Test.instanceCount | 1);
            for (i4 = 1; i4 < 7; i4++) {
                d -= i5;
                Test.fFld = i5;
                try {
                    i3 = (i3 % i5);
                    iArr[(int)(f1)] = (i5 / 246);
                    iArr[(int)(f1 - 1)] = (1915 / i3);
                } catch (ArithmeticException a_e) {}
                if (b) break;
                iArr[i4] = i4;
                i5 = i5;
                iArr[i4 - 1] >>= (int)Test.instanceCount;
                if (i5 != 0) {
                }
            }
            for (i6 = 1; 7 > i6; i6++) {
                iArr[i6 + 1] -= i3;
                i3 += (i6 + i5);
                i3 = i7;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i3 + i4 + i5 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        int i8=50294, i9=3, i10=150, i11=19, i12=145, i13=-152, i14=-51003, i15=-67, i16=59141;
        boolean b1=true;
        double dArr1[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr1, 1.81853);
        FuzzerUtils.init(lArr, -665973908L);

        iMeth();
        for (i8 = 11; i8 < 204; ++i8) {
            for (i10 = 8; i10 > 1; --i10) {
                for (i12 = 2; i12 > 1; i12--) {
                    i9 += i12;
                    i14 = i11;
                    dArr1[i10 - 1] *= -24.37649;
                    i9 = i9;
                    b1 = b1;
                }
            }
            Test.instanceCount = i11;
            for (i15 = 1; i15 < 8; ++i15) {
                lArr[i15 - 1] = FuzzerUtils.long1array(N, (long)220L);
                Test.fFld *= i10;
                i1 = (int)380490848L;
                i14 += (i15 + i16);
            }
        }
        vMeth1_check_sum += i1 + i2 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (b1 ? 1 : 0) + i15 + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f, int i) {

        float f2=-71.738F, f3=1.576F;
        int i17=238, i18=58, i19=23, i20=-12, i21=4, i22=5, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -26675);

        vMeth1(i, i);
        for (f2 = 24; f2 < 395; f2 += 3) {
            iArr1[(int)(f2 - 1)] = i17;
            for (i18 = 1; 13 > i18; i18++) {
                iArr1[i18] += i;
                i17 = i;
                f = Test.byFld;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test.fFld += Test.fFld;
                    Test.fFld -= i18;
                }
                i21 -= i17;
                for (f3 = 1; f3 < 2; f3++) {
                    iArr1 = iArr1;
                    i19 &= 4;
                    Test.sFld >>= (short)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 + i21 +
            Float.floatToIntBits(f3) + i22 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i23=-11, i24=-4, i25=-12, i26=-29573, i27=154, i28=9;
        long lArr1[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, 5645282891804994173L);
        FuzzerUtils.init(byArr, (byte)55);

        vMeth(Test.fFld, i23);
        Test.fFld -= Test.fFld;
        Test.instanceCount &= Test.instanceCount;
        iArrFld = iArrFld;
        i24 = 1;
        while (++i24 < 216) {
            i23 -= i23;
            Test.bFld = Test.bFld;
            for (i25 = 2; i25 < 116; ++i25) {
                Test.sFld += (short)i25;
                for (i27 = 2; i27 > 1; i27 -= 2) {
                    i23 <<= i24;
                    if (Test.bFld) continue;
                    Test.instanceCount += i23;
                    i23 += (((i27 * i24) + i28) - i28);
                    switch (((i27 % 3) * 5) + 55) {
                    case 60:
                        i23 = i24;
                        break;
                    case 59:
                    case 69:
                        iArrFld[i24] -= (int)Test.instanceCount;
                        i23 += (((i27 * i23) + i23) - i27);
                        if (Test.bFld) {
                            i28 |= (int)Test.instanceCount;
                        } else if (true) {
                            lArr1[i25] %= -31368;
                            i23 = Test.sFld;
                            iArrFld[i25 - 1] = i24;
                            iArrFld[(i24 >>> 1) % N] >>>= i28;
                        }
                        break;
                    default:
                        i23 <<= 9;
                        Test.bFld = Test.bFld;
                        Test.instanceCount += i23;
                        byArr[i27 + 1] *= (byte)i26;
                    }
                    i23 += i27;
                    Test.instanceCount *= Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("lArr1 byArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld Test.bFld iArrFld = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
