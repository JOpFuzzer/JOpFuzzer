// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static byte byFld=34;
    public static short sFld=20523;
    public static double dFld=-2.16781;
    public volatile int iFld=-41579;
    public static float fArrFld[]=new float[N];
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 79.396F);
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, 150);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=27232, i5=61341, iArr[][]=new int[N][N];
        float f1=-2.685F, f2=82.585F;
        short s=15186;

        FuzzerUtils.init(iArr, 210);

        iArr[(i3 >>> 1) % N][(i3 >>> 1) % N] = i3;
        for (i4 = 6; 208 > i4; i4++) {
            i5 = i3;
            f1 = 8;
            do {
                Test.instanceCount -= i4;
                i5 = (int)Test.instanceCount;
                iArr[i4][i4] -= i3;
                Test.instanceCount >>= i5;
                i3 *= Test.byFld;
                i3 += (int)f2;
                i3 = 2;
            } while (--f1 > 0);
            i3 = s;
            i3 += (((i4 * Test.instanceCount) + i4) - i5);
            i5 += 5;
            Test.instanceCount += 6;
        }
        long meth_res = i3 + i4 + i5 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + s +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, boolean b, int i2) {

        int i6=12, i7=194, i8=-50876, i9=24661, i10=9;
        double d=-88.91867, dArr[]=new double[N];
        float f3=54.484F;

        FuzzerUtils.init(dArr, -2.42516);

        i2 &= ((-iMeth(i1)) % -62473);
        i6 = 1;
        do {
            Test.instanceCount += (-167 + (i6 * i6));
            for (i7 = 1; i7 < 5; i7++) {
                for (i9 = 1; i9 < 2; ++i9) {
                    Test.sFld = (short)i2;
                    Test.instanceCount = i7;
                    Test.sFld >>>= (short)i9;
                    d = f3;
                    i10 += (int)(948862752902779228L + (i9 * i9));
                    Test.instanceCount += i1;
                    i10 += i1;
                }
                i8 = i6;
                dArr[i7] = -5;
                Test.instanceCount = Test.instanceCount;
            }
        } while (++i6 < 362);
        vMeth1_check_sum += i1 + (b ? 1 : 0) + i2 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f3) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i11=-210, i12=146, i13=60804, i14=-5, iArr1[]=new int[N];
        boolean b1=true;
        long lArr[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 3);
        FuzzerUtils.init(lArr, -583689347L);
        FuzzerUtils.init(sArr, (short)2918);

        for (float f : Test.fArrFld) {
            vMeth1(i11, b1, i11);
            switch ((((i11 >>> 1) % 7) * 5) + 41) {
            case 64:
                iArr1[(58 >>> 1) % N] = i11;
                i12 = 1;
                while (++i12 < 4) {
                    Test.dFld = f;
                    for (i13 = 1; i13 < 1; i13 += 2) {
                        Test.instanceCount += (i13 - f);
                        Test.sFld += (short)i12;
                        iArr1[i12 + 1] += (int)Test.instanceCount;
                    }
                    iArr1[i12 + 1] -= -12;
                    switch (i12 + 114) {
                    case 114:
                        iArr1[i12 + 1] = (int)Test.instanceCount;
                        break;
                    case 115:
                        i14 += (i12 * i12);
                        break;
                    case 116:
                        lArr[i12] += i14;
                        break;
                    case 117:
                    case 118:
                        i11 = (int)Test.instanceCount;
                        break;
                    case 119:
                        i14 += 4;
                        break;
                    case 120:
                        iArr1[i12 + 1] >>= 3709;
                        break;
                    case 121:
                    case 122:
                        sArr[i12 + 1] <<= (short)52200;
                        break;
                    case 123:
                        i11 += (((i12 * Test.byFld) + i14) - i11);
                        break;
                    case 124:
                        iArr1[i12 - 1] &= i13;
                        break;
                    case 125:
                        f = (float)Test.dFld;
                        break;
                    case 126:
                        i11 = i13;
                        break;
                    case 127:
                        Test.instanceCount -= i14;
                        break;
                    case 128:
                        i14 += (int)Test.dFld;
                        break;
                    case 129:
                    case 130:
                        iArr1[i12 - 1] = 11870;
                    case 131:
                        Test.fArrFld[i12 + 1] = (float)0.50558;
                        break;
                    case 132:
                        i14 -= i12;
                    case 133:
                    case 134:
                        Test.instanceCount += i13;
                        break;
                    case 135:
                        Test.dFld += i11;
                        break;
                    case 136:
                        Test.byFld += (byte)1.115842;
                    case 137:
                        lArr[i12 + 1] = Test.instanceCount;
                        break;
                    case 138:
                        Test.instanceCount += (i12 * i12);
                        break;
                    case 139:
                        Test.dFld = Test.byFld;
                        break;
                    case 140:
                        i11 += (((i12 * Test.sFld) + i13) - Test.byFld);
                        break;
                    case 141:
                        lArr[i12] >>= Test.instanceCount;
                        break;
                    case 142:
                        i11 = 38;
                        break;
                    case 143:
                        iArr1[i12 - 1] += -10;
                        break;
                    case 144:
                        i11 -= i11;
                    case 145:
                        f = Test.instanceCount;
                    case 146:
                        f += i13;
                        break;
                    case 147:
                        i11 += Test.sFld;
                    case 148:
                        i14 *= (int)f;
                    case 149:
                        Test.dFld += Test.instanceCount;
                        break;
                    case 150:
                        i11 -= i14;
                        break;
                    case 151:
                        Test.instanceCount = -2115490041L;
                        break;
                    case 152:
                        i14 ^= i14;
                        break;
                    case 153:
                        Test.instanceCount *= 3;
                        break;
                    case 154:
                        Test.sFld = (short)i14;
                        break;
                    case 155:
                        if (b1) break;
                    case 156:
                        i11 >>>= (int)Test.instanceCount;
                    case 157:
                        i14 += (i12 + i12);
                        break;
                    case 158:
                        b1 = false;
                        break;
                    case 159:
                        Test.sFld += (short)(i12 + i12);
                        break;
                    case 160:
                        Test.instanceCount -= i11;
                        break;
                    case 161:
                        Test.byFld = (byte)Test.instanceCount;
                        break;
                    case 162:
                        i14 += Test.byFld;
                        break;
                    case 163:
                        i14 *= i12;
                        break;
                    case 164:
                        f *= Test.instanceCount;
                        break;
                    case 165:
                        f -= f;
                    case 166:
                        i14 = i12;
                        break;
                    case 167:
                        i11 *= i14;
                        break;
                    case 168:
                        iArr1[i12] = 9;
                    case 169:
                        i14 -= 10645;
                        break;
                    case 170:
                        iArr1[i12] *= (int)Test.instanceCount;
                    case 171:
                        i11 *= i11;
                        break;
                    case 172:
                        b1 = b1;
                        break;
                    case 173:
                        f += i12;
                        break;
                    case 174:
                        i14 *= (int)Test.instanceCount;
                        break;
                    case 175:
                        iArr1[i12] = i12;
                        break;
                    case 176:
                        iArr1[i12] = 48812;
                        break;
                    case 177:
                        f = -5522752324594598599L;
                        break;
                    case 178:
                        i14 >>>= i13;
                    case 179:
                        Test.instanceCount = (long)Test.dFld;
                    case 180:
                        i14 -= (int)Test.instanceCount;
                        break;
                    case 181:
                        iArr1[i12 - 1] = (int)Test.instanceCount;
                        break;
                    case 182:
                        iArr1 = iArr1;
                    case 183:
                        f *= -25;
                        break;
                    }
                }
                break;
            case 59:
                Test.bArrFld[(i11 >>> 1) % N] = b1;
                break;
            case 51:
                Test.instanceCount += i13;
                break;
            case 69:
                i14 += (int)f;
                break;
            case 50:
                iArr1[(i13 >>> 1) % N] = Test.byFld;
                break;
            case 55:
                f = i12;
                break;
            case 65:
                f = i14;
                break;
            }
        }
        vMeth_check_sum += i11 + (b1 ? 1 : 0) + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=5, i15=33911, i16=181, i17=32258, i18=-3, i19=10188, i20=23484;
        double d1=43.60229;
        float f4=0.657F;
        boolean b2=false;

        i = 1;
        do {
            vMeth();
            for (i15 = 139; i15 > 7; i15 -= 2) {
                i16 *= i;
                for (d1 = i15; d1 < 3; ++d1) {
                    i16 *= Test.sFld;
                    Test.instanceCount += (long)d1;
                    if (true) {
                        Test.instanceCount *= i16;
                        Test.instanceCount = iFld;
                        f4 -= Test.instanceCount;
                        i16 = i;
                    }
                    i17 = Test.byFld;
                    Test.instanceCount >>= i;
                    Test.instanceCount *= iFld;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-3);
                    b2 = false;
                }
            }
            i16 *= Test.byFld;
            i17 -= iFld;
            i17 = 5;
            b2 = b2;
            for (i18 = 1; i18 < 139; ++i18) {
                i20 = 1;
                while (++i20 < 2) {
                    if (true) break;
                    Test.iArrFld[i18] = (int)-34L;
                    Test.byFld = (byte)i19;
                    i19 = Test.sFld;
                    i17 = i18;
                    i16 += i20;
                    i16 <<= 33013;
                }
            }
        } while (++i < 180);

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("d1 i17 f4 = " + Double.doubleToLongBits(d1) + "," + i17 + "," +
            Float.floatToIntBits(f4));
        FuzzerUtils.out.println("b2 i18 i19 = " + (b2 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 = " + i20);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld iFld Test.fArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + iFld +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.bArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
