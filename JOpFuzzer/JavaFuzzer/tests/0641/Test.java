// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=23643L;
    public static int iFld=-45;
    public static volatile short sFld=24816;
    public static int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -153);
        FuzzerUtils.init(Test.dArrFld, -35.19322);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f2=-2.183F;
        int i6=162, i7=8987, i8=45563;

        switch (((Test.iFld >>> 1) % 2) + 122) {
        case 122:
            Test.iFld <<= 3509;
            break;
        case 123:
            Test.iFld += (int)f2;
            Test.instanceCount *= Test.iFld;
            for (i6 = 17; i6 < 277; i6++) {
                f2 = Test.iFld;
                i8 = 1;
                while (++i8 < 6) {
                    Test.iArrFld[i8 + 1] ^= i7;
                    Test.iArrFld = Test.iArrFld;
                    Test.iFld = i8;
                    Test.instanceCount = Test.instanceCount;
                    Test.dArrFld[i6] = Test.instanceCount;
                    i7 -= i6;
                    Test.iArrFld[i6 + 1] = -7;
                    i7 = Test.iFld;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i6 + i7 + i8;
    }

    public static float fMeth(int i4, long l3, int i5) {

        short s=-28469;
        float f1=-73.219F;
        boolean b=true;
        int i9=109, i10=34360, i11=-11, i12=0, i13=-130;
        double d=36.106412;
        byte by=-122;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -14L);

        i4 -= (int)(((Test.instanceCount + i5) + (s++)) ^ i5);
        f1 = i4;
        if (b) {
        } else if (b) {
            vMeth1();
        } else {
            for (i9 = 3; 374 > i9; i9++) {
                l3 += l3;
                for (i11 = 1; i11 < 5; i11++) {
                    for (d = 2; 1 < d; d -= 2) {
                        Test.instanceCount -= s;
                        by *= (byte)i4;
                        l3 += (long)((long)d | l3);
                        f1 %= 141L;
                        Test.instanceCount += (long)d;
                        if (Test.iFld != 0) {
                        }
                        lArr = lArr;
                    }
                }
            }
        }
        long meth_res = i4 + l3 + i5 + s + Float.floatToIntBits(f1) + (b ? 1 : 0) + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(d) + i13 + by + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(long l, long l1, long l2) {

        int i=27815, i1=-34214, i2=-5, i3=20, i14=-3, i15=13, i16=235;
        byte by1=-75;
        double d1=2.19718;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -2704453359249523140L);

        Test.iFld = (Test.iArrFld[(76 >>> 1) % N] - Test.iFld);
        for (i = 11; i < 300; i++) {
            float f=27.95F;
            Test.iFld -= Test.iArrFld[i + 1];
            i1 *= (int)Test.instanceCount;
            Test.iFld = (int)(Test.iFld *= (int)((f + Test.iFld) + (i1 + i)));
            for (i2 = 1; 6 > i2; i2++) {
                i3 = (int)fMeth(i1, 3L, -94);
                Test.iFld >>>= i1;
                Test.iFld = i2;
                for (i14 = 1; 2 > i14; ++i14) {
                    i15 = i2;
                    f *= Test.iFld;
                    i1 &= 7;
                    lArr1[i][i2 + 1] -= by1;
                    i16 = (int)d1;
                }
            }
        }
        vMeth_check_sum += l + l1 + l2 + i + i1 + i2 + i3 + i14 + i15 + by1 + i16 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        double d2=-2.70483, d3=85.77601;
        int i18=206, i19=-109, i20=39429, i21=-9, i22=-180;
        float f3=-23.228F;
        long l4=784766142929227084L;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth(Test.instanceCount, 2339379859558728435L, Test.instanceCount);
        for (int i17 : Test.iArrFld) {
            Test.sFld <<= (short)i17;
            Test.iFld = (int)d2;
            Test.dArrFld[(i17 >>> 1) % N] = Test.sFld;
            Test.iFld *= Test.iFld;
            i17 <<= (int)3L;
            i17 -= 7;
            Test.instanceCount = i17;
            i17 = -18;
            for (i18 = 1; i18 < 63; ++i18) {
                i17 += (int)f3;
                Test.instanceCount = (long)f3;
                for (d3 = 1; d3 < 2; d3++) {
                    Test.iFld += (int)(((d3 * i18) + i19) - i17);
                    i20 = Test.iFld;
                    i19 >>= Test.iFld;
                    f3 = i19;
                    Test.sFld += (short)(-126 + (d3 * d3));
                    switch ((i18 % 1) + 100) {
                    case 100:
                        i19 += (int)(d3 * d3);
                        break;
                    }
                    Test.instanceCount += (long)(((d3 * i19) + f3) - i17);
                }
                Test.iArrFld[i18 - 1] ^= i18;
                i17 *= i20;
                i20 = (int)l4;
                i17 = -109;
                if (b1) {
                    for (i21 = 2; 1 < i21; --i21) {
                        bArr[i18 - 1] = b1;
                        Test.iArrFld[i21] = i22;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d2 i18 i19 = " + Double.doubleToLongBits(d2) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f3 d3 i20 = " + Float.floatToIntBits(f3) + "," + Double.doubleToLongBits(d3) + "," +
            i20);
        FuzzerUtils.out.println("l4 i21 i22 = " + l4 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b1 bArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
