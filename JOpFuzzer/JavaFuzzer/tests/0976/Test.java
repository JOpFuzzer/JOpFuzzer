// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=6307196038257368586L;
    public static float fFld=0.955F;
    public static boolean bFld=true;
    public static long lFld=-57205L;
    public static volatile short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)20667);
        FuzzerUtils.init(Test.iArrFld, 3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-55276, i6=-55218, i7=-64, i8=-53, i9=64587, i10=30314, i11=-58, iArr[][]=new int[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -2235);
        FuzzerUtils.init(fArr, -2.195F);

        iArr[(i5 >>> 1) % N] = iArr[(i5 >>> 1) % N];
        Test.bFld = Test.bFld;
        for (i6 = 6; i6 < 218; i6++) {
            switch ((i6 % 2) + 20) {
            case 20:
                for (i8 = 1; 8 > i8; ++i8) {
                    fArr[i6 - 1] += Test.instanceCount;
                    for (i10 = 2; i10 > 1; i10--) {
                        double d=0.58752;
                        fArr[i8] -= i7;
                        Test.sArrFld[i8 - 1] += (short)i10;
                        i11 = i6;
                        i7 += (int)Test.fFld;
                        Test.fFld -= i6;
                        i7 += -37155;
                        i11 -= (int)d;
                        i11 -= (int)Test.instanceCount;
                    }
                }
                break;
            case 21:
                iArr[i6 - 1][i6 - 1] -= i11;
                break;
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(float f, byte by, int i3) {

        int i4=171, i12=-24924, i13=5498, i14=-2, i15=1;
        double d1=-2.109927;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr1, -2.915F);

        i4 = 1;
        while (++i4 < 197) {
            vMeth2();
            for (i12 = 8; i12 > 1; i12 -= 2) {
                i13 -= i13;
                for (i14 = 1; i14 < 3; i14 += 3) {
                    Test.iArrFld[i4] -= (int)Test.lFld;
                    i13 = i3;
                    i15 -= (int)54087L;
                    i13 += (-41177 + (i14 * i14));
                    fArr1[i4 + 1][i4 + 1] *= i4;
                }
                i3 = by;
                if (i13 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f) + by + i3 + i4 + i12 + i13 + i14 + i15 +
                        Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                    return;
                }
                Test.instanceCount |= i4;
                i13 = (int)d1;
                fArr1[i12 + 1][i4] = f;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + by + i3 + i4 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(int i, int i1, int i2) {

        byte by1=-23;

        Test.fFld += (Test.fFld -= (-Test.fFld));
        vMeth1(Test.fFld, by1, i2);
        vMeth_check_sum += i + i1 + i2 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i16=65, i17=-12, i18=-106, i19=31905, i20=28445, i21=-249, i22=245, i23=-200, i24=13, i25=-13, i26=6,
            i27=64713, i28=9;
        short s=29334;
        byte by2=-6;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -330029459018643317L);

        vMeth(i16, 11968, -58841);
        i17 = 1;
        do {
            if (Test.bFld) {
                i16 -= (int)Test.lFld;
            } else {
                i16 = i16;
                Test.lFld -= i16;
                Test.instanceCount += Test.lFld;
                for (i18 = 3; i18 < 126; i18++) {
                    i20 += s;
                    lArr[i17 - 1] -= i19;
                    for (i21 = i17; i21 < 2; ++i21) {
                        Test.lFld = Test.lFld;
                        lArr[i17 - 1] <<= i23;
                        Test.fFld = -5976434961182164095L;
                        i16 += i21;
                        Test.instanceCount %= (Test.instanceCount | 1);
                    }
                    Test.instanceCount += (((i18 * Test.lFld) + i24) - Test.instanceCount);
                    Test.instanceCount *= 165;
                    for (i25 = i17; i25 < 2; ++i25) {
                        i24 = i23;
                        by2 -= (byte)Test.lFld;
                        Test.iArrFld[i25 + 1] >>= i24;
                        Test.lFld += i18;
                        Test.lFld += (i25 - i26);
                    }
                    Test.fFld *= Test.lFld;
                    for (i27 = 1; i27 < 2; ++i27) {
                        i24 += (i27 - i20);
                        Test.instanceCount += (long)Test.fFld;
                        Test.fFld = i25;
                        by2 = (byte)Test.lFld;
                    }
                }
            }
        } while (++i17 < 200);

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 s = " + i19 + "," + i20 + "," + s);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("by2 i27 i28 = " + by2 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lFld Test.sArrFld Test.iArrFld = " + Test.lFld + "," +
            FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
