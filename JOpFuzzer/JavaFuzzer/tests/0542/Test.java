// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-60662L;
    public static int iFld=6248;
    public static float fFld=2.293F;
    public static volatile boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8982);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth1() {

        long lArr[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr, 19L);
        FuzzerUtils.init(sArr, (short)16417);

        lArr[(Test.iFld >>> 1) % N] &= (long)((++sArr[(Test.iFld >>> 1) % N]) + (Test.fFld + (-(Test.iFld -
            Test.iFld))));
        vMeth1_check_sum += FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth1() {

        int i10=12797, i11=60, i12=-20, i13=88, i14=-171, i15=138, i16=10;
        long l=-780028679L, l1=108L;
        double d=-13.84838;
        short s=22446;

        for (i10 = 13; i10 < 299; ++i10) {
            for (i12 = 1; i12 < 6; i12++) {
                for (l = 1; l < 2; ++l) {
                    i11 = i12;
                    Test.instanceCount -= Test.iFld;
                    d -= 14;
                    Test.instanceCount = s;
                    Test.instanceCount += (l + l);
                }
                if (Test.bFld) continue;
                l1 += (i12 * i12);
                switch ((i10 % 2) + 47) {
                case 47:
                    i11 += i12;
                    for (i15 = 1; i15 < 2; ++i15) {
                        Test.instanceCount += 44;
                        s += (short)(-244 + (i15 * i15));
                    }
                case 48:
                }
            }
        }
        long meth_res = i10 + i11 + i12 + i13 + l + i14 + Double.doubleToLongBits(d) + s + l1 + i15 + i16;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4, int i5) {

        int i6=-14, i7=14, i8=-30622, i9=-47768, i17=-56596, i18=-168, i19=-9058, i20=13, iArr[]=new int[N];
        boolean b=true;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 4L);
        FuzzerUtils.init(iArr, 223);

        for (i6 = 1; i6 < 352; ++i6) {
            Test.fFld += i6;
            for (i8 = 1; i8 < 5; ++i8) {
                lArr1[i8][i8 + 1] >>= i5;
                Test.instanceCount += (i8 | (long)Test.fFld);
                i9 -= Math.max(i4 - (i4 - i6), (int)(-(Test.fFld + 94.34861)));
                lArr1[i6 - 1][i8 - 1] *= iArr[i8];
                i5 += i8;
                if (b || ((iMeth1() > Test.fFld) != false)) break;
            }
            for (i17 = 1; 5 > i17; i17++) {
                i5 += i4;
                Test.instanceCount <<= i6;
            }
            for (i19 = 1; 5 > i19; ++i19) {
                i5 -= 132;
                Test.fFld = 204;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(lArr1)
            + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1) {

        int i2=53285, i3=3, i21=13741, i22=-120, i23=-14, i24=48050, i25=1, i26=4;
        double d1=-1.107343;
        long l2=-47923L;

        vMeth1();
        vMeth1();
        for (i2 = 222; i2 > 7; i2--) {
            short s1=-32269;
            Test.instanceCount -= (Test.instanceCount ^ iMeth(i1, i));
            for (i21 = 7; i21 > i2; i21--) {
                Test.bFld = Test.bFld;
            }
            i23 = 1;
            do {
                i3 *= (int)d1;
            } while (++i23 < 7);
            Test.iArrFld[i2] |= i1;
            switch (((i2 % 6) * 5) + 61) {
            case 83:
                Test.iFld += (((i2 * s1) + i22) - i22);
                for (l2 = 1; l2 < 7; l2++) {
                    for (i25 = 1; i25 < 2; i25++) {
                        i26 = (int)Test.fFld;
                        i3 = (int)d1;
                    }
                }
            case 86:
                i1 = (int)Test.instanceCount;
                break;
            case 65:
                Test.iArrFld[i2 + 1] /= -96;
                break;
            case 89:
                i24 += i2;
                break;
            case 75:
            case 90:
                i26 &= i1;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i21 + i22 + i23 + Double.doubleToLongBits(d1) + l2 + i24 + i25 + i26;
    }

    public void mainTest(String[] strArr1) {


        vMeth(-2, Test.iFld);


        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
