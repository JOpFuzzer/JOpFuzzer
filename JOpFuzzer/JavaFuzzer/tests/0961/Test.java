// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=11L;
    public int iFld=10714;
    public static float fFld=127.472F;
    public static long lArrFld[]=new long[N];
    public int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 10L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static void vSmallMeth() {

        int i1=8575;

        Test.lArrFld[(i1 >>> 1) % N] += i1;
        vSmallMeth_check_sum += i1;
    }

    public static float fMeth(int i6) {

        int i7=-2, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 19);

        Test.instanceCount *= (-iArr[(i6 >>> 1) % N]);
        vSmallMeth();
        i7 *= i6;
        long meth_res = i6 + i7 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public byte byMeth(int i3, int i4, int i5) {


        fMeth(i4);
        long meth_res = i3 + i4 + i5;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=26225, i2=155, i8=0, i9=-155, i10=-6, i11=1198, i12=-10, i13=32481, i14=0;
        double d=0.11142, d1=-1.55472, d2=6.17414;
        long l=86L;
        boolean b=false;

        i += (int)(((Test.instanceCount - i) + (++d)) + (--Test.instanceCount));
        for (int smallinvoc=0; smallinvoc<384; smallinvoc++) vSmallMeth();
        for (d1 = 8; d1 < 214; d1++) {
            i2 += (i2 - byMeth(40161, -119, i2));
            i8 = 1;
            while (++i8 < 122) {
                Test.instanceCount += i8;
                i2 -= iFld;
                i2 <<= -15;
                i2 += (int)(5L + (i8 * i8));
                try {
                    iArrFld[i8][i8 + 1] = (iArrFld[(int)(d1 - 1)][(int)(d1 + 1)] % -138);
                    iFld = (iFld % i2);
                    i = (-1274562631 / i2);
                } catch (ArithmeticException a_e) {}
                for (d2 = i8; d2 < 1; ++d2) {
                    i = (int)Test.fFld;
                    i2 += (int)(d2 + Test.fFld);
                    Test.instanceCount += Test.instanceCount;
                    iArrFld[i8][i8 + 1] = i9;
                    Test.fFld += i2;
                    i9 /= (int)(i | 1);
                    Test.fFld -= -227;
                    i9 = (int)Test.instanceCount;
                    i += i;
                    i9 -= i8;
                }
                i10 = 1;
                do {
                    iArrFld[(int)(d1 - 1)] = iArrFld[i8 + 1];
                    try {
                        i2 = (189 % i10);
                        iFld = (66 / i9);
                        iFld = (-105 % i);
                    } catch (ArithmeticException a_e) {}
                } while (++i10 < 1);
            }
            for (i11 = 2; 122 > i11; i11++) {
                l += (long)d1;
            }
            i9 = i2;
            for (i13 = (int)(d1); i13 < 122; i13++) {
                b = b;
                i9 |= i9;
            }
        }

        FuzzerUtils.out.println("i d d1 = " + i + "," + Double.doubleToLongBits(d) + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i2 i8 d2 = " + i2 + "," + i8 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 l i13 = " + i12 + "," + l + "," + i13);
        FuzzerUtils.out.println("i14 b = " + i14 + "," + (b ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.lArrFld iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test fMeth byMeth
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  fMeth ->  fMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
