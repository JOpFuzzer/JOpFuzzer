// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2940366345L;
    public volatile int iFld=49148;
    public static double dFld=106.116614;
    public short sFld=-24968;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -19808L);
        FuzzerUtils.init(Test.iArrFld, 15395);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=110, i6=29, i7=5, i8=113, i9=-54631, i10=-8265, i11=-8, iArr[]=new int[N];
        boolean b=false;
        double d=0.2923;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(fArr, -115.462F);

        i5 >>= i5;
        for (i6 = 8; i6 < 168; i6 += 3) {
            byte by=-70;
            switch ((i6 % 2) + 66) {
            case 66:
                Test.lArrFld = Test.lArrFld;
                i5 = i5;
                break;
            case 67:
                if (b) continue;
                for (i8 = 1; 29 > i8; i8++) {
                    i10 = 2;
                    while (--i10 > 0) {
                        iArr = iArr;
                    }
                }
                break;
            default:
                i11 = 1;
                do {
                    i9 += (i11 ^ i10);
                    d = 0.41366;
                } while (++i11 < 29);
                fArr[i6 - 1] -= i8;
                i5 *= (int)Test.instanceCount;
                i5 -= by;
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth1() {

        float f=100.614F, f1=0.965F;
        int i12=-18, i13=25, i14=-14, i15=11, i16=-9;
        byte by1=82;

        vMeth2();
        Test.instanceCount += iFld;
        for (f = 3; 316 > f; ++f) {
            iFld |= 24971;
            for (i13 = 5; i13 > 1; i13 -= 2) {
                i12 = -248;
                f1 -= f1;
                for (i15 = 1; i15 < 3; i15 += 2) {
                    iFld &= i13;
                    Test.instanceCount -= (long)f1;
                    i12 -= -130;
                    i16 -= i16;
                    i16 = (int)Test.instanceCount;
                    if (i15 != 0) {
                        vMeth1_check_sum += Float.floatToIntBits(f) + i12 + i13 + i14 + Float.floatToIntBits(f1) + i15
                            + i16 + by1;
                        return;
                    }
                    by1 -= (byte)i13;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i12 + i13 + i14 + Float.floatToIntBits(f1) + i15 + i16 + by1;
    }

    public void vMeth() {

        int i2=-14, i3=10344, i4=-12, i17=-12, i18=-58321, iArr1[]=new int[N];
        byte by2=-2;
        float f2=48.800F;

        FuzzerUtils.init(iArr1, -2);

        for (i2 = 8; i2 < 352; ++i2) {
            i4 = 1;
            while (++i4 < 5) {
                Test.instanceCount += (7 + (i4 * i4));
                vMeth1();
                Test.instanceCount = iFld;
            }
            switch ((i2 % 1) + 15) {
            case 15:
                iFld -= i2;
                by2 += (byte)(i2 + Test.instanceCount);
                for (i17 = 5; i17 > 1; i17--) {
                    f2 = (float)Test.dFld;
                }
                break;
            }
            i3 = iFld;
            iArr1[i2] ^= 182;
            iArr1[i2 + 1] &= i17;
            if (iFld != 0) {
                vMeth_check_sum += i2 + i3 + i4 + by2 + i17 + i18 + Float.floatToIntBits(f2) +
                    FuzzerUtils.checkSum(iArr1);
                return;
            }
            by2 += (byte)i2;
        }
        vMeth_check_sum += i2 + i3 + i4 + by2 + i17 + i18 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i1=-249, i19=-17131, i20=-52000, i21=51664, i22=-669, i23=14, i24=53;
        boolean b1=false;
        float f3=25.342F;

        for (i = 1; i < 155; i += 3) {
            i1 += (i * i);
            vMeth();
            i1 = iFld;
            if (b1) continue;
        }
        i19 = 1;
        while (++i19 < 248) {
            iFld = i1;
            iFld -= i1;
            iFld ^= i1;
            for (i20 = 2; i20 < 101; ++i20) {
                i22 = 1;
                while (++i22 < 2) {
                    if (b1) continue;
                }
                f3 = -16791L;
                i1 <<= 0;
                for (i23 = i20; i23 < 2; ++i23) {
                    f3 = i21;
                    i24 += i23;
                    i21 >>= (int)Test.instanceCount;
                    i24 += 197;
                    i1 += i24;
                    Test.lArrFld[i19 - 1][i20 - 1] ^= i;
                    Test.lArrFld[i19 + 1][i19 - 1] -= i21;
                }
                i24 += (i20 * i1);
            }
            if (b1) continue;
            if (b1) {
                Test.iArrFld[i19 - 1] = (int)Test.instanceCount;
            } else if (true) {
                i24 -= (int)Test.instanceCount;
                i24 += -54092;
                i1 += i;
                iFld = sFld;
            } else if (b1) {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-116);
            }
        }

        FuzzerUtils.out.println("i i1 b1 = " + i + "," + i1 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 f3 i23 = " + i22 + "," + Float.floatToIntBits(f3) + "," + i23);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("sFld Test.lArrFld Test.iArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test.lArrFld) +
            "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
