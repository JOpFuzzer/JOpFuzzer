// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3853493910L;
    public static boolean bFld=false;
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.iArrFld, -2);
    }

    public static long lMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8) {

        int i9=36153, i10=-197, i11=-45764, i12=128, iArr[]=new int[N];
        double d1=-101.4329, dArr[]=new double[N];
        byte by=-7, byArr[]=new byte[N];
        boolean b=true;
        float f1=-22.312F;
        short sArr[]=new short[N];

        FuzzerUtils.init(byArr, (byte)-122);
        FuzzerUtils.init(dArr, 1.89543);
        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(sArr, (short)3391);

        Test.instanceCount += 199;
        i9 = 1;
        do {
            byArr[i9 - 1] = (byte)Test.instanceCount;
            for (d1 = 1; d1 < 5; d1++) {
                by -= (byte)Test.instanceCount;
                switch ((((i9 >>> 1) % 9) * 5) + 21) {
                case 59:
                    i8 <<= -13;
                    break;
                case 36:
                    i8 >>= -10;
                case 47:
                    dArr[(int)(d1)] = d1;
                    i8 += (int)((long)d1 | i9);
                    for (i11 = (int)(d1); i11 < 2; i11++) {
                        i10 = i10;
                        Test.bArrFld[i11] = b;
                        i10 *= (int)d1;
                        f1 += Test.instanceCount;
                    }
                    break;
                case 58:
                    iArr[i9] = i10;
                case 28:
                    i12 -= i8;
                case 61:
                    sArr[i9 - 1] *= (short)i10;
                    break;
                case 45:
                    Test.instanceCount += -142;
                    break;
                case 66:
                    Test.instanceCount -= Test.instanceCount;
                case 26:
                    i8 += i10;
                    break;
                default:
                    iArr[(int)(d1 + 1)] *= 198;
                }
            }
        } while (++i9 < 335);
        long meth_res = i8 + i9 + Double.doubleToLongBits(d1) + i10 + by + i11 + i12 + (b ? 1 : 0) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i4) {

        int i5=13176, i6=13, i7=43, i13=-25063, i14=-3, i15=29, i16=-45292;
        double d=9.87451, d2=120.97499;
        boolean b1=true, b2=false;
        float f2=124.36F, fArr[]=new float[N];
        byte by1=-46;

        FuzzerUtils.init(fArr, -1.645F);

        fArr = (fArr = (fArr = (fArr = fArr)));
        for (i5 = 10; i5 < 344; ++i5) {
            for (d = i5; d < 5; d += 3) {
                i4 += ((iMeth(i4) - i4) - i13);
                if (b1) break;
                switch ((int)((d % 2) + 70)) {
                case 70:
                    i4 -= (int)f2;
                    break;
                case 71:
                    for (i14 = (int)(d); i14 < 1; i14 += 3) {
                        by1 -= (byte)i4;
                        i7 += (int)Test.instanceCount;
                        if (false) {
                            switch ((i5 % 2) + 99) {
                            case 99:
                                d2 = d2;
                                i16 += i14;
                            case 100:
                                if (b2) continue;
                                break;
                            }
                        } else if (b1) {
                            i13 = (int)-2.84528;
                        } else {
                            i15 += (((i14 * f2) + i5) - i6);
                        }
                    }
                    break;
                default:
                    d2 -= Test.instanceCount;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Double.doubleToLongBits(d) + i7 + i13 + (b1 ? 1 : 0) + Float.floatToIntBits(f2)
            + i14 + i15 + by1 + Double.doubleToLongBits(d2) + i16 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static long lMeth(int i1, long l) {

        int i2=-2, i3=-12, i17=-155, i18=123, iArr1[]=new int[N];
        float f=-83.239F;
        short s=-28789;
        boolean b3=false, bArr[]=new boolean[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -8L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, 2);

        lArr1 = (lArr1 = lArr1);
        for (i2 = 15; i2 < 265; i2++) {
            i1 += (i2 + f);
            if (b3) {
                if (bArr[i2 - 1] = (((-(i1 - i1)) * dMeth(i1)) == l)) break;
                iArr1[i2] |= i3;
            } else if (b3) {
                i1 *= i1;
                for (i17 = 7; i2 < i17; i17--) {
                    i3 += s;
                    i3 -= i1;
                    i1 ^= i2;
                    i3 += (i17 * i17);
                    i1 = i18;
                    i3 += i17;
                    i18 -= (int)l;
                }
            } else {
                Test.instanceCount = -62;
            }
        }
        long meth_res = i1 + l + i2 + i3 + Float.floatToIntBits(f) + i17 + i18 + s + (b3 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-197, i19=-14, i20=-62043, i21=155, i22=-51478, i23=-21508, i24=-176, i25=-81, i26=51751;
        long l2=10301L, l3=2974608843L, lArr[]=new long[N];
        double d3=-95.60689;
        float f3=2.257F, fArr1[]=new float[N];
        byte by3=112;
        short s1=20141;

        FuzzerUtils.init(lArr, 20315L);
        FuzzerUtils.init(fArr1, 92.559F);

        if (Test.bFld) {
            lArr[(i >>> 1) % N] *= (lMeth(i, l2) - 47559);
            i >>>= i;
        } else {
            for (i19 = 363; i19 > 22; i19 -= 3) {
                i20 -= i;
            }
            for (i21 = 4; i21 < 337; ++i21) {
                Test.instanceCount = -14470;
            }
            i23 = 1;
            while (++i23 < 217) {
                byte by2=-90;
                i20 *= (int)l2;
                i20 -= i;
                i >>= by2;
            }
            for (l3 = 13; l3 < 271; l3++) {
                d3 = 124;
                for (i25 = 5; i25 < 97; i25++) {
                    l2 |= i19;
                    switch (((i23 >>> 1) % 5) + 24) {
                    case 24:
                        if (Test.bFld) break;
                        i22 += (i25 | i25);
                        break;
                    case 25:
                        f3 += (((i25 * i21) + i21) - by3);
                        Test.instanceCount -= i23;
                        l2 += (((i25 * f3) + f3) - i24);
                        by3 *= (byte)s1;
                    case 26:
                    case 27:
                        f3 += (-24L + (i25 * i25));
                        i ^= i23;
                        break;
                    case 28:
                        switch ((i25 % 1) + 52) {
                        case 52:
                            Test.iArrFld[(int)(l3 + 1)] = i26;
                            i -= (int)f3;
                            break;
                        default:
                            fArr1[(int)(l3 + 1)] += l3;
                        }
                        i26 &= i21;
                        Test.iArrFld = Test.iArrFld;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i l2 i19 = " + i + "," + l2 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 l3 i24 = " + i23 + "," + l3 + "," + i24);
        FuzzerUtils.out.println("d3 i25 i26 = " + Double.doubleToLongBits(d3) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f3 by3 s1 = " + Float.floatToIntBits(f3) + "," + by3 + "," + s1);
        FuzzerUtils.out.println("lArr fArr1 = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.bArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  dMeth ->  dMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
