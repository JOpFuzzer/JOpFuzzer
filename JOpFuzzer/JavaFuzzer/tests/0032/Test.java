// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=14413L;
    public static byte byFld=-13;
    public static boolean bFld=true;
    public float fFld=7.717F;
    public float fArrFld[]=new float[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i6) {

        int i7=-2, i8=-10, i9=-210, i10=190, i11=102, i12=61086, i13=109, i14=-5, iArr[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -47801L);
        FuzzerUtils.init(iArr, 11);

        for (i7 = 193; i7 > 8; --i7) {
            i6 += (((i7 * i8) + i7) - i7);
            lArr1[i7 + 1] = 2L;
            iArr[i7 - 1] *= (int)1.25499;
            iArr[i7 - 1] >>= -7;
            i8 = 2;
        }
        iArr[(i7 >>> 1) % N] -= i8;
        i6 = (int)Test.instanceCount;
        for (i9 = 2; i9 < 173; i9++) {
            i10 = i6;
            i10 += (i9 * i9);
            for (i11 = 1; 9 > i11; i11++) {
                for (i13 = 1; i13 < 2; ++i13) {
                    Test.instanceCount += (i13 ^ i11);
                    Test.instanceCount -= (long)48.111082;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(int i3) {

        int i4=0, i5=-116, i15=33, i16=107, i17=190, i18=-4, i19=-2, i20=-14, i21=-232, iArr1[]=new int[N];
        double d1=-70.40222;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 4559604122478011788L);
        FuzzerUtils.init(iArr1, -53577);

        for (i4 = 11; i4 < 254; i4++) {
            lMeth(i4);
            for (i15 = 1; i15 < 7; ++i15) {
                i3 ^= (int)Test.instanceCount;
                i5 <<= i5;
                for (i17 = 1; i17 < 2; ++i17) {
                    lArr2[i4] |= i16;
                    i18 = (int)Test.instanceCount;
                    Test.instanceCount ^= i4;
                }
                for (i19 = 1; i19 < 2; ++i19) {
                    Test.byFld *= (byte)i15;
                    Test.instanceCount += (long)d1;
                    i16 += (int)d1;
                    iArr1[i4 - 1] = (int)Test.instanceCount;
                    try {
                        iArr1[i15 + 1] = (i15 % iArr1[i4 - 1]);
                        i5 = (-14 / i21);
                        i3 = (i16 / -251073468);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i15 + i16 + i17 + i18 + i19 + i20 + Double.doubleToLongBits(d1) + i21 +
            FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        float f=2.855F;
        int i1=-38, i2=-103, i22=-105, i23=-9;
        double d2=2.129175, d3=47.47837;

        f += (--Test.byFld);
        for (i1 = 18; i1 < 368; i1++) {
            i2 += iMeth1(i1);
            for (d2 = 1; d2 < 5; ++d2) {
                i22 += (int)d2;
                Test.instanceCount += (long)f;
                i2 -= (int)Test.instanceCount;
                i23 = 1;
                while (++i23 < 2) {
                    if (i23 != 0) {
                    }
                    i2 |= i2;
                    f -= i23;
                    Test.instanceCount = Test.instanceCount;
                    d3 = d2;
                    i22 = (int)Test.instanceCount;
                    i22 += (((i23 * i23) + i2) - i1);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + i2 + Double.doubleToLongBits(d2) + i22 + i23 +
            Double.doubleToLongBits(d3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=1.48251, d4=-60.106313;
        int i=-1, i24=34, i25=246, i26=-58450, i27=34974, i28=64348, i29=-49092, i30=11417, i31=-10605, i32=44494,
            i33=188, i34=-11, iArr2[][]=new int[N][N], iArr3[][]=new int[N][N];
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1364860891L);
        FuzzerUtils.init(iArr2, -159);
        FuzzerUtils.init(iArr3, 10);

        for (d = 4; d < 133; d++) {
            fArrFld = fArrFld;
            lArr = (lArr = (lArr = (lArr = lArr)));
            iMeth();
            i24 = 1;
            while (++i24 < 194) {
                if (Test.bFld) {
                    for (i25 = 1; i25 < 1; i25++) {
                        i += i;
                    }
                    for (i27 = 1; i27 < 1; i27++) {
                        i28 <<= (int)Test.instanceCount;
                        i26 = i26;
                    }
                } else {
                    for (i29 = 1; i29 < 1; ++i29) {
                        i += (int)d;
                        fFld += (i29 * i29);
                        if (b) break;
                        Test.byFld += (byte)i29;
                    }
                    i26 <<= i28;
                    i = i25;
                    lArr[(int)(d)] = -1217320577395875689L;
                }
                i30 <<= i26;
            }
            Test.instanceCount -= -200L;
            for (i31 = 9; i31 < 194; i31++) {
                d4 += Test.instanceCount;
                for (i33 = 1; i33 < 2; ++i33) {
                    iArr2 = iArr3;
                    Test.instanceCount += i34;
                    fFld -= Test.instanceCount;
                    Test.instanceCount = i31;
                    Test.instanceCount <<= -8;
                    b = b;
                }
            }
        }

        FuzzerUtils.out.println("d i i24 = " + Double.doubleToLongBits(d) + "," + i + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("b i31 i32 = " + (b ? 1 : 0) + "," + i31 + "," + i32);
        FuzzerUtils.out.println("d4 i33 i34 = " + Double.doubleToLongBits(d4) + "," + i33 + "," + i34);
        FuzzerUtils.out.println("lArr iArr2 iArr3 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr2)
            + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld fArrFld = " + Float.floatToIntBits(fFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
