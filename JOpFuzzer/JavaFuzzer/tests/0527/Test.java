// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-378475911L;
    public static int iFld=9530;
    public static boolean bArrFld[][]=new boolean[N][N];
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f=1.832F, f1=71.621F;
        int i3=-13, i4=43743, i5=25105, i6=32, i7=21382, i8=-38641, i9=-60731, iArr1[]=new int[N];
        short s=-6773;
        double d=0.111669;

        FuzzerUtils.init(iArr1, -4398);

        for (f = 8; f < 308; f++) {
            f1 = 156;
            i3 <<= i3;
        }
        for (i4 = 2; i4 < 230; ++i4) {
            iArr1[i4] += s;
            i3 = i4;
            i3 = -91;
            try {
                iArr1[i4 - 1] = (-250 / iArr1[i4 + 1]);
                i3 = (i3 % 19374);
                i3 = (i4 % 41867);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount &= Test.instanceCount;
            for (i6 = 1; 7 > i6; ++i6) {
                for (i8 = 1; i8 < 2; ++i8) {
                    f1 += (-4 + (i8 * i8));
                }
                f1 = (float)d;
                i5 += (-27095 + (i6 * i6));
                i3 += (int)(58L + (i6 * i6));
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + Float.floatToIntBits(f1) + i4 + i5 + s + i6 + i7 + i8 + i9 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, int i2) {

        float f2=-38.455F;
        int i10=0, i11=207, i12=-13, i13=3, i14=-44093, i15=-143, iArr2[]=new int[N];
        byte by=59;
        double d1=1.106033;

        FuzzerUtils.init(iArr2, 91);

        vMeth1();
        i1 += (int)f2;
        i2 *= i1;
        for (i10 = 6; 250 > i10; ++i10) {
            iArr2 = FuzzerUtils.int1array(N, (int)-170);
            Test.instanceCount = by;
        }
        iArr2 = iArr2;
        for (i12 = 4; i12 < 373; ++i12) {
            for (i14 = 1; i14 < 5; i14++) {
                boolean b=false;
                short s1=1634;
                i2 |= 119;
                d1 = Test.instanceCount;
                i1 = i12;
                b = b;
                Test.iFld *= i2;
                s1 = (short)f2;
            }
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f2) + i10 + i11 + by + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=5, i17=-4, i18=182, i19=-244, i20=0, iArr[]=new int[N];
        float f3=1.688F;
        boolean b1=true;
        double d2=51.43908;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 19724);
        FuzzerUtils.init(sArr, (short)-3497);
        FuzzerUtils.init(lArr, 1L);

        iArr[(i >>> 1) % N] &= ((i - Math.abs(i)) * ((i = i) + (i + i)));
        i += (int)(-3 * ((i + 3L) * i));
        iArr[(i >>> 1) % N] -= iMeth(i, i);
        Test.instanceCount >>= Test.iFld;
        f3 *= -19471;
        b1 = b1;
        for (int i16 : iArr) {
            i &= i;
            switch (((i >>> 1) % 8) + 57) {
            case 57:
                sArr[(i >>> 1) % N] += (short)Test.instanceCount;
                break;
            case 58:
                i17 = 1;
                while (++i17 < 4) {
                    switch (((i >>> 1) % 9) + 53) {
                    case 53:
                        for (i18 = 1; i18 < 1; ++i18) {
                            f3 -= i;
                            iArr[i17 - 1] -= (int)Test.instanceCount;
                        }
                        break;
                    case 54:
                        d2 += i16;
                    case 55:
                        i16 += i17;
                        break;
                    case 56:
                        i19 += i19;
                        break;
                    case 57:
                        i -= (int)f3;
                        break;
                    case 58:
                        i16 = i;
                        break;
                    case 59:
                        d2 -= d2;
                        break;
                    case 60:
                    case 61:
                        lArr[i17 - 1] <<= -64420L;
                        break;
                    }
                }
                break;
            case 59:
                iArr[(Test.iFld >>> 1) % N] = i;
            case 60:
                if (i20 != 0) {
                    vMeth_check_sum += i + Float.floatToIntBits(f3) + (b1 ? 1 : 0) + i17 + i18 + i19 +
                        Double.doubleToLongBits(d2) + i20 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
                break;
            case 61:
                if (b1) break;
            case 62:
                Test.iFld |= i20;
                break;
            case 63:
                f3 = i20;
            case 64:
                Test.bArrFld = Test.bArrFld;
                break;
            default:
                Test.instanceCount <<= Test.instanceCount;
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f3) + (b1 ? 1 : 0) + i17 + i18 + i19 + Double.doubleToLongBits(d2)
            + i20 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        short s2=-25928;
        int i21=-5, i22=-37948, i23=188, i24=-1, i25=9, i26=80, i27=14, i28=0;
        boolean b2=true;
        double d3=2.93396, d4=0.68302, dArr[]=new double[N];
        float f4=1.146F, fArr[]=new float[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-10);
        FuzzerUtils.init(dArr, 0.113933);
        FuzzerUtils.init(fArr, 61.117F);

        vMeth();
        byArr[(Test.iFld >>> 1) % N] = (byte)s2;
        Test.iFld -= Test.iFld;
        for (i21 = 9; i21 < 336; i21++) {
            i22 += i21;
            if (true) {
                dArr[i21] = Test.instanceCount;
            } else if (b2) {
                Test.instanceCount <<= 6793;
            } else if (b2) {
                fArr = fArr;
            } else {
                d3 = 718869961L;
                Test.instanceCount <<= Test.instanceCount;
            }
            f4 = Test.instanceCount;
            Test.instanceCount <<= i21;
            Test.iFld %= (int)(i21 | 1);
            i22 += (i21 - i22);
        }
        i22 = (int)Test.instanceCount;
        Test.iFld += (int)Test.instanceCount;
        for (i23 = 4; 205 > i23; i23++) {
            if (b2) {
                iArrFld[i23 - 1] = i21;
                for (i25 = 125; i25 > i23; i25 -= 3) {
                    for (d4 = 1; d4 < 1; d4++) {
                        i27 >>= i22;
                    }
                    switch ((((-57126 >>> 1) % 5) * 5) + 41) {
                    case 47:
                        fArr[(-7 >>> 1) % N] -= i25;
                        if (b2) {
                            s2 >>= (short)i25;
                            i28 = 1;
                            do {
                                byte by1=43;
                                lArrFld = FuzzerUtils.long1array(N, (long)2737276652L);
                                Test.instanceCount += (i28 | by1);
                            } while (++i28 < 1);
                        }
                        break;
                    case 45:
                        f4 += (float)-2.26055;
                        break;
                    case 64:
                        f4 = f4;
                        break;
                    case 44:
                        f4 += (((i25 * i25) + Test.iFld) - Test.instanceCount);
                        break;
                    case 66:
                    }
                }
            }
        }

        FuzzerUtils.out.println("s2 i21 i22 = " + s2 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b2 d3 f4 = " + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d3) + "," +
            Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 d4 i27 = " + i26 + "," + Double.doubleToLongBits(d4) + "," + i27);
        FuzzerUtils.out.println("i28 byArr dArr = " + i28 + "," + FuzzerUtils.checkSum(byArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bArrFld = " + Test.instanceCount + "," + Test.iFld +
            "," + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("iArrFld lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
