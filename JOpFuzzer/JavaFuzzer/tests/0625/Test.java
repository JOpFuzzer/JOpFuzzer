// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2789372017855108127L;
    public static volatile int iFld=0;
    public static short sFld=13894;
    public static double dFld=8.31183;
    public byte byFld=-76;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -183);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        byte by=77;
        int i8=-11180, i9=5208, i10=35630, i11=33393, i12=-1, i13=3, i14=-68, i15=29;
        float f=2.175F;

        Test.instanceCount = 11525;
        by |= (byte)Test.iFld;
        for (i8 = 19; i8 < 381; i8++) {
            for (i10 = 1; 5 > i10; ++i10) {
                for (i12 = 1; i12 < 2; i12++) {
                    f += (i12 * i12);
                    Test.instanceCount <<= i10;
                }
                Test.sFld = (short)i8;
                Test.iArrFld[i10] *= i13;
                for (i14 = 1; i14 < 2; i14++) {
                    i13 *= (int)535618027663846528L;
                    i13 -= i12;
                    i9 >>>= (int)Test.instanceCount;
                    i13 += (((i14 * i15) + i10) - i13);
                    Test.dFld *= -14;
                }
            }
        }
        vMeth1_check_sum += by + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + i15;
    }

    public static void vMeth() {

        float f1=0.602F;
        long l1=4053888056L, l2=-6400414498610294248L, lArr[]=new long[N];
        int i16=-52, i17=-4003, i18=-12308, i19=-40478, i20=-39122, i21=-145;

        FuzzerUtils.init(lArr, 58089L);

        vMeth1();
        Test.instanceCount -= Test.iFld;
        f1 -= 151;
        Test.iFld -= Test.iFld;
        for (l1 = 7; l1 < 285; ++l1) {
            i16 *= (int)Test.dFld;
        }
        for (l2 = 10; l2 < 342; l2++) {
            i17 += (int)(l2 | Test.iFld);
            for (i18 = (int)(l2); i18 < 5; ++i18) {
                for (i20 = 1; 1 > i20; i20 += 2) {
                    f1 -= i21;
                    Test.iArrFld[i20 - 1] += Test.sFld;
                    i17 = Test.iFld;
                    Test.iArrFld[i18 - 1] += i18;
                }
                lArr[(int)(l2)] -= 104;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + l1 + i16 + l2 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(long l, int i5) {

        int i6=167, i7=0, i22=10671, i23=168, i24=58939;
        byte by1=-108;
        float f2=1.518F;

        i5 <<= (int)(-245L - (i5--));
        for (i6 = 3; i6 < 373; ++i6) {
            vMeth();
            for (i22 = 1; i22 < 5; i22++) {
                Test.instanceCount >>= -8;
                i24 = 1;
                while (++i24 < 2) {
                    Test.iFld = i23;
                    if (false) {
                        i23 = i6;
                        i7 = (int)l;
                        i23 += (int)(104.181F + (i24 * i24));
                    } else if (true) {
                        by1 -= (byte)l;
                        f2 = l;
                        Test.iFld += (((i24 * f2) + Test.sFld) - i22);
                        i23 *= Test.iFld;
                    }
                }
            }
        }
        long meth_res = l + i5 + i6 + i7 + i22 + i23 + i24 + by1 + Float.floatToIntBits(f2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-10383, i1=7, i2=5, i3=142, i4=13, i25=5, i26=4011, i27=-4, i28=5, i29=-203, i30=-56225, i31=-234,
            i32=31419, i33=4420;
        float f3=-2.596F, fArr[]=new float[N];
        boolean b=false, bArr[]=new boolean[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, -12.258F);
        FuzzerUtils.init(lArr1, -97L);

        i = 1;
        do {
            Test.instanceCount = i;
            for (i1 = 1; 150 > i1; ++i1) {
                Test.instanceCount &= (--i2);
                for (i3 = 2; i3 > 1; i3 -= 3) {
                    i4 += (int)lMeth(Test.instanceCount, Test.iFld);
                    bArr = bArr;
                }
                for (i25 = 2; 1 < i25; i25--) {
                    f3 -= i1;
                }
                Test.iArrFld[i - 1] += i1;
                for (i27 = 1; i27 < 2; i27++) {
                    i4 = i27;
                    Test.iArrFld[i27 + 1] += (int)2.168F;
                    i26 >>= i2;
                }
                i28 += (((i1 * i25) + Test.instanceCount) - i25);
                Test.instanceCount |= i1;
            }
            switch ((i % 8) + 22) {
            case 22:
                i2 += Test.iFld;
                i28 += (((i * i2) + i3) - i27);
                for (i29 = 150; i29 > 1; i29 -= 3) {
                    Test.iArrFld[i29 - 1] &= (int)Test.instanceCount;
                    for (i31 = i29; i31 < 4; i31++) {
                        Test.dFld -= Test.instanceCount;
                        Test.dFld = i29;
                        i4 += (((i31 * i30) + i1) - i);
                        Test.iFld = i;
                        i2 *= i3;
                        Test.iFld *= Test.iFld;
                    }
                    i33 *= -57;
                    fArr[i29 - 1] += i32;
                }
                break;
            case 23:
                Test.instanceCount -= (long)Test.dFld;
                break;
            case 24:
                i32 = i;
                break;
            case 25:
                Test.dFld += 1.668F;
                break;
            case 26:
                byFld += (byte)(-5 + (i * i));
                break;
            case 27:
                Test.instanceCount += (i * i);
                break;
            case 28:
                b = true;
                break;
            case 29:
                lArr1[i] = i;
                break;
            }
        } while (++i < 167);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i25 = " + i3 + "," + i4 + "," + i25);
        FuzzerUtils.out.println("i26 f3 i27 = " + i26 + "," + Float.floatToIntBits(f3) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("b bArr fArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld byFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + byFld +
            "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
