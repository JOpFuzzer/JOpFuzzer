// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6538117899737335145L;
    public static float fFld=-1.305F;
    public static float fFld1=-6.918F;
    public static long lFld=81L;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -157);
        FuzzerUtils.init(Test.dArrFld, -61.105721);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, short s) {

        int i3=-38896, i4=6, i5=26, i6=-24, i7=-129, i8=87, iArr[]=new int[N];
        long l1=341641184L;
        double d=-53.7393;

        FuzzerUtils.init(iArr, 228);

        for (i3 = 7; i3 < 232; i3 += 3) {
            i4 *= (int)Test.fFld;
            Test.instanceCount += (i3 * i3);
            i4 = i3;
            Test.fFld = Test.instanceCount;
            i4 = (int)Test.instanceCount;
            switch (((i3 % 2) * 5) + 50) {
            case 53:
                for (i5 = 1; i5 < 21; ++i5) {
                    Test.instanceCount <<= 55330;
                    l1 >>>= i6;
                }
                for (i7 = 1; i7 < 21; i7++) {
                    i6 += i7;
                    i4 += (i7 + i7);
                    d = i5;
                    iArr[i3] += i5;
                }
                break;
            case 51:
                Test.instanceCount = (long)d;
            }
        }
        long meth_res = l + s + i3 + i4 + i5 + i6 + l1 + i7 + i8 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1() {

        int i9=-3040, i10=-57135, i11=-7, i12=162, i13=44517, i14=-13, i15=-23468, i16=9, i18=10;
        byte by=-75;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)24438);
        FuzzerUtils.init(lArr, 2163265094L);

        iMeth(-2494388079594095894L, (short)(14594));
        for (i9 = 7; i9 < 267; ++i9) {
            int i17=-228;
            switch ((i9 % 6) + 24) {
            case 24:
                Test.fFld += (((i9 * Test.fFld1) + Test.instanceCount) - i9);
                for (i11 = 1; i11 < 6; i11++) {
                    i12 >>= -87;
                    for (i13 = i9; i13 < 2; ++i13) {
                        i14 >>= -148;
                    }
                    by >>>= (byte)i9;
                    sArr[i11 - 1] = (short)Test.instanceCount;
                    i10 = i11;
                    for (i15 = i11; i15 < 2; i15++) {
                        i14 >>= i16;
                        i10 += (((i15 * i15) + i10) - i10);
                        Test.fFld += i15;
                    }
                }
                break;
            case 25:
                i14 = (int)Test.lFld;
                break;
            case 26:
                Test.iArrFld[i9] = i17;
                break;
            case 27:
                Test.fFld -= i13;
                break;
            case 28:
                lArr[i9 - 1] = i14;
                break;
            case 29:
                i14 *= i18;
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + by + i15 + i16 + i18 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i1, int i2) {

        int i19=132, i20=-247, i21=6632, i22=11, i23=-122;
        short s1=18420;
        double d1=-1.28674;

        Test.fFld = (i2 + lMeth1());
        for (i19 = 18; i19 < 372; i19++) {
            switch (((i19 % 8) * 5) + 122) {
            case 162:
                s1 += (short)(i19 * i19);
            case 158:
                i2 = i2;
            case 126:
            case 124:
                i21 = 1;
                while (++i21 < 5) {
                    switch (((i20 >>> 1) % 4) + 41) {
                    case 41:
                        Test.dArrFld[i21 - 1] = i21;
                        break;
                    case 42:
                        for (i22 = 1; i22 < 1; ++i22) {
                            Test.instanceCount = i23;
                            try {
                                i23 = (173 % Test.iArrFld[i21 + 1]);
                                i20 = (i19 / -252);
                                i2 = (Test.iArrFld[i19] / 2033);
                            } catch (ArithmeticException a_e) {}
                        }
                        Test.lFld >>= i2;
                        Test.lFld -= i21;
                        break;
                    case 43:
                        d1 -= 22305;
                        Test.iArrFld[i21 - 1] -= (int)Test.fFld1;
                    case 44:
                        i20 = i1;
                        break;
                    }
                }
            case 152:
                i23 -= (int)-155L;
                break;
            case 131:
            case 151:
                i1 += i19;
            case 146:
                i1 >>= i21;
                break;
            }
        }
        long meth_res = i1 + i2 + i19 + i20 + s1 + i21 + i22 + i23 + Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-2043;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.1010F);

        fArr[(i >>> 1) % N] -= (i + i);
        i -= (int)Math.min(Test.instanceCount--, lMeth(i, i));
        i = 5;
        i <<= (int)Test.lFld;

        FuzzerUtils.out.println("i fArr = " + i + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.fFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println("Test.lFld Test.iArrFld Test.dArrFld = " + Test.lFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
