// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-35574L;
    public short sFld=24331;
    public int iFld=3;
    public int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 125);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, long l) {

        int i9=32558, i10=-12, i11=-52, i12=-94, i13=-50, iArr[]=new int[N];
        double d=2.44545;
        float f=0.898F, fArr[]=new float[N];
        boolean b1=true;

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(fArr, 104.116F);

        iArr[(-9 >>> 1) % N] = (int)l;
        i9 = 1;
        while (++i9 < 389) {
            for (d = i9; d < 4; d++) {
                for (i11 = 1; i11 > 1; --i11) {
                    s <<= (short)i11;
                    switch (((i11 % 3) * 5) + 30) {
                    case 36:
                        f *= i10;
                        i10 %= (int)(i12 | 1);
                        i10 *= i13;
                        i13 *= -7;
                    case 32:
                        fArr[i11 - 1] = i10;
                        f += i11;
                        break;
                    case 38:
                        f += (float)d;
                        i10 = 38812;
                        if (b1) continue;
                    }
                }
            }
        }
        vMeth2_check_sum += s + l + i9 + Double.doubleToLongBits(d) + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth1(boolean b) {

        int i5=-50097, i6=-50461, i7=-234, i8=10, i14=184, i15=2, iArr1[][]=new int[N][N];
        double d1=-1.115384;

        FuzzerUtils.init(iArr1, -51);

        i5 = (int)(0.72715 * (i5--));
        for (i6 = 5; 137 > i6; i6++) {
            i8 = 1;
            do {
                vMeth2(sFld, Test.instanceCount);
                for (i14 = 1; 1 > i14; i14++) {
                    sFld >>= (short)i14;
                    iArrFld = iArrFld;
                    iArr1 = iArr1;
                    i15 = i6;
                    i5 = i6;
                    d1 += Test.instanceCount;
                    d1 += i8;
                    sFld += (short)i6;
                    i7 |= i14;
                }
                iArrFld[i8 - 1] = i5;
            } while (++i8 < 12);
        }
        vMeth1_check_sum += (b ? 1 : 0) + i5 + i6 + i7 + i8 + i14 + i15 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i, int i1, int i2) {

        int i3=184, i4=-5, i16=-155, i17=-33, i18=-56, i19=229, i20=7;
        boolean b2=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-29);

        i = (++iArrFld[(i1 >>> 1) % N]);
        for (i3 = 4; i3 < 138; ++i3) {
            lArrFld[i3] = (byArr[i3]--);
            vMeth1(true);
            if (b2) break;
            b2 = false;
            for (i16 = 12; i16 > 1; i16 -= 3) {
                i1 += i;
            }
            i18 = 1;
            while (++i18 < 12) {
                i1 += (((i18 * i2) + i16) - i2);
                iArrFld[i18 - 1] += i2;
                for (i19 = i18; i19 < 1; ++i19) {
                    Test.instanceCount += i19;
                    i4 += i19;
                    Test.iArrFld1 = Test.iArrFld1;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + (b2 ? 1 : 0) + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {


        vMeth(iFld, -49803, iFld);
        Test.instanceCount *= 1718;


        FuzzerUtils.out.println("Test.instanceCount sFld iFld = " + Test.instanceCount + "," + sFld + "," + iFld);
        FuzzerUtils.out.println("iArrFld lArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
