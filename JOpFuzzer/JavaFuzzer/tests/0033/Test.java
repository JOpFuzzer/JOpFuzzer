// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-931810409L;
    public static long lFld=-133L;
    public static short sFld=18715;
    public static float fFld=2.777F;
    public static long lFld1=7L;
    public static int iFld=-45;
    public static volatile double dFld=-2.56214;
    public int iFld1=174;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9);
        FuzzerUtils.init(Test.sArrFld, (short)13838);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, int i2, float f1) {

        int i3=-3, i4=3, i5=1, i6=-13, i7=7, i8=29753;
        double d=0.103941;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8477945366227401428L);

        i2 = (int)Test.instanceCount;
        lArr[(i2 >>> 1) % N] += i2;
        Test.iArrFld[(i2 >>> 1) % N] = i2;
        i2 >>= i2;
        for (i3 = 3; i3 < 189; ++i3) {
            i2 = 33;
            if (false) break;
            for (i5 = 1; i5 < 9; ++i5) {
                for (i7 = i3; i7 < 2; ++i7) {
                    i4 += (i7 * i7);
                    Test.lFld = Test.sFld;
                    if (b1) {
                        Test.lFld = (long)d;
                        i6 = Test.sFld;
                        i8 -= i6;
                    }
                }
            }
        }
        long meth_res = l + i2 + Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1) {

        int i9=-97, i10=87, i11=-234, i12=196, i13=-27331, i14=-42183;
        byte by=90;
        boolean b2=false;
        double d1=-68.49165;

        Test.instanceCount *= (iMeth(Test.lFld, i1, -1.599F) + i1);
        i1 ^= i1;
        for (i9 = 14; i9 < 258; ++i9) {
            i10 >>>= 198;
        }
        for (i11 = 19; i11 < 315; ++i11) {
            by = (byte)i1;
            Test.fFld += (i11 * i12);
            b2 = b2;
            Test.instanceCount += i11;
            Test.instanceCount += i11;
            i12 += i10;
            i13 += (i11 * i11);
            for (d1 = 1; d1 < 6; d1++) {
                Test.instanceCount = i14;
                Test.instanceCount += (long)(d1 * d1);
            }
        }
        vMeth1_check_sum += i1 + i9 + i10 + i11 + i12 + by + (b2 ? 1 : 0) + i13 + Double.doubleToLongBits(d1) + i14;
    }

    public static void vMeth(float f, int i, boolean b) {

        int i15=-29549, i16=-89, i17=-62722;
        long lArr1[]=new long[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(lArr1, -48298L);
        FuzzerUtils.init(dArr, -1.25824);

        vMeth1(i);
        switch ((((i >>> 1) % 9) * 5) + 65) {
        case 75:
            for (long l1 : lArr1) {
                lArr1[(i >>> 1) % N] -= Test.lFld;
            }
            i15 = 1;
            do {
                i <<= i;
                Test.instanceCount *= i15;
                i &= Test.sFld;
                Test.lFld1 >>>= Test.lFld1;
                i += (((i15 * Test.sFld) + Test.fFld) - i15);
                i >>>= 19796;
                for (i16 = 1; i16 < 5; i16++) {
                    Test.fFld = 3;
                    dArr[i15 - 1][i15 + 1] *= Test.iFld;
                    Test.instanceCount = 39914;
                }
            } while (++i15 < 370);
        case 91:
            lArr1 = lArr1;
            break;
        case 79:
            i17 -= Test.iFld;
            break;
        case 105:
            Test.sArrFld = Test.sArrFld;
            break;
        case 81:
            f += Test.iFld;
        case 104:
            i17 &= (int)Test.instanceCount;
            break;
        case 80:
            i = i15;
            break;
        case 77:
            Test.dFld *= 72;
        case 66:
            Test.lFld = (long)f;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + (b ? 1 : 0) + i15 + i16 + i17 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        boolean b3=true;
        int i19=-47507, i20=226, i21=-162, i22=12, i23=10, i24=11622, i25=8, i26=-208, i27=150, i28=-9;
        byte by1=74;

        vMeth(106.192F, Test.iFld, b3);
        for (i19 = 17; i19 < 338; i19 += 3) {
            if (b3) {
                i20 = i19;
                for (i21 = 4; i21 < 234; i21++) {
                    for (i23 = i21; i23 < 2; ++i23) {
                        Test.iFld = i23;
                        i20 *= (int)22947L;
                        i20 += (i23 * i23);
                        Test.instanceCount += i23;
                        i20 -= (int)Test.lFld;
                    }
                    Test.dFld += i22;
                }
            } else if (b3) {
                Test.lFld <<= -13982;
                Test.iArrFld[i19 - 1] -= (int)Test.fFld;
            } else if (b3) {
                Test.iArrFld[i19] -= -7;
                Test.fFld += (11 + (i19 * i19));
                Test.fFld *= (float)60.93235;
            } else {
                i22 += i20;
                by1 *= (byte)Test.iFld;
                Test.iArrFld[i19] += -39377;
            }
            Test.iArrFld[i19 + 1] *= i22;
            for (i25 = 3; i25 < 234; i25++) {
                i26 *= i27;
                i22 = Test.iFld;
                Test.iArrFld[i19 + 1] = i27;
                iFld1 += (int)0L;
                Test.fFld = 0.377F;
                i26 = i23;
                i28 += (84 + (i25 * i25));
                Test.iFld -= i26;
            }
        }

        FuzzerUtils.out.println("b3 i19 i20 = " + (b3 ? 1 : 0) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 by1 i25 = " + i24 + "," + by1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.sFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld Test.lFld1 Test.iFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.lFld1 + "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld iFld1 Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + iFld1 +
            "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
