// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2131830103L;
    public float fFld=-1.369F;
    public static int iFld=-12;
    public static double dFld=1.86924;
    public long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth2(int i4, int i5) {

        int i6=1, i7=-14, iArr1[]=new int[N];
        float f=-2.978F;
        short s=20359;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 5.27820);
        FuzzerUtils.init(iArr1, 14);

        i6 = 1;
        while (++i6 < 282) {
            f = 1;
            while (++f < 6) {
                Test.instanceCount += (long)(((f * i4) + i6) - i6);
                Test.instanceCount *= i4;
                dArr[i6][i6 - 1] += i4;
                i7 = 1;
                do {
                    float f1=68.908F;
                    iArr1[i6 - 1] += (int)Test.instanceCount;
                    i4 = 2;
                    i4 += (i7 ^ i7);
                    lArrFld[(int)(f)] += 49124;
                    f1 = Test.instanceCount;
                    i4 += s;
                    Test.instanceCount -= i5;
                    i4 = i5;
                } while (++i7 < 1);
                iArr1[(-10751 >>> 1) % N] = i7;
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth1() {

        int i8=-9, i9=-166, i10=-4, i12=12, i13=9, i14=37860, iArr2[]=new int[N];
        float f2=-83.659F;
        double d=0.103428, d1=-93.96613;

        FuzzerUtils.init(iArr2, 0);

        vMeth2(-191, i8);
        f2 += f2;
        i8 = (int)f2;
        try {
            i8 *= (int)d;
            i8 = i8;
            for (i9 = 12; 335 > i9; i9++) {
                i10 >>>= i9;
                i8 = (int)Test.instanceCount;
                i10 += (int)Test.instanceCount;
                i12 = 1;
                while (++i12 < 5) {
                    for (i13 = i12; i13 < 1; ++i13) {
                        i10 += (i13 * i13);
                        Test.instanceCount *= Test.instanceCount;
                        i8 += (i13 * i13);
                    }
                }
            }
        }
        catch (ArithmeticException exc2) {
            d1 = -32144;
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            i10 += (int)Test.instanceCount;
        }
        vMeth1_check_sum += i8 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) + i9 + i10 + i12 + i13 + i14 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth(int i3) {

        int i15=-55522, i16=14, i17=-7902, i18=-3, iArr[][]=new int[N][N];
        boolean b=false;
        double d2=0.73324;

        FuzzerUtils.init(iArr, -28696);

        Test.instanceCount = (--iArr[(i3 >>> 1) % N][(i3 >>> 1) % N]);
        vMeth1();
        iArr[(i3 >>> 1) % N][(i3 >>> 1) % N] = (int)Test.instanceCount;
        for (i15 = 11; i15 < 218; i15++) {
            if (b) {
                for (i17 = 1; i17 < 8; ++i17) {
                    if (i15 != 0) {
                        vMeth_check_sum += i3 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    if (b) break;
                    i16 = (int)fFld;
                }
                Test.instanceCount = (long)d2;
                if (b) {
                    if (i17 != 0) {
                        vMeth_check_sum += i3 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    i3 += i17;
                } else {
                    Test.instanceCount &= Test.instanceCount;
                }
                lArrFld[i15] = (long)fFld;
            } else {
                i16 |= i16;
            }
        }
        vMeth_check_sum += i3 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-68, i1=-196, i2=-86, i19=-24, i20=11, i21=-3, i22=-14, i23=186, i24=10762, i25=-221, i26=251, i27=13;
        short s1=17497;
        boolean b1=true;
        long l=-38641L;

        i = (int)(Test.instanceCount++);
        for (i1 = 6; i1 < 166; ++i1) {
            vMeth(i1);
            s1 += (short)Test.instanceCount;
            i2 = i1;
            b1 = b1;
            dArrFld[i1 + 1] *= fFld;
        }
        switch (((i1 >>> 1) % 2) + 84) {
        case 84:
            i2 = (int)1.765F;
            fFld = fFld;
            break;
        case 85:
            for (l = 17; l < 313; ++l) {
                for (i20 = 4; i20 < 85; i20++) {
                    i += (i20 ^ i);
                    Test.instanceCount *= i2;
                    i19 >>= i19;
                    for (i22 = 1; i22 < 2; ++i22) {
                        i21 += (i22 + s1);
                        try {
                            i23 = (-12260 / i19);
                            i21 = (iArrFld[i20 + 1] / Test.iFld);
                            i21 = (iArrFld[i22 + 1] % -252);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount = i23;
                        i2 = i1;
                        i23 = (int)Test.instanceCount;
                        Test.dFld = Test.dFld;
                        lArrFld = lArrFld;
                        iArrFld[i22 + 1] = i2;
                        i23 += (int)-8022629266185789307L;
                        i19 += Test.iFld;
                    }
                }
                for (i24 = 3; i24 < 85; i24++) {
                    for (i26 = 1; i26 < 2; ++i26) {
                        Test.instanceCount += (i26 * i26);
                        i23 -= Test.iFld;
                    }
                }
            }
            break;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("s1 b1 l = " + s1 + "," + (b1 ? 1 : 0) + "," + l);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);

        FuzzerUtils.out.println("Test.instanceCount fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld lArrFld dArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
