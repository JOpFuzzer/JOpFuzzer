// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=129L;
    public static double dFld=1.113651;
    public static float fFld=-2.791F;
    public static int iFld=36;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -131);
        FuzzerUtils.init(Test.lArrFld, 99L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i6) {


        Test.instanceCount *= i6;
        Test.instanceCount >>>= l1;
        i6 -= i6;
        i6 <<= 22647;
        long meth_res = l1 + i6;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i3, int i4, int i5) {

        int i7=-11, i8=-243, i9=3, i10=0, i11=-86, i12=-35258;
        float f1=26.957F, fArr[]=new float[N];
        byte by1=-33;

        FuzzerUtils.init(fArr, -57.858F);

        Test.iArrFld[(i5 >>> 1) % N] += ((Test.iArrFld[(38 >>> 1) % N] = (i3--)) * iMeth(Test.instanceCount, i3));
        for (i7 = 6; i7 < 272; ++i7) {
            for (i9 = 1; i9 < 6; i9++) {
                for (i11 = i7; i11 < 2; ++i11) {
                    short s=-21532;
                    if (true) {
                        i3 += i4;
                        i10 = i5;
                        i8 += (i11 * s);
                        Test.iArrFld[i9] |= i12;
                    } else if (false) {
                        i10 += (int)f1;
                        Test.instanceCount = i4;
                    }
                    switch ((((i8 >>> 1) % 5) * 5) + 40) {
                    case 52:
                        Test.iArrFld = Test.iArrFld;
                        s -= (short)Test.instanceCount;
                        fArr[i9] = i9;
                        break;
                    case 65:
                        i5 += (((i11 * by1) + s) - i8);
                        break;
                    case 64:
                        i5 = (int)58.79F;
                        break;
                    case 58:
                        fArr[(i5 >>> 1) % N] -= -10;
                        break;
                    case 45:
                        i12 += i11;
                        break;
                    }
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(byte by, float f, long l) {

        int i=11553, i1=138, i2=109, i13=-6, i14=-116;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-66);

        Test.instanceCount %= (i | 1);
        for (i1 = 235; i1 > 13; i1 -= 3) {
            i -= (int)Test.dFld;
            Test.iArrFld[i1] = (++i2);
            f += (i1 * i1);
            Test.instanceCount |= Test.lArrFld[i1];
            byArr[i1 + 1] <<= (byte)i;
            Test.iArrFld[i1] = (int)lMeth(-75, i1, 144);
            l *= -10;
            i = (int)Test.instanceCount;
            for (i13 = i1; i13 < 21; ++i13) {
                Test.dFld = i14;
                i14 += (i13 ^ i2);
            }
            i2 *= i14;
        }
        i14 -= i14;
        vMeth_check_sum += by + Float.floatToIntBits(f) + l + i + i1 + i2 + i13 + i14 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        byte by2=41;
        float f2=-117.939F;
        int i15=-168, i16=9, i17=-6, i18=166, i19=-3, i20=14057, i21=-4919, i22=36594;
        short s1=16689;
        boolean b=true, bArr[]=new boolean[N];
        long l2=-13L;

        FuzzerUtils.init(bArr, true);

        vMeth(by2, Test.fFld, Test.instanceCount);
        Test.iFld = (int)Test.instanceCount;
        Test.iFld = (int)Test.instanceCount;
        for (f2 = 24; f2 < 388; ++f2) {
            switch ((int)((f2 % 9) + 56)) {
            case 56:
                Test.instanceCount = 45523;
                i15 -= i15;
                break;
            case 57:
                for (i16 = 2; 69 > i16; i16++) {
                    i18 = 2;
                    do {
                        bArr = FuzzerUtils.boolean1array(N, (boolean)false);
                        Test.iArrFld = Test.iArrFld;
                        Test.instanceCount *= Test.instanceCount;
                        i17 |= s1;
                        Test.lArrFld[i16 - 1] += i18;
                        Test.iFld = i15;
                        b = b;
                        i15 += (int)418L;
                    } while ((i18 -= 3) > 0);
                }
                i17 *= i17;
                break;
            case 58:
            case 59:
                for (i19 = 69; i19 > 2; i19 -= 2) {
                    for (i21 = 1; i21 < 3; ++i21) {
                        by2 <<= (byte)i16;
                        Test.iArrFld[i19] += (int)l2;
                        Test.fFld += (((i21 * i22) + i16) - Test.fFld);
                        i22 -= (int)Test.instanceCount;
                        i20 = (int)f2;
                        switch ((i19 % 2) + 25) {
                        case 25:
                            l2 >>>= i22;
                            Test.instanceCount -= s1;
                            i22 *= (int)Test.dFld;
                            break;
                        case 26:
                            l2 += (long)Test.fFld;
                            break;
                        default:
                            Test.fFld = l2;
                        }
                    }
                }
                break;
            case 60:
                Test.dFld -= f2;
            case 61:
            case 62:
                Test.fFld += (float)Test.dFld;
                break;
            case 63:
                i15 -= (int)4636521226914657246L;
            case 64:
            }
        }

        FuzzerUtils.out.println("by2 f2 i15 = " + by2 + "," + Float.floatToIntBits(f2) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s1 b i19 = " + s1 + "," + (b ? 1 : 0) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("l2 bArr = " + l2 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.iArrFld Test.lArrFld = " + Test.iFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
