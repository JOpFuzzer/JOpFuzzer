// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-198L;
    public static float fFld=0.880F;
    public static int iFld=-48;
    public static byte byFld=-8;
    public static boolean bFld=true;
    public static short sFld=10584;
    public static int iFld1=-9;
    public static volatile double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.29168);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=46919, i7=-237, iArr2[][]=new int[N][N];
        long l=-128L, lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -23636);
        FuzzerUtils.init(lArr1, 803L);

        i6 = 1;
        while (++i6 < 200) {
            Test.iFld = Test.byFld;
            Test.instanceCount ^= 23339;
            if (Test.iFld != 0) {
                vMeth1_check_sum += i6 + l + i7 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            Test.iFld = i6;
            if (Test.bFld) break;
            if (Test.bFld) {
                switch ((i6 % 1) + 7) {
                case 7:
                    Test.instanceCount = i6;
                    break;
                }
                Test.bFld = Test.bFld;
                iArr2[i6][i6 - 1] -= (int)Test.fFld;
                for (l = 1; l < 8; ++l) {
                    Test.sFld -= (short)i6;
                    iArr2[i6][(int)(l)] <<= Test.iFld;
                    lArr1 = FuzzerUtils.long1array(N, (long)2559452567L);
                }
                vMeth1_check_sum += i6 + l + i7 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
                return;
            } else if (Test.bFld) {
                Test.instanceCount += (i6 * i6);
            } else if (true) {
                Test.bFld = Test.bFld;
            }
        }
        vMeth1_check_sum += i6 + l + i7 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        int i2=977, i3=16305, i4=-15581, i8=8, i9=42, i10=-13, iArr1[][]=new int[N][N];
        double d=2.4952;
        byte by=58;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, -3473913494L);
        FuzzerUtils.init(iArr1, 22928);
        FuzzerUtils.init(fArr, -29.33F);

        Test.instanceCount *= i2;
        Test.instanceCount += Math.abs(i2++);
        d = 1;
        do {
            for (i3 = 1; i3 < 8; ++i3) {
                int i5=-8;
                Test.instanceCount += i3;
                i5 *= Integer.reverseBytes(i4);
                i4 = (int)((++i2) - Test.instanceCount);
                i5 <<= (int)(lArr[i3 - 1]++);
            }
            iArr1[(int)(d)][(int)(d + 1)] *= by;
            vMeth1();
            Test.iFld += (int)(((d * Test.fFld) + Test.iFld) - i2);
        } while (++d < 196);
        for (i8 = 1; i8 < 143; ++i8) {
            i10 = 11;
            while (--i10 > 0) {
                fArr[i8] *= 188;
                Test.instanceCount += (i10 * i10);
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + by + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i11=-1, i12=35, i13=151, i14=8401, i15=79, i16=5, iArr[][]=new int[N][N];
        double d1=2.65782;

        FuzzerUtils.init(iArr, -14);

        iArr = (iArr = (iArr = (iArr = iArr)));
        vMeth();
        Test.dArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        Test.iFld <<= Test.iFld;
        Test.iFld = 485;
        iArr[(-134 >>> 1) % N][(Test.iFld >>> 1) % N] += Test.iFld;
        for (i11 = 6; i11 < 206; i11++) {
            for (i13 = 1; 8 > i13; i13++) {
                if (true) {
                    i14 <<= Test.iFld;
                }
                Test.iFld = -116;
                Test.fFld = (float)d1;
                for (i15 = 1; i15 < 2; ++i15) {
                    i12 += (i15 * i14);
                    Test.iFld *= Test.byFld;
                }
            }
        }
        long meth_res = i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-55639, i1=3, i17=45877, i18=12, i19=-26351, i20=14;
        double d2=-59.116640, d3=-1.42275, dArr[]=new double[N];
        float f=-2.783F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -1691320489L);
        FuzzerUtils.init(dArr, 2.86211);

        for (i = 4; i < 170; i++) {
            Test.fFld += Float.intBitsToFloat((int)((0.210F * (i1 + i1)) * (i + i1)));
            i1 |= iMeth();
            Test.instanceCount *= Test.sFld;
            Test.iFld -= Test.iFld;
            Test.instanceCount -= Test.iFld1;
            for (d2 = i; d2 < 151; ++d2) {
                Test.iFld1 = (int)Test.instanceCount;
                lArr2[i] -= 184;
                iArrFld[i - 1] += i17;
                Test.iFld = i;
                Test.iFld &= i17;
                lArr2[i] += i;
                for (i18 = (int)(d2); 1 > i18; i18++) {
                    lArr2[i] &= -5758;
                    Test.fFld += Test.fFld;
                    Test.byFld = (byte)Test.instanceCount;
                    Test.iFld1 = (int)Test.instanceCount;
                    if (false) break;
                    i17 *= Test.iFld1;
                    i17 += (int)Test.instanceCount;
                }
                dArr[i + 1] = -2392593884883030789L;
                for (f = 1; f < 1; f++) {
                    Test.instanceCount += (long)f;
                    Test.instanceCount = i;
                    i19 = i19;
                    Test.iFld += 8;
                    d3 = Test.iFld;
                }
            }
            i20 += i20;
        }
        Test.instanceCount += i20;

        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f i20 d3 = " + Float.floatToIntBits(f) + "," + i20 + "," +
            Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("lArr2 dArr = " + FuzzerUtils.checkSum(lArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.byFld Test.bFld Test.sFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.sFld);
        FuzzerUtils.out.println("Test.iFld1 Test.dArrFld iArrFld = " + Test.iFld1 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
