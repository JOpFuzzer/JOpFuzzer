// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=8045620305822014632L;
    public static double dFld=85.116760;
    public static boolean bFld=true;
    public static int iFld=-7;
    public static long lFld=-4L;
    public static short sFld=-25877;
    public static float fFld=-18.498F;
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 168L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i5) {

        int i6=53724, i7=-54672, i8=-162, i9=64097, i10=-85, i11=11, iArr2[]=new int[N];
        float f=111.713F, fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -12);
        FuzzerUtils.init(fArr, -58.982F);

        for (i6 = 16; i6 < 345; ++i6) {
            for (i8 = 1; i8 < 5; i8++) {
                switch (((i8 >>> 1) % 10) + 127) {
                case 127:
                    iArr2[i6] += (int)42.87558;
                    i7 <<= i9;
                    i10 = 1;
                    while (++i10 < 2) {
                        f = 17067;
                        f += i5;
                    }
                case 128:
                    i5 -= i5;
                case 129:
                    f = f;
                    Test.dFld -= i6;
                    break;
                case 130:
                    i11 = 1;
                    while (++i11 < 2) {
                        iArr2[i11 - 1] = (int)Test.instanceCount;
                        i7 += (((i11 * Test.instanceCount) + i11) - i10);
                        Test.dFld = i7;
                    }
                case 131:
                    i7 *= i9;
                    break;
                case 132:
                case 133:
                    if (Test.bFld) continue;
                    break;
                case 134:
                    f = i5;
                    break;
                case 135:
                    i5 -= (int)f;
                    break;
                case 136:
                    fArr[i6 + 1] -= 2.362F;
                    break;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth1(int i4) {

        byte by=-6;
        int i12=-53392, i13=0, i14=2755, i15=11, i16=39467, i17=-36378, i18=-21786, i19=-9, iArr1[]=new int[N];
        float f1=-1.656F, fArr1[][]=new float[N][N];

        FuzzerUtils.init(iArr1, -33446);
        FuzzerUtils.init(fArr1, 37.709F);

        iArr1[(-45 >>> 1) % N] -= (int)((--i4) + dMeth(i4));
        switch (((Test.iFld >>> 1) % 4) + 108) {
        case 108:
            by &= (byte)i4;
            for (i12 = 3; i12 < 164; i12++) {
                i14 -= i13;
                for (i15 = i12; i15 < 10; ++i15) {
                    for (i17 = 1; 1 > i17; ++i17) {
                        i14 -= i16;
                        i18 -= (int)f1;
                    }
                }
                Test.instanceCount += (i12 | Test.iFld);
                i19 = 253;
                iArr1[i12] >>>= 10766;
                Test.iFld = by;
                iArr1[i12 - 1] = (int)Test.lFld;
                i19 += (int)Test.dFld;
            }
            break;
        case 109:
            iArr1[(62820 >>> 1) % N] += i14;
            break;
        case 110:
            fArr1[(i16 >>> 1) % N][(-9668 >>> 1) % N] += -14L;
            break;
        case 111:
            Test.dFld += Test.dFld;
            break;
        }
        long meth_res = i4 + by + i12 + i13 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1) + i19 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2, int i3) {

        int i20=-9, i21=-35174, i22=-27, i23=26859, i24=116, iArr[]=new int[N];
        byte by1=53;

        FuzzerUtils.init(iArr, -176);

        iArr[(i2 >>> 1) % N] = ((iMeth1(i3) - Test.iFld) - i3);
        Test.iFld *= i3;
        for (i20 = 378; i20 > 23; --i20) {
            i2 = Test.iFld;
            i2 = Test.iFld;
            by1 -= (byte)Test.instanceCount;
            for (i22 = 1; i22 < 5; ++i22) {
                Test.lArrFld[i22 - 1][i22] <<= i2;
                if (i3 != 0) {
                }
                i21 = Test.sFld;
                by1 = (byte)Test.dFld;
                i2 = Test.sFld;
            }
            i24 = 1;
            do {
                i21 |= -3659;
                Test.iFld = (int)Test.instanceCount;
            } while (++i24 < 5);
        }
        long meth_res = i2 + i3 + i20 + i21 + by1 + i22 + i23 + i24 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-196, i1=3, i25=4, i26=61415, i27=-19915, i28=14, iArr3[]=new int[N];
        byte by2=56;
        long lArr[]=new long[N];
        float fArr2[]=new float[N];

        FuzzerUtils.init(lArr, -1335589853L);
        FuzzerUtils.init(fArr2, 102.649F);
        FuzzerUtils.init(iArr3, 41168);

        for (i = 13; i < 244; ++i) {
            switch (((i % 2) * 5) + 90) {
            case 97:
                lArr[i + 1] -= (iMeth(-8, i) - Test.sFld);
                Test.iFld = 10498;
                i1 += (int)-2516754011816299343L;
            case 98:
                switch ((i % 1) + 72) {
                case 72:
                    lArr = Test.lArrFld[i];
                    fArr2[i] -= Test.iFld;
                    break;
                default:
                    Test.iFld = Test.iFld;
                    i1 -= i1;
                }
                break;
            default:
                Test.iFld += (int)(-2.143F + (i * i));
                i1 = (int)Test.lFld;
                iArr3[i] = (int)Test.instanceCount;
                Test.iFld = Test.iFld;
            }
            iArr3[i] *= 5;
            i25 = 1;
            while (++i25 < 109) {
                Test.iFld >>= 229;
                Test.instanceCount = 2;
                for (i26 = 1; i26 < 1; ++i26) {
                    Test.fFld *= Test.fFld;
                    i1 -= (int)Test.instanceCount;
                    i1 ^= 5;
                    Test.iFld |= i25;
                    i27 += (i26 - i1);
                    iArr3[i26 + 1] += i25;
                    switch (((i25 % 2) * 5) + 83) {
                    case 85:
                        i27 >>>= i27;
                        Test.lFld *= by2;
                        i28 = i25;
                        Test.instanceCount += i26;
                        break;
                    case 88:
                        Test.lFld += (i26 * i26);
                    default:
                        Test.iFld *= (int)-120.4794;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i25 = " + i + "," + i1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by2 = " + i26 + "," + i27 + "," + by2);
        FuzzerUtils.out.println("i28 lArr fArr2 = " + i28 + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.lFld Test.sFld = " + Test.iFld + "," + Test.lFld + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
