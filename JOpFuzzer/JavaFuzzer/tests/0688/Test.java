// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public float fFld=1.696F;
    public static byte byFld=-9;
    public boolean bFld=true;
    public double dArrFld[]=new double[N];
    public boolean bArrFld[]=new boolean[N];
    public byte byArrFld[]=new byte[N];

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i3, boolean b) {

        int i4=3, i5=-18660, i6=10, i7=43, iArr[]=new int[N];
        double d1=-55.42631;
        float f=127.525F;
        byte by=126;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, 42452);
        FuzzerUtils.init(lArr, -1400560060L);

        for (i4 = 9; i4 < 287; i4++) {
            iArr[i4 - 1] *= i4;
            i5 = -35;
            for (i6 = 1; i6 < 6; i6++) {
                d1 += i6;
                if (i3 != 0) {
                }
                switch (((i6 >>> 1) % 2) + 48) {
                case 48:
                    Test.instanceCount += i7;
                    b = false;
                    break;
                case 49:
                    i5 = i7;
                    if (b) break;
                    if (i3 != 0) {
                    }
                default:
                    f *= i3;
                    lArr[i4 + 1] = lArr[i4 - 1];
                    iArr[i4 + 1] &= by;
                }
            }
        }
        long meth_res = i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) +
            by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(double d, int i1) {

        int i2=96, i9=1, i11=3, i12=26, iArr1[]=new int[N];
        boolean b1=true;
        float f1=-120.582F;

        FuzzerUtils.init(iArr1, 4);

        i2 = 1;
        while (++i2 < 202) {
            i1 = (i1 + iMeth1(-20704, b1));
            Test.instanceCount -= (long)d;
            d += d;
            i1 = i2;
            i1 += (int)-16324L;
            i1 = (int)f1;
            i9 = i1;
        }
        for (int i10 : iArr1) {
            for (i11 = 1; i11 < 4; i11 += 3) {
                i10 += (i11 + i9);
                iArr1 = iArr1;
                i1 += i12;
            }
            Test.instanceCount = i12;
            i9 -= (int)Test.instanceCount;
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + i2 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i9 + i11 + i12
            + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public long lMeth(long l, long l1) {

        double d2=0.84167;
        int i13=-26577, i14=-3, i15=7, i16=-60871, i17=2113, i18=-8, i19=58615, i20=4;
        boolean b2=true;
        short s=-6157;

        Test.instanceCount -= Math.max(13 - iMeth(d2, i13), i13);
        i13 += i13;
        b2 = true;
        for (i14 = 7; i14 < 140; ++i14) {
            i13 += (i14 + Test.instanceCount);
        }
        for (double d3 : dArrFld) {
            for (i16 = 1; i16 < 4; i16++) {
                float f2=-39.76F;
                f2 += i16;
                i15 += (((i16 * Test.instanceCount) + i16) - i18);
                bArrFld[i16 - 1] = b2;
                for (i19 = 1; i19 < 2; ++i19) {
                    s += (short)(((i19 * i19) + i19) - i17);
                    if (true) continue;
                    i13 &= i16;
                    byArrFld[i19] += (byte)l;
                }
            }
        }
        long meth_res = l + l1 + Double.doubleToLongBits(d2) + i13 + (b2 ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + i19 +
            i20 + s;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i21=-167, i22=13, i23=13, i24=-9437, i25=13, iArr2[]=new int[N];
        float f3=19.791F, fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -35237);
        FuzzerUtils.init(fArr, 0.795F);

        i += (int)lMeth(Test.instanceCount, Test.instanceCount);
        for (i21 = 255; i21 > 11; i21--) {
            for (i23 = 1; 103 > i23; ++i23) {
                i22 += (i23 * i23);
                fFld *= Test.instanceCount;
                Test.byFld += (byte)(((i23 * fFld) + i24) - i21);
                Test.byFld = (byte)i21;
                if (bFld) continue;
                for (f3 = 1; f3 < 2; f3++) {
                    switch ((int)(((f3 % 5) * 5) + 106)) {
                    case 115:
                        i25 = i21;
                        break;
                    case 117:
                        i25 -= i25;
                        break;
                    case 120:
                        iArr2 = iArr2;
                        Test.byFld += (byte)f3;
                        iArr2[(int)(f3 + 1)] = (int)Test.instanceCount;
                        Test.instanceCount = i24;
                        break;
                    case 108:
                        fArr[i23] = i;
                        i25 = (int)Test.instanceCount;
                        i = -195;
                        break;
                    case 112:
                        fArr[(int)(f3)] -= Test.instanceCount;
                        break;
                    default:
                        fFld %= (i | 1);
                        iArr2[i23 + 1] = i;
                        fFld += (21151 + (f3 * f3));
                        Test.instanceCount >>>= i;
                    }
                    iArr2[i23] = i22;
                }
                if (bFld) {
                    iArr2[i21 - 1] += i24;
                    i24 += (i23 * i23);
                    bFld = bFld;
                    i25 += Test.byFld;
                } else if (bFld) {
                    iArr2[i23] += Test.byFld;
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 f3 = " + i23 + "," + i24 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i25 iArr2 fArr = " + i25 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("bFld dArrFld bArrFld = " + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
