// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-8202408563124376816L;
    public static float fFld=29.611F;
    public static short sFld=-26647;
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i11, int i12) {

        long l=-9L;
        int i13=8, i15=-143, i16=-4, i17=11, i18=-4, iArr[][]=new int[N][N];
        boolean b=false;

        FuzzerUtils.init(iArr, 26891);

        if (b) {
            for (l = 12; l < 338; l++) {
                int i14=55772;
                i11 += i13;
                Test.instanceCount = i14;
                for (i15 = 5; i15 > 1; --i15) {
                    for (i17 = 1; i17 < 2; ++i17) {
                        Test.fFld += i17;
                        Test.instanceCount += 60880;
                        iArr[(int)(l - 1)] = iArr[(int)(l + 1)];
                        if (i14 != 0) {
                        }
                        i12 -= i16;
                        iArr[i15 + 1][i17 - 1] = (int)l;
                        iArr[i15 - 1][i15 - 1] *= (int)l;
                        i12 >>= i14;
                        Test.fFld *= i15;
                    }
                }
            }
        }
        long meth_res = i11 + i12 + l + i13 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth() {

        int i7=-154, i8=59385, i9=-44996, i10=-176, i19=154, iArr1[]=new int[N];
        float f2=1.1008F;
        byte by=62;
        boolean b1=true;

        FuzzerUtils.init(iArr1, 46883);

        for (i7 = 10; i7 < 272; i7++) {
            i8 += (((i7 * i8) + Test.instanceCount) - i8);
            f2 = ((i8++) - (i8 = (int)(i7 - f2)));
            for (i9 = i7; i9 < 6; i9++) {
                by = (byte)(fMeth(-11, i8) * Test.sFld);
                i8 += i10;
                i10 += (int)Test.instanceCount;
            }
        }
        f2 -= i8;
        iArr1[(i9 >>> 1) % N] += (int)Test.instanceCount;
        b1 = b1;
        i10 >>= i7;
        i19 = 1;
        while (++i19 < 165) {
            Test.instanceCount <<= i9;
            i8 += i19;
            i10 ^= i8;
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 + by + (b1 ? 1 : 0) + i19 +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(float f) {

        int i2=4, i3=-8, i4=-46, i5=-51022, i6=-1663, i20=41291, i21=-208;
        float f1=-1.257F;

        for (i2 = 5; 160 > i2; ++i2) {
            for (f1 = 1; f1 < 10; f1++) {
                for (i5 = 1; 2 > i5; i5++) {
                    f += (--Test.instanceCount);
                }
                i6 -= (int)lMeth();
                Test.instanceCount -= Test.instanceCount;
                if (i5 != 0) {
                }
                i4 >>= i2;
                iArrFld[(int)(f1)] -= (int)Test.fFld;
                i4 *= 138;
                Test.fFld -= i5;
            }
            Test.instanceCount += 47676L;
            for (i20 = i2; i20 < 10; ++i20) {
                byte by1=76;
                i6 &= by1;
            }
            Test.instanceCount += (((i2 * i2) + i20) - Test.fFld);
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + i20 + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=61283, i1=-18563, i22=-12, i23=-2;
        byte by2=105;
        double d=-13.67339;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 47849L);

        for (i = 16; i < 375; i++) {
            Test.instanceCount -= (~iMeth(101.570F));
            i1 += i;
            i1 <<= by2;
            i1 /= (int)(i1 | 1);
            for (d = 1; d < 70; d += 3) {
                Test.fFld += (float)d;
                lArr[(int)(d - 1)] <<= i;
                i1 += (int)(((d * i) + i22) - i);
                i23 = 1;
                do {
                    Test.instanceCount >>= i1;
                    switch ((int)(((d % 3) * 5) + 62)) {
                    case 76:
                        iArrFld[i] *= i23;
                        iArrFld[i23] *= (int)d;
                        break;
                    case 73:
                        i1 += (-7117 + (i23 * i23));
                        break;
                    case 68:
                        i1 += (((i23 * i1) + i23) - Test.instanceCount);
                        i22 += (((i23 * i1) + Test.fFld) - i22);
                        switch (((i % 7) * 5) + 101) {
                        case 105:
                        case 120:
                            i1 += i22;
                            i1 += i22;
                            i22 = (int)Test.instanceCount;
                        case 119:
                            i1 /= (int)(i1 | 1);
                        case 134:
                            Test.instanceCount >>= Test.instanceCount;
                            Test.instanceCount += i23;
                            Test.instanceCount -= Test.sFld;
                            Test.instanceCount = Test.instanceCount;
                        case 113:
                            Test.instanceCount = i22;
                            i1 = (int)Test.fFld;
                        case 117:
                            i22 *= i;
                            i1 %= -56795;
                        case 126:
                            i22 >>= (int)Test.instanceCount;
                        }
                    }
                } while ((i23 += 2) < 4);
            }
        }

        FuzzerUtils.out.println("i i1 by2 = " + i + "," + i1 + "," + by2);
        FuzzerUtils.out.println("d i22 i23 = " + Double.doubleToLongBits(d) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
