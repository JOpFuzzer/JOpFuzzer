// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-5691998704688014169L;
    public static short sFld=16052;
    public static volatile double dFld=1.10207;
    public static float fFld=0.657F;
    public static byte byFld=-29;
    public long lFld=-8092366827637203487L;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, int i7, int i8) {

        int i9=8724, i10=10, i11=-6, i12=2, i13=-901, i14=5, iArr1[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 13);

        if (true) {
            for (i9 = 3; i9 < 222; i9++) {
                for (i11 = 1; i11 < 7; i11 += 2) {
                    i7 = 6;
                    iArr1[i11 - 1] = i10;
                    Test.instanceCount = (long)Test.dFld;
                    i7 = (int)-1.57404;
                    i8 -= i6;
                    i10 += i11;
                    for (i13 = 1; i13 < 3; ++i13) {
                        if (b) continue;
                        iArr1[i11 + 1] -= i6;
                        try {
                            i10 = (i6 % 1088512242);
                            i14 = (-13 % i8);
                            i14 = (iArr1[i9 - 1] / -158);
                        } catch (ArithmeticException a_e) {}
                        i10 += i9;
                    }
                }
                try {
                    i8 = (-41 / i9);
                    i10 = (iArr1[i9 - 1] % 117);
                    i6 = (i9 % 41040);
                } catch (ArithmeticException a_e) {}
            }
        } else {
            i12 += (int)Test.dFld;
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5) {

        int i15=-5, i16=409, i18=2, iArr2[]=new int[N];
        double d1=-24.126050;

        FuzzerUtils.init(iArr2, 104);

        Test.instanceCount = (i5--);
        vMeth1(i5, i5, 60762);
        for (i15 = 5; 365 > i15; i15++) {
            int i17=175;
            i17 = i16;
            i5 += (i15 - i15);
            i5 = -7;
            Test.fFld = Test.fFld;
        }
        i16 += i16;
        Test.dFld = i16;
        iArr2[(i5 >>> 1) % N] >>= (int)6675161092907683876L;
        i16 *= (int)-12305L;
        Test.dFld = i15;
        for (d1 = 15; d1 < 319; ++d1) {
            iArr2[(int)(d1 + 1)] -= (int)Test.instanceCount;
        }
        i16 <<= Test.sFld;
        vMeth_check_sum += i5 + i15 + i16 + Double.doubleToLongBits(d1) + i18 + FuzzerUtils.checkSum(iArr2);
    }

    public static float fMeth(int i3, int i4, long l1) {

        int i19=-43350, i20=-9, i21=-11, i22=8, i23=-13, i24=-11, i25=54283, i26=-201, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, 146);

        vMeth(i3);
        for (i19 = 162; i19 > 8; i19 -= 2) {
            Test.byFld += (byte)i19;
            i20 += (i19 * i19);
            for (i21 = 20; i21 > i19; i21--) {
                for (i23 = 1; i23 < 1; ++i23) {
                    Test.instanceCount -= i24;
                }
                for (i25 = 1; i25 < 1; i25++) {
                    Test.fFld = 1.671F;
                    Test.fFld = i19;
                    if (i26 != 0) {
                    }
                    iArr3[i19 - 1] = i22;
                }
                Test.fFld = i25;
                i24 = i22;
                if (i25 != 0) {
                }
            }
        }
        long meth_res = i3 + i4 + l1 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + FuzzerUtils.checkSum(iArr3);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-13L, lArr[]=new long[N];
        int i=-33, i1=-10, i2=-7148, i27=1, i28=56, i29=-3, i30=-30, i31=27948, i32=-153, iArr[][]=new int[N][N];
        float f=-2.523F;
        double d=0.64666;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 242);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, -6L);

        for (l = 3; l < 195; ++l) {
            f += (float)((d--) / ((Test.instanceCount + (iArr[(int)(l + 1)][(int)(l + 1)] <<= Test.sFld)) | 1));
            if (bArr[(int)(l)]) continue;
            for (i1 = 6; i1 < 131; i1++) {
                Test.instanceCount += (i1 | (long)f);
                d += fMeth(i1, i, 45964L);
            }
            i2 += (int)lFld;
        }
        for (i27 = 18; i27 < 340; i27 += 3) {
            for (i29 = 7; 234 > i29; i29++) {
                for (i31 = 1; i31 < 2; ++i31) {
                    iArr[i27 + 1][i31 + 1] += 9715;
                    f += (i31 + Test.sFld);
                    b1 = b1;
                    b1 = b1;
                    lFld -= i29;
                    iArr[i27 + 1][i29] = (int)lFld;
                    i30 *= i;
                    lArr = lArr;
                    if (false) {
                        switch (((i31 % 8) * 5) + 72) {
                        case 93:
                            iArr[i31][i31] <<= (int)lFld;
                            i30 *= -61038;
                            iArr[i29][i31] += i27;
                            break;
                        case 103:
                            iArr[i29][i29 - 1] += (int)Test.instanceCount;
                            iArr[i27][i29] = i28;
                            Test.fFld *= i;
                            i32 >>= 40;
                        case 86:
                            i2 += i31;
                        case 109:
                            Test.sFld = Test.byFld;
                            i30 = (int)-60.704F;
                            break;
                        case 78:
                            i2 <<= -11538;
                        case 81:
                            lFld += (long)d;
                            break;
                        case 110:
                            i28 += (i31 | (long)Test.fFld);
                        case 104:
                            lFld += (i31 * i32);
                            break;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("l i f = " + l + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d i1 i2 = " + Double.doubleToLongBits(d) + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("b1 iArr bArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.byFld lFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.byFld +
            "," + lFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
