// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1551432916925011090L;

    public static long byMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static byte byMeth() {

        int i2=-25916, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 230);

        iArr1[(-187 >>> 1) % N] |= (i2++);
        long meth_res = i2 + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1() {

        int i12=-12, i13=10;
        float f2=-2.740F;

        Test.instanceCount = 1103006768L;
        for (i12 = 2; i12 < 250; i12++) {
            i13 *= i13;
        }
        f2 -= Test.instanceCount;
        i13 = (int)Test.instanceCount;
        vMeth1_check_sum += i12 + i13 + Float.floatToIntBits(f2);
    }

    public static void vMeth(float f) {

        double d=0.52023;
        int i6=-9, i7=-103, i8=70, i9=71, i10=-35821, i11=-104, i14=-154, i15=137, iArr2[]=new int[N];
        float f1=0.689F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 5L);
        FuzzerUtils.init(iArr2, -28570);

        d -= 113;
        i6 >>= (int)(lArr1[(i6 >>> 1) % N]++);
        for (i7 = 5; i7 < 137; ++i7) {
            Test.instanceCount += (((i7 * i6) + i7) - f);
            for (i9 = 1; i9 < 12; i9++) {
                for (f1 = i7; f1 < 2; f1++) {
                    vMeth1();
                }
                Test.instanceCount += (((i9 * i10) + i9) - Test.instanceCount);
                f += 0;
                for (i14 = 1; i14 < 2; ++i14) {
                    i15 += (i14 | i6);
                    iArr2[i7] -= i6;
                }
                i6 = i10;
                iArr2[i9] += i15;
            }
            lArr1[i7] = i14;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + i10 +
            Float.floatToIntBits(f1) + i11 + i14 + i15 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public double dMeth(int i3, int i4, int i5) {

        float f3=1.455F;

        vMeth(f3);
        i3 = (int)Test.instanceCount;
        long meth_res = i3 + i4 + i5 + Float.floatToIntBits(f3);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=125, i1=-2, i16=-4, i17=-9085, i18=-3532, i19=-17575, i20=143, i21=14156, i22=9, i23=6404, i24=-30780,
            i25=8, iArr[]=new int[N];
        long l1=-49155L, l2=2182105232735728895L, lArr[]=new long[N];
        byte by=-81, byArr[]=new byte[N];
        double d1=28.75497;
        float f4=-1.944F;
        boolean b=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr, 4L);
        FuzzerUtils.init(iArr, 47010);
        FuzzerUtils.init(sArr, (short)24724);
        FuzzerUtils.init(byArr, (byte)-8);

        i = (int)Math.abs(1.90339);
        for (long l : lArr) {
            for (l1 = 1; l1 < 63; l1++) {
                i1 += (int)l1;
                iArr[(int)(l1 + 1)] *= (int)((++i1) * ((-20758 - (Test.instanceCount++)) - (i1++)));
                sArr[(int)(l1 + 1)] += byMeth();
                lArr[(int)(l1)] |= (--iArr[(int)(l1)]);
            }
            l = (long)dMeth(i, -11, i1);
            l2 <<= l;
            for (i16 = 3; i16 < 63; i16++) {
                by = (byte)i1;
                iArr = iArr;
                iArr[i16 - 1] -= i1;
                for (i18 = 2; i18 > i16; i18 -= 3) {
                    i1 = i18;
                    i1 <<= (int)l;
                }
            }
            l += -64468807L;
            iArr[(i18 >>> 1) % N] *= i1;
            d1 -= i16;
            f4 += 16716L;
        }
        for (i20 = 3; i20 < 208; i20++) {
            if (b) continue;
        }
        i1 = i20;
        i = i17;
        for (i22 = 3; i22 < 183; i22++) {
            for (i24 = 3; 139 > i24; i24++) {
                switch ((((i >>> 1) % 5) * 5) + 11) {
                case 30:
                    i1 = -167;
                    i19 += (i24 + Test.instanceCount);
                case 18:
                    i1 += (((i24 * i1) + i19) - i16);
                    break;
                case 32:
                    l2 <<= i23;
                case 26:
                    byArr[i24] += (byte)l2;
                    break;
                case 33:
                    i19 -= (int)f4;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i l1 i1 = " + i + "," + l1 + "," + i1);
        FuzzerUtils.out.println("l2 i16 i17 = " + l2 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("by i18 i19 = " + by + "," + i18 + "," + i19);
        FuzzerUtils.out.println("d1 f4 i20 = " + Double.doubleToLongBits(d1) + "," + Float.floatToIntBits(f4) + "," +
            i20);
        FuzzerUtils.out.println("i21 b i22 = " + i21 + "," + (b ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("lArr iArr sArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr) +
            "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount = " + Test.instanceCount);

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
