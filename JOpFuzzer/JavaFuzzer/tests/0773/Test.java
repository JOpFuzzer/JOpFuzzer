// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=133L;
    public static double dFld=-16.122438;
    public static byte byFld=26;
    public float fFld=-117.33F;
    public int iFld=28;
    public static boolean bArrFld[][]=new boolean[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1, int i3) {

        int i4=4, i5=-53, i6=-3, i7=-13, i8=14, i9=-8, iArr[]=new int[N];
        byte by=-114;
        float f=2.650F;
        double d=0.115520;

        FuzzerUtils.init(iArr, -29837);

        Test.instanceCount -= i3;
        i3 ^= i3;
        for (i4 = 166; i4 > 2; i4--) {
            iArr[i4 + 1] |= by;
            Test.instanceCount = i5;
            i3 -= i3;
            for (i6 = 1; 10 > i6; ++i6) {
                for (i8 = 1; i8 < 2; i8++) {
                    i7 += (i8 * i6);
                    f += by;
                    iArr = iArr;
                    i7 += (int)Test.dFld;
                    l1 *= i6;
                    i7 += (int)d;
                    Test.bArrFld[i6 + 1][i4 - 1] = false;
                }
            }
        }
        long meth_res = l1 + i3 + i4 + i5 + by + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        int i1=-57739, i2=-202, i10=-28318, i11=30, i12=-231, i13=54, i14=12152, i15=64, i16=70, i17=203, iArr1[]=new
            int[N];
        float f1=2.161F;
        boolean b=false;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 85L);
        FuzzerUtils.init(dArr, 2.37163);
        FuzzerUtils.init(iArr1, -3944);

        i1 = 1;
        while (++i1 < 278) {
            i2 |= (int)((Math.min(34, i1) * iMeth1(210L, i1)) - l);
            i2 = i2;
        }
        for (i10 = 10; 196 > i10; ++i10) {
            lArr[i10] = l;
            dArr[i10 - 1] = -7;
            for (i12 = 1; i12 < 9; i12 += 3) {
                for (i14 = i10; i14 < 5; i14++) {
                    i15 = (int)l;
                    f1 = 6461985606185723167L;
                }
            }
            switch ((((i10 >>> 1) % 9) * 5) + 90) {
            case 133:
                for (i16 = i10; i16 < 9; i16++) {
                    i17 += i16;
                    i17 = i1;
                    Test.bArrFld[i16 + 1][i10] = b;
                }
                break;
            case 105:
                i13 /= (int)((long)(f1) | 1);
            case 92:
                iArr1 = iArr1;
            case 114:
                Test.instanceCount = i15;
                break;
            case 120:
                i2 = i1;
                break;
            case 113:
                i15 += i1;
                break;
            case 104:
                i17 *= (int)Test.instanceCount;
            case 99:
                iArr1[i10 - 1] >>>= i11;
            case 130:
                iArr1[i10 + 1] >>= (int)l;
                break;
            default:
                iArr1[i10] |= i2;
            }
        }
        long meth_res = l + i1 + i2 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + (b ? 1
            : 0) + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=2;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)44);

        byArr[(i >>> 1) % N] = (byte)(i + (iMeth(3452L) - Test.instanceCount));
        Test.instanceCount = i;
        i += (int)Test.instanceCount;
        Test.instanceCount -= Test.byFld;
        i += -5;
        i -= i;
        vMeth_check_sum += i + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=9, i19=-248, i20=1, i21=58415, i22=-4, i23=11, i24=8, i25=-183, i26=31051, iArr2[][]=new int[N][N];
        long l3=196L;
        short s=-22773;

        FuzzerUtils.init(iArr2, 254);

        vMeth();
        fFld += -9;
        for (long l2 : lArrFld) {
            lArrFld[(i18 >>> 1) % N] >>= Test.instanceCount;
            iFld %= (int)((long)(Test.dFld) | 1);
            switch ((((i18 >>> 1) % 2) * 5) + 78) {
            case 87:
                Test.dFld = Test.byFld;
                iFld >>= i19;
            case 85:
                Test.instanceCount *= iFld;
                for (i20 = 1; i20 < 63; i20++) {
                    i19 >>= i22;
                    l3 = 1;
                    do {
                        i22 >>>= i20;
                        Test.byFld += (byte)(l3 ^ Test.byFld);
                        iFld = 21164;
                        Test.instanceCount |= i20;
                    } while (++l3 < 2);
                    iArr2[i20 - 1][i20] *= (int)fFld;
                    i21 = i20;
                }
                iFld >>= (int)-33159L;
                break;
            }
            fFld = Test.instanceCount;
            for (i23 = 2; i23 < 63; ++i23) {
                for (i25 = i23; 2 > i25; i25++) {
                    s = (short)i19;
                    i26 = Test.byFld;
                    i18 = (int)25798L;
                    i22 += (((i25 * Test.instanceCount) + i26) - i19);
                    l2 = i19;
                    i18 >>= (int)l3;
                    fFld *= l2;
                    iArr2[i23 - 1][i23 + 1] -= i22;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 l3 = " + i21 + "," + i22 + "," + l3);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 s iArr2 = " + i26 + "," + s + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("fFld iFld Test.bArrFld = " + Float.floatToIntBits(fFld) + "," + iFld + "," +
            FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
