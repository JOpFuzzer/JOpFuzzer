// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2761836269970119961L;
    public static byte byFld=124;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 22632);
        FuzzerUtils.init(Test.lArrFld, -14L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i5) {


        Test.iArrFld = FuzzerUtils.int1array(N, (int)2);
        i5 *= i5;
        long meth_res = i5;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i4) {

        float f=-1.550F, fArr[]=new float[N];
        int i6=-213, i7=-100, i8=42454, i9=17, i10=-100;
        boolean b=true;

        FuzzerUtils.init(fArr, 82.207F);

        f += (float)dMeth(i4);
        i4 *= 3;
        Test.iArrFld[(i4 >>> 1) % N] -= i4;
        for (i6 = 4; i6 < 337; i6++) {
            f = i4;
            if (false) continue;
            i8 = 1;
            while (++i8 < 5) {
                fArr[i8 + 1] += Test.instanceCount;
                fArr[i8] *= -173;
                i4 >>= i8;
                for (i9 = 1; 1 > i9; ++i9) {
                    i4 = i10;
                    i10 <<= i8;
                    i10 = i9;
                    b = b;
                }
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(int i1, int i2, int i3) {

        float f1=-2.88F;
        int i11=42487, i12=-14, i13=12, i14=-6, i15=-21;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1640489735839217230L);

        vMeth(i2);
        lArr[(i1 >>> 1) % N] = i3;
        f1 += Test.instanceCount;
        i1 = i1;
        i2 += (int)Test.instanceCount;
        i3 = i1;
        for (i11 = 22; i11 < 354; ++i11) {
            i3 = i12;
            if (i1 != 0) {
            }
        }
        f1 = Test.instanceCount;
        for (i13 = 18; i13 < 288; ++i13) {
            i15 = 1;
            do {
                if (i15 != 0) {
                }
                if (b1) continue;
                i3 >>>= i2;
            } while (++i15 < 6);
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-102.107525, d1=6.73470;
        int i=-122, i16=186, i17=99, i18=-4, i19=25, i20=45411, i23=-61562;
        long l=188L;
        float f2=105.310F, f3=-2.259F;
        short s=-5201;
        boolean b2=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        Test.instanceCount -= (long)(-(--d));
        Test.instanceCount = (((i - i) - (29982 - (-iMeth(142, i, i)))) * Test.instanceCount);
        for (l = 8; l < 149; l++) {
            int i21=41;
            for (i17 = 1; i17 < 178; ++i17) {
                for (i19 = 1; i19 < 2; ++i19) {
                    Test.instanceCount |= Test.instanceCount;
                    i |= (int)7L;
                    Test.iArrFld[i19 + 1] ^= (int)l;
                    Test.iArrFld[i17 - 1] = (int)f2;
                    switch ((i19 % 2) + 105) {
                    case 105:
                        i20 -= i;
                        break;
                    case 106:
                        Test.iArrFld[i19 - 1] *= (int)f3;
                        i20 = i;
                        break;
                    }
                    Test.byFld *= (byte)31.28038;
                }
            }
            Test.byFld = (byte)i21;
            i16 >>= i19;
            Test.instanceCount += (((l * i21) + Test.byFld) - Test.byFld);
        }
        i = i;
        for (long l1 : Test.lArrFld) {
            int i22=2;
            if (b2) {
                s >>>= Test.byFld;
                l1 -= i19;
            }
            bArr[(i16 >>> 1) % N] = b2;
            if (false) {
                d = l1;
                switch (((i17 >>> 1) % 1) + 21) {
                case 21:
                    Test.lArrFld[(i18 >>> 1) % N] = i22;
                    for (d1 = 1; d1 < 63; ++d1) {
                        i20 = (int)l;
                        i22 = i19;
                    }
                    break;
                }
            } else {
                i22 *= (int)-85.105453;
            }
        }

        FuzzerUtils.out.println("d i l = " + Double.doubleToLongBits(d) + "," + i + "," + l);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 f2 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("f3 s b2 = " + Float.floatToIntBits(f3) + "," + s + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("d1 i23 bArr = " + Double.doubleToLongBits(d1) + "," + i23 + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iArrFld = " + Test.instanceCount + "," + Test.byFld
            + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
