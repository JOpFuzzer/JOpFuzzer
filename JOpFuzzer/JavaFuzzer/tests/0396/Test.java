// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-55175L;
    public static short sFld=28363;
    public int iFld=-18332;
    public double dFld=82.130318;
    public byte byFld=78;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        int i2=3, i3=169, i4=-5467, i5=7, i6=11, i7=-53872, i8=13;
        boolean b=true;
        float f1=-61.641F;
        double d=110.28190;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-14892);

        for (i2 = 11; 358 > i2; ++i2) {
            for (i4 = 1; 5 > i4; i4++) {
                b = b;
                sArr[i2] += (short)Test.instanceCount;
                i5 <<= i3;
            }
            f += Test.instanceCount;
            for (f1 = 1; f1 < 5; f1 += 2) {
                for (i7 = 1; i7 < 3; ++i7) {
                    if (b) continue;
                    if (b) continue;
                }
                Test.instanceCount += (long)(((f1 * i8) + i4) - i2);
                i8 *= (int)f;
                i5 += (int)((long)f1 ^ Test.instanceCount);
                Test.sFld = (short)d;
                i3 *= 9347;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i6 +
            i7 + i8 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(int i1) {

        float f2=-45.944F;

        vMeth2(f2);
        vMeth1_check_sum += i1 + Float.floatToIntBits(f2);
    }

    public static void vMeth() {

        int i=-26320;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -56.504F);

        fArr[(-6 >>> 1) % N] *= (i--);
        vMeth1(i);
        vMeth_check_sum += i + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i9=-55513, i10=55, i11=156, i12=0, i13=-4, i14=-128, i15=-13701, i16=-1239, iArr[]=new int[N];
        float f3=-59.154F;
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(dArr, -2.86736);

        vMeth();
        i9 = 1;
        do {
            i10 = 1;
            while (++i10 < 81) {
                iFld += (((i10 * Test.instanceCount) + f3) - f3);
                iFld += i10;
            }
            for (i11 = 2; i11 < 81; ++i11) {
                Test.instanceCount = i11;
            }
            for (i13 = 3; i13 < 81; i13++) {
                i12 *= (int)dFld;
                iArr[i9] |= i11;
                for (i15 = 1; i15 < 2; ++i15) {
                    dFld *= 30666;
                    i14 *= (int)dFld;
                    switch (((i11 >>> 1) % 10) + 71) {
                    case 71:
                        dArr[i13 - 1] += -4;
                        Test.instanceCount += (-107 + (i15 * i15));
                        i16 = -83;
                    case 72:
                        dFld = dFld;
                        Test.instanceCount = i12;
                        break;
                    case 73:
                        iFld *= Test.sFld;
                        i14 += (((i15 * i12) + i15) - i12);
                        iFld &= i12;
                    case 74:
                        f3 = i11;
                        break;
                    case 75:
                    case 76:
                        iFld += (i15 * i15);
                        break;
                    case 77:
                        if (b1) break;
                        break;
                    case 78:
                    case 79:
                        Test.instanceCount = i11;
                        Test.instanceCount = i12;
                        break;
                    case 80:
                        byFld = (byte)Test.sFld;
                        iFld -= -5;
                        break;
                    }
                    i14 = iFld;
                }
            }
        } while (++i9 < 311);

        FuzzerUtils.out.println("i9 i10 f3 = " + i9 + "," + i10 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("b1 iArr dArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld iFld = " + Test.instanceCount + "," + Test.sFld + "," +
            iFld);
        FuzzerUtils.out.println("dFld byFld = " + Double.doubleToLongBits(dFld) + "," + byFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
