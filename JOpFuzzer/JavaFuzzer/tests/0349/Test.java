// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-2363221538L;
    public static byte byFld=-62;
    public static short sFld=16825;
    public int iFld=41673;
    public double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
        FuzzerUtils.init(Test.byArrFld, (byte)34);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        int i9=-172, i10=240, i11=-7292, i12=0, i13=-40926, i14=13;
        float f1=18.391F, fArr[]=new float[N];
        byte by=93;
        boolean b=true, bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -100.423F);
        FuzzerUtils.init(lArr, -4L);
        FuzzerUtils.init(bArr, true);

        if (b) {
            for (i9 = 6; i9 < 249; i9++) {
                for (i11 = 1; i11 < 7; i11 += 2) {
                    fArr[i11 - 1] *= i9;
                    lArr[i9] += i11;
                    for (i13 = i9; 3 > i13; ++i13) {
                        i10 = i8;
                        i10 += i11;
                        i14 += (int)f1;
                        by = (byte)f1;
                        switch (((i11 % 4) * 5) + 19) {
                        case 21:
                            Test.instanceCount >>= by;
                            Test.iArrFld[i11] += i14;
                            if (b) continue;
                            break;
                        case 24:
                            f1 *= Test.instanceCount;
                            break;
                        case 30:
                            bArr[i9 + 1] = false;
                            break;
                        case 22:
                        }
                    }
                }
            }
        } else if (b) {
            Test.iArrFld[(i12 >>> 1) % N] <<= i9;
            vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + by + (b ? 1 :
                0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(bArr);
            return;
        } else if (b) {
            Test.instanceCount = i9;
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + by + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth() {

        int i15=-24661, i16=7, i17=-38, i18=-44351, i19=1;
        float f2=86.146F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.29173);

        vMeth1(i15, i15);
        for (i16 = 1; i16 < 225; ++i16) {
            dArr[i16] -= f2;
        }
        for (i18 = 1; i18 < 250; i18++) {
            i17 += (int)2.146F;
            Test.iArrFld[i18] = (int)229L;
            f2 *= i15;
        }
        long meth_res = i15 + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1, int i2) {

        int i3=11869, i4=63, i5=-164, i6=1;
        float f=-83.840F;
        boolean b1=false, b2=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -112694622821360573L);

        Test.instanceCount *= ((Test.instanceCount *= Test.instanceCount) + i);
        for (i3 = 13; i3 < 296; ++i3) {
            for (f = 1; f < 6; f++) {
                i6 = 1;
                while (++i6 < 2) {
                    dArrFld[(int)(f)] *= Test.iArrFld[i3 + 1];
                    i5 -= (int)7L;
                    Test.instanceCount ^= (((--i2) + (Test.instanceCount % (i1 | 1))) * (++Test.iArrFld[i6 - 1]));
                    Test.iArrFld[i6] = iMeth();
                    lArr1 = FuzzerUtils.long1array(N, (long)-13L);
                    i5 = i;
                    switch ((i6 % 8) + 5) {
                    case 5:
                        Test.instanceCount = (long)f;
                        Test.byFld += (byte)(((i6 * Test.instanceCount) + i3) - i3);
                        i5 += (((i6 * Test.sFld) + i5) - i);
                        break;
                    case 6:
                        Test.instanceCount = -50448;
                    case 7:
                        i2 = Test.sFld;
                    case 8:
                    case 9:
                        i5 += (i6 | Test.instanceCount);
                        break;
                    case 10:
                        Test.instanceCount += i5;
                        break;
                    case 11:
                        b1 = b2;
                    case 12:
                        i += (((i6 * Test.instanceCount) + f) - f);
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + (b1 ? 1 : 0) + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i20=4, i21=-7, i22=25971, i23=251, i24=7256, i25=-20740, i26=-8, i27=-113;
        float f3=-91.231F, fArr1[]=new float[N];
        boolean b3=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr1, 83.183F);
        FuzzerUtils.init(byArr, (byte)66);

        vMeth(iFld, 12, 22222);
        iFld |= 27823;
        Test.instanceCount *= iFld;
        iFld = 2;
        for (i20 = 2; i20 < 386; ++i20) {
            iFld += i20;
            if (b3) {
                for (i22 = 2; 66 > i22; i22++) {
                    switch ((i20 % 1) + 34) {
                    case 34:
                        Test.instanceCount += i22;
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)46754);
                        iFld = (int)f3;
                        break;
                    default:
                        i23 &= -1;
                        iFld = (int)f3;
                        fArr1[i20] *= i23;
                    }
                }
                i23 = (int)Test.instanceCount;
                for (i24 = 4; i24 < 66; ++i24) {
                    iFld = i22;
                    Test.instanceCount *= i24;
                    iFld >>= i21;
                    for (i26 = i20; i26 < 2; i26++) {
                        switch ((i24 % 3) + 112) {
                        case 112:
                            f3 += i26;
                            i21 >>= (int)Test.instanceCount;
                            if (false) continue;
                            break;
                        case 113:
                            i23 <<= i20;
                            i25 *= i21;
                        case 114:
                            Test.sFld *= (short)Test.instanceCount;
                            fArr1[i20] -= 208L;
                            byArr = Test.byArrFld;
                        default:
                            Test.instanceCount += (i26 * Test.instanceCount);
                        }
                    }
                }
            } else if (b3) {
                i23 = (int)Test.instanceCount;
            } else if (b3) {
                i21 += (i20 ^ i26);
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 f3 i24 = " + i23 + "," + Float.floatToIntBits(f3) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b3 fArr1 byArr = " + (b3 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("iFld dArrFld Test.iArrFld = " + iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
