// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1266L;
    public float fFld=1.186F;
    public static byte byFld=-87;
    public int iFld=1;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 89.69F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5, long l1, int i6) {

        int i7=-179, i8=23723, i9=0, i10=-8, i11=0, i12=-36481, iArr1[]=new int[N];
        double d=-123.48589, dArr[]=new double[N];
        boolean b=false;
        float f=1.720F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 35870L);
        FuzzerUtils.init(iArr1, -3);
        FuzzerUtils.init(fArr, 29.979F);
        FuzzerUtils.init(dArr, -2.1744);

        l1 >>>= -5394211852124720495L;
        for (i7 = 3; i7 < 262; ++i7) {
            Test.byFld |= (byte)i5;
            if (b) {
                i8 += 15602;
                switch (((i5 >>> 1) % 9) + 38) {
                case 38:
                    switch (((-2 >>> 1) % 3) + 110) {
                    case 110:
                    case 111:
                        Test.byFld += Test.byFld;
                    case 112:
                        for (i9 = 1; i9 < 6; i9++) {
                            for (i11 = i9; i11 < 2; i11++) {
                                lArr = lArr;
                                Test.byFld += (byte)(i11 * i11);
                                i10 += i5;
                                i5 = (int)d;
                                Test.instanceCount = i9;
                            }
                        }
                        break;
                    }
                    break;
                case 39:
                    d *= l1;
                    break;
                case 40:
                    if (b) break;
                case 41:
                    Test.instanceCount += (((i7 * f) + i9) - Test.instanceCount);
                    break;
                case 42:
                    iArr1[i7 - 1] <<= i8;
                    break;
                case 43:
                    f += ((long)i7 ^ (long)i8);
                case 44:
                    fArr[i7] += i6;
                    break;
                case 45:
                case 46:
                    i5 *= i12;
                default:
                    iArr1 = iArr1;
                }
            } else {
                dArr[i7 + 1] %= (i5 | 1);
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + (b ? 1 : 0) +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1() {

        long l=-4232204858L;
        int i2=42804, i3=-4313, i4=176, i13=14, i14=-10;

        for (l = 13; l < 250; ++l) {
            for (i3 = 1; 7 > i3; i3++) {
                lMeth(i2, Test.instanceCount, i2);
            }
        }
        for (i13 = 17; 311 > i13; i13++) {
            i14 *= iFld;
        }
        iFld *= (int)l;
        vMeth1_check_sum += l + i2 + i3 + i4 + i13 + i14;
    }

    public void vMeth(int i, int i1) {

        int iArr[]=new int[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, 239);
        FuzzerUtils.init(lArr1, -122243026919794255L);

        iArr[(i >>> 1) % N] = (int)Test.instanceCount;
        switch ((((-14 * (i1 - -23976)) >>> 1) % 1) + 17) {
        case 17:
            i = (-i1);
            fFld += i;
            Test.instanceCount += (((Test.byFld--) - Math.abs(i)) + ((Test.instanceCount + i1) - (i--)));
            break;
        }
        vMeth1();
        lArr1[(iFld >>> 1) % N][(10 >>> 1) % N] -= iFld;
        vMeth_check_sum += i + i1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i15=-45, i16=57272, i17=-42734, i18=-55, iArr2[]=new int[N];
        short s=22671;
        double d1=-81.95216;

        FuzzerUtils.init(iArr2, 50800);

        vMeth(iFld, iFld);
        i15 = 1;
        while (++i15 < 239) {
            if (true) {
                iFld /= (int)(Test.instanceCount | 1);
                s -= (short)i15;
            }
            i16 = 105;
            do {
                iArr2[i15 - 1] += iFld;
                for (i17 = 1; i17 < 1; i17++) {
                    switch (((i16 % 10) * 5) + 25) {
                    case 34:
                        fFld = i17;
                    case 52:
                        d1 -= i18;
                        Test.instanceCount >>= s;
                        switch (((i17 % 5) * 5) + 57) {
                        case 63:
                            iFld += (((i17 * i17) + iFld) - iFld);
                            if (bFld) break;
                            iFld = (int)Test.instanceCount;
                        case 78:
                            fFld -= i17;
                            break;
                        case 61:
                            if (bFld) break;
                            break;
                        case 62:
                            iFld -= i17;
                            break;
                        case 72:
                        default:
                            iFld = i16;
                            i18 = (int)Test.instanceCount;
                        }
                    case 32:
                        Test.fArrFld[i17 - 1] = iFld;
                        d1 = i15;
                        i18 -= (int)Test.instanceCount;
                    case 66:
                        i18 += i18;
                        break;
                    case 61:
                        iFld = i17;
                        iArr2[i17] >>>= iFld;
                        iFld += (((i17 * i16) + Test.instanceCount) - s);
                        if (true) continue;
                        break;
                    case 30:
                        iFld += i16;
                        break;
                    case 29:
                        if (false) continue;
                        break;
                    case 60:
                        iFld += i17;
                    case 55:
                        i18 = i15;
                        break;
                    case 45:
                        i18 = i17;
                        break;
                    default:
                        lArrFld = lArrFld;
                    }
                }
            } while (--i16 > 0);
        }

        FuzzerUtils.out.println("i15 s i16 = " + i15 + "," + s + "," + i16);
        FuzzerUtils.out.println("i17 i18 d1 = " + i17 + "," + i18 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("iFld bFld Test.fArrFld = " + iFld + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
