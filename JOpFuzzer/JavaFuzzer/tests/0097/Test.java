// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2998846167093753670L;
    public static double dFld=0.8931;
    public static byte byFld=39;
    public static float fFld=-86.177F;
    public static short sFld=-12914;
    public static float fArrFld[]=new float[N];
    public static volatile short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -31.505F);
        FuzzerUtils.init(Test.sArrFld, (short)-13611);
        FuzzerUtils.init(Test.lArrFld, 194L);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i11=-3, i12=32, i13=-162, i14=-9477;
        float f1=-1.275F;
        byte by1=-98;

        i11 -= i11;
        i11 -= 120;
        f1 = 186;
        while (--f1 > 0) {
            i12 = 1;
            while (++i12 < 9) {
                i11 = i11;
                for (i13 = 1; i13 < 1; ++i13) {
                    i14 = (int)Test.dFld;
                    i14 += (((i13 * Test.instanceCount) + i12) - i14);
                    i11 <<= i13;
                    Test.fArrFld[i13] -= i12;
                    by1 &= (byte)-33854;
                    i11 *= i14;
                    Test.instanceCount = 2626073324L;
                    i14 += i13;
                    i11 = (int)12L;
                }
            }
        }
        long meth_res = i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + by1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(byte by, short s) {

        int i6=-87, i7=39908, i8=26249, i9=-38101, i10=-5, i15=-38123, i16=-11, iArr1[][]=new int[N][N];
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -198);
        FuzzerUtils.init(lArr, -3965938079L);

        i6 -= i6;
        for (i7 = 5; i7 < 132; i7++) {
            for (i9 = 1; i9 < 12; ++i9) {
                double d1=-88.130149;
                Test.instanceCount >>= Math.min((int)(d1 - (i7 + i6)), -(-Test.sArrFld[i7 - 1]));
                i10 ^= (int)(by * (iArr1[i7][i9 + 1] *= (int)fMeth()));
                iArr1[i9 + 1][i7 - 1] ^= i9;
                if (b) continue;
                for (i15 = 1; i15 < 2; ++i15) {
                    float f2=-2.311F;
                    switch (((i7 % 6) * 5) + 39) {
                    case 42:
                        i8 = i8;
                        iArr1[i15 + 1] = iArr1[i15];
                    case 68:
                        iArr1[i15 + 1][i9 + 1] = (int)89L;
                        if (b) continue;
                        f2 += (-4 + (i15 * i15));
                        break;
                    case 59:
                        s /= (short)(Test.instanceCount | 1);
                        break;
                    case 64:
                        Test.instanceCount >>= Test.instanceCount;
                    case 43:
                        i16 /= (int)(i7 | 1);
                    case 57:
                        Test.fArrFld[i15] = i9;
                        break;
                    default:
                        lArr[i7 - 1] = -7L;
                    }
                }
            }
        }
        vMeth_check_sum += by + s + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + i15 + i16 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static double dMeth() {

        int i4=-14, i5=-40, i17=-58133, i18=97, i19=47651;
        boolean b1=true;
        long l=-9L;

        for (i4 = 308; i4 > 5; --i4) {
            short s1=24978;
            vMeth(Test.byFld, s1);
            i5 = i5;
            for (i17 = i4; i17 < 5; ++i17) {
                b1 = b1;
                Test.instanceCount -= i18;
                Test.fFld += i4;
                i5 = i18;
                switch ((i4 % 1) + 100) {
                case 100:
                    for (l = 1; l < 1; l++) {
                        i18 += (int)(l + Test.byFld);
                        Test.instanceCount = Test.byFld;
                        Test.dFld *= i19;
                        i19 = i4;
                    }
                    break;
                default:
                    i18 = i5;
                }
            }
        }
        long meth_res = i4 + i5 + i17 + i18 + (b1 ? 1 : 0) + l + i19;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=26768, i1=188, i2=-52779, i3=-16, i20=38041, i21=-2, i22=-13, iArr[]=new int[N], iArr2[][]=new int[N][N];
        double d=-8.97116, dArr[]=new double[N];
        float f=-33.792F;
        boolean b2=false;

        FuzzerUtils.init(iArr, 27845);
        FuzzerUtils.init(iArr2, -245);
        FuzzerUtils.init(dArr, 2.70401);

        for (i = 4; 234 > i; ++i) {
            for (i2 = 109; i2 > 2; i2 -= 2) {
                i1 = (int)(d - (Math.abs(i2) + 11));
                iArr = iArr;
                if ((-(f - (Test.instanceCount - d))) != (++Test.fArrFld[i2])) continue;
                i3 <<= (i1++);
                i3 = (int)dMeth();
                i1 = Test.byFld;
                i1 *= i3;
                i1 += (i2 | i3);
                i3 -= i3;
                i1 >>= i3;
            }
            for (i20 = 3; i20 < 109; i20++) {
                iArr2 = iArr2;
                iArr2[i20][i] -= 22002;
                b2 = false;
                i21 = i1;
                Test.lArrFld[i20 - 1] = i1;
            }
            i3 -= Test.sFld;
            i3 += (i + f);
            switch ((((i20 >>> 1) % 6) * 5) + 35) {
            case 42:
                iArr[i] = (int)Test.fFld;
                i3 += (i + i3);
                break;
            case 54:
                i22 = 1;
                while (++i22 < 109) {
                    i3 += (i22 | Test.instanceCount);
                    Test.sFld += (short)(i22 + i22);
                    i21 = i21;
                    dArr[i - 1] = i22;
                    Test.instanceCount = i2;
                    i3 += (i22 * i2);
                }
                break;
            case 40:
                i1 -= (int)Test.dFld;
                break;
            case 36:
                i3 *= i2;
            case 61:
                f *= 14;
                break;
            case 46:
                i21 = i22;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d f = " + i3 + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i20 i21 b2 = " + i20 + "," + i21 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i22 iArr iArr2 = " + i22 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.sFld Test.fArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.sFld + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.sArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
