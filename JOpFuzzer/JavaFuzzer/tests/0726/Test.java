// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=9463L;
    public static short sFld=27068;
    public float fFld=79.529F;
    public static boolean bFld=true;
    public static double dFld=17.113803;
    public static float fArrFld[]=new float[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.11F);
        FuzzerUtils.init(Test.iArrFld, 9);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i8) {

        float f1=-1.87F;
        boolean b=true;
        double d=1.12755;
        int iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -48331);
        FuzzerUtils.init(lArr, -5157951356870886797L);

        iArr[(i8 >>> 1) % N] <<= i8;
        switch (((i8 >>> 1) % 2) + 12) {
        case 12:
            i8 >>= i8;
            for (int i9 : iArr) {
                if (b) {
                    lArr[(i9 >>> 1) % N] = i8;
                    if (true) {
                        Test.instanceCount += (long)f1;
                        i9 = i9;
                        if (i8 != 0) {
                        }
                    } else {
                        f1 -= i8;
                        Test.fArrFld[(36659 >>> 1) % N] -= 164;
                        i8 += (int)2.86374;
                    }
                    iArr[(i9 >>> 1) % N] = i9;
                    i8 += (int)f1;
                } else {
                    iArr[(i9 >>> 1) % N] += (int)d;
                }
            }
        case 13:
            Test.sFld = (short)i8;
        default:
            Test.instanceCount %= (Test.instanceCount | 1);
        }
        long meth_res = i8 + Float.floatToIntBits(f1) + (b ? 1 : 0) + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l2, int i4, int i5) {

        int i6=10, i7=53056, i11=9, i12=-50911, i13=-36, i14=-11, i15=-10898;
        float f2=125.550F;
        double d1=-37.94397;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 7L);

        for (i6 = 8; i6 < 139; i6++) {
            Test.instanceCount -= lMeth(-50635);
            lArr1[i6] += (long)f2;
            for (i11 = 1; i11 < 12; ++i11) {
                i13 >>>= i7;
            }
            lArr1[i6 + 1] -= i4;
            i7 += i6;
            lArr1[i6 + 1] += i13;
            Test.instanceCount -= i7;
            for (i14 = 1; i14 < 12; ++i14) {
                i7 += (i14 * Test.instanceCount);
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-254);
                l2 = Test.sFld;
                l2 -= (long)d1;
            }
        }
        l2 += i11;
        vMeth1_check_sum += l2 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i11 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(long l, long l1, int i2) {

        int i3=-8, i16=-11, i17=12, i18=7;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.91623);

        i3 = 1;
        do {
            vMeth1(Test.instanceCount, i3, i3);
            i16 = 1;
            while (++i16 < 5) {
                i2 &= i16;
                for (i17 = 1; i17 > 1; i17 -= 3) {
                    i18 = -205;
                    i2 *= 7106;
                    i2 += (int)l;
                    dArr[i16 - 1] = Test.instanceCount;
                    i2 += (((i17 * i2) + Test.instanceCount) - fFld);
                    Test.fArrFld[i17] -= i3;
                    l1 = i18;
                    fFld -= 7388;
                    i18 += i2;
                    i2 += i17;
                }
            }
        } while (++i3 < 317);
        vMeth_check_sum += l + l1 + i2 + i3 + i16 + i17 + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=36, i1=189, i19=-250, i20=-55043, i21=-54105, i22=10443, i23=-17, i24=-36650, i25=-2;
        float f=80.271F;
        byte by=-110;
        boolean b1=true;

        Test.instanceCount <<= 23259;
        for (i = 7; i < 125; ++i) {
            f = i;
            vMeth(Test.instanceCount, -153575397516045912L, i);
            i1 += (((i * fFld) + fFld) - f);
            for (i19 = 212; i19 > 4; i19--) {
                i1 += i19;
                i20 += i19;
                f += 13L;
                by -= (byte)i1;
                Test.instanceCount |= by;
                Test.bFld = Test.bFld;
                i1 = i;
                if (Test.bFld) {
                    Test.bFld = Test.bFld;
                    i20 += i;
                }
            }
        }
        for (i21 = 13; i21 < 208; ++i21) {
            for (i23 = 8; i23 < 129; ++i23) {
                i1 += (int)fFld;
                i22 += (i23 * i20);
                Test.sFld -= (short)Test.dFld;
                Test.dFld = -14;
                i25 = 1;
                do {
                    Test.iArrFld[i25 - 1] += -17423;
                    i1 -= i23;
                    switch ((i23 % 4) + 107) {
                    case 107:
                        i20 += i25;
                        break;
                    case 108:
                        i22 = i23;
                        if (b1) break;
                        break;
                    case 109:
                        Test.instanceCount = 17243;
                        break;
                    case 110:
                        Test.instanceCount += i25;
                        break;
                    }
                } while (++i25 < 2);
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i19 i20 by = " + i19 + "," + i20 + "," + by);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 b1 = " + i24 + "," + i25 + "," + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld fFld = " + Test.instanceCount + "," + Test.sFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.bFld Test.dFld Test.fArrFld = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
