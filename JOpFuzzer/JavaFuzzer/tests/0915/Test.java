// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3431977596695245202L;
    public static double dFld=-19.71771;
    public static byte byFld=-2;
    public static short sFld=956;
    public static boolean bFld=true;
    public static short sFld1=-17100;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -8377172715945671345L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s1, int i8) {

        int i9=-4599, i10=-2, i11=64651, i12=63481, i13=40071, iArr2[][]=new int[N][N];
        float f1=-1.185F;

        FuzzerUtils.init(iArr2, -13);

        iArr2[(i8 >>> 1) % N][(i8 >>> 1) % N] <<= i8;
        if (Test.bFld) {
            Test.bFld = Test.bFld;
            Test.instanceCount >>= i8;
            for (i9 = 10; i9 < 381; ++i9) {
                iArr2[i9][i9 + 1] += i10;
                i10 = (int)-11976L;
                i8 += (((i9 * i9) + Test.instanceCount) - Test.instanceCount);
                i11 = 1;
                do {
                    Test.instanceCount *= Test.instanceCount;
                    i10 += -3;
                    for (i12 = i11; i12 < 1; i12++) {
                        iArr2[i9 + 1][i12] *= Test.sFld;
                        f1 = i11;
                    }
                    f1 = f1;
                } while (++i11 < 5);
            }
        } else if (Test.bFld) {
            i8 *= i9;
            vMeth1_check_sum += s1 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) +
                FuzzerUtils.checkSum(iArr2);
            return;
        } else {
            Test.byFld -= (byte)s1;
        }
        vMeth1_check_sum += s1 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth() {

        int i4=160, i5=3, i6=-10, i7=0, iArr1[]=new int[N];
        float f2=1.390F;

        FuzzerUtils.init(iArr1, -9);

        for (i4 = 366; 8 < i4; i4--) {
            Test.instanceCount += i4;
            try {
                i5 = (i5 / i5);
                i5 = (i4 % 102);
                iArr1[i4 - 1] = (-253 / i5);
            } catch (ArithmeticException a_e) {}
            for (i6 = 1; 5 > i6; i6++) {
                Test.lArrFld[i4 + 1] += (Test.instanceCount + (i7++));
                i5 *= (i7++);
                i5 += (i6 + i4);
                iArr1[i4 - 1] += (int)(i6 - (Math.min(i6, i4) * (Test.instanceCount / (i6 | 1))));
            }
            i5 = (Test.sFld--);
            vMeth1(Test.sFld, i5);
            i7 <<= (int)Test.instanceCount;
            Test.sFld1 >>= (short)i6;
            f2 = i6;
            i5 *= i4;
        }
        i5 = i4;
        long meth_res = i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=0, i3=3, i14=-15, i15=-238, i16=15648, i17=-44, iArr[]=new int[N];
        short s=-28762;
        float f=2.844F;

        FuzzerUtils.init(iArr, -14236);

        i2 = 1;
        do {
            Test.instanceCount ^= (long)(((iArr[i2 - 1]++) - (Test.instanceCount--)) + ((Test.dFld - -2008996001L) +
                (Test.dFld - i2)));
            iArr[i2 + 1] <<= (int)(s &= (short)(Test.instanceCount += (i2 - s)));
            i3 >>>= (int)Test.instanceCount;
            Test.byFld += (byte)i2;
            Test.dFld -= ((i3 = (int)(i3 + f)) - (i3--));
            Test.dFld = (((i3 * i3) + (Test.instanceCount + s)) + i2);
            switch ((((iMeth() >>> 1) % 2) * 5) + 74) {
            case 81:
                iArr[i2 - 1] -= i3;
                for (i14 = 1; i14 < 7; i14++) {
                    Test.instanceCount = -190;
                    for (i16 = 1; 2 > i16; ++i16) {
                        i3 = i16;
                        iArr[i14] = (int)Test.instanceCount;
                        f += i16;
                    }
                }
                break;
            case 77:
                Test.instanceCount -= i16;
                break;
            }
        } while (++i2 < 249);
        vMeth_check_sum += i2 + s + i3 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-87, i1=39, i18=47725, i19=8, i20=-31297, i21=-2, iArr3[]=new int[N];
        float f3=1.62F;

        FuzzerUtils.init(iArr3, -4);

        for (i = 3; 160 > i; i++) {
            i1 = (int)Test.instanceCount;
            i1 -= (++i1);
            vMeth();
            for (i18 = 1; i18 < 160; ++i18) {
                i1 >>= -22;
                Test.instanceCount = i18;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test.instanceCount -= i18;
                    iArr3[i] = i19;
                    iArr3[i + 1] *= (int)-55L;
                    f3 *= Test.byFld;
                    i1 += Test.byFld;
                }
                f3 += (((i18 * i19) + i18) - i19);
                i1 = i18;
                Test.sFld1 = (short)Test.instanceCount;
                i21 |= i19;
            }
            i19 >>= i;
        }
        Test.sFld1 -= (short)-2510359333683658630L;

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f3 iArr3 = " + Float.floatToIntBits(f3) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld Test.bFld Test.sFld1 = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.sFld1);
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
