// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-43205L;
    public static float fFld=46.159F;
    public static short sFld=27635;
    public static int iArrFld[]=new int[N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7) {

        float f=28.873F;
        int i8=128, i9=-9, i10=195;
        byte by=-12;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 41814L);

        i7 -= i6;
        i7 = i6;
        for (f = 1; f < 341; f++) {
            Test.instanceCount += (long)(f * i8);
            switch (((10656 >>> 1) % 9) + 72) {
            case 72:
                i8 ^= i6;
                break;
            case 73:
                i7 += (int)Test.instanceCount;
                i9 = 5;
                do {
                    Test.instanceCount = (long)-46.935F;
                    if (true) break;
                    if (false) continue;
                } while ((i9 -= 3) > 0);
            case 74:
            case 75:
                by = (byte)i6;
                i10 = 1;
                do {
                    lArr[i10] += -50620;
                } while (++i10 < 5);
                Test.instanceCount += i6;
                break;
            case 76:
                Test.instanceCount += (long)(f + i7);
            case 77:
                i8 += (int)Test.instanceCount;
                break;
            case 78:
            case 79:
                i6 += (int)(f + i6);
                break;
            case 80:
                i8 = i7;
                break;
            default:
                i7 ^= (int)-49277L;
            }
        }
        vMeth2_check_sum += i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + by + i10 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(double d, int i5) {

        long l1=6036461122030156930L, lArr1[]=new long[N];
        int i11=53, i12=25, i13=6, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(lArr1, -3233886524163452237L);

        vMeth2(i5, i5);
        iArr[(i5 >>> 1) % N] = (int)Test.instanceCount;
        lArr1[(i5 >>> 1) % N] -= (long)Test.fFld;
        Test.instanceCount *= -16;
        for (l1 = 4; 195 > l1; l1++) {
            i5 = i11;
            i5 += (0 + (l1 * l1));
            iArr[(i5 >>> 1) % N] >>= i11;
            i5 += -34586;
            i11 = -4;
            i11 |= (int)l1;
            for (i12 = 1; i12 < 8; i12++) {
                i11 += (i12 * i12);
                i11 += (i12 * i12);
                iArr[i12 - 1] *= i5;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + l1 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(long l, int i4) {

        double d1=48.54580;
        int i14=203, i15=-17558, i16=215, i17=-195, i18=-32579, i19=-136, iArr1[]=new int[N];
        long l2=-1L;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.80F);
        FuzzerUtils.init(iArr1, 46186);

        vMeth1(d1, i4);
        for (i14 = 19; i14 < 309; i14++) {
            Test.sFld <<= (short)Test.instanceCount;
            i4 -= i4;
        }
        fArr[(i14 >>> 1) % N] += i4;
        i15 = i15;
        i16 = 1;
        do {
            i4 -= (int)Test.fFld;
            for (i17 = 1; i17 < 5; i17++) {
                iArr1[i17 - 1] += i18;
                i15 = i18;
                for (l2 = 1; l2 < 2; ++l2) {
                    i19 += (int)(((l2 * i19) + i14) - i4);
                    l += l2;
                    Test.fFld = l;
                }
            }
        } while (++i16 < 312);
        vMeth_check_sum += l + i4 + Double.doubleToLongBits(d1) + i14 + i15 + i16 + i17 + i18 + l2 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-200, i1=47467, i2=173, i3=-228, i20=18, i21=57765, i22=-1, i23=10, i24=62149;
        boolean b=true;
        double d2=2.48317;
        byte by1=86, byArr[]=new byte[N];
        short sArr[]=new short[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(sArr, (short)-9090);
        FuzzerUtils.init(lArr2, -865285832494695883L);
        FuzzerUtils.init(byArr, (byte)70);

        for (i = 5; i < 200; i += 3) {
            b = false;
            for (i2 = 7; i2 < 385; i2++) {
                Test.instanceCount -= (i1--);
                switch ((((((int)(Test.fFld + Test.fFld)) >>> 1) % 9) * 5) + 93) {
                case 114:
                    vMeth(Test.instanceCount, -235);
                    i1 -= 148;
                    b = b;
                    break;
                case 129:
                    Test.iArrFld[i2 + 1] *= i3;
                    if (b) continue;
                    for (i20 = i2; i20 < 2; ++i20) {
                        i1 += (i20 * i2);
                        Test.instanceCount += (((i20 * i) + Test.instanceCount) - i3);
                        Test.sFld += (short)i2;
                        d2 += i1;
                        Test.fFld = 13630L;
                        dArrFld = dArrFld;
                        by1 += (byte)(i20 ^ Test.instanceCount);
                    }
                    Test.fFld *= i22;
                    break;
                case 126:
                    Test.instanceCount = i22;
                    for (i23 = 1; i23 < 2; ++i23) {
                        switch (((i2 % 10) * 5) + 67) {
                        case 109:
                            Test.fFld += (i23 * i23);
                            i1 = (int)Test.instanceCount;
                            i24 = (int)Test.instanceCount;
                        case 116:
                            dArrFld[i23 - 1] = i20;
                            Test.instanceCount *= i22;
                            i21 = i22;
                            Test.iArrFld[i23 - 1] &= 215;
                        case 107:
                            i21 = i;
                        case 93:
                            sArr[i2 + 1] = (short)i22;
                            break;
                        case 112:
                            d2 *= 6757;
                            break;
                        case 108:
                        case 115:
                            b = b;
                            break;
                        case 84:
                            Test.fFld -= i21;
                            break;
                        case 113:
                            i22 >>>= 175;
                        case 69:
                            lArr2[i23 + 1] *= i2;
                            break;
                        default:
                            by1 >>= (byte)i1;
                        }
                    }
                case 107:
                    i1 ^= i1;
                case 118:
                    sArr[i - 1] = (short)i20;
                    break;
                case 130:
                    i21 += (((i2 * by1) + i20) - i24);
                    break;
                case 121:
                    i24 += (int)Test.instanceCount;
                    break;
                case 131:
                    byArr[i2 - 1] = (byte)d2;
                    break;
                case 103:
                    i3 += 26208;
                    break;
                default:
                    i1 >>= i21;
                }
            }
        }

        FuzzerUtils.out.println("i i1 b = " + i + "," + i1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i2 i3 i20 = " + i2 + "," + i3 + "," + i20);
        FuzzerUtils.out.println("i21 d2 by1 = " + i21 + "," + Double.doubleToLongBits(d2) + "," + by1);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("sArr lArr2 byArr = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(lArr2)
            + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
