// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=28292L;
    public static byte byFld=-104;
    public static int iFld=-9;
    public static double dFld=106.20858;
    public static long lFld=-5437237342381158005L;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -70);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(long l3, int i3, float f2) {

        int i4=185, i5=-29, i6=-14843, i7=-8163;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 9.886F);

        i3 -= 62;
        l3 >>>= l3;
        Test.iFld *= (int)f2;
        i4 = 1;
        while (++i4 < 142) {
            Test.dFld *= Test.iFld;
        }
        Test.iFld = i4;
        i5 = 1;
        while (++i5 < 395) {
            Test.iFld += (i5 * i5);
            Test.iArrFld = Test.iArrFld;
            if (i3 != 0) {
            }
            i3 -= i5;
            for (i6 = 1; i6 < 4; ++i6) {
                fArr[i5 + 1] = i5;
                i3 += i5;
                f2 -= f2;
            }
        }
        long meth_res = l3 + i3 + Float.floatToIntBits(f2) + i4 + i5 + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, long l1, long l2) {

        float f3=1.813F;

        Test.iFld = -11;
        Test.iArrFld[(Test.iFld >>> 1) % N] *= (int)dMeth(l, -7, f3);
        Test.dFld = Test.iFld;
        vMeth_check_sum += l + l1 + l2 + Float.floatToIntBits(f3);
    }

    public static void vSmallMeth(int i2) {

        float f1=-2.43F;
        double d=0.58815;
        long l4=-4629029067157695159L;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 33);

        f1 = (float)(((28L + (f1 = -12654)) - iArr[(i2 >>> 1) % N]) + ((i2 % (Test.byFld | 1)) + Math.abs(d)));
        vMeth(Test.lFld, Test.lFld, l4);
        vSmallMeth_check_sum += i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + l4 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=-12988, i8=12, i9=65134, i10=13, i11=-61794, i12=70, i13=82, i14=-6, i15=9;
        float f=-14.651F;
        long l5=-229L, lArr[][]=new long[N][N];
        short s=7894;

        FuzzerUtils.init(lArr, 5L);

        for (i = 6; i < 127; ++i) {
            f += ((Long.reverseBytes(Test.instanceCount) + Test.byFld) + (i + (i1 + Test.instanceCount)));
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth(i1);
            switch ((((i1 >>> 1) % 2) * 5) + 123) {
            case 133:
                i1 += (i * i);
                i8 = 1;
                while (++i8 < 207) {
                    Test.iArrFld[i8 + 1] = i1;
                    i9 = 1;
                    while (++i9 < 1) {
                        Test.iFld |= i;
                    }
                    Test.iFld += (((i8 * i1) + i1) - i8);
                }
                break;
            case 129:
                i1 = i9;
                for (i10 = 4; 207 > i10; i10 += 3) {
                    for (i12 = i; i12 < 4; i12++) {
                        i1 = (int)Test.dFld;
                        Test.iArrFld[i + 1] = (int)l5;
                    }
                    i11 += i12;
                    if (bFld) continue;
                    for (i14 = 1; i14 < 4; i14 += 3) {
                        lArr[i14][i14] %= (l5 | 1);
                        Test.iArrFld[i10 + 1] += i13;
                        s -= (short)i8;
                        Test.lFld <<= 4;
                        Test.iFld = (int)Test.lFld;
                        f = (float)-4.43272;
                    }
                    lArr[i + 1][(32749 >>> 1) % N] = i11;
                    i13 = -109;
                    Test.byFld *= (byte)-6;
                    i13 = Test.byFld;
                }
                Test.iArrFld = FuzzerUtils.int1array(N, (int)25563);
                i1 += i;
            default:
                Test.iFld -= -16786;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("l5 i14 i15 = " + l5 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("s lArr = " + s + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld Test.lFld bFld = " + Double.doubleToLongBits(Test.dFld) + "," + Test.lFld +
            "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  dMeth ->  dMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
