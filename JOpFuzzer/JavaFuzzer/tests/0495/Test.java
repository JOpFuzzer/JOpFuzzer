// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-46739L;
    public static float fFld=58.742F;
    public static double dFld=19.90607;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 252);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, long l, int i6) {

        float f2=2.785F;
        int i7=-50735, i8=12158, i9=52547, i10=-224, i11=-56542, iArr[]=new int[N];
        double d=65.99536;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-101);
        FuzzerUtils.init(iArr, -22);

        i6 <<= 79;
        for (f2 = 11; f2 < 277; ++f2) {
            i5 += (int)(f2 + i5);
            i7 *= i6;
            i7 = (int)l;
            i6 >>= i7;
            for (i8 = 1; i8 < 6; ++i8) {
                byArr[i8] *= (byte)i8;
                i7 |= i7;
                l += (long)d;
                Test.fFld = i7;
            }
            l >>= i7;
        }
        for (i10 = 130; 6 < i10; --i10) {
            iArr[i10] >>= i6;
            Test.fFld += 39;
        }
        vMeth1_check_sum += i5 + l + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + Double.doubleToLongBits(d) + i10 +
            i11 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth() {

        int i1=-49888, i2=37645, i3=89, i4=1, i12=-23443, i13=148;
        short s=-14387;
        float f=34.737F, f1=17.175F;
        byte by=42;

        for (i1 = 184; i1 > 6; i1 -= 2) {
            s >>= (short)(i2 *= (int)f);
            f1 = 1;
            while ((f1 += 3) < 17) {
                for (i3 = 1; i3 < 4; ++i3) {
                    vMeth1(i1, Test.instanceCount, i1);
                    Test.instanceCount = i4;
                    i4 *= (int)Test.dFld;
                    Test.instanceCount += i3;
                    i2 = i3;
                    by -= (byte)-2;
                    i4 *= -2;
                    i4 -= (int)Test.dFld;
                }
                for (i12 = 1; i12 < 4; ++i12) {
                    Test.instanceCount += (i12 - by);
                    i13 += i12;
                }
            }
        }
        long meth_res = i1 + i2 + s + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i3 + i4 + by + i12 + i13;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i=194, i14=-186, i15=-45906, i16=-168, i17=12, i18=18903, i19=249, iArr1[]=new int[N];
        byte by1=103;
        short s1=-9580;

        FuzzerUtils.init(iArr1, -7);

        i >>= (int)(--Test.instanceCount);
        lMeth();
        i = (int)7470146966963243999L;
        Test.instanceCount = i;
        for (i14 = 169; 2 < i14; i14--) {
            i15 *= i15;
            by1 += (byte)i14;
            for (i16 = 1; i16 < 9; i16++) {
                for (i18 = 1; i18 < 2; ++i18) {
                    int i20=-119;
                    s1 = s1;
                    try {
                        i17 = (-1636 % i14);
                        iArr1[i18] = (-91 / iArr1[i18 - 1]);
                        i = (-232 % i20);
                    } catch (ArithmeticException a_e) {}
                    if (i14 != 0) {
                        vMeth_check_sum += i + i14 + i15 + by1 + i16 + i17 + i18 + i19 + s1 +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i19 <<= by1;
                    iArr1[i18] = (int)Test.instanceCount;
                }
                i19 = i17;
            }
        }
        vMeth_check_sum += i + i14 + i15 + by1 + i16 + i17 + i18 + i19 + s1 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i21=234, i22=61374, i23=51255, i24=-37, i25=9, i26=-201, i27=-5;
        byte by2=108;
        short s2=-31463;
        boolean b=true, bArr[][]=new boolean[N][N];

        FuzzerUtils.init(bArr, true);

        vMeth();
        i21 = 1;
        do {
            i22 += (int)58168L;
            Test.instanceCount = i22;
            Test.instanceCount = by2;
            i23 = 1;
            do {
                i24 = 1;
                do {
                    Test.dFld = Test.instanceCount;
                    i25 |= -6;
                    i22 -= i21;
                    i25 += s2;
                    Test.iArrFld[i23] += i23;
                    i22 = i21;
                    Test.instanceCount = 35818;
                    Test.instanceCount += (i24 * i24);
                    i25 <<= (int)-61640L;
                } while (++i24 < 1);
                for (i26 = 1; i26 > 1; --i26) {
                    i27 -= i27;
                    i27 += (25786 + (i26 * i26));
                    bArr[i23 + 1][i26 - 1] = b;
                    Test.fFld -= i24;
                    i25 = (int)2.3415;
                    i25 += (((i26 * by2) + i23) - Test.fFld);
                    Test.fFld = Test.instanceCount;
                    i25 = s2;
                    i25 -= (int)Test.instanceCount;
                }
                Test.iArrFld[(i27 >>> 1) % N] = (int)Test.fFld;
            } while (++i23 < 66);
            i25 = (int)Test.instanceCount;
            Test.fFld *= i25;
            try {
                i27 = (60 / i22);
                Test.iArrFld[i21] = (169 % i27);
                i27 = (i25 % 201);
            } catch (ArithmeticException a_e) {}
        } while (++i21 < 379);

        FuzzerUtils.out.println("i21 i22 by2 = " + i21 + "," + i22 + "," + by2);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("s2 i26 i27 = " + s2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b bArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
