// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-52918L;
    public int iFld=1;
    public static short sFld=-31182;
    public static long lFld=-174L;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 136);
    }

    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i3=38472, i4=-60132, i5=-39623, i6=22585, i7=8510, i8=-12, i9=-190, i10=6, i11=-51;
        double d=-2.77303;
        short s=24615;
        byte by=29;
        boolean b=false;

        i3 = 56219;
        d += 1.121F;
        i3 ^= i3;
        for (i4 = 8; i4 < 264; i4++) {
            i5 *= i3;
        }
        if (b) {
            for (i6 = 3; 338 > i6; ++i6) {
                for (i8 = 1; 5 > i8; i8++) {
                    Test.instanceCount -= i5;
                    switch (((i8 % 1) * 5) + 7) {
                    case 9:
                        for (i10 = 1; i10 < 2; ++i10) {
                            Test.instanceCount = Test.instanceCount;
                        }
                        i9 += (i8 - i9);
                        i9 -= (int)Test.instanceCount;
                        i11 += (((i8 * i7) + Test.instanceCount) - s);
                        break;
                    default:
                        i7 += (((i8 * i3) + i3) - i9);
                    }
                }
            }
        } else if (b) {
            i9 &= by;
        } else if (true) {
            Test.iArrFld1[(i6 >>> 1) % N] = i3;
        } else {
            i9 -= (int)Test.instanceCount;
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s + by + (b ? 1
            : 0);
    }

    public static float fMeth1() {

        int i12=22078, i13=-11, i14=12, i15=0, i16=-6;
        float f=1.332F;

        vMeth();
        i12 = 1;
        do {
            Test.iArrFld1[i12] -= i12;
            i13 -= i13;
            i13 <<= i12;
            for (i14 = i12; i14 < 5; ++i14) {
                i13 += i14;
                Test.instanceCount += (5 + (i14 * i14));
                if (i13 != 0) {
                }
                for (f = 1; 1 > f; ++f) {
                    Test.instanceCount += i12;
                    i13 = (int)-4L;
                    i13 += i15;
                    i16 |= i13;
                    i15 *= -25325;
                }
            }
        } while (++i12 < 318);
        long meth_res = i12 + i13 + i14 + i15 + Float.floatToIntBits(f) + i16;
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public static float fMeth(int i, int i1, int i2) {

        boolean b1=false;
        int i18=211, i19=-6, i20=21183, i21=32617, i22=170, i23=-169, i24=70, i25=13422;
        byte by1=-67, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-45);

        Test.instanceCount = (long)(fMeth1() / (i | 1));
        for (int i17 : Test.iArrFld1) {
            byArr[(i >>> 1) % N] *= (byte)Test.sFld;
            if (b1) {
                i1 -= (int)-1209183660009796213L;
            }
            i1 = i1;
        }
        for (i18 = 9; 186 > i18; i18++) {
            for (i20 = 1; i20 < 9; i20++) {
                for (i22 = i20; i22 < 2; i22++) {
                    Test.instanceCount -= i23;
                }
                Test.iArrFld1[i20 + 1] *= 4;
                for (i24 = 1; 2 > i24; ++i24) {
                    i2 = i19;
                    by1 = (byte)Test.lFld;
                    i21 = i1;
                }
            }
        }
        long meth_res = i + i1 + i2 + (b1 ? 1 : 0) + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + by1 +
            FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i26=157, i27=-56175;
        float f2=2.507F;

        iArrFld[(iFld >>> 1) % N] = iFld;
        fMeth(iFld, 50, iFld);
        for (i26 = 12; i26 < 310; i26 += 2) {
            iFld = iFld;
            i27 = (int)Test.instanceCount;
            i27 = (int)f2;
            fArrFld[i26] -= 3875;
            f2 += i27;
        }
        i27 &= (int)3317918929L;
        Test.iArrFld1[(-63 >>> 1) % N] += (int)Test.lFld;
        Test.instanceCount -= iFld;
        iFld += iFld;
        Test.sFld <<= (short)iFld;
        Test.iArrFld1[(i27 >>> 1) % N] -= Test.sFld;

        FuzzerUtils.out.println("i26 i27 f2 = " + i26 + "," + i27 + "," + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.sFld = " + Test.instanceCount + "," + iFld + "," +
            Test.sFld);
        FuzzerUtils.out.println("Test.lFld iArrFld Test.iArrFld1 = " + Test.lFld + "," + FuzzerUtils.checkSum(iArrFld)
            + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth1 fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
