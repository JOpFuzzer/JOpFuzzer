// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=22231L;
    public int iFld=-2125;
    public volatile int iFld1=238;
    public static volatile float fFld=0.745F;
    public static short sFld=18872;
    public static boolean bFld=true;
    public long lArrFld[][]=new long[N][N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, float f1) {

        int i8=-14, i9=-254, i10=7, i11=-14, i12=-110, i13=65311, iArr[]=new int[N];
        double d2=0.81360, dArr[]=new double[N];
        byte by1=-123;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, 5653);
        FuzzerUtils.init(dArr, -50.40015);
        FuzzerUtils.init(lArr, -222L);

        for (i8 = 2; i8 < 128; i8++) {
            i9 = i9;
            iArr = iArr;
            i9 <<= i8;
            dArr[i8] = i9;
            Test.instanceCount <<= i9;
            for (i10 = 1; i10 < 12; i10++) {
                iArr = iArr;
            }
        }
        lArr[(i11 >>> 1) % N][(i9 >>> 1) % N] += Test.sFld;
        i9 += (int)Test.instanceCount;
        Test.fFld -= (float)d2;
        i9 = (int)Test.fFld;
        for (i12 = 10; 212 > i12; ++i12) {
            i13 &= by1;
            i13 += (i12 * i12);
        }
        vMeth1_check_sum += i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d2) + i12 +
            i13 + by1 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i6) {

        byte by2=98;
        double d3=-88.128;
        int i14=30, i15=186, i16=136, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -25);

        vMeth1(i6, Test.fFld);
        iArr1[(i6 >>> 1) % N] = i6;
        by2 *= (byte)-42.110F;
        iArr1[(i6 >>> 1) % N] -= (int)d3;
        Test.instanceCount = by2;
        d3 = i6;
        for (i14 = 15; i14 < 304; ++i14) {
            i15 = i6;
            i6 += (int)-169L;
            Test.instanceCount += (i14 * i14);
            i16 += (int)Test.instanceCount;
        }
        i16 += i16;
        vMeth_check_sum += i6 + by2 + Double.doubleToLongBits(d3) + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(float f, int i2) {

        double d1=-52.80239;
        int i3=6, i4=49133, i5=-48738, i17=-2075, i18=-91, i19=-243, i20=-5, i21=-4908, iArr2[]=new int[N];
        byte by3=-90;

        FuzzerUtils.init(iArr2, -9325);

        i2 = (int)d1;
        i3 = (i2++);
        for (i4 = 15; i4 < 369; ++i4) {
            vMeth(i3);
            i2 -= i4;
        }
        i3 <<= by3;
        Test.bFld = Test.bFld;
        for (i17 = 10; 329 > i17; i17++) {
            i3 = -34128;
            i3 = i17;
            i3 -= i19;
            i3 <<= Test.sFld;
            for (i20 = i17; i20 < 5; ++i20) {
                i3 += (i20 * i20);
                iArr2[i20 + 1] |= i5;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d1) + i3 + i4 + i5 + by3 + i17 + i18 +
            i19 + i20 + i21 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-5, i1=-12, i22=-59367, i23=-10, i24=-242, i25=-65, i26=-6, i27=43271, i28=-14, iArr3[]=new int[N];
        double d=-42.90942;
        byte by=94;

        FuzzerUtils.init(iArr3, -8);

        i = 1;
        do {
            iFld <<= (int)(iFld << -221L);
            iFld1 -= (++iFld1);
            iFld1 = (int)(d + Test.instanceCount);
            if ((--i1) == by) {
                Test.fFld += i;
            } else {
                iFld1 = (int)(iMeth(Test.fFld, iFld) - Test.instanceCount);
            }
        } while (++i < 369);
        for (i22 = 2; i22 < 186; i22 += 2) {
            lArrFld[i22 - 1][i22 - 1] = (long)Test.fFld;
            for (i24 = 272; i24 > 10; i24 -= 3) {
                if (Test.bFld) break;
                Test.instanceCount >>= Test.instanceCount;
                i23 = (int)-1557044820866956888L;
                iFld1 += (int)Test.fFld;
                i26 = 1;
                do {
                    try {
                        i25 = (i25 / i24);
                        iFld = (26998 % i26);
                        iArr3[i26 + 1] = (42568 % i23);
                    } catch (ArithmeticException a_e) {}
                    i23 += (((i26 * Test.instanceCount) + i26) - i);
                    iFld1 += Test.sFld;
                    iFld1 += (i26 - by);
                } while (++i26 < 4);
                iFld += (i24 * i24);
                iFld1 |= i1;
                iFld = (int)-6L;
                iArr3[i24] -= iFld1;
            }
            switch (((i22 % 2) * 5) + 82) {
            case 87:
                i23 -= i1;
                for (i27 = 7; i27 < 272; i27++) {
                    Test.fFld += (float)74.9842;
                    iArr3[i27 - 1] = -30;
                }
            case 86:
                Test.instanceCount = iFld1;
                break;
            default:
                Test.instanceCount += i22;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("by i22 i23 = " + by + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr3 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount iFld iFld1 = " + Test.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test.fFld Test.sFld Test.bFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.sFld
            + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
