// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2453541590045924501L;
    public int iFld=-6469;
    public static boolean bFld=false;
    public long lFld=678053250238316438L;
    public static short sFld=2108;
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4251737340276173417L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, boolean b, int i4) {

        int i5=2, i6=-54421, i7=-5, i8=12, i9=217, iArr[][]=new int[N][N], iArr1[]=new int[N];
        double d=83.80479;
        byte by=-111;

        FuzzerUtils.init(iArr, 56979);
        FuzzerUtils.init(iArr1, 15560);

        i5 = 1;
        while (++i5 < 185) {
            i4 += i5;
        }
        for (i6 = 3; i6 < 148; ++i6) {
            Test.instanceCount >>= i5;
            Test.instanceCount += (long)d;
            i7 = (int)Test.instanceCount;
            d = i5;
            iArr[i6][i6] = (int)Test.instanceCount;
            i4 += (i6 | i6);
            for (i8 = 11; i8 > 1; i8--) {
                float f=-2.151F;
                f -= Test.instanceCount;
                Test.instanceCount += (30161 + (i8 * i8));
                iArr1[i8 + 1] >>= -5;
                if (Test.bFld) continue;
            }
            by -= (byte)25702;
        }
        vMeth2_check_sum += i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + i9 + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i2) {

        float f1=0.191F, fArr[]=new float[N];
        int i10=128, i11=172, i12=216, i13=-59;
        byte by1=-82;
        short s=-14974;

        FuzzerUtils.init(fArr, 0.951F);

        vMeth2(9, false, -141);
        i2 <<= i2;
        i2 = i2;
        for (f1 = 223; f1 > 4; f1--) {
            i11 = 1;
            while (++i11 < 7) {
                Test.instanceCount += i2;
                i10 += (i11 * i11);
                for (i12 = 1; i12 < 1; i12++) {
                    i2 += (i12 - Test.instanceCount);
                    i10 >>= by1;
                    s &= (short)i2;
                    Test.instanceCount += i12;
                    Test.instanceCount -= i10;
                }
                i10 *= i2;
                fArr[(int)(f1 + 1)] *= i10;
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + by1 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, long l, int i1) {

        int i15=-8, i17=-1, i18=-7, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 22961);

        if (Test.bFld) {
            vMeth1(i1);
            for (int i14 : iArr2) {
                int i16=5032;
                float f2=2.290F;
                i15 = 1;
                while ((i15 += 3) < 4) {
                    if (Test.bFld) break;
                }
                i1 -= (int)648168662914880410L;
                Test.instanceCount -= i16;
                i14 *= (int)l;
                i16 += i16;
                switch ((((i16 >>> 1) % 7) * 5) + 26) {
                case 45:
                    i1 = i16;
                    f2 = i14;
                    for (i17 = 1; 4 > i17; ++i17) {
                        i18 = i14;
                        i *= i14;
                    }
                    break;
                case 27:
                    i16 *= i17;
                    break;
                case 60:
                    if (Test.bFld) continue;
                    break;
                case 43:
                    Test.lArrFld = Test.lArrFld;
                case 58:
                    l = i16;
                    break;
                case 38:
                    l = -54174;
                    break;
                case 28:
                    iArr2 = iArr2;
                    break;
                default:
                    iArr2[(i14 >>> 1) % N] = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + l + i1 + i15 + i17 + i18 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        byte by2=-33;
        int i19=10, i20=-7, i21=-40157, i22=-25, i23=-38757, i24=3, i25=-9, iArr3[]=new int[N];
        float f3=0.779F, f4=-14.587F;
        double d1=-53.51978;

        FuzzerUtils.init(iArr3, 9);

        iFld = ((++iFld) - iFld);
        vMeth(iFld, Test.instanceCount, iFld);
        Test.instanceCount = by2;
        for (i19 = 3; i19 < 313; ++i19) {
            Test.bFld = Test.bFld;
        }
        i21 = 1;
        while (++i21 < 383) {
            for (i22 = 66; i22 > 1; i22 -= 3) {
                iFld += (((i22 * i22) + i23) - by2);
            }
            switch ((iFld >>> 1) % 7) {
            case 0:
                i20 += (((i21 * i22) + i20) - iFld);
                iFld = i22;
                break;
            case 1:
                for (i24 = 1; i24 < 66; i24++) {
                    f3 = 1;
                    while (++f3 < 2) {
                        switch (((i21 % 10) * 5) + 32) {
                        case 63:
                            iArr3[i21 - 1] <<= -31932;
                            break;
                        case 38:
                            iArr3[i21 - 1] -= (int)lFld;
                            lFld = 36942;
                            i20 = i25;
                            sArrFld[(int)(f3 + 1)] = (short)3548503989L;
                            break;
                        case 37:
                            Test.sFld += (short)(f3 * Test.instanceCount);
                            i23 += (int)f3;
                            Test.sFld += (short)(f3 * f3);
                            break;
                        case 69:
                            iArr3[i24 - 1] = (int)Test.instanceCount;
                            i20 += (int)f3;
                            i23 = (int)lFld;
                            break;
                        case 78:
                            if (true) {
                                iFld = i25;
                                f4 += f3;
                                Test.instanceCount -= Test.sFld;
                            }
                            iArr3[(int)(f3 + 1)] += (int)d1;
                        case 52:
                            Test.instanceCount += -157;
                            break;
                        case 64:
                            Test.lArrFld[i21 - 1] <<= i24;
                            break;
                        case 42:
                            i20 -= i24;
                            break;
                        case 35:
                            iFld -= (int)f3;
                            break;
                        case 36:
                            i25 = i21;
                            break;
                        }
                    }
                }
            case 2:
                d1 -= i20;
                break;
            case 3:
                i23 = 159;
                break;
            case 4:
                lFld = iFld;
                break;
            case 5:
                Test.instanceCount = lFld;
                break;
            case 6:
                i23 *= i19;
                break;
            }
        }

        FuzzerUtils.out.println("by2 i19 i20 = " + by2 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 f3 = " + i24 + "," + i25 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("f4 d1 iArr3 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d1) + "," +
            FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.bFld = " + Test.instanceCount + "," + iFld + "," +
            (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("lFld Test.sFld Test.lArrFld = " + lFld + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
