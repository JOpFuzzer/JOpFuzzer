// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=10733L;
    public static volatile long lFld=65L;
    public int iFld=23236;
    public static byte byFld=127;
    public static float fFld=2.392F;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 11L);
        FuzzerUtils.init(Test.iArrFld, 18238);
        FuzzerUtils.init(Test.dArrFld, 31.116981);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f, int i3) {

        boolean b1=false;
        int i4=-11, i5=12, i6=42525;
        double d2=-98.69050;

        i3 -= (int)f;
        i3 = (int)f;
        i3 *= (int)f;
        try {
            Test.lArrFld = FuzzerUtils.long1array(N, (long)3328722064L);
            i3 += i3;
        }
        catch (NegativeArraySizeException exc1) {
            b1 = b1;
            for (i4 = 4; 334 > i4; i4++) {
                Test.instanceCount = i3;
                i6 = 1;
                while (++i6 < 5) {
                    Test.instanceCount ^= -141;
                }
                i3 <<= i6;
                d2 = Test.instanceCount;
                i5 = i3;
                i5 *= i4;
            }
        }
        finally {
            Test.instanceCount -= Test.instanceCount;
        }
        long meth_res = Float.floatToIntBits(f) + i3 + (b1 ? 1 : 0) + i4 + i5 + i6 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i2, double d1) {

        float f1=89.749F;
        int i7=5, i8=44200, i9=14, i10=12, i11=-2, i12=62391, i13=-154, i14=-96;
        short s=4894;

        switch ((((iMeth(f1, i2) >>> 1) % 2) * 5) + 65) {
        case 68:
            for (i7 = 6; i7 < 143; i7++) {
                Test.lArrFld[i7] = 7;
                Test.instanceCount -= i8;
            }
            for (i9 = 12; i9 < 242; ++i9) {
                i10 += i9;
                s += (short)(i9 - i8);
                for (i11 = 7; i11 > 1; --i11) {
                    i8 = (int)Test.instanceCount;
                }
                for (i13 = i9; i13 < 7; i13 += 3) {
                    i12 <<= (int)Test.instanceCount;
                    i14 = 12157;
                    Test.lFld += -47760L;
                }
                i14 += i9;
                i10 += (i9 * i9);
            }
            break;
        case 66:
            i12 = i14;
        default:
            Test.instanceCount -= Test.lFld;
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + s + i11 +
            i12 + i13 + i14;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i1=-9, i16=0, i17=4, i18=5, i19=12;
        double d3=-1.93307;
        short s1=20441;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2948685539L);

        i1 = 190;
        do {
            lArr[i1] += lMeth(11, d3);
            switch ((((i1 >>> 1) % 5) * 5) + 81) {
            case 87:
                iFld = (int)Test.instanceCount;
                Test.lFld |= -3193226043L;
                switch (((iFld >>> 1) % 9) + 6) {
                case 6:
                    switch (((i1 >>> 1) % 2) + 61) {
                    case 61:
                        for (i16 = 1; i16 < 16; i16++) {
                            switch (((i16 % 1) * 5) + 3) {
                            case 4:
                                i17 -= iFld;
                                for (i18 = i1; i18 < 2; ++i18) {
                                    iFld -= i17;
                                    i19 *= (int)Test.lFld;
                                    s1 = (short)iFld;
                                    Test.iArrFld[i1 + 1] -= 0;
                                }
                            default:
                                Test.lFld <<= i1;
                            }
                        }
                        break;
                    case 62:
                        i17 += i1;
                        break;
                    default:
                        iFld = iFld;
                    }
                    break;
                case 7:
                    i19 += (i1 - i17);
                case 8:
                    i19 -= iFld;
                    break;
                case 9:
                    Test.dArrFld[(i18 >>> 1) % N] = i18;
                    break;
                case 10:
                    if (iFld != 0) {
                        vMeth_check_sum += i1 + Double.doubleToLongBits(d3) + i16 + i17 + i18 + i19 + s1 +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    break;
                case 11:
                    Test.lFld += i1;
                    break;
                case 12:
                    Test.instanceCount = i19;
                case 13:
                    d3 *= -13;
                case 14:
                    i17 *= (int)Test.lFld;
                    break;
                default:
                    i17 = i1;
                }
            case 106:
                i17 = Test.byFld;
                break;
            case 102:
                i19 += i1;
                break;
            case 93:
                Test.instanceCount += (((i1 * Test.instanceCount) + i1) - Test.fFld);
            case 94:
            default:
                Test.lFld += (long)Test.fFld;
            }
        } while ((i1 -= 2) > 0);
        vMeth_check_sum += i1 + Double.doubleToLongBits(d3) + i16 + i17 + i18 + i19 + s1 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        int i=14;
        double d=1.86271;

        b = ((b = (100 >= (i - d))) || b);
        vMeth();
        Test.lArrFld[(iFld >>> 1) % N] >>>= Test.lFld;

        FuzzerUtils.out.println("b i d = " + (b ? 1 : 0) + "," + i + "," + Double.doubleToLongBits(d));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld iFld = " + Test.instanceCount + "," + Test.lFld + "," +
            iFld);
        FuzzerUtils.out.println("Test.byFld Test.fFld Test.lArrFld = " + Test.byFld + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
