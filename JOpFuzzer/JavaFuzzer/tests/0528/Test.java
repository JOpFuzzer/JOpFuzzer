// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=15515L;
    public int iFld=-2;
    public static boolean bFld=false;
    public static float fFld=0.359F;
    public short sFld=11016;
    public int iArrFld[][]=new int[N][N];
    public static int iArrFld1[]=new int[N];
    public static long lArrFld[][]=new long[N][N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 36019);
        FuzzerUtils.init(Test.lArrFld, 199L);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1) {

        int i4=5, i5=107, i6=5, iArr[]=new int[N];
        float f2=0.450F, f3=87.385F;
        double d3=2.105970;

        FuzzerUtils.init(iArr, 13);

        i4 = -18636;
        i5 = 1;
        while (++i5 < 317) {
            iArr[i5 + 1] += (int)f2;
            iArr[i5] += i5;
            i4 += i4;
            for (f3 = 1; f3 < 5; ++f3) {
                i6 = i5;
                d3 -= d3;
                i4 += (-63190 + (f3 * f3));
                f2 += i5;
                Test.instanceCount = -45163;
                Test.instanceCount += i6;
                i4 += (int)f3;
                i4 = (int)-4807669532414179784L;
                Test.bFld = Test.bFld;
            }
        }
        long meth_res = l1 + i4 + i5 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i6 +
            Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f1, double d2, int i1) {

        int i2=-31, i3=-51, i7=-11, i8=-10796, i9=-872, i10=64, i11=39;
        long lArr[][]=new long[N][N];
        double dArr[]=new double[N];
        float fArr[]=new float[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, 2712543934L);
        FuzzerUtils.init(dArr, 119.29139);
        FuzzerUtils.init(fArr, 95.496F);
        FuzzerUtils.init(bArr, false);

        for (i2 = 10; i2 < 299; i2++) {
            byte by=88;
            by &= (byte)lArr[i2 - 1][i2];
        }
        dArr[(i2 >>> 1) % N] -= (Test.instanceCount - iMeth1(Test.instanceCount));
        i7 = 1;
        do {
            for (i8 = i7; i8 < 9; i8++) {
                if (Test.bFld) break;
                for (i10 = 1; i10 < 1; i10++) {
                    Test.instanceCount += i11;
                    i9 = i9;
                    fArr[i8] -= i2;
                    i9 = (int)Test.instanceCount;
                }
                i9 += i8;
                bArr[i7 - 1] = Test.bFld;
                Test.instanceCount *= 0;
            }
            i3 -= i2;
        } while (++i7 < 178);
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i1 + i2 + i3 + i7 + i8 + i9 + i10 +
            i11 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(double d1, long l) {

        int i=3, i12=8, i13=-12941, i14=-99, i15=96;
        float f=-1.76F, fArr1[]=new float[N];
        byte by1=-124;
        short s=-1557;

        FuzzerUtils.init(fArr1, 53.393F);

        i = (int)((Test.instanceCount - f) * ((i--) - (151 + (i++))));
        i -= (iMeth(f, d1, -14) - i);
        i12 = 327;
        do {
            i = i;
            Test.iArrFld1[i12 + 1] |= (int)Test.instanceCount;
        } while ((i12 -= 2) > 0);
        for (i13 = 241; i13 > 9; i13 -= 3) {
            i += i13;
        }
        i14 *= (int)f;
        i14 += 20483;
        i15 = 1;
        while (++i15 < 178) {
            i14 &= i12;
            by1 += (byte)(i15 | i14);
            fArr1[i15] *= s;
            i *= (int)f;
            i14 >>= (int)-42693L;
        }
        long meth_res = Double.doubleToLongBits(d1) + l + i + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + by1 + s
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=82.126691;
        int i16=-21754, i17=2, i18=-10, i19=-47468, i20=-241, i21=8;
        float fArr2[]=new float[N];

        FuzzerUtils.init(fArr2, 0.344F);

        iArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N] *= (int)(((d - Test.instanceCount) * (iFld += (int)4030651540L)) *
            dMeth(d, Test.instanceCount));
        Test.lArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N] >>= iFld;
        Test.bFld = true;
        i16 = 1;
        while (++i16 < 135) {
            iFld >>>= iFld;
            iFld = (int)Test.fFld;
            Test.instanceCount = -23;
        }
        iFld = (int)Test.instanceCount;
        i17 = 1;
        while (++i17 < 337) {
            for (i18 = 75; i18 > 4; i18--) {
                Test.instanceCount <<= Test.instanceCount;
                i20 = 1;
                do {
                    iFld += i20;
                    d = Test.instanceCount;
                    Test.fFld += i18;
                    sFld += (short)(i20 | (long)Test.fFld);
                    Test.fFld = -14;
                    if (Test.bFld) break;
                    sArrFld = sArrFld;
                    i19 = (int)Test.fFld;
                    if (Test.bFld) {
                        if (true) continue;
                    }
                } while (++i20 < 2);
                i21 += (i18 | Test.instanceCount);
                switch ((((i20 >>> 1) % 4) * 5) + 34) {
                case 51:
                    i19 += (int)Test.instanceCount;
                    break;
                case 54:
                    i21 += i18;
                    i19 += (int)Test.instanceCount;
                    break;
                case 45:
                    i19 -= iFld;
                    fArr2[i17 + 1] = 0.690F;
                    Test.instanceCount = 5478813352621933873L;
                    break;
                case 44:
                    i21 = i20;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("d i16 i17 = " + Double.doubleToLongBits(d) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 fArr2 = " + i21 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.bFld = " + Test.instanceCount + "," + iFld + "," +
            (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld sFld iArrFld = " + Float.floatToIntBits(Test.fFld) + "," + sFld + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.iArrFld1 Test.lArrFld sArrFld = " + FuzzerUtils.checkSum(Test.iArrFld1) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
