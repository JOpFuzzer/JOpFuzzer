// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static float fFld=43.513F;
    public static double dFld=-1.4903;
    public int iFld=0;
    public static byte byFld=125;
    public static boolean bFld=true;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 105);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1, long l) {

        double d=1.21079;
        float f=-87.199F, f1=-1.770F, fArr[][]=new float[N][N];
        int i2=113, i3=-7, i4=233, i5=-10, i6=-203, i7=-9;
        short s=19974;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 4L);
        FuzzerUtils.init(fArr, -22.915F);

        d = l;
        lArr[(i1 >>> 1) % N][(i1 >>> 1) % N] -= l;
        for (f = 6; 229 > f; ++f) {
            i2 *= -6;
            i1 += (int)(f * f);
            for (i3 = 1; i3 < 7; ++i3) {
                i5 = 1;
                while (++i5 < 2) {
                    if (true) break;
                    i1 += i5;
                }
                switch ((int)(((f % 1) * 5) + 74)) {
                case 79:
                    for (i6 = 1; i6 < 2; ++i6) {
                        Test.iArrFld[i6 + 1] = Test.iArrFld[i6];
                        s *= (short)i2;
                        f1 *= 11;
                        fArr[(i6 >>> 1) % N][(int)(f - 1)] = 0.577F;
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += i1 + l + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7
            + s + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static short sMeth(int i) {

        float f2=0.444F, f3=0.725F;
        int i8=-215, i9=-13, i10=-159, i11=-142;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-10866);

        vMeth1(i, Test.instanceCount);
        for (f2 = 21; f2 < 370; f2++) {
            try {
                i = (-19051 / i8);
                i8 = (-28996 / i);
                i8 = (i % -123);
            } catch (ArithmeticException a_e) {}
            i9 = 1;
            while (++i9 < 5) {
                short s1=-14842;
                Test.instanceCount -= s1;
                i += i9;
                f3 -= (float)0.124564;
                for (i10 = 1; i10 < 1; ++i10) {
                    Test.instanceCount = 7311558872601894882L;
                    sArr[(int)(f2)] = (short)Test.instanceCount;
                    i = s1;
                    Test.instanceCount += i10;
                    f3 -= -93;
                }
                i11 += i9;
                Test.iArrFld[i9 + 1][i9 + 1] >>= (int)Test.instanceCount;
            }
        }
        long meth_res = i + Float.floatToIntBits(f2) + i8 + i9 + Float.floatToIntBits(f3) + i10 + i11 +
            FuzzerUtils.checkSum(sArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth() {

        int i12=25254, i13=-5;
        long l1=-14074L;
        short s2=-28119;
        boolean b=true;
        byte byArr[]=new byte[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(byArr, (byte)-111);
        FuzzerUtils.init(fArr1, 0.764F);

        sMeth(11);
        Test.instanceCount = -140;
        for (i12 = 9; i12 < 169; i12++) {
            i13 += (i12 - Test.fFld);
        }
        try {
            i13 %= (int)((long)(Test.dFld) | 1);
            i13 = i13;
            l1 = 1;
            while (++l1 < 280) {
                if (b) {
                    Test.iArrFld[(int)(l1)][(int)(l1)] *= (int)1.732F;
                    s2 = (short)i13;
                    Test.instanceCount = -5;
                } else if (b) {
                    Test.instanceCount += s2;
                    if (b) break;
                } else {
                    byArr[(int)(l1)] = (byte)i12;
                    vMeth_check_sum += i12 + i13 + l1 + s2 + (b ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                    return;
                }
            }
        }
        catch (NullPointerException exc1) {
            fArr1[(i12 >>> 1) % N] -= -35555;
        }
        vMeth_check_sum += i12 + i13 + l1 + s2 + (b ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i14=247, i15=54, i16=-199, i17=-54108, i18=33, i19=162;
        long l2=-3266402930833741987L, lArr1[]=new long[N];
        short s3=4642;
        float f4=24.800F, fArr2[]=new float[N];
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(byArr1, (byte)51);
        FuzzerUtils.init(fArr2, -1.762F);
        FuzzerUtils.init(lArr1, -9L);

        vMeth();
        for (i14 = 136; i14 > 6; --i14) {
            iFld <<= i14;
            for (l2 = 1; l2 < 193; ++l2) {
                Test.iArrFld[i14 - 1][i14] *= 9911;
                i15 ^= i14;
                iFld -= iFld;
                Test.iArrFld[i14 + 1][i14 + 1] += i16;
                iFld += (int)(l2 * l2);
                i17 = 1;
                do {
                    iFld -= iFld;
                    Test.fFld *= i14;
                    i16 &= iFld;
                    i16 += (199 + (i17 * i17));
                    byArr1[(int)(l2)] += (byte)Test.dFld;
                    Test.dFld *= Test.fFld;
                    iFld = s3;
                } while (++i17 < 2);
                i15 >>>= 10751;
                s3 += (short)(l2 * Test.byFld);
                i15 |= i16;
            }
            for (i18 = 2; i18 < 193; i18++) {
                i19 -= i15;
                i19 -= (int)Test.dFld;
                switch ((i18 % 9) + 50) {
                case 50:
                    i16 = -3295;
                    i19 -= s3;
                    f4 = 1;
                    do {
                        i16 >>= 186;
                    } while (++f4 < 2);
                    if (Test.bFld) continue;
                    break;
                case 51:
                    iFld <<= i19;
                case 52:
                    fArr2[i14 - 1] -= 7;
                case 53:
                    fArr2[i18 + 1] *= i15;
                    break;
                case 54:
                    iFld = i16;
                    break;
                case 55:
                    Test.iArrFld[i18][i18 + 1] -= (int)l2;
                    break;
                case 56:
                    i19 = iFld;
                    break;
                case 57:
                    lArr1[i18] -= iFld;
                    break;
                case 58:
                    Test.bFld = Test.bFld;
                    break;
                default:
                    fArr2[i18 - 1] += 57906;
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 l2 = " + i14 + "," + i15 + "," + l2);
        FuzzerUtils.out.println("i16 i17 s3 = " + i16 + "," + i17 + "," + s3);
        FuzzerUtils.out.println("i18 i19 f4 = " + i18 + "," + i19 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("byArr1 fArr2 lArr1 = " + FuzzerUtils.checkSum(byArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iFld Test.byFld Test.bFld = " + iFld + "," + Test.byFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
