// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-10L;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-48);
        FuzzerUtils.init(Test.iArrFld, -51584);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i1=-14;

        i1 = (int)Test.instanceCount;
        vMeth_check_sum += i1;
    }

    public static int iMeth1() {


        vMeth();
        long meth_res = 0;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        double d=0.67468;
        int i2=-48097, i3=-216, i4=8111, i5=46, iArr[]=new int[N];
        short s=7429;
        float f=-48.764F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, -40);
        FuzzerUtils.init(fArr, 0.775F);

        iMeth1();
        for (d = 123; d > 7; d--) {
            i3 = 1;
            do {
                i2 += (i3 | l);
                s += (short)i3;
                iArr[i3] = -11;
                Test.instanceCount += (((i3 * s) + l) - f);
                Test.byArrFld[i3 + 1] *= (byte)i3;
                for (i4 = 1; i4 < 3; i4++) {
                    i5 = i4;
                    fArr[i3 - 1] = i2;
                    i5 |= (int)Test.instanceCount;
                    if (i5 != 0) {
                    }
                }
                i2 += (-12 + (i3 * i3));
                if (i5 != 0) {
                }
            } while ((i3 += 2) < 13);
        }
        long meth_res = l + Double.doubleToLongBits(d) + i2 + i3 + s + Float.floatToIntBits(f) + i4 + i5 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-87, i6=59663, i8=6, i9=14, i10=-14, i11=22296, i12=93, i13=-2168;
        float f1=-1.756F;
        double d1=-8.103761;
        byte by=118;
        boolean b=true, bArr[]=new boolean[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)30698);
        FuzzerUtils.init(bArr, true);

        i = (int)Test.instanceCount;
        iMeth(-12L);
        Test.instanceCount -= i;
        Test.instanceCount *= (long)f1;
        for (d1 = 6; d1 < 384; ++d1) {
            for (i8 = 4; i8 < 67; i8++) {
                i9 += (i8 ^ i8);
                i >>= by;
                f1 *= f1;
                Test.instanceCount <<= by;
                i6 |= i8;
                sArr[i8] += (short)Test.instanceCount;
                bArr[(int)(d1)] = b;
                try {
                    i6 = (i8 / -1159244007);
                    i6 = (-109 % i8);
                    Test.iArrFld[(int)(d1 - 1)] = (-111 / Test.iArrFld[(int)(d1 + 1)]);
                } catch (ArithmeticException a_e) {}
                for (i10 = 2; i10 > 1; i10 -= 3) {
                    short s1=-20551;
                    double d2=114.101807;
                    i9 *= -46;
                    i9 >>= i6;
                    f1 -= 95;
                    s1 >>>= (short)i;
                    d2 -= i8;
                    f1 *= 13980;
                    Test.iArrFld[i10] = (int)44.286F;
                    i9 = (int)-63837L;
                }
            }
            i9 += (int)((long)d1 ^ i9);
            by += (byte)(((d1 * i9) + f1) - by);
            for (i12 = 67; i12 > 3; i12--) {
                i13 >>= (int)Test.instanceCount;
                i += i12;
                by += (byte)(i12 | i6);
            }
            i6 += -17799;
        }

        FuzzerUtils.out.println("i f1 d1 = " + i + "," + Float.floatToIntBits(f1) + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i6 i8 i9 = " + i6 + "," + i8 + "," + i9);
        FuzzerUtils.out.println("by b i10 = " + by + "," + (b ? 1 : 0) + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("sArr bArr = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byArrFld Test.iArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
