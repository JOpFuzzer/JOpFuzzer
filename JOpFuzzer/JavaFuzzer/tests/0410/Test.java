// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=154L;
    public float fFld=0.839F;
    public byte byFld=51;
    public static double dFld=-2.127180;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)95);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(long l) {

        int i1=-9, i2=-137, i3=-12, i4=-1, iArr[]=new int[N];
        short s1=21826;
        float f=-1.639F;
        byte by=-22;

        FuzzerUtils.init(iArr, -247);

        l <<= 55;
        i1 = 167;
        while ((i1 -= 3) > 0) {
            iArr[i1] -= i1;
            i2 = -13;
            s1 += (short)(((i1 * i2) + i1) - s1);
            i2 += i1;
            i2 += (0 + (i1 * i1));
            f = 1;
            do {
                i2 = i1;
                for (i3 = 1; i3 < 1; ++i3) {
                    iArr[i1] = (int)f;
                    s1 = (short)i1;
                    Test.instanceCount = (long)f;
                    i4 += i2;
                    by -= (byte)-102;
                }
            } while (++f < 27);
        }
        long meth_res = l + i1 + i2 + s1 + Float.floatToIntBits(f) + i3 + i4 + by + FuzzerUtils.checkSum(iArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i) {

        double d=2.30454;
        short s=-16630;
        boolean b1=true;
        int i5=-9, i6=0, i7=27;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -43.528F);

        d = 1;
        do {
            s = (short)(((-4142796160L + (4 - (169 * (i + i)))) * byMeth(Test.instanceCount)) + Test.instanceCount);
            if (b1) continue;
            fArr[(int)(d)] = -3422012096653744421L;
            i += (int)((long)d ^ i);
            i5 = 1;
            do {
                for (i6 = 1; i6 > 1; --i6) {
                    if (b1) {
                        if (b1) continue;
                        b1 = b1;
                        i += (int)(14L + (i6 * i6));
                    } else if (b1) {
                        Test.byArrFld[(int)(d - 1)] -= (byte)i5;
                        Test.instanceCount -= i;
                    } else if (true) {
                        i7 /= (int)(i5 | 1);
                    }
                    i7 += i6;
                }
            } while (++i5 < 5);
        } while (++d < 373);
        vMeth_check_sum += i + Double.doubleToLongBits(d) + s + (b1 ? 1 : 0) + i5 + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(boolean b) {

        byte by1=-109;
        int i8=-6163, i9=7, i10=-48970, i11=-41851, i12=42, i13=-13654, i14=-2;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 120.788F);

        if (b) {
            vMeth(-160);
        } else {
            by1 -= (byte)2;
        }
        Test.instanceCount >>= i8;
        for (i9 = 19; i9 < 355; ++i9) {
            for (i11 = i9; i11 < 5; ++i11) {
                Test.instanceCount *= -8394;
                for (i13 = 1; i13 < 1; i13++) {
                    Test.instanceCount = i9;
                    fFld -= -1283192947018972938L;
                    Test.instanceCount -= Test.instanceCount;
                    Test.instanceCount = i9;
                    i8 = i11;
                    i14 = 54425;
                }
                fArr1[i9 + 1] *= -1103744445253337232L;
            }
        }
        long meth_res = (b ? 1 : 0) + by1 + i8 + i9 + i10 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=2563, i16=136, i17=-3, i18=97, i19=4, i20=15145, i21=21751, iArr1[]=new int[N];
        short s2=-10473;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 124);
        FuzzerUtils.init(lArr, -26951L);

        Test.instanceCount *= (iMeth(false) * -6648);
        for (i15 = 6; i15 < 215; i15++) {
            i16 = i16;
            i16 = i16;
            byFld = (byte)243;
            Test.dFld += Test.instanceCount;
            iArr1[i15 - 1] = (int)fFld;
            iArr1[i15] = (int)fFld;
        }
        try {
            Test.instanceCount = i16;
            Test.instanceCount = Test.instanceCount;
            i16 *= i16;
            Test.instanceCount = i15;
        }
        catch (UserDefinedExceptionTest exc1) {
            i16 = i15;
            i16 += i16;
            i16 = (int)-1.64F;
        }
        finally {
            s2 += (short)Test.dFld;
            for (long l1 : lArr) {
                i16 *= -40617;
                lArr[(i15 >>> 1) % N] += i16;
                b2 = b2;
                switch (((i15 >>> 1) % 1) + 60) {
                case 60:
                    for (i17 = 63; 2 < i17; i17--) {
                        fFld += (i17 * i17);
                        for (i19 = 1; i19 < 2; i19++) {
                            i20 += (i19 * i19);
                            i21 *= 10;
                            i20 >>= i17;
                            lArr[i19] -= (long)Test.dFld;
                        }
                    }
                    break;
                default:
                    iArr1[(i16 >>> 1) % N] = i17;
                }
            }
        }

        FuzzerUtils.out.println("i15 i16 s2 = " + i15 + "," + i16 + "," + s2);
        FuzzerUtils.out.println("b2 i17 i18 = " + (b2 ? 1 : 0) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr1 lArr = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount fFld byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + byFld);
        FuzzerUtils.out.println("Test.dFld Test.byArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
