// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12459L;
    public static float fFld=-42.228F;
    public static double dFld=45.99579;
    public static long lFld=178L;
    public static short sFld=-28789;
    public static volatile boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.lArrFld, 2229134860L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i9=245, i10=-7, i11=1, i12=-46, iArr[]=new int[N];
        byte by=112;
        long l1=-16882L, lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 40496);
        FuzzerUtils.init(lArr, -10493187L);
        FuzzerUtils.init(dArr, 47.97311);

        i9 -= by;
        switch (((i9 >>> 1) % 2) + 93) {
        case 93:
        case 94:
            iArr[(-30160 >>> 1) % N] -= (int)Test.instanceCount;
            lArr[(i9 >>> 1) % N] >>= i9;
            break;
        default:
            Test.dFld += 164;
            i9 = (int)Test.lFld;
            for (l1 = 353; l1 > 7; l1--) {
                dArr[(int)(l1 + 1)] += i9;
                for (i11 = 1; i11 < 5; ++i11) {
                    lArr[(int)(l1 + 1)] = by;
                    i10 -= i12;
                    i10 += i11;
                    Test.lFld *= i11;
                    iArr[i11] <<= i9;
                    i10 = i9;
                }
            }
        }
        vMeth1_check_sum += i9 + by + l1 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(float f, int i8) {

        double d1=-2.8779;
        int i13=57523, i14=58265, i15=3, i16=-5;
        byte by1=-74;
        long l2=1296055149618569501L;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.643F);

        vMeth1();
        for (d1 = 12; d1 < 384; d1++) {
            i13 -= -120;
            Test.iArrFld[(int)(d1 + 1)] -= (int)Test.fFld;
            by1 += (byte)Test.lFld;
            for (l2 = 5; 1 < l2; l2--) {
                for (i15 = 1; i15 < 2; ++i15) {
                    Test.lFld = i16;
                    Test.dFld -= -197;
                    b = b;
                    i13 += (i15 | i8);
                }
                if (b) break;
                i16 = (int)f;
                Test.iArrFld[(int)(l2 + 1)] *= 36010;
                fArr[(int)(d1 + 1)] -= i14;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i8 + Double.doubleToLongBits(d1) + i13 + by1 + l2 + i14 + i15 +
            i16 + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(long l, int i5) {

        int i6=80, i7=14, i17=12374, i18=207;
        float f1=0.661F;
        boolean b1=true;
        short s=-10830;

        for (i6 = 2; i6 < 310; ++i6) {
            vMeth(f1, i6);
            f1 *= Test.instanceCount;
            i7 += (142 + (i6 * i6));
            i7 = i6;
        }
        Test.fFld = f1;
        Test.fFld -= i7;
        if (b1) {
            i5 *= i5;
            for (i17 = 11; i17 < 394; ++i17) {
                switch ((i17 % 2) + 51) {
                case 51:
                    if (b1) continue;
                    Test.lFld += 22128;
                    Test.fFld -= s;
                    Test.lArrFld[i17 - 1] *= i7;
                case 52:
                    Test.instanceCount = i5;
                    break;
                }
            }
        } else if (b1) {
            Test.iArrFld[(i7 >>> 1) % N] *= 2;
        } else if (b1) {
            i18 *= i17;
        }
        long meth_res = l + i5 + i6 + i7 + Float.floatToIntBits(f1) + i17 + i18 + (b1 ? 1 : 0) + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=24, i1=-57036, i2=-2, i3=68, i4=1, i19=-232, i20=-22332, i21=-17726, i22=4, i23=-10, i24=32406, i25=-11;
        double d=1.16190;
        byte by2=-27;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr1, 109.595F);

        for (i = 221; i > 13; i--) {
            for (i2 = i; i2 < 121; i2++) {
                Test.instanceCount = i;
                for (d = 1; d > i; --d) {
                    Test.fFld *= (iMeth(Test.lFld, i2) - i2);
                    i1 += Test.sFld;
                    Test.instanceCount >>= i1;
                }
                Test.sFld *= (short)i1;
                i1 += (int)-1161656122774924797L;
                for (i19 = 1; 1 > i19; ++i19) {
                    Test.lArrFld[i19 + 1] -= i20;
                    i4 += (int)(0L + (i19 * i19));
                }
                i21 = 1;
                while ((i21 -= 2) > 0) {
                    i1 = i4;
                    i1 &= (int)Test.instanceCount;
                    by2 += (byte)i1;
                }
                Test.lFld = 52197L;
                i4 = by2;
                Test.instanceCount >>= 144;
                Test.iArrFld[i2] = (int)Test.lFld;
            }
            Test.fFld -= i3;
            for (i22 = 7; 121 > i22; i22++) {
                for (i24 = 2; i24 > 1; --i24) {
                    fArr1[i + 1] = fArr1[i24 + 1];
                    if (Test.bFld) {
                        Test.lArrFld[i] <<= Test.lFld;
                        i25 -= 10;
                        if (Test.bFld) {
                            i20 <<= i19;
                        } else if (Test.bFld) {
                            i23 = i22;
                        } else {
                            i1 %= (int)(i | 1);
                        }
                    } else {
                        i20 += i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d i4 = " + i3 + "," + Double.doubleToLongBits(d) + "," + i4);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("by2 i22 i23 = " + by2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 fArr1 = " + i24 + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.lFld Test.sFld Test.bFld = " + Test.lFld + "," + Test.sFld + "," + (Test.bFld ? 1
            : 0));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
