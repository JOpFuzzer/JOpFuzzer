// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static short sFld=-9207;
    public static boolean bFld=true;
    public byte byFld=28;
    public static float fArrFld[][]=new float[N][N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.550F);
        FuzzerUtils.init(Test.sArrFld, (short)17675);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, double d) {

        int i3=-1329, i4=60707, i5=-165, i6=98, i7=-5644, i8=-207, iArr1[]=new int[N];
        byte by=-74;
        float f3=96.663F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 90);
        FuzzerUtils.init(lArr1, 42L);

        switch (((i3 >>> 1) % 2) + 105) {
        case 105:
            for (i4 = 8; 235 > i4; ++i4) {
                for (i6 = 1; 7 > i6; i6++) {
                    iArr1 = FuzzerUtils.int1array(N, (int)-43095);
                    i5 *= i3;
                    lArr1[i4] += i6;
                    i8 = 1;
                    do {
                        Test.instanceCount -= i7;
                        i5 *= (int)d;
                        Test.fArrFld[i6][i8] -= Test.instanceCount;
                        i3 <<= i4;
                        switch ((i6 % 6) + 45) {
                        case 45:
                            i3 &= i3;
                            i7 ^= i3;
                            l = i4;
                            break;
                        case 46:
                            d = d;
                            break;
                        case 47:
                            i5 += i7;
                            break;
                        case 48:
                            by = (byte)i7;
                            break;
                        case 49:
                        case 50:
                            f3 = i7;
                            break;
                        }
                    } while (++i8 < 2);
                }
            }
        case 106:
            i7 += i3;
            break;
        default:
            i7 = i7;
        }
        long meth_res = l + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i8 + by + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f2) {

        int i2=-11, i9=-127, i10=13, i11=84, i12=9, i13=-1129, i14=-49919, iArr2[]=new int[N];
        double d1=49.96458;
        byte by1=74;
        boolean b=true;
        long l2=2016188404L, lArr2[]=new long[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(lArr2, 4348479949996030433L);
        FuzzerUtils.init(iArr2, -9);
        FuzzerUtils.init(fArr, -125.550F);

        f2 -= ((--f2) + ((i2 * Test.instanceCount) * iMeth(Test.instanceCount, d1)));
        for (long l1 : lArr2) {
            for (i9 = 1; i9 < 4; i9++) {
                i10 *= i9;
                i10 *= i11;
                for (i12 = 1; i12 < 2; i12++) {
                    Test.fArrFld[i9][i9 + 1] = i13;
                    switch (((i12 % 1) * 5) + 10) {
                    case 11:
                        i10 += (i12 ^ i9);
                        Test.instanceCount = by1;
                        switch ((i9 * 5) + 12) {
                        case 281:
                            i2 = i10;
                            break;
                        case 166:
                            if (true) continue;
                            i2 <<= i11;
                            i11 *= i2;
                        case 252:
                            f2 -= i12;
                            break;
                        case 353:
                            i2 = i10;
                        case 240:
                            i2 += (((i12 * i10) + i2) - by1);
                            break;
                        case 249:
                            by1 = (byte)i12;
                        case 35:
                            Test.sFld >>= (short)Test.instanceCount;
                            break;
                        case 126:
                            i10 += i2;
                            break;
                        case 170:
                            Test.sFld = (short)i13;
                            break;
                        case 359:
                            i13 = (int)l1;
                            break;
                        case 308:
                            iArr2[i9] += i11;
                            break;
                        case 92:
                            Test.sArrFld[i9] *= (short)-3;
                            break;
                        case 94:
                            f2 %= ((long)(d1) | 1);
                            break;
                        case 88:
                            l1 += (((i12 * i12) + Test.instanceCount) - l1);
                            break;
                        case 192:
                            i10 = i13;
                            break;
                        case 32:
                            i10 = (int)f2;
                            break;
                        case 334:
                            lArr2[i12 - 1] = Test.instanceCount;
                            break;
                        case 306:
                            Test.sFld %= (short)-14;
                            break;
                        case 205:
                            iArr2[i9 - 1] += -223;
                        case 312:
                            Test.instanceCount *= by1;
                            break;
                        case 149:
                            by1 += (byte)(i12 * i12);
                        case 325:
                            if (b) continue;
                            break;
                        case 135:
                            i10 += (i12 * i10);
                            break;
                        case 316:
                            Test.instanceCount += i2;
                            break;
                        case 124:
                            try {
                                i11 = (i9 / i11);
                                i13 = (iArr2[i12 + 1] / iArr2[i12 - 1]);
                                i13 = (-33847 % i2);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 232:
                            i10 <<= i14;
                            break;
                        case 297:
                            i13 += (int)Test.instanceCount;
                            break;
                        case 142:
                            iArr2[i9 + 1] -= i12;
                            break;
                        case 133:
                            f2 *= i13;
                            break;
                        case 131:
                            i11 += (i12 | Test.instanceCount);
                            break;
                        case 81:
                            lArr2[i9] += (long)d1;
                            break;
                        case 180:
                            iArr2[i9 - 1] = (int)l2;
                        case 355:
                            i10 >>= i14;
                            break;
                        case 101:
                            f2 += i12;
                            break;
                        case 42:
                            i13 += i12;
                            break;
                        case 151:
                            Test.fArrFld[i9][i12 + 1] /= -9;
                            break;
                        case 51:
                            Test.instanceCount <<= l1;
                            break;
                        case 311:
                            f2 = i11;
                            break;
                        case 319:
                            Test.fArrFld[i9][i9 - 1] += Test.sFld;
                            break;
                        case 114:
                            i11 -= (int)d1;
                            break;
                        case 59:
                            l2 += i12;
                            break;
                        case 324:
                            iArr2[i12 - 1] += (int)f2;
                            break;
                        case 105:
                        case 19:
                            i10 = i9;
                            break;
                        case 295:
                            iArr2[i9 + 1] = i2;
                            break;
                        case 255:
                            lArr2[i9] *= i9;
                        case 244:
                            i11 += i14;
                            break;
                        case 33:
                            i13 -= i13;
                            break;
                        case 221:
                            iArr2[i12 - 1] = i2;
                            break;
                        case 128:
                            if (b) continue;
                            break;
                        case 305:
                            i13 += i12;
                            break;
                        case 254:
                            i2 += i14;
                            break;
                        case 333:
                            i10 = i9;
                            break;
                        case 247:
                            l2 = 167;
                            break;
                        case 30:
                            l2 = i10;
                            break;
                        case 175:
                            l2 += Test.sFld;
                            break;
                        case 20:
                            i10 += i12;
                            break;
                        case 349:
                            i13 ^= i11;
                            break;
                        case 56:
                            i11 *= (int)l2;
                        case 246:
                            i2 %= (int)(i13 | 1);
                            break;
                        case 18:
                        case 335:
                            i11 += (i12 * i12);
                            break;
                        case 16:
                            fArr[i12][i9] -= -69.912F;
                            break;
                        case 48:
                            i11 += (i12 + Test.instanceCount);
                            break;
                        case 329:
                            l2 = (long)d1;
                            break;
                        case 182:
                            Test.sArrFld[i9 - 1] -= (short)i2;
                        case 74:
                            i10 = (int)32860L;
                            break;
                        case 55:
                            Test.sFld = (short)i9;
                            break;
                        case 58:
                            iArr2[i12] = i10;
                        case 222:
                            i13 += (((i12 * i2) + l1) - i2);
                            break;
                        default:
                            l1 = 27;
                        }
                    default:
                        b = true;
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + i2 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 +
            by1 + (b ? 1 : 0) + i14 + l2 + FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth(int i1, float f1) {


        vMeth(f1);
        vSmallMeth_check_sum += i1 + Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        short s=-1682;
        int i=-11, i15=8, i16=-80, i17=-51210, i18=35626, i19=-229, i20=-5, i21=6, i22=185, iArr[]=new int[N];
        float f=-2.649F;
        double d2=-61.25568;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 6836221483953972662L);
        FuzzerUtils.init(iArr, 77);

        s *= (short)((lArr[(i >>> 1) % N]--) - (iArr[(i >>> 1) % N] - (16500 + (++f))));
        i = i;
        if (false) {
            for (int smallinvoc=0; smallinvoc<287; smallinvoc++) vSmallMeth(i, -32.880F);
            for (i15 = 7; 186 > i15; ++i15) {
                switch (((i15 % 4) * 5) + 17) {
                case 33:
                    i17 = 1;
                    while (++i17 < 140) {
                        if (Test.bFld) {
                            i16 = 20896;
                            Test.instanceCount *= 44434;
                            if (Test.bFld) {
                                try {
                                    iArr[i17 - 1] = (-208352063 / iArr[i17 - 1]);
                                    iArr[i17 + 1] = (i % 125);
                                    i = (i17 % i);
                                } catch (ArithmeticException a_e) {}
                                f = Test.instanceCount;
                                i18 = 1;
                                do {
                                    d2 *= Test.instanceCount;
                                    f -= Test.instanceCount;
                                    if (Test.bFld) continue;
                                    byFld = (byte)i15;
                                } while (++i18 < 1);
                            } else if (true) {
                                Test.instanceCount = i17;
                            } else {
                                for (i19 = 1; i19 < 1; i19++) {
                                    Test.sFld = (short)i16;
                                }
                                i -= i19;
                                iArr[i17 - 1] += (int)d2;
                                i16 = -29085;
                            }
                        } else if (Test.bFld) {
                            i -= i17;
                        } else {
                            lArr[i17] += i18;
                        }
                        i20 -= -110;
                        for (i21 = 1; i21 < 1; i21++) {
                            Test.bFld = Test.bFld;
                        }
                        Test.instanceCount += (i17 * i15);
                    }
                    break;
                case 23:
                    Test.bFld = Test.bFld;
                    break;
                case 36:
                    Test.instanceCount ^= i16;
                    break;
                case 27:
                    i20 -= i16;
                    break;
                }
            }
        } else {
            i16 += i18;
        }

        FuzzerUtils.out.println("s i f = " + s + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 d2 i19 = " + i18 + "," + Double.doubleToLongBits(d2) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("lArr iArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test.fArrFld Test.sArrFld = " + byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
