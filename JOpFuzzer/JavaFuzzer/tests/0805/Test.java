// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=46852L;
    public static float fFld=16.79F;
    public static long lFld=2L;
    public static boolean bFld=false;
    public static boolean bFld1=true;
    public static byte byFld=-97;
    public static short sFld=-25561;
    public static double dFld=120.122812;
    public static short sArrFld[]=new short[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)17756);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7) {

        int i8=-30, i9=-9691, i10=8, i11=-51488, i12=4, i13=-136, i14=80, iArr[]=new int[N], iArr1[][]=new int[N][N];
        float f=0.127F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 15752L);
        FuzzerUtils.init(iArr, 60617);
        FuzzerUtils.init(iArr1, 8);

        for (i8 = 1; 178 > i8; i8++) {
            for (i10 = 9; i10 > 1; i10 -= 3) {
                for (i12 = 1; i12 < 5; i12++) {
                    i11 += (i12 | (long)Test.fFld);
                }
                i7 = (int)Test.instanceCount;
                lArr[i10 + 1] <<= Test.instanceCount;
                iArr = iArr;
                i13 += (95 + (i10 * i10));
            }
            Test.instanceCount = i11;
            i13 = -7;
        }
        for (f = 2; 318 > f; ++f) {
            try {
                i9 = (-1265859969 / iArr[(i13 >>> 1) % N]);
                i7 = (i10 / iArr1[(int)(f)][(int)(f - 1)]);
                iArr[(int)(f)] = (i12 / i10);
            } catch (ArithmeticException a_e) {}
        }
        i7 >>= i8;
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l1, int i6) {

        int i15=-3, i16=0, i17=6, i18=11, i19=129, iArr2[]=new int[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, 8);
        FuzzerUtils.init(fArr1, 93.511F);

        vMeth1(i6);
        Test.sArrFld[(52 >>> 1) % N] = (short)Test.fFld;
        iArr2[(i6 >>> 1) % N] = 43;
        i6 ^= i6;
        for (i15 = 11; i15 < 232; ++i15) {
            iArr2[i15 + 1] += (int)-3.941F;
            i17 = 1;
            while (++i17 < 7) {
                switch (((i15 % 2) * 5) + 22) {
                case 23:
                case 25:
                    l1 += (i17 * i17);
                    i16 += (int)Test.lFld;
                    for (i18 = 1; 1 > i18; i18++) {
                        int i20=-5;
                        i16 |= i16;
                        try {
                            i6 = (i20 % -64824);
                            iArr2[i17] = (-22174 % i17);
                            i6 = (i19 % i20);
                        } catch (ArithmeticException a_e) {}
                        i6 -= i20;
                        i19 += (-131 + (i18 * i18));
                    }
                    break;
                default:
                    fArr1[i17 - 1] -= i17;
                }
            }
        }
        long meth_res = l1 + i6 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2) {

        int i3=-7, i4=-7, i5=35061, i21=55926, iArr3[]=new int[N];
        long l=15L, l2=-6L, l3=-210L;
        double d=-83.49788;
        short s=-25535;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.349F);
        FuzzerUtils.init(iArr3, 115);

        for (i3 = 1; i3 < 350; ++i3) {
            for (l = 1; l < 5; ++l) {
                fArr[i3] += (iMeth(35424L, i4) - 49556L);
                iArr3[(int)(l - 1)] = (int)Test.instanceCount;
                for (l2 = i3; 2 > l2; l2++) {
                    iArr3[i3 - 1] <<= (int)l2;
                    i21 = i5;
                    switch ((((i21 >>> 1) % 5) * 5) + 119) {
                    case 143:
                        switch (((i3 % 6) * 5) + 27) {
                        case 44:
                            i5 /= (int)(i5 | 1);
                            Test.lFld += Test.instanceCount;
                            i21 = (int)-5231437448513210909L;
                            i2 += (int)(((l2 * Test.fFld) + i4) - l);
                            break;
                        case 36:
                            i21 *= (int)Test.instanceCount;
                            break;
                        case 30:
                            if (Test.bFld) break;
                            break;
                        case 31:
                            Test.bFld1 = Test.bFld1;
                            break;
                        case 40:
                            i4 = (int)l3;
                        case 32:
                            iArr3[(int)(l2 + 1)] += i4;
                            break;
                        default:
                            d += i5;
                        }
                        break;
                    case 125:
                        Test.instanceCount += l;
                        break;
                    case 136:
                        i4 += (int)(l2 * l2);
                        break;
                    case 133:
                        Test.byFld += (byte)(203 + (l2 * l2));
                        break;
                    case 132:
                        s += (short)l2;
                        break;
                    default:
                        if (Test.bFld) break;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + l + i5 + l2 + i21 + l3 + Double.doubleToLongBits(d) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=96, i1=-36, i22=-98, i23=61, i24=-13059;

        for (i = 7; i < 186; ++i) {
            i1 = i1;
            vMeth(i1);
            Test.instanceCount = -68;
            i22 = 140;
            do {
                i1 += (i22 ^ Test.instanceCount);
                i1 = Test.sFld;
                Test.fFld -= i22;
                i1 = i1;
                iArrFld[i + 1] *= (int)-12L;
                i1 += (((i22 * i22) + Test.fFld) - Test.lFld);
                for (i23 = 1; i23 > i22; --i23) {
                    i1 += i23;
                    Test.instanceCount = i22;
                    if (Test.bFld) {
                        if (Test.bFld) continue;
                    } else {
                        Test.fFld = i22;
                        i24 = -10;
                    }
                    i1 += (((i23 * Test.lFld) + Test.fFld) - Test.byFld);
                    i24 -= i23;
                    i1 = -192;
                    i24 <<= i;
                    Test.instanceCount /= (i | 1);
                    Test.fFld -= i;
                }
            } while (--i22 > 0);
            Test.fFld -= 44926;
            switch (((i22 >>> 1) % 9) + 106) {
            case 106:
                i24 += i;
                break;
            case 107:
                iArrFld[i + 1] -= i24;
                i1 += (i * Test.lFld);
                Test.instanceCount *= i22;
            case 108:
                i1 = i24;
            case 109:
                Test.instanceCount = i24;
                break;
            case 110:
                Test.lFld += i24;
                break;
            case 111:
                Test.lFld += (6 + (i * i));
                break;
            case 112:
                i1 += (((i * i24) + i24) - Test.byFld);
                break;
            case 113:
                Test.dFld *= i;
            case 114:
                Test.fFld = -7;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 = " + i23 + "," + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.lFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.bFld Test.bFld1 Test.byFld = " + (Test.bFld ? 1 : 0) + "," + (Test.bFld1 ? 1 : 0)
            + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld Test.dFld Test.sArrFld = " + Test.sFld + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
