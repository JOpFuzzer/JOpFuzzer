// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=21810L;
    public static byte byFld=-8;
    public static float fFld=-49.266F;
    public boolean bFld=true;
    public float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -215);
        FuzzerUtils.init(Test.sArrFld, (short)29058);
        FuzzerUtils.init(Test.lArrFld, 71L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth(float f, int i) {


        fArrFld[(i >>> 1) % N] = i;
        vMeth_check_sum += Float.floatToIntBits(f) + i;
    }

    public static void vMeth2(double d) {

        int i3=7, i4=-1, i5=120, i6=-19247, iArr[]=new int[N];
        boolean b1=true;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 4277297170L);
        FuzzerUtils.init(iArr, 18925);

        i3 = i3;
        i3 = -9;
        lArr = FuzzerUtils.long2array(N, (long)-3117086459709492427L);
        iArr[(i3 >>> 1) % N] = Test.byFld;
        i3 *= (int)Test.instanceCount;
        i3 >>= i3;
        for (i4 = 9; 218 > i4; i4++) {
            lArr[i4][i4 + 1] *= i3;
            if (true) continue;
            i3 = 8;
            if (b1) {
                switch ((((i5 >>> 1) % 4) * 5) + 27) {
                case 40:
                    i3 *= i3;
                    break;
                case 37:
                    i3 += i4;
                case 28:
                    i6 *= (int)Test.fFld;
                    break;
                case 33:
                    Test.fFld += ((long)i4 ^ (long)i5);
                    break;
                default:
                    iArr[i4] = 46002;
                }
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(boolean b, float f2) {

        double d1=-90.57807;
        int i7=-235, i10=-2, i11=-52886, i12=-10396;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 2.445F);

        vMeth2(d1);
        i7 = 1;
        do {
            int i8=-20;
            i8 += (i7 * i7);
            d1 += Test.instanceCount;
            b = b;
            Test.iArrFld = Test.iArrFld;
            i8 -= Test.byFld;
            fArr[i7] = fArr[i7];
            Test.instanceCount += (-27793 + (i7 * i7));
        } while (++i7 < 369);
        for (i10 = 247; i10 > 14; i10 -= 3) {
            Test.instanceCount |= 2;
            i11 += i10;
            Test.instanceCount -= Test.instanceCount;
            i11 |= i11;
            i12 *= i12;
        }
        vMeth1_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i7 + i10 + i11 + i12
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(long l, int i1, int i2) {

        boolean b2=true;
        int i13=10, i14=155, i15=3, i16=-5, i17=33045;
        long l1=452337916L;
        short s=-10122;

        l = (long)Float.intBitsToFloat((i2 * Test.byFld) + (--i2));
        vMeth1(b2, Test.fFld);
        i13 = 1;
        do {
            i1 += (((i13 * Test.fFld) + Test.instanceCount) - i1);
            for (i14 = 1; i14 < 7; i14++) {
                Test.iArrFld[i13] = (int)Test.instanceCount;
                for (i16 = 1; i16 < 2; i16++) {
                    l -= -25057;
                    i15 >>= 207;
                }
                l1 = 1;
                while (++l1 < 2) {
                    i1 += i2;
                    Test.fFld -= l1;
                    i17 = (int)Test.instanceCount;
                    Test.sArrFld[i13] -= s;
                    Test.lArrFld[i13 - 1] <<= 31261;
                }
            }
        } while (++i13 < 234);
        long meth_res = l + i1 + i2 + (b2 ? 1 : 0) + i13 + i14 + i15 + i16 + i17 + l1 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=-1.257F;
        int i18=-12, i19=-4, i20=-32704, i21=13596, i22=-197, i23=3, i24=-10, i25=22810, i26=56024, i27=3, i28=12,
            i29=-23;
        short s1=-23336;

        vMeth(++f1, iMeth(Test.instanceCount, 8215, i18) + -188);
        for (i19 = 5; 311 > i19; ++i19) {
            for (i21 = 1; i21 < 82; ++i21) {
                Test.instanceCount += (i21 | i20);
                for (i23 = i21; i23 < 2; ++i23) {
                    f1 *= Test.instanceCount;
                    Test.sArrFld[i19 - 1] = (short)i22;
                    Test.lArrFld[i23] -= Test.instanceCount;
                    i22 *= Test.byFld;
                    Test.instanceCount -= i24;
                }
                Test.instanceCount = s1;
                i18 = 12;
            }
            i25 = 82;
            do {
                i20 += (i25 * i25);
            } while (--i25 > 0);
            i26 = 1;
            do {
                try {
                    Test.iArrFld[i19] = (i23 % i20);
                    i22 = (-203 / i20);
                    i24 = (-197 / i18);
                } catch (ArithmeticException a_e) {}
                bFld = bFld;
                Test.fFld += (-8 + (i26 * i26));
                for (i27 = 1; i27 < 1; i27++) {
                    Test.fFld = i20;
                    Test.iArrFld[i26 - 1] = (int)Test.fFld;
                    i28 = (int)Test.instanceCount;
                    s1 >>= (short)i21;
                    i24 += (i27 + i29);
                    i18 -= i28;
                    i22 >>= i20;
                    i29 += (int)Test.instanceCount;
                    i18 = (int)Test.instanceCount;
                    i22 += (((i27 * Test.byFld) + f1) - i21);
                }
                i20 *= (int)Test.fFld;
            } while (++i26 < 82);
        }

        FuzzerUtils.out.println("f1 i18 i19 = " + Float.floatToIntBits(f1) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 s1 = " + i23 + "," + i24 + "," + s1);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 = " + i28 + "," + i29);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("bFld fArrFld Test.iArrFld = " + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.sArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
