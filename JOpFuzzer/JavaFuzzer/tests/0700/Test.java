// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3660497280L;
    public static byte byFld=127;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 121);
        FuzzerUtils.init(Test.fArrFld, 2.10F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i11) {

        short s=29090;
        int i12=65332, i13=207, i14=-9, i15=-6260, i16=188, i17=31;
        double d1=47.83781;
        float f1=2.984F;

        s += (short)i11;
        for (i12 = 195; i12 > 7; i12 -= 3) {
            for (i14 = 1; i14 < 25; i14++) {
                i13 *= s;
                for (i16 = 1; i16 < 2; i16++) {
                    Test.iArrFld = Test.iArrFld;
                    i13 >>>= i16;
                    Test.instanceCount -= (long)d1;
                    if (i12 != 0) {
                    }
                    Test.iArrFld[i12] >>= 114;
                    Test.instanceCount += i17;
                    f1 -= f1;
                    i13 += (int)f1;
                    Test.fArrFld[i14] += i16;
                    i13 = i16;
                }
            }
        }
        long meth_res = i11 + s + i12 + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i7) {

        int i8=-64339, i9=-10835, i10=-14, i18=1780, i19=29127;
        double d2=-2.85537;
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-106);

        i8 = 258;
        while (--i8 > 0) {
            for (i9 = 1; i9 < 6; ++i9) {
                i10 -= (int)fMeth(i10);
                Test.iArrFld = Test.iArrFld;
            }
            Test.iArrFld[i8 + 1] <<= i9;
            for (i18 = 1; i18 < 6; ++i18) {
                i7 /= 69;
                Test.iArrFld = Test.iArrFld;
                i10 = (int)d2;
                switch ((i8 % 1) + 56) {
                case 56:
                    byArr[i8 + 1] = (byte)i9;
                    break;
                default:
                    i7 = i7;
                    i7 = i18;
                    i7 -= i19;
                }
                b = b;
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i18 + i19 + Double.doubleToLongBits(d2) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(double d) {

        int i6=29541, i20=-13, i21=254, i23=-42620, i24=-47, i25=-202, iArr[][]=new int[N][N];
        float f2=2.131F;
        short s1=-17387;
        boolean b1=false;

        FuzzerUtils.init(iArr, -13344);

        i6 -= Integer.reverseBytes(Math.abs(iArr[(-242 >>> 1) % N][(i6 >>> 1) % N]));
        vMeth1(203);
        for (i20 = 11; i20 < 280; i20 += 2) {
            Test.iArrFld[i20 - 1] = (int)-27628L;
            i23 = 1;
            while (++i23 < 12) {
                i6 = i6;
                for (i24 = 1; i24 < 1; ++i24) {
                    i6 += i24;
                    i6 += i25;
                    Test.instanceCount -= Test.instanceCount;
                    if (b1) {
                        Test.instanceCount += (i24 | (long)f2);
                        Test.iArrFld[i24 - 1] -= i24;
                    } else if (false) {
                        s1 += (short)(i24 * i24);
                        i25 += (((i24 * i21) + i20) - i6);
                    } else if (b1) {
                        if (b1) break;
                        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i20 + i21 + i23 + i24 + i25 +
                            Float.floatToIntBits(f2) + s1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    } else {
                        i25 += i24;
                    }
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i20 + i21 + i23 + i24 + i25 + Float.floatToIntBits(f2) +
            s1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=56873, i1=-17, i2=215, i3=103, i4=-33181, i5=-239, i26=-4, i27=6, i28=-4089;
        float f=0.218F;
        double d3=-126.74777;
        short s2=6435;
        boolean b2=false;

        for (i = 16; i < 306; ++i) {
            for (i2 = 1; 87 > i2; ++i2) {
                i1 = i1;
                for (i4 = 1; i4 < 2; i4++) {
                    switch (((i % 2) * 5) + 80) {
                    case 89:
                        Test.instanceCount += (((i4 * i1) + i2) - i2);
                        f += (i4 * i4);
                        break;
                    case 87:
                        vMeth(d3);
                        switch ((i4 % 1) + 5) {
                        case 5:
                            Test.iArrFld[i2 - 1] = i1;
                            i3 >>= i2;
                            i3 += (i4 * i4);
                            break;
                        }
                        i5 += i;
                        i1 += (((i4 * i) + i) - i4);
                        break;
                    default:
                        Test.iArrFld[i4 - 1] = Test.byFld;
                    }
                    s2 += (short)i4;
                    i5 += i2;
                    i3 += i4;
                    i1 *= (int)Test.instanceCount;
                    i3 &= i3;
                }
                i3 += i2;
                d3 = Test.instanceCount;
                switch ((i2 % 1) + 49) {
                case 49:
                    if (b2) continue;
                    i26 = i;
                    for (i27 = i2; i27 < 2; ++i27) {
                        Test.iArrFld[i2] -= (int)Test.instanceCount;
                        if (b2) {
                            i3 = i27;
                        } else if (b2) {
                        } else {
                            Test.fArrFld[i2] *= i;
                        }
                    }
                    break;
                default:
                    i26 += (i2 - f);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("f d3 s2 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d3) + "," + s2);
        FuzzerUtils.out.println("b2 i26 i27 = " + (b2 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 = " + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iArrFld = " + Test.instanceCount + "," + Test.byFld
            + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
