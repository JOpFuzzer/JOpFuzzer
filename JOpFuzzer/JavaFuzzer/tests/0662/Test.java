// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1187355564L;
    public static float fFld=2.595F;
    public volatile float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, float f) {

        int i7=-4, i8=242, i9=9, i10=-12, i11=-42, iArr[][]=new int[N][N];
        double d1=-17.39401, d2=-1.14116;

        FuzzerUtils.init(iArr, 184);

        for (i7 = 8; i7 < 140; i7++) {
            for (i9 = 1; 12 > i9; i9++) {
                i8 -= i8;
                iArr[i9] = iArr[i9 + 1];
                i10 = i10;
                i8 <<= i10;
                for (d1 = 1; d1 < 2; d1++) {
                    i11 &= (int)Test.instanceCount;
                    d2 -= f;
                    iArr[i9 + 1][i7 + 1] += i10;
                    i11 = (int)-42L;
                    l1 += i8;
                }
                l1 -= i11;
                i10 += (i9 - Test.instanceCount);
                i8 += (i9 + i7);
            }
        }
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
    }

    public static boolean bMeth(int i5, int i6, long l) {

        float f1=-2.735F, f2=-43.885F;
        int i12=-44003, iArr1[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, 43935);

        vMeth1(l, f1);
        i12 = 1;
        while (++i12 < 167) {
            if (b1) break;
            i5 *= 28406;
            switch (((i12 % 1) * 5) + 62) {
            case 67:
                f2 = 1;
                while (++f2 < 9) {
                    Test.instanceCount = i12;
                    iArr1[(int)(f2 - 1)] *= (int)f2;
                    i6 = i12;
                    i6 = (int)Test.fFld;
                    if (b1) continue;
                    iArr1[i12 - 1] = i12;
                    if (b1) continue;
                    iArr1[i12] >>>= i12;
                    i5 += (int)f2;
                }
                break;
            }
        }
        long meth_res = i5 + i6 + l + Float.floatToIntBits(f1) + i12 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(int i3, boolean b) {

        double d=55.29922;
        int i4=-189, i13=227, i14=-44025;
        byte by=84;
        short s=-27459;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -61257L);

        for (d = 3; d < 140; d += 2) {
            double d3=2.8425;
            switch ((int)((d % 9) + 92)) {
            case 92:
                if (bMeth(i4, i4, 9L)) break;
                Test.instanceCount ^= i4;
                switch (((i4 >>> 1) % 3) + 21) {
                case 21:
                    d3 *= by;
                    if (b) continue;
                    for (i13 = 1; i13 < 23; i13++) {
                        if (i14 != 0) {
                            vMeth_check_sum += i3 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i4 + by + i13 + i14 + s
                                + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        b = b;
                        Test.instanceCount &= Test.instanceCount;
                        by = (byte)19670;
                    }
                    if (b) break;
                case 22:
                    i14 -= (int)d3;
                    i3 = i4;
                case 23:
                    i4 >>= by;
                    break;
                default:
                    Test.fFld -= 0.455F;
                }
            case 93:
                i14 >>= i13;
            case 94:
                b = b;
            case 95:
                if (b) continue;
                break;
            case 96:
                Test.instanceCount -= i3;
                break;
            case 97:
                Test.fFld = 40790;
                break;
            case 98:
                lArr[(int)(d + 1)] *= 11;
                break;
            case 99:
                Test.fFld = s;
                break;
            case 100:
                Test.fFld = Test.fFld;
                break;
            }
        }
        vMeth_check_sum += i3 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i4 + by + i13 + i14 + s +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-61468, i1=8, i2=0, i15=-7, i16=57977, i17=27190, i18=-27263, i19=-59500, i20=-11, iArr2[]=new int[N];
        boolean b2=false;
        double d4=-126.76518, d5=124.1479, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.3648);
        FuzzerUtils.init(iArr2, 32);

        i >>= i;
        for (i1 = 1; i1 < 156; i1++) {
            vMeth(-24821, b2);
            i += (i1 | Test.instanceCount);
            i ^= i;
            i2 += i1;
            i2 >>= i2;
            for (i15 = 162; i1 < i15; i15--) {
                for (i17 = 1; 1 < i17; i17 -= 2) {
                    i -= i16;
                    i -= i2;
                    i2 += (i17 + i16);
                    i2 = i15;
                    i &= (int)Test.instanceCount;
                    i18 = (int)-6L;
                    d4 *= i18;
                    i18 = i16;
                    i += (((i17 * Test.instanceCount) + Test.fFld) - Test.instanceCount);
                    dArr[i15] = -6;
                }
                i18 = (int)Test.instanceCount;
                i18 *= i15;
                i16 += i18;
                iArr2[i15 + 1] -= (int)38367L;
            }
            i19 = 1;
            while (++i19 < 162) {
                for (d5 = 1; d5 < 1; ++d5) {
                    fArrFld = FuzzerUtils.float1array(N, (float)44.322F);
                    Test.instanceCount += (long)(d5 * Test.instanceCount);
                    b2 = b2;
                    Test.instanceCount = 6683061604364555522L;
                    i18 += (int)(((d5 * i18) + i20) - i19);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("b2 i15 i16 = " + (b2 ? 1 : 0) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 d4 = " + i17 + "," + i18 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i19 d5 i20 = " + i19 + "," + Double.doubleToLongBits(d5) + "," + i20);
        FuzzerUtils.out.println("dArr iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld fArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
