// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3092005406L;
    public volatile byte byFld=49;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6, float f) {

        int i7=-39390, i8=15605, i9=125, i11=-19888, i12=-1;
        byte by=-95;

        Test.iArrFld[(i5 >>> 1) % N] -= i6;
        for (i7 = 3; i7 < 376; i7++) {
            by += (byte)(i7 + i5);
            i8 = (int)Test.instanceCount;
            Test.instanceCount = Test.instanceCount;
            f += i7;
        }
        i9 = 1;
        do {
            Test.iArrFld[i9 + 1] <<= (int)2166500576L;
        } while (++i9 < 185);
        for (i11 = 5; 322 > i11; i11++) {
            Test.instanceCount = i9;
        }
        Test.instanceCount = i5;
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + by + i9 + i11 + i12;
    }

    public static int iMeth(long l) {

        int i3=5, i4=49968, i13=-12011, i14=-45624;
        float f1=1.656F;
        byte by1=-72;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4264692990L);

        for (i3 = 4; i3 < 269; i3 += 2) {
            switch (((i4 >>> 1) % 1) + 93) {
            case 93:
                vMeth1(i4, i13, f1);
                i13 += (7 + (i3 * i3));
                break;
            }
            lArr[i3] &= i13;
            f1 *= i13;
            i13 <<= i3;
            Test.iArrFld = Test.iArrFld;
        }
        i13 += (int)f1;
        by1 <<= (byte)i4;
        i14 = 1;
        do {
            i13 += (((i14 * i3) + i4) - i3);
            Test.instanceCount = (long)f1;
        } while (++i14 < 188);
        Test.instanceCount = i3;
        i13 = (int)l;
        long meth_res = l + i3 + i4 + i13 + Float.floatToIntBits(f1) + by1 + i14 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=16278, i15=47121, i16=-32594, i17=-3, i18=216, i19=13187, i20=9, i21=20179, i22=-136;
        float f2=2.351F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -57353L);

        Test.iArrFld[(i2 >>> 1) % N] <<= (iMeth(Test.instanceCount) + i2);
        for (i15 = 18; i15 < 326; i15++) {
            i2 &= i16;
            f2 = i2;
            i16 |= i16;
            for (i17 = 1; i17 < 5; ++i17) {
                Test.iArrFld[i17 - 1] = (int)-621698046L;
            }
            if (i18 != 0) {
                vMeth_check_sum += i2 + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 + i21 + i22 +
                    FuzzerUtils.checkSum(lArr1);
                return;
            }
            i2 += (i15 * i17);
        }
        lArr1[(0 >>> 1) % N] += i16;
        for (i19 = 12; 249 > i19; ++i19) {
            switch ((i19 % 3) + 53) {
            case 53:
            case 54:
                for (i21 = 1; 7 > i21; i21++) {
                    lArr1[i19] = i22;
                    Test.instanceCount = i2;
                }
                break;
            case 55:
                i18 >>>= 167;
                break;
            default:
                i18 &= i17;
            }
        }
        vMeth_check_sum += i2 + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 + i21 + i22 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-8, i23=-28375, i24=104, i25=-3012, i26=-242, i27=-13, i28=-2, i29=6, i30=20131, i31=-250;
        boolean b=false;
        short s=2146;
        float f3=92.823F, fArr[]=new float[N];
        long l1=1235464738203979185L, lArr2[]=new long[N];

        FuzzerUtils.init(fArr, -2.416F);
        FuzzerUtils.init(lArr2, 4681772760634094707L);

        for (i = 6; i < 335; ++i) {
            vMeth();
            for (i23 = 4; i23 < 76; i23++) {
                i1 += (int)Test.instanceCount;
                if (b) break;
                fArr[i + 1] += i24;
                i1 += (i23 + i1);
                switch (((-182 >>> 1) % 9) + 34) {
                case 34:
                    i1 += byFld;
                    break;
                case 35:
                    Test.instanceCount -= (long)1.7576;
                    Test.instanceCount = s;
                    for (i25 = 2; i25 > 1; --i25) {
                        Test.iArrFld[i25] = i23;
                        i1 += (int)Test.instanceCount;
                        i26 = (int)Test.instanceCount;
                    }
                case 36:
                    for (i27 = 2; i < i27; i27 -= 2) {
                        Test.iArrFld[i - 1] += i26;
                        if (b) break;
                        i28 -= (int)Test.instanceCount;
                        Test.instanceCount += i27;
                        Test.instanceCount = i;
                        i1 *= (int)f3;
                        f3 = 24474993L;
                        i24 >>= (int)1L;
                        i1 = (int)10L;
                        Test.instanceCount += (i27 * i27);
                    }
                    break;
                case 37:
                    for (i29 = 1; i29 < 2; i29++) {
                        l1 = i31;
                        i28 -= (int)l1;
                        i31 = i28;
                    }
                case 38:
                    f3 = i24;
                    break;
                case 39:
                    lArr2[i - 1] = -8;
                    break;
                case 40:
                    s += (short)(((i23 * i30) + i25) - l1);
                    break;
                case 41:
                    i1 *= i31;
                    break;
                case 42:
                    Test.iArrFld[i23] *= (int)Test.instanceCount;
                    break;
                default:
                    f3 += (i23 - Test.instanceCount);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i23 = " + i + "," + i1 + "," + i23);
        FuzzerUtils.out.println("i24 b s = " + i24 + "," + (b ? 1 : 0) + "," + s);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 f3 i29 = " + i28 + "," + Float.floatToIntBits(f3) + "," + i29);
        FuzzerUtils.out.println("i30 l1 i31 = " + i30 + "," + l1 + "," + i31);
        FuzzerUtils.out.println("fArr lArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount byFld Test.iArrFld = " + Test.instanceCount + "," + byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
