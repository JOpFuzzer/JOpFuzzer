// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static int iFld1=-7;
    public static double dFld=67.25825;
    public static volatile int iFld2=21112;
    public static volatile int iFld3=-7;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 458287356251044304L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(short s) {

        int i3=-7, i4=-139, i5=13, i6=8966, i7=-10860, iArr[]=new int[N];
        byte by=107;
        float f1=0.598F, fArr[]=new float[N];
        boolean b=false, bArr[][]=new boolean[N][N];

        FuzzerUtils.init(iArr, -16555);
        FuzzerUtils.init(fArr, 10.301F);
        FuzzerUtils.init(bArr, false);

        for (i3 = 8; i3 < 338; i3++) {
            for (i5 = i3; i5 < 5; i5++) {
                try {
                    i4 = (i3 / iArr[i3]);
                    iArr[i3 - 1] = (i6 / Test.iFld1);
                    i6 = (59046 / i5);
                } catch (ArithmeticException a_e) {}
                switch (((i5 % 9) * 5) + 12) {
                case 45:
                    i6 += (i5 * i6);
                    i6 = by;
                    i4 = (int)Test.instanceCount;
                    iArr[i3 - 1] += s;
                    break;
                case 43:
                    i7 = 1;
                    do {
                        double d=-1.92383;
                        f1 = (float)d;
                        i4 += Test.iFld1;
                        fArr[i7] = 61657;
                        Test.instanceCount += i7;
                        i4 += (i7 * i7);
                        Test.instanceCount += i4;
                    } while (++i7 < 1);
                    break;
                case 39:
                    f1 *= Test.instanceCount;
                    break;
                case 34:
                    iArr[i3] = i6;
                    break;
                case 38:
                    Test.dFld = i3;
                case 35:
                    i4 >>= i7;
                    break;
                case 32:
                    Test.iFld1 -= i3;
                case 50:
                    bArr[i3][i5] = b;
                    break;
                case 53:
                    Test.instanceCount = Test.iFld1;
                    break;
                default:
                    i4 += (i5 * i5);
                }
            }
        }
        long meth_res = s + i3 + i4 + i5 + i6 + by + i7 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        short s1=29059;
        int i8=185, i9=225, i10=16017, i11=23823, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, 54);

        iMeth(s1);
        for (i8 = 5; i8 < 166; ++i8) {
            for (i10 = 1; 10 > i10; i10++) {
                iArr1 = iArr1;
                Test.instanceCount += i10;
                iArr1[i10][i8] = -121;
                Test.iFld2 = i10;
                Test.instanceCount += (i10 * i10);
                Test.lArrFld[i8 + 1] = Test.instanceCount;
                i11 *= (int)Test.instanceCount;
                i2 = i10;
                Test.iFld3 = s1;
                i1 -= i10;
            }
            Test.iFld3 = i1;
            iArr1[i8][i8] += i11;
        }
        vMeth1_check_sum += i1 + i2 + s1 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(long l) {

        int i=4, i12=182, i13=66, i14=11, i15=28396, i16=63863;
        float f=73.960F;

        i = 1;
        do {
            Test.iFld1 += (((i * Test.instanceCount) + Test.iFld1) - f);
            vMeth1(Test.iFld2, Test.iFld2);
            i12 = 1;
            do {
                for (i13 = 1; i13 < 1; i13++) {
                    Test.dFld = 78.47146;
                }
                for (i15 = i12; i15 < 1; ++i15) {
                    Test.instanceCount -= (long)f;
                    Test.instanceCount += -7;
                    l += -21;
                    Test.iFld3 -= (int)Test.dFld;
                    Test.instanceCount *= i16;
                    i16 = 146;
                    i14 -= i12;
                }
                Test.lArrFld[i - 1] += -26149;
            } while (++i12 < 11);
        } while (++i < 149);
        vMeth_check_sum += l + i + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + i16;
    }

    public void mainTest(String[] strArr3) {


        vMeth(Test.instanceCount);


        FuzzerUtils.out.println("Test.instanceCount Test.iFld1 Test.dFld = " + Test.instanceCount + "," + Test.iFld1 +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld2 Test.iFld3 Test.lArrFld = " + Test.iFld2 + "," + Test.iFld3 + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
