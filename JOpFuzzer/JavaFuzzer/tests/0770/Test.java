// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=99L;
    public double dFld=2.108545;
    public static boolean bFld=false;
    public volatile byte byFld=-51;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public int iMeth() {

        float f2=0.230F, f3=68.631F;
        int i10=-9962, i11=2, i12=8, i13=-5;
        byte by=-54;
        short s=16371;
        boolean b=false;

        for (f2 = 3; 313 > f2; f2 += 2) {
            for (i11 = (int)(f2); i11 < 10; ++i11) {
                i13 = 1;
                while ((i13 += 2) < 1) {
                    Test.iArrFld[(int)(f2 - 1)] = i10;
                    i10 += (i13 | i10);
                    Test.iArrFld[i11 - 1] = i10;
                    dFld -= Test.instanceCount;
                    f3 += -15429;
                    i10 = by;
                    if (b) {
                        dFld = i10;
                        i10 = i13;
                        s += (short)(i13 | Test.instanceCount);
                        i10 += i13;
                    } else if (false) {
                        i12 = i12;
                    } else if (b) {
                        Test.instanceCount = (long)1.424F;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + Float.floatToIntBits(f3) + by + s + (b ? 1 :
            0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1() {

        int i7=173, i8=221, i9=227, i14=129, i15=-57406, i16=-9, i17=-47;
        float f1=104.706F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3L);

        for (i7 = 4; i7 < 325; ++i7) {
            i9 = 1;
            while (++i9 < 5) {
                f1 = (Test.iArrFld[i7 - 1] = Test.iArrFld[i9]);
                dFld += Math.abs(f1);
                i8 = iMeth();
                for (i14 = i9; i14 < 1; i14++) {
                    lArr[i14] = Test.instanceCount;
                    i15 = i8;
                    lArr[i9 - 1] = i15;
                    Test.bFld = Test.bFld;
                    i8 = -8;
                    if (Test.bFld) break;
                }
                for (i16 = 1; i16 < 1; i16++) {
                    if (Test.bFld) continue;
                    lArr[i16] = byFld;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + Float.floatToIntBits(f1) + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i1) {

        int i2=3037, i3=-16273, i4=-35080, i5=-61, i6=-2, i18=-1, i19=-59488;

        for (i2 = 4; i2 < 273; ++i2) {
            float f=0.716F;
            if (i3 != 0) {
                vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i18 + i19;
                return;
            }
            i3 -= (int)(f * Test.instanceCount);
            i4 = 1;
            while (++i4 < 6) {
                for (i5 = 1; 1 > i5; ++i5) {
                    vMeth1();
                    i3 *= i6;
                    i1 += i3;
                    Test.iArrFld[i4 - 1] -= i6;
                    i1 += i2;
                    Test.iArrFld[i2 + 1] <<= -192;
                }
                i1 *= byFld;
                for (i18 = 1; i18 > 1; --i18) {
                    i3 += i18;
                    i6 = i1;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=45027, i20=11074, i21=13, i22=-7, i23=53200;
        double d=0.56408;
        float f4=-96.65F, fArr[]=new float[N];
        short s1=-29457;

        FuzzerUtils.init(fArr, 1.982F);

        Test.iArrFld[(-41008 >>> 1) % N] >>= (int)(Test.instanceCount++);
        i = 1;
        do {
            Test.instanceCount *= (long)fArr[i + 1];
            vMeth(i);
            i20 += i;
            for (i21 = 2; 133 > i21; i21++) {
                for (d = 1; d < 2; d++) {
                    Test.iArrFld[i] ^= i22;
                    Test.iArrFld[i21 + 1] = (int)dFld;
                    i23 -= i22;
                    switch (((i21 % 10) * 5) + 21) {
                    case 48:
                        Test.instanceCount <<= Test.instanceCount;
                        lArrFld[(int)(d + 1)] &= i;
                        break;
                    case 54:
                        i22 += (int)(((d * f4) + i23) - i21);
                        i20 <<= i23;
                        if (false) break;
                        i23 += (int)Test.instanceCount;
                    case 65:
                        if (false) break;
                        break;
                    case 31:
                        Test.instanceCount += Test.instanceCount;
                        Test.instanceCount += i20;
                        i23 = i20;
                        break;
                    case 70:
                        lArrFld[(int)(d + 1)] = Test.instanceCount;
                        switch (((i21 % 1) * 5) + 126) {
                        case 128:
                            s1 += (short)(d * d);
                            i20 = i21;
                            Test.instanceCount ^= i;
                            byFld = (byte)0L;
                            break;
                        }
                        Test.iArrFld[i21 - 1] -= (int)-4708178060252307974L;
                        i23 -= i20;
                        break;
                    case 46:
                    case 37:
                        f4 += Test.instanceCount;
                        break;
                    case 38:
                        Test.instanceCount -= (long)d;
                        break;
                    case 53:
                        i23 -= i21;
                        break;
                    case 23:
                        f4 += 11L;
                        break;
                    default:
                        f4 += (float)(d - Test.instanceCount);
                    }
                }
            }
        } while (++i < 188);

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d i23 = " + i22 + "," + Double.doubleToLongBits(d) + "," + i23);
        FuzzerUtils.out.println("f4 s1 fArr = " + Float.floatToIntBits(f4) + "," + s1 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test.iArrFld lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
