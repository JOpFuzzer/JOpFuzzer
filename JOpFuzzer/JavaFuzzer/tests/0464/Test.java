// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static short sFld=25914;
    public boolean bFld=false;
    public static double dFld=-1.36778;
    public static volatile int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -18736);
        FuzzerUtils.init(Test.lArrFld, 856523733939895882L);
        FuzzerUtils.init(Test.byArrFld, (byte)122);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i9, double d) {

        int i10=-158, i11=4, i12=7280, i13=-25879, i14=-3, i15=-7283;
        double d1=2.27207;
        float f2=0.445F;
        boolean b1=false;

        for (i10 = 3; i10 < 396; i10++) {
            for (i12 = 1; i12 < 4; i12++) {
                i13 = i9;
                i9 *= i10;
                switch ((((i11 >>> 1) % 10) * 5) + 79) {
                case 128:
                    i11 += i12;
                    switch ((i12 % 7) + 59) {
                    case 59:
                        for (d1 = 1; d1 < 2; ++d1) {
                            Test.iArrFld[i10 - 1][(int)(d1 - 1)] *= (int)f2;
                        }
                        i15 = 1;
                        while (++i15 < 2) {
                            Test.sFld += (short)i9;
                            Test.instanceCount += (((i15 * i15) + Test.instanceCount) - i15);
                        }
                    case 60:
                        i14 += i12;
                        Test.instanceCount += (5L + (i12 * i12));
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 61:
                        i9 = i10;
                        break;
                    case 62:
                        i14 = 14;
                        break;
                    case 63:
                        Test.instanceCount *= 13;
                        break;
                    case 64:
                        Test.sFld >>>= (short)i9;
                    case 65:
                        i11 = -54929;
                    }
                    break;
                case 104:
                    Test.instanceCount = i9;
                    break;
                case 84:
                    Test.sFld += (short)(((i12 * Test.instanceCount) + Test.instanceCount) - i14);
                    break;
                case 120:
                    i11 = 51110;
                    break;
                case 119:
                    i14 += (i12 | Test.instanceCount);
                    break;
                case 85:
                    d += Test.instanceCount;
                    break;
                case 116:
                    f2 *= i13;
                    break;
                case 113:
                    if (b1) continue;
                    break;
                case 88:
                    Test.instanceCount = (long)f2;
                    break;
                case 94:
                    d = -245;
                }
            }
        }
        long meth_res = i9 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 +
            Float.floatToIntBits(f2) + i15 + (b1 ? 1 : 0);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l, long l1, int i6) {

        int i7=-97, i8=8, i16=-8, i17=-154, i18=41154, i19=63, i20=-6929;
        boolean b=false;
        byte by=-14;
        float f3=-70.996F;

        Test.instanceCount = -164L;
        for (i7 = 344; 18 < i7; i7 -= 2) {
            if (b = (((i8 - l1) < i7) || (lMeth1(11351, -36.51327) != i7))) continue;
            for (i16 = i7; i16 < 10; ++i16) {
                l = i17;
                for (i18 = i7; i18 < 1; i18++) {
                    if (b) {
                        l -= i7;
                        if (b) {
                            by /= (byte)(i17 | 1);
                            i8 >>= (int)8844L;
                        } else {
                            Test.iArrFld[i7 - 1][i16 - 1] -= i6;
                            try {
                                i19 = (i20 % 241);
                                i19 = (i6 % -35259);
                                i20 = (i16 % 227282358);
                            } catch (ArithmeticException a_e) {}
                            i19 = (int)f3;
                        }
                        b = b;
                    }
                }
            }
        }
        long meth_res = l + l1 + i6 + i7 + i8 + (b ? 1 : 0) + i16 + i17 + i18 + i19 + by + i20 +
            Float.floatToIntBits(f3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i5=5123, i21=123, i22=-55747, i23=182, i24=-51747, i25=31791, i26=-2, i27=-42557;
        long l2=3455547822L;
        byte by1=23;

        i5 >>= (int)(--Test.instanceCount);
        i5 >>= (iMeth(Test.instanceCount, Test.instanceCount, i5) + i5);
        for (i21 = 6; i21 < 250; ++i21) {
            l2 += (-13 + (i21 * i21));
            by1 |= (byte)i21;
            i22 = -62512;
            i23 = 1;
            do {
                l2 += (i23 * i23);
                i22 |= 14622;
            } while (++i23 < 7);
            for (i24 = 7; i21 < i24; i24--) {
                Test.sFld >>= (short)i22;
            }
            if (true) break;
            for (i26 = 7; i26 > 1; i26 -= 2) {
                i22 = (int)Test.instanceCount;
                i25 ^= i26;
            }
        }
        long meth_res = i5 + i21 + i22 + l2 + by1 + i23 + i24 + i25 + i26 + i27;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=-144, i2=27627, i3=-46, i4=-4, iArr[]=new int[N];
        float f=2.285F, f1=1.552F, fArr[]=new float[N];
        double d2=-65.77625;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(fArr, 91.228F);
        FuzzerUtils.init(bArr, true);

        for (i = 2; i < 345; ++i) {
            for (f = 1; f < 73; f++) {
                if (bFld) {
                    iArr[i] = (--i2);
                    for (i3 = 2; i3 > 1; --i3) {
                        switch ((((i >>> 1) % 4) * 5) + 97) {
                        case 102:
                            f1 -= Test.instanceCount;
                            break;
                        case 117:
                            lMeth();
                            switch ((int)(((f % 1) * 5) + 102)) {
                            case 107:
                                switch ((int)((f % 10) + 111)) {
                                case 111:
                                    iArr[(int)(f + 1)] = (int)f;
                                    i2 += i3;
                                    i4 = i4;
                                    i1 += (i3 * Test.instanceCount);
                                    break;
                                case 112:
                                    Test.sFld += (short)d2;
                                    break;
                                case 113:
                                    i4 = i4;
                                    break;
                                case 114:
                                    i2 += (int)f1;
                                    i4 += (i3 - Test.sFld);
                                    fArr[i3] -= f;
                                    break;
                                case 115:
                                    bArr[i3] = false;
                                    i2 <<= i;
                                    break;
                                case 116:
                                    Test.instanceCount = i1;
                                    Test.lArrFld[i3 + 1] += Test.instanceCount;
                                    break;
                                case 117:
                                    Test.instanceCount = (long)d2;
                                    i4 >>= i1;
                                    Test.sFld = (short)41;
                                    i4 = i4;
                                    break;
                                case 118:
                                    f1 += i2;
                                case 119:
                                    iArr[(-3559 >>> 1) % N] -= i2;
                                    if (true) break;
                                    break;
                                case 120:
                                    i2 = (int)Test.instanceCount;
                                    break;
                                default:
                                    i2 -= (int)Test.instanceCount;
                                }
                                break;
                            }
                            break;
                        case 104:
                            Test.byArrFld[(int)(f)] *= (byte)Test.instanceCount;
                        case 112:
                        }
                    }
                } else {
                    Test.dFld = 17674;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("f1 d2 iArr = " + Float.floatToIntBits(f1) + "," + Double.doubleToLongBits(d2) + "," +
            FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld bFld = " + Test.instanceCount + "," + Test.sFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.iArrFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
