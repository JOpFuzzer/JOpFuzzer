// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-59171L;
    public static double dFld=-2.30379;
    public static int iFld=-14;
    public static byte byFld=-44;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -51846);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by1, long l3) {

        int i5=-32286, i6=-6, i7=59178, i8=-162;
        double d1=116.126289, d2=-125.107861;
        float f2=0.127F;
        long lArr1[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, -3042998155968790550L);
        FuzzerUtils.init(byArr, (byte)-109);

        for (i5 = 3; i5 < 397; i5++) {
            i6 = i6;
            for (d1 = 1; d1 < 4; d1++) {
                f2 = l3;
                i6 = (int)l3;
                i7 = -11;
            }
            i6 -= (int)d1;
            Test.dFld += i7;
            Test.instanceCount >>= i7;
            Test.iFld += (((i5 * l3) + i7) - i7);
            switch ((i5 % 3) + 120) {
            case 120:
                Test.iFld ^= i7;
                for (d2 = 1; d2 < 4; ++d2) {
                    lArr1[i5 - 1] >>= i8;
                    byArr[i5] = (byte)21981;
                }
                break;
            case 121:
                i8 = (int)f2;
                break;
            case 122:
                if (i7 != 0) {
                }
            default:
                Test.iArrFld[i5] >>>= -101;
            }
        }
        long meth_res = by1 + l3 + i5 + i6 + Double.doubleToLongBits(d1) + i7 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d2) + i8 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(byte by, long l, int i) {

        long l2=-31L, lArr[]=new long[N];
        int i1=-96, i2=13, i3=-201, i4=-65423;
        double d=-78.121704;
        float f1=-2.92F;
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(bArr, true);

        for (long l1 : lArr) {
            for (l2 = 1; l2 < 4; ++l2) {
                for (i2 = 1; i2 < 2; ++i2) {
                    Test.iArrFld[i2] = (int)(d - -31768);
                }
                for (f1 = l2; f1 < 2; f1++) {
                    switch ((int)((f1 % 3) + 16)) {
                    case 16:
                        if (i != 0) {
                            vMeth1_check_sum += by + l + i + l2 + i1 + i2 + i3 + Double.doubleToLongBits(d) +
                                Float.floatToIntBits(f1) + i4 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(bArr);
                            return;
                        }
                        break;
                    case 17:
                        i3 += (int)(f1 * l1);
                        break;
                    case 18:
                        b = (bArr[(i1 >>> 1) % N] = ((i4 - 60765) != iMeth(by, l1)));
                        i += (int)(f1 * f1);
                        i3 = i4;
                        i -= i2;
                    default:
                        Test.iArrFld[(int)(f1)] -= (int)4813502679187225066L;
                        Test.instanceCount += i2;
                        l1 -= 0;
                    }
                }
            }
        }
        vMeth1_check_sum += by + l + i + l2 + i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4
            + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(float f) {

        int i9=-24453, i10=202, i11=58440, i12=-8, i13=-14, i14=63, i15=15232;

        vMeth1(Test.byFld, Test.instanceCount, -60929);
        for (i9 = 10; i9 < 348; ++i9) {
            for (i11 = i9; 5 > i11; ++i11) {
                for (i13 = 1; 1 > i13; i13++) {
                    Test.iFld -= i14;
                    i10 = -12;
                    switch (((12821 >>> 1) % 2) + 5) {
                    case 5:
                        i15 += 163;
                        i10 = (int)Test.instanceCount;
                        Test.iArrFld[i11] = (int)-1477524287L;
                        i15 *= (int)Test.dFld;
                        break;
                    case 6:
                        Test.instanceCount -= i9;
                        Test.instanceCount += (((i13 * i11) + Test.instanceCount) - Test.instanceCount);
                        break;
                    }
                    Test.iFld = (int)Test.instanceCount;
                    Test.iArrFld[i11] += (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + i14 + i15;
    }

    public void mainTest(String[] strArr1) {


        vMeth(2.341F);


        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.byFld Test.iArrFld = " + Test.byFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
