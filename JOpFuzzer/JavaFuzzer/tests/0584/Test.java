// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=11L;
    public boolean bFld=true;
    public double dFld=115.21722;
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3L);
        FuzzerUtils.init(Test.iArrFld, -6);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=79, i2=-154, i3=79, i4=60, i5=-27109, i6=-8, i7=-12, iArr[]=new int[N];
        double d=0.52436;
        boolean b=true;
        float f1=0.937F;

        FuzzerUtils.init(iArr, 35242);

        for (i1 = 13; i1 < 270; i1++) {
            Test.instanceCount = -109;
            for (i3 = i1; i3 < 6; ++i3) {
                i2 = (int)Test.instanceCount;
                iArr[i1 + 1] <<= (int)Test.instanceCount;
            }
            if (i1 != 0) {
                vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + (b ? 1 : 0) +
                    Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
                return;
            }
            for (i5 = 1; i5 < 6; i5++) {
                i4 = i2;
                i7 = 1;
                do {
                    iArr[i5] += i7;
                    d /= 158;
                    switch ((i1 % 2) + 83) {
                    case 83:
                        b = b;
                        Test.instanceCount >>= i2;
                        i6 >>= i5;
                    case 84:
                        i4 -= (int)f1;
                        break;
                    }
                } while (++i7 < 2);
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + (b ? 1 : 0) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f) {

        int i8=-58338, i9=45854, i10=-17, iArr1[]=new int[N];
        byte by=-28;
        double d1=90.86240;

        FuzzerUtils.init(iArr1, 41166);

        vMeth1();
        for (i8 = 8; i8 < 372; ++i8) {
            iArr1[i8 - 1] = 38;
            Test.instanceCount >>= by;
            f -= i9;
            Test.instanceCount += i8;
            i9 = i9;
            i9 += i8;
            Test.lArrFld[i8 - 1] -= -3626615843L;
            i10 = 1;
            while (++i10 < 5) {
                d1 = i8;
                i9 %= (int)(i8 | 1);
            }
            iArr1[i8 - 1] *= i9;
        }
        i9 = i9;
        i9 *= (int)-7245616740223961404L;
        vMeth_check_sum += Float.floatToIntBits(f) + i8 + i9 + by + i10 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l) {

        int i12=48, i13=-5, i14=-225, i15=12, i16=35;
        byte by1=37;
        float f2=1.586F;
        long l1=1426518036434171747L;

        vMeth(80.71F);
        i12 = 1;
        do {
            by1 = (byte)i12;
            for (i13 = 1; i13 < 7; i13++) {
                i14 ^= i12;
                f2 += ((long)i13 ^ (long)i14);
                for (l1 = 1; l1 < 2; ++l1) {
                    if (i12 != 0) {
                    }
                }
                i15 -= (int)-2.126945;
                l = -4L;
                i15 >>= i15;
                i16 = 1;
                do {
                    i15 -= (int)l1;
                    i14 += i12;
                    i14 &= 81;
                } while ((i16 += 3) < 2);
            }
        } while (++i12 < 241);
        long meth_res = l + i12 + by1 + i13 + i14 + Float.floatToIntBits(f2) + l1 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=60469, i17=-7, i18=57258, i19=-21089, i20=9161, i21=-2, i22=2, i23=-1008;
        float f3=-64.851F;

        if (bFld) {
            i += (iMeth(Test.instanceCount) * 0);
            sArrFld[(14 >>> 1) % N] = (short)i;
        } else if (bFld) {
            for (i17 = 227; i17 > 9; --i17) {
                if (bFld) {
                    i18 -= 6;
                    i18 >>>= i;
                    i18 += (((i17 * i17) + f3) - i);
                    i19 = 1;
                    while (++i19 < 115) {
                        if (bFld) continue;
                        Test.iArrFld = Test.iArrFld;
                        i18 -= -10;
                        for (i20 = 1; i20 < 1; i20++) {
                            Test.instanceCount = i17;
                            try {
                                Test.iArrFld[i20 + 1] = (i19 / i18);
                                i = (i20 / i19);
                                i18 = (i18 / 132);
                            } catch (ArithmeticException a_e) {}
                            i = i18;
                            Test.lArrFld = Test.lArrFld;
                            i21 += i20;
                            i18 <<= i21;
                            i += (i20 * i20);
                            i21 = (int)Test.instanceCount;
                            i18 >>>= 13;
                        }
                        i18 -= i17;
                        Test.lArrFld[i19] *= Test.instanceCount;
                    }
                } else {
                    i21 += (int)f3;
                    Test.instanceCount += i17;
                    for (i22 = i17; i22 < 115; i22 += 2) {
                        Test.instanceCount = (long)-84.34392;
                        i21 |= i20;
                        dFld -= f3;
                    }
                }
            }
        } else {
            dFld *= i21;
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount bFld dFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.lArrFld sArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
