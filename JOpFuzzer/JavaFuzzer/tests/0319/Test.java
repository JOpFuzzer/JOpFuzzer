// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3372934107487427200L;
    public static float fFld=0.758F;
    public static volatile double dFld=0.63689;
    public static volatile byte byFld=-104;
    public static int iFld=-102;
    public volatile boolean bFld=false;
    public static byte byArrFld[]=new byte[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)27);
        FuzzerUtils.init(Test.lArrFld, -13L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i7, int i8) {

        int i9=10, i10=-11, i11=3, i12=131, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -90);

        i8 *= (int)Test.instanceCount;
        Test.instanceCount <<= Test.instanceCount;
        iArr1[(i8 >>> 1) % N] += 162;
        Test.instanceCount += i7;
        for (i9 = 22; i9 < 372; i9 += 2) {
            Test.instanceCount = -8;
            Test.instanceCount = (long)Test.fFld;
            switch (((-571 >>> 1) % 3) + 18) {
            case 18:
                if (i7 != 0) {
                }
            case 19:
                i7 = i8;
                i8 += (((i9 * Test.instanceCount) + Test.instanceCount) - i9);
                break;
            case 20:
                for (i11 = 1; 9 > i11; i11++) {
                    i10 -= (int)Test.dFld;
                    Test.instanceCount = 185;
                    i12 += i11;
                }
                break;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i3, int i4) {

        boolean b=false;
        int i5=1213, i6=-15, i13=-13, i14=10419, i15=-50, iArr[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -27);
        FuzzerUtils.init(dArr, 2.115408);

        b = b;
        for (i5 = 3; i5 < 157; ++i5) {
            iArr[i5] = (int)((Test.fFld--) * (i3 + byMeth(i5, 2)));
            if (b) break;
            i13 = 1;
            do {
                switch ((i13 % 4) + 38) {
                case 38:
                    i4 -= i6;
                    iArr[i13] &= (int)Test.instanceCount;
                    for (i14 = i5; i14 < 1; i14++) {
                        dArr[i14] = Test.fFld;
                        i6 /= (int)(i15 | 1);
                        i3 += (((i14 * i13) + i15) - Test.fFld);
                        i4 = (int)Test.instanceCount;
                        i6 -= (int)-2560995765L;
                        b = b;
                    }
                    break;
                case 39:
                    Test.byFld *= (byte)i6;
                    break;
                case 40:
                    Test.instanceCount *= -2935L;
                    break;
                case 41:
                    if (false) continue;
                    break;
                }
            } while (++i13 < 10);
        }
        vMeth_check_sum += i3 + i4 + (b ? 1 : 0) + i5 + i6 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(int i1, int i2, double d) {

        int i16=252, i17=29157, i18=4792, i19=-12, iArr2[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr2, 11);

        vMeth(i1, i2);
        i2 *= i1;
        for (i16 = 13; i16 < 302; i16++) {
            i1 *= (int)d;
            i17 = -13;
            Test.instanceCount += (i16 * Test.instanceCount);
            iArr2[i16 + 1] = i2;
            switch ((i16 % 1) + 12) {
            case 12:
                i2 = (int)Test.instanceCount;
                i2 = i16;
                for (i18 = 1; i18 < 6; ++i18) {
                    Test.byArrFld = Test.byArrFld;
                    if (b1) {
                        Test.fFld += (i18 * Test.iFld);
                        Test.lArrFld[i16 + 1] >>>= Test.instanceCount;
                    } else if (b1) {
                        Test.lArrFld[i18 - 1] <<= i1;
                    } else {
                        i19 = (int)Test.instanceCount;
                    }
                }
            default:
                iArr2[i16 + 1] -= i2;
            }
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d) + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i21=9, i22=-20555, i23=12, i24=61949, i25=-49794, i26=1, i27=-52084, iArr3[][]=new int[N][N];
        short s=385;
        long l=-62007L;

        FuzzerUtils.init(iArr3, -11);

        i = 1;
        do {
            Test.instanceCount += i;
            Test.fFld = iMeth(i, i, Test.dFld);
            for (i21 = 78; i21 > 4; i21--) {
                Test.iFld >>>= (int)Test.instanceCount;
                for (i23 = 1; i23 < 2; ++i23) {
                    iArr3[i + 1][i23 + 1] = (int)-46L;
                    Test.iFld -= i24;
                    i22 = i24;
                    if (bFld) {
                        Test.dFld *= i23;
                        i22 %= (int)(i24 | 1);
                        i22 <<= i23;
                        Test.lArrFld[i + 1] <<= 121L;
                    } else {
                        i24 *= Test.iFld;
                    }
                    iArr3[i][i + 1] += i23;
                }
                s += (short)(((i21 * i24) + i) - i22);
                i22 = i21;
                Test.instanceCount += (i21 * i21);
            }
            for (l = 4; l < 78; l += 3) {
                i25 = (int)45.981F;
                i25 += i25;
                i24 += (int)l;
                i25 <<= (int)l;
                i25 = i24;
                for (i26 = 4; i26 > l; i26--) {
                    iArr3[i][i + 1] = (int)l;
                    i27 += i26;
                    Test.instanceCount = Test.iFld;
                }
            }
            i22 += (((i * i27) + Test.instanceCount) - s);
        } while (++i < 322);

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 s = " + i23 + "," + i24 + "," + s);
        FuzzerUtils.out.println("l i25 i26 = " + l + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 iArr3 = " + i27 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.iFld bFld = " + Test.byFld + "," + Test.iFld + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
