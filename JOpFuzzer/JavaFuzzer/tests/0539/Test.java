// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=45738L;
    public static boolean bFld=false;
    public static float fFld=-2.904F;
    public volatile long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(long l1) {

        int i2=8430, i3=13, i4=-159, i5=-161, i6=-105;
        double d=69.49832;
        float f=-62.529F, fArr[]=new float[N];
        short s=17860;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 0L);
        FuzzerUtils.init(fArr, 2.846F);

        i2 = 1;
        do {
            i3 += (i2 * i3);
            i3 += i2;
            i3 += i2;
            for (i4 = 1; i4 < 12; i4++) {
                for (d = 1; d < 2; d++) {
                    lArr1 = FuzzerUtils.long1array(N, (long)3786789094L);
                    Test.instanceCount += l1;
                    f += (0.186F + (d * d));
                    i5 -= s;
                    i5 = i5;
                    Test.bFld = true;
                    if (Test.bFld) continue;
                    i5 *= (int)l1;
                }
            }
            f /= ((long)(f) | 1);
        } while (++i2 < 134);
        long meth_res = l1 + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + Float.floatToIntBits(f) + s +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1() {

        int i=-10, i1=-3, i7=-38343, i8=-9, i9=146, i10=1, i11=-36;
        byte by=-46;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 11.240);

        for (i = 3; i < 131; i++) {
            i1 -= (int)(-((by - Test.instanceCount) - Math.max(i1, i)));
        }
        Test.bFld = bMeth(Test.instanceCount);
        i7 = 1;
        while (++i7 < 304) {
            i1 -= i1;
            for (i8 = 1; i8 < 5; ++i8) {
                for (i10 = 1; i10 < 2; i10++) {
                    i11 -= i;
                    i11 += (i10 * i10);
                    i9 += (i10 ^ i9);
                    Test.fFld += (i10 + i);
                    Test.fFld -= i9;
                    if (Test.bFld) continue;
                    dArr = dArr;
                    i9 >>= i9;
                }
            }
        }
        vMeth1_check_sum += i + i1 + by + i7 + i8 + i9 + i10 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i12=-30530, i13=-51272, i14=219, i15=-96, i16=10, i17=30, i18=7;
        double d1=2.73670;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3784572393520159667L);

        for (long l : lArr) {
            vMeth1();
        }
        Test.instanceCount &= 9;
        i12 = 1;
        do {
            switch ((((i12 >>> 1) % 3) * 5) + 111) {
            case 116:
                i13 -= i13;
            case 112:
                i13 = i12;
                break;
            case 122:
                Test.instanceCount = 136;
                for (i14 = 1; 7 > i14; i14++) {
                    d1 += i12;
                    i16 &= i12;
                }
                break;
            default:
                Test.instanceCount = 21531;
                for (i17 = 1; i17 < 7; i17++) {
                    Test.instanceCount %= ((long)(d1) | 1);
                    i18 = i16;
                }
            }
        } while (++i12 < 224);
        vMeth_check_sum += i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) + i16 + i17 + i18 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i20=50451, i21=-11, i22=29101, i23=-123, i24=-18, i25=-169, i26=6, i27=-7, i28=6641, i29=6, i30=13918,
            i31=-29866, iArr[]=new int[N];
        long l3=-2374985847L;
        double d2=-44.70522;

        FuzzerUtils.init(iArr, 30356);

        vMeth();
        for (int i19 : iArr) {
            Test.instanceCount >>= i19;
        }
        for (i20 = 10; i20 < 281; ++i20) {
            for (i22 = 1; i22 < 93; ++i22) {
                Test.instanceCount >>= i21;
                Test.instanceCount += (i22 * i22);
                i23 += (i22 * i22);
                for (l3 = 1; l3 < 2; l3++) {
                    Test.instanceCount += (long)Test.fFld;
                    i24 -= i22;
                    i23 += (int)(((l3 * Test.instanceCount) + i20) - i21);
                    Test.instanceCount += l3;
                    lArrFld[(i24 >>> 1) % N] = i20;
                    Test.instanceCount *= i21;
                }
                i25 = 1;
                do {
                    i24 >>= i21;
                    i24 = i23;
                    Test.fFld += Test.fFld;
                    i24 += i25;
                } while (++i25 < 2);
                Test.fFld += l3;
                i21 += (64795 + (i22 * i22));
                i24 = (int)l3;
                Test.instanceCount = (long)d2;
            }
            lArrFld[i20] = -52741;
            i26 += (((i20 * Test.instanceCount) + i27) - i25);
            for (i28 = i20; i28 < 93; i28++) {
                for (i30 = 1; i30 < 1; i30++) {
                    i31 <<= (int)l3;
                    iArr[i28 + 1] ^= i24;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 l3 i24 = " + i23 + "," + l3 + "," + i24);
        FuzzerUtils.out.println("i25 d2 i26 = " + i25 + "," + Double.doubleToLongBits(d2) + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 iArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
