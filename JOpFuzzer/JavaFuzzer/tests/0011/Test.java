// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3343515212778524868L;
    public static short sFld=13696;
    public double dFld=0.127330;
    public static byte byFld=-98;
    public int iFld=8;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 79.64F);
        FuzzerUtils.init(Test.iArrFld, -8);
        FuzzerUtils.init(Test.iArrFld1, -84);
        FuzzerUtils.init(Test.dArrFld, -43.106643);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=-217, i4=-33370, i5=179, i6=-14, i7=51600, i8=0;
        double d=1.43309, dArr[]=new double[N];
        float f=114.479F, fArr[]=new float[N];
        byte by=-85;
        boolean b=false;

        FuzzerUtils.init(fArr, 84.728F);
        FuzzerUtils.init(dArr, -2.40151);

        for (i3 = 3; i3 < 176; ++i3) {
            d += i4;
            Test.sFld >>= (short)i4;
            for (i5 = 1; i5 < 9; ++i5) {
                if (i5 != 0) {
                    vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f) + i7 +
                        i8 + by + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                d -= f;
                i4 -= (int)Test.instanceCount;
                fArr[i3 + 1] += f;
                i6 -= (int)f;
            }
            dArr[i3 + 1] = Test.instanceCount;
            if (b) {
                for (i7 = i3; i7 < 9; ++i7) {
                    d *= by;
                    Test.instanceCount += (((i7 * f) + Test.instanceCount) - i6);
                    i8 *= (int)Test.instanceCount;
                }
                vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f) + i7 + i8
                    + by + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
        }
        vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + by +
            (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i2, long l2) {

        int i9=-62983, i10=5, i11=-43867, i12=61306;
        long l3=5L;
        double d1=-1.98593;

        vMeth2();
        Test.fArrFld[(i2 >>> 1) % N] -= -90.563F;
        i9 = 1;
        while (++i9 < 357) {
            for (i10 = 1; 5 > i10; i10++) {
                float f1=0.33F;
                for (l3 = i9; l3 < 2; ++l3) {
                    i2 += (int)l3;
                    Test.fArrFld[i9 + 1] *= Test.sFld;
                    Test.iArrFld[(int)(l3)] += i10;
                    Test.instanceCount += (l3 + i2);
                }
                i12 <<= i2;
                f1 += (((i10 * i9) + l2) - l3);
                i12 += i10;
                Test.instanceCount = -1;
                d1 *= l2;
            }
            Test.iArrFld[i9 + 1] -= i11;
        }
        vMeth1_check_sum += i2 + l2 + i9 + i10 + i11 + l3 + i12 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(long l, long l1) {

        int i13=-5;

        vMeth1(i13, Test.instanceCount);
        i13 <<= i13;
        vMeth_check_sum += l + l1 + i13;
    }

    public void mainTest(String[] strArr1) {

        int i=1, i1=-5, i14=-1, i15=-49, i16=12817;
        float f2=2.880F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-29);

        for (i = 306; 7 < i; i--) {
            vMeth(Test.instanceCount, Test.instanceCount);
            Test.instanceCount = 79;
            i1 &= (int)Test.instanceCount;
            i14 = 1;
            while (++i14 < 84) {
                for (i15 = 1; i15 < 1; ++i15) {
                    f2 *= Test.instanceCount;
                    Test.instanceCount += (-6 + (i15 * i15));
                    switch (((i14 % 1) * 5) + 36) {
                    case 38:
                    }
                    Test.instanceCount = i1;
                    switch (((i15 % 3) * 5) + 106) {
                    case 108:
                        Test.instanceCount += (i15 * f2);
                    case 116:
                        f2 += i15;
                        dFld -= -2;
                        Test.instanceCount += Test.instanceCount;
                        i16 = (int)321314167913319101L;
                    case 107:
                        i16 = Test.sFld;
                        Test.iArrFld1[i + 1] >>= i16;
                        break;
                    }
                    i1 = -20;
                    i1 = (int)Test.instanceCount;
                    i1 <<= (int)Test.instanceCount;
                    i16 += i15;
                }
                Test.sFld += (short)i14;
                Test.dArrFld[i14] = Test.sFld;
            }
        }
        Test.iArrFld[(i15 >>> 1) % N] = 26911;
        Test.byFld -= (byte)dFld;
        i16 -= (int)Test.instanceCount;
        byArr[(-214 >>> 1) % N] -= (byte)iFld;
        i16 = 82;
        f2 += i14;

        FuzzerUtils.out.println("i i1 i14 = " + i + "," + i1 + "," + i14);
        FuzzerUtils.out.println("i15 i16 f2 = " + i15 + "," + i16 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld dFld = " + Test.instanceCount + "," + Test.sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.byFld iFld Test.fArrFld = " + Test.byFld + "," + iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld Test.iArrFld1 Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.iArrFld1) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
