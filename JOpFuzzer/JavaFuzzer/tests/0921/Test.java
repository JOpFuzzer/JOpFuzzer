// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=38210L;
    public static byte byFld=21;
    public static boolean bFld=true;
    public static volatile float fFld=-13.706F;

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l, int i4, float f) {

        int i5=9142, i6=-251, i7=-14, i8=12, i9=-13, i10=-22896, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -13);

        for (i5 = 9; 148 > i5; i5++) {
            f *= i5;
            i6 += (i5 * i5);
            i6 &= -142;
            switch ((i5 % 3) + 110) {
            case 110:
                for (i7 = 1; i7 < 11; i7++) {
                    l <<= Test.instanceCount;
                    for (i9 = i7; i9 < 2; i9++) {
                        iArr1 = iArr1;
                        l = l;
                        Test.instanceCount = l;
                        i4 += i9;
                        i4 = i8;
                    }
                    i8 += i4;
                }
                i8 += (i5 * i5);
                break;
            case 111:
                Test.byFld = (byte)i4;
                break;
            case 112:
                if (Test.bFld) continue;
            default:
                f += i5;
            }
        }
        long meth_res = l + i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth(byte by1, int i3) {

        float f1=41.346F;
        int i11=-22665;

        i3 += (++i3);
        i3 &= (int)((Test.instanceCount - (i3 |= i3)) + (lMeth(Test.instanceCount, i3, f1) / (i3 | 1)));
        i3 = i3;
        i3 /= (int)(Test.instanceCount | 1);
        i3 = i3;
        f1 -= Test.instanceCount;
        i3 |= i11;
        long meth_res = by1 + i3 + Float.floatToIntBits(f1) + i11;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, byte by, int i2) {

        int i12=246, i13=-12, i14=-177, i15=-2480, iArr2[]=new int[N];
        double d=-1.99861;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8497172701761067430L);
        FuzzerUtils.init(iArr2, -54920);

        i2 = (int)fMeth((byte)(35), i2);
        if (Test.bFld) {
            i12 = 1;
            do {
                for (i13 = 1; i13 < 5; i13++) {
                    Test.fFld += Test.instanceCount;
                    for (d = i13; d < 2; ++d) {
                        i1 += (int)(d * d);
                        Test.fFld += -243;
                        Test.byFld = (byte)i12;
                        i1 += (int)d;
                        switch ((((i15 >>> 1) % 2) * 5) + 107) {
                        case 114:
                            Test.instanceCount -= (long)2.130303;
                            lArr[(i13 >>> 1) % N] = i15;
                            i14 += (int)(d - i13);
                            iArr2[(int)(d + 1)] = i2;
                        case 112:
                            i2 -= (int)Test.instanceCount;
                            break;
                        }
                    }
                }
            } while (++i12 < 363);
        }
        vMeth_check_sum += i1 + by + i2 + i12 + i13 + i14 + Double.doubleToLongBits(d) + i15 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=152, i16=240, i17=108, i18=-41138, i19=-11, i20=159, i21=-186, i22=-14, iArr[]=new int[N];
        long l1=-4750107778737884848L, lArr1[][]=new long[N][N];
        float fArr[]=new float[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -170);
        FuzzerUtils.init(fArr, -2.10F);
        FuzzerUtils.init(lArr1, 392771085L);
        FuzzerUtils.init(byArr, (byte)110);

        i -= (i - (iArr[(i >>> 1) % N] -= (i--)));
        vMeth(i, (byte)(-90), i);
        i16 = 1;
        do {
            Test.instanceCount += (long)Test.fFld;
            Test.instanceCount *= i;
            for (i17 = 2; i17 < 72; ++i17) {
                Test.bFld = Test.bFld;
                i18 = 13;
                Test.bFld = Test.bFld;
            }
            for (i19 = 72; i16 < i19; i19--) {
                iArr = iArr;
                for (i21 = 1; i21 > i16; --i21) {
                    if (Test.bFld) break;
                    if (false) {
                        fArr[i19 - 1] = i21;
                        Test.instanceCount -= Test.instanceCount;
                        i18 += (((i21 * i21) + i) - i21);
                    } else if (Test.bFld) {
                        fArr[i19] *= i19;
                    }
                    Test.instanceCount -= Test.instanceCount;
                    switch ((i21 % 2) + 113) {
                    case 113:
                        i -= (int)l1;
                        lArr1[i21 + 1] = lArr1[i21];
                        byArr[i19 - 1] += (byte)i18;
                        l1 += (i21 + Test.instanceCount);
                        break;
                    case 114:
                        l1 <<= i;
                        i18 <<= (int)Test.instanceCount;
                        Test.fFld = Test.instanceCount;
                        fArr[i21] -= Test.byFld;
                        break;
                    }
                }
                i18 += (int)(0.254F + (i19 * i19));
                Test.fFld = 2.233F;
            }
        } while (++i16 < 349);

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 l1 = " + i21 + "," + i22 + "," + l1);
        FuzzerUtils.out.println("iArr fArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld = " + Float.floatToIntBits(Test.fFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
