// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-4L;
    public static float fFld=-101.566F;
    public static double dFld=0.44884;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -5);
        FuzzerUtils.init(Test.iArrFld1, -7);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3) {

        int i4=73, i5=12052, i6=-3, i7=123, i8=9;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -236L);

        Test.instanceCount |= Test.instanceCount;
        i3 = -232;
        for (i4 = 14; i4 < 307; i4++) {
            i6 = 1;
            do {
                i3 -= 14;
                i5 = i3;
            } while (++i6 < 6);
            Test.instanceCount >>= Test.instanceCount;
            Test.instanceCount *= i6;
            try {
                Test.iArrFld[i4] = (-65439 % i4);
                Test.iArrFld[i4] = (29579 % i4);
                i3 = (i5 % i5);
            } catch (ArithmeticException a_e) {}
            lArr[i4] *= i6;
            i3 += (int)-14275L;
            i5 += i6;
            for (i7 = 1; i7 < 6; ++i7) {
                Test.instanceCount += (long)Test.fFld;
                i8 = i7;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, int i2, long l) {

        int i9=-42514, i10=34160, i11=-249, i12=32925, i13=1, i14=-6;
        boolean b=true;
        short s=14691;
        float f=-36.503F;
        byte by=1;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2L);

        vMeth(i1);
        Test.instanceCount = 12;
        for (i9 = 6; 257 > i9; ++i9) {
            if (b) continue;
            for (i11 = 1; i11 < 6; ++i11) {
                lArr1 = lArr1;
                Test.dFld -= Test.fFld;
                s += (short)(((i11 * f) + i12) - i10);
                Test.fFld = i11;
                by += (byte)Test.instanceCount;
                for (i13 = 1; i13 < 2; i13++) {
                    s -= (short)i10;
                    if (b) continue;
                    i2 += (1 + (i13 * i13));
                    lArr1[i11 + 1] += s;
                }
            }
        }
        long meth_res = i1 + i2 + l + i9 + i10 + (b ? 1 : 0) + i11 + i12 + s + Float.floatToIntBits(f) + by + i13 + i14
            + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth() {

        int i=17481, i15=97, i16=114, i17=240, i18=-14, i19=44006, i20=73;

        i = 1;
        while (++i < 357) {
            iMeth(i, i, Test.instanceCount);
            Test.instanceCount += (i * i);
            if (i != 0) {
            }
            for (i15 = i; i15 < 5; ++i15) {
                Test.bFld = Test.bFld;
                for (i17 = 1; 1 > i17; i17++) {
                    Test.fFld += Test.fFld;
                    Test.iArrFld[i15] = i15;
                }
                i16 += i17;
                i16 += i15;
                for (i19 = 1; i19 < 1; i19++) {
                    i16 += (i19 | Test.instanceCount);
                    i20 -= (int)Test.instanceCount;
                    Test.instanceCount += (i19 | i17);
                }
            }
        }
        long meth_res = i + i15 + i16 + i17 + i18 + i19 + i20;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=47.119282, d1=0.22844;
        int i21=-10, i22=16949, i23=42, i24=-9, i25=-12, i26=7, i27=9, i28=217;
        boolean b1=true;

        d = dMeth();
        i21 /= -119;
        for (i22 = 3; i22 < 187; i22++) {
            Test.iArrFld[i22] = i21;
            for (d1 = 136; d1 > 8; --d1) {
                i24 += (int)(d1 * i22);
            }
            i21 <<= i21;
            for (i25 = 6; i25 < 136; i25++) {
                for (i27 = i22; i27 < 2; i27++) {
                    i26 /= (int)(i23 | 1);
                    Test.fFld /= (Test.instanceCount | 1);
                    if (b1) {
                        switch (((i23 >>> 1) % 3) + 19) {
                        case 19:
                        case 20:
                            lArrFld[i25 + 1] -= (long)2.732F;
                            Test.bFld = Test.bFld;
                            if (Test.bFld) break;
                            break;
                        case 21:
                            i21 = i25;
                            i23 += i21;
                            break;
                        default:
                            i28 = (int)Test.instanceCount;
                            i28 *= (int)Test.instanceCount;
                            i21 = i21;
                            i21 -= 39466;
                        }
                        Test.iArrFld[i27 + 1] += i27;
                    } else if (b1) {
                        Test.instanceCount += (i27 ^ i25);
                        Test.iArrFld1 = FuzzerUtils.int2array(N, (int)11);
                        d = 13;
                    } else if (b1) {
                        if (true) break;
                        i28 = i21;
                        Test.iArrFld1[i25 - 1][i27 + 1] -= i27;
                        i23 = (int)Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i21 i22 = " + Double.doubleToLongBits(d) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d1 i24 = " + i23 + "," + Double.doubleToLongBits(d1) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 b1 = " + i28 + "," + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.iArrFld lArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
