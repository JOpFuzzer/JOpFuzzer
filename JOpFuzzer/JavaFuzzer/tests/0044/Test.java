// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=60227L;
    public static double dFld=-115.83713;
    public static float fFld=0.77F;
    public static byte byFld=44;
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -68048948L);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i3, int i4) {


        Test.instanceCount >>= i4;
        vMeth_check_sum += i3 + i4;
    }

    public static long lMeth() {

        int i11=-8, i12=6, i13=1, i14=-128, i15=1, i16=9, i17=81, i18=5;
        boolean b=false;

        for (i11 = 22; i11 < 363; i11++) {
            Test.instanceCount = i12;
        }
        for (i13 = 4; 300 > i13; i13++) {
            for (i15 = 1; 6 > i15; i15++) {
                for (i17 = 1; i17 < 2; ++i17) {
                    i14 = -7;
                    i16 += (int)Test.fFld;
                    i14 = i18;
                    i12 <<= (int)Test.instanceCount;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)18);
                    switch ((i13 % 2) + 61) {
                    case 61:
                        i14 -= (int)Test.instanceCount;
                        Test.iArrFld[i17 - 1] <<= i16;
                        break;
                    case 62:
                        i14 *= (int)-1.830F;
                        if (b) break;
                        break;
                    }
                }
            }
        }
        long meth_res = i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth(short s, byte by) {

        int i6=17213, i7=7, i8=-8, i9=37, i10=28584, i19=-28, i20=223, i21=19610, i22=11, iArr1[][]=new int[N][N];
        long l2=-4183764791L, lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 1);
        FuzzerUtils.init(lArr, -2539507312L);

        for (i6 = 20; i6 < 351; ++i6) {
            for (i8 = 1; 5 > i8; i8 += 3) {
                i7 = (int)((Double.longBitsToDouble(Test.instanceCount) - (Test.instanceCount - Test.instanceCount)) *
                    (--Test.instanceCount));
                i7 -= i10;
                lMeth();
                i7 = (int)2962188155927485234L;
                i7 = (int)Test.fFld;
                iArr1 = iArr1;
                iArr1[i6 - 1][i8 - 1] >>= i10;
                i10 -= (int)Test.instanceCount;
                l2 += (-2755061069L + (i8 * i8));
            }
            for (i19 = i6; i19 < 5; i19++) {
                for (i21 = 1; i21 < 1; ++i21) {
                    lArr[i19] &= l2;
                    l2 += (long)(0.194F + (i21 * i21));
                }
            }
        }
        long meth_res = s + by + i6 + i7 + i8 + i9 + i10 + l2 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {

        int i5=-122, i23=-1, i24=-13064, iArr[]=new int[N];
        short s1=-13427;

        FuzzerUtils.init(iArr, 26506);

        vMeth(Math.abs((int)((Test.dFld -= i5) + (Test.instanceCount++))), i5);
        Test.instanceCount = iArr[(3 >>> 1) % N];
        i5 *= (int)fMeth(s1, Test.byFld);
        i5 = 8;
        for (i23 = 4; i23 < 145; i23++) {
            switch ((i23 % 8) + 63) {
            case 63:
                Test.iArrFld[i23] = (int)Test.instanceCount;
            case 64:
                i24 |= 202;
                break;
            case 65:
                Test.instanceCount += i23;
                Test.lArrFld[i23] = i5;
                i5 += (int)Test.fFld;
                i5 += (int)(955194130L + (i23 * i23));
                break;
            case 66:
                i24 = -79;
                break;
            case 67:
            case 68:
                i5 -= (int)Test.dFld;
                Test.byFld += (byte)i5;
                break;
            case 69:
                i24 -= (int)Test.instanceCount;
                break;
            case 70:
                Test.dFld *= -6.529F;
                break;
            }
        }
        long meth_res = i5 + s1 + i23 + i24 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=8, i2=-201, i25=-210, i26=12, i27=5, i28=-22816, i29=75, i30=-19262;
        long l=2790191840653486558L;
        boolean b1=false;
        float f=2.354F, f1=-1.15F;

        for (i = 1; i < 398; i += 3) {
            for (l = i; l < 190; ++l) {
                i1 = (i2--);
                i1 >>= (int)(-(iMeth() + Test.dFld));
                i1 = -254;
                b1 = b1;
                Test.instanceCount -= i;
            }
        }
        i25 = 1;
        while (++i25 < 242) {
            if (b1) {
                for (i26 = 2; i26 < 104; ++i26) {
                    Test.instanceCount = i2;
                    i1 += 192;
                }
            } else if (b1) {
                Test.iArrFld[i25] %= (int)53704L;
                for (f = 4; f < 104; f += 2) {
                    Test.iArrFld[(int)(f)] += i28;
                    i27 = 73;
                }
            } else {
                Test.instanceCount = 26;
                i29 = 1;
                do {
                    try {
                        i1 = (i29 % 52667);
                        i1 = (Test.iArrFld[i29 + 1] % 38089);
                        i2 = (i29 % -150);
                    } catch (ArithmeticException a_e) {}
                    i2 -= (int)l;
                    for (f1 = 1; f1 > 1; --f1) {
                        Test.instanceCount <<= i30;
                        Test.fFld += 12;
                        i28 >>= i26;
                        Test.iArrFld[i29] = 51654;
                        i1 <<= i27;
                        switch ((i25 % 3) + 79) {
                        case 79:
                            i27 <<= (int)213L;
                            break;
                        case 80:
                            i1 += (int)((long)f1 | l);
                            i28 = i30;
                            break;
                        case 81:
                            Test.iArrFld[i29] = 94;
                            break;
                        }
                    }
                } while (++i29 < 104);
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i2 b1 i25 = " + i2 + "," + (b1 ? 1 : 0) + "," + i25);
        FuzzerUtils.out.println("i26 i27 f = " + i26 + "," + i27 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i28 i29 f1 = " + i28 + "," + i29 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i30 = " + i30);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.lArrFld Test.iArrFld = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
