// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=37840L;
    public static volatile byte byFld=-108;
    public static float fFld=-120.197F;
    public static boolean bFld=false;
    public volatile short sFld=-16482;
    public double dFld=0.86419;
    public float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-68, iArr[]=new int[N];
        double d=-118.47720;

        FuzzerUtils.init(iArr, -58653);

        iArr[(i4 >>> 1) % N] = i4;
        i4 %= (int)((long)(d) | 1);
        i4 = i4;
        vMeth2_check_sum += i4 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        long l=-77L;
        boolean b=true;
        int i5=-42, i6=2, i7=-79, i8=49, iArr1[]=new int[N];
        float f=-120.818F;
        short s=-14906;
        double d1=-1.78110;

        FuzzerUtils.init(iArr1, -64108);

        l = 1;
        do {
            if (b) {
                vMeth2();
            }
            i5 = 1;
            do {
                f += i5;
                s = (short)i5;
                b = false;
            } while (++i5 < 5);
            i6 = 1;
            while (++i6 < 5) {
                Test.byFld /= (byte)(s | 1);
                iArr1[(int)(l - 1)] += i5;
                for (i7 = 1; i7 > i6; i7--) {
                    switch ((int)(((l % 1) * 5) + 66)) {
                    case 71:
                        d1 = i8;
                        Test.instanceCount = l;
                        break;
                    }
                }
            }
            iArr1[(int)(l)] -= i7;
        } while (++l < 350);
        vMeth1_check_sum += l + (b ? 1 : 0) + i5 + Float.floatToIntBits(f) + s + i6 + i7 + i8 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i9=-207, i10=42862, i11=45256, i12=-61931, i13=31, i14=-180, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 6);

        vMeth1();
        Test.fFld = -11027L;
        if (true) {
            for (i9 = 12; i9 < 197; ++i9) {
                Test.instanceCount = i9;
                i10 = (int)Test.instanceCount;
                for (i11 = 1; i11 < 9; ++i11) {
                    for (i13 = i9; 2 > i13; i13++) {
                        iArr2[i13] = (int)Test.instanceCount;
                        Test.fFld += (((i13 * i13) + i9) - i12);
                        i12 += (int)Test.fFld;
                        Test.instanceCount += (((i13 * Test.instanceCount) + Test.instanceCount) - i9);
                        iArr2 = iArr2;
                    }
                    iArr2[i9 + 1] -= (int)Test.instanceCount;
                    i14 *= (int)1.15F;
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=20196, i1=12, i2=12, i3=-8;
        long lArr[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(sArr, (short)-22327);

        i = 1;
        while (++i < 284) {
            for (i1 = 89; i1 > i; i1 -= 2) {
                switch (((i1 % 2) * 5) + 58) {
                case 61:
                    i3 = 1;
                    while (--i3 > 0) {
                        double d2=1.96751;
                        long l1=-12L;
                        vMeth();
                        i2 = (int)d2;
                        i2 += (((i3 * i2) + i2) - Test.instanceCount);
                        switch (((i >>> 1) % 2) + 80) {
                        case 80:
                            Test.fFld += i3;
                            if (Test.bFld) {
                                i2 += (int)-46.258F;
                                Test.fFld -= i3;
                            } else {
                                l1 = i3;
                            }
                            break;
                        case 81:
                            fArrFld[i + 1] *= -3;
                            Test.byFld = (byte)l1;
                            sFld -= (short)13;
                            lArr[i1] >>>= 202L;
                            break;
                        }
                        Test.fFld -= -7;
                        Test.fFld = Test.instanceCount;
                        i2 = (int)l1;
                        lArr[i3 - 1] = i2;
                    }
                    i2 = 31242;
                    break;
                case 60:
                    sFld = (short)-11;
                    Test.instanceCount += i1;
                    i2 -= i;
                    break;
                default:
                    dFld -= i;
                    Test.instanceCount += (i1 * i1);
                    Test.fFld += (((i1 * i) + Test.instanceCount) - Test.instanceCount);
                    Test.fFld *= 2272;
                }
                sArr[i1] += (short)i1;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 lArr sArr = " + i3 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld sFld dFld = " + (Test.bFld ? 1 : 0) + "," + sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
