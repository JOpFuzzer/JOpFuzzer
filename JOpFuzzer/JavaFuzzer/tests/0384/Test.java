// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-972678425L;
    public static float fFld=-45.615F;
    public static double dFld=-1.128581;
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.94130);
        FuzzerUtils.init(Test.fArrFld, 87.201F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i2, long l1) {

        int i3=9, i4=-194, i5=5, i6=61453, i7=-107, i8=-36020, iArr[]=new int[N];
        short s=17403;
        boolean b1=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.11873);
        FuzzerUtils.init(iArr, 17);

        for (i3 = 3; 314 > i3; ++i3) {
            i2 += (int)Test.dFld;
            s += (short)(i3 ^ i3);
            for (i5 = i3; 5 > i5; i5++) {
                i2 <<= -242;
                i6 += (int)Test.instanceCount;
                if (b1) continue;
                if (b1) break;
                dArr[i3] *= Test.instanceCount;
                for (i7 = 1; i7 < 1; ++i7) {
                    s >>>= (short)-43702;
                }
                if (b1) break;
                l1 *= (long)Test.fFld;
                i4 += i3;
                iArr[i5 + 1] -= (int)1.675F;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + l1 + i3 + i4 + s + i5 + i6 + (b1 ? 1 : 0) + i7 + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(boolean b, int i1) {

        byte by1=14;
        int i9=30, i10=-11, iArr1[]=new int[N];
        float f1=2.565F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 98.23F);
        FuzzerUtils.init(iArr1, 55166);

        vMeth1(-2.660F, i1, Test.instanceCount);
        i1 += 11;
        fArr[(i1 >>> 1) % N] -= Test.fFld;
        i1 = -13;
        Test.instanceCount ^= i1;
        by1 = (byte)i1;
        iArr1[(i1 >>> 1) % N] *= i1;
        i9 = 1;
        while (++i9 < 203) {
            Test.dArrFld = Test.dArrFld;
            by1 = (byte)i1;
        }
        Test.fFld -= 57.107F;
        i1 += (int)Test.instanceCount;
        for (f1 = 3; f1 < 285; f1++) {
            i10 = i1;
            Test.instanceCount = i1;
        }
        vMeth_check_sum += (b ? 1 : 0) + i1 + by1 + i9 + Float.floatToIntBits(f1) + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i, long l) {

        byte by=25;
        short s1=-4716;
        int i11=-12, i12=43, i13=16968, i14=-47843, i15=-5, i16=7;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2L);

        i += (int)((-l) - (11L * (Test.fFld += i)));
        i = (i >> by);
        vMeth(false, -50849);
        s1 += (short)786;
        for (i11 = 287; i11 > 4; --i11) {
            for (i13 = i11; 6 > i13; i13++) {
                for (i15 = 1; i15 > 1; i15--) {
                    l = -12;
                    i += (((i15 * l) + i11) - l);
                    i12 += (i15 ^ i14);
                    by -= (byte)Test.fFld;
                }
                i16 -= i11;
                i12 = i13;
                Test.fArrFld[i13] -= Test.fFld;
                lArr = lArr;
            }
        }
        long meth_res = i + l + by + s1 + i11 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {


        lMeth(11, Test.instanceCount);


        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.dArrFld Test.fArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
