// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2153675941L;
    public static short sFld=19222;
    public static byte byFld=75;
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 50216);
        FuzzerUtils.init(Test.iArrFld1, -7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4) {

        int i5=1, i6=61, i7=-8974, i8=28114, i9=120, iArr[]=new int[N];
        long l1=-3L, lArr[]=new long[N];
        float f=-91.61F;
        double d=54.2489;
        boolean b=false;

        FuzzerUtils.init(lArr, 213L);
        FuzzerUtils.init(iArr, -60);

        for (i5 = 7; i5 < 185; i5++) {
            i3 = Test.sFld;
            if (i4 != 0) {
                vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + l1 + i9 + Float.floatToIntBits(f) +
                    Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                return;
            }
            for (i7 = 9; 1 < i7; i7 -= 2) {
                for (l1 = 1; l1 < 3; ++l1) {
                    Test.instanceCount -= i3;
                    if (true) break;
                    Test.byFld += (byte)(l1 * l1);
                    i6 = i7;
                    try {
                        i8 = (225 % i7);
                        i4 = (i9 % 21);
                        i3 = (14623 / i9);
                    } catch (ArithmeticException a_e) {}
                    if (b) {
                        lArr[(int)(l1)] -= (long)f;
                    } else if (b) {
                        Test.instanceCount &= i3;
                        Test.instanceCount = i6;
                        iArr[(int)(l1)] = (int)d;
                    } else {
                        i3 += (int)(((l1 * Test.byFld) + i9) - l1);
                        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + l1 + i9 + Float.floatToIntBits(f) +
                            Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + l1 + i9 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2) {


        vMeth2(i2, i2);
        vMeth1_check_sum += i2;
    }

    public void vMeth(long l) {

        int i10=-14;

        vMeth1(i10);
        vMeth_check_sum += l + i10;
    }

    public void mainTest(String[] strArr1) {

        int i=-113, i1=7, i11=-54052, i12=170, i13=3, i14=12, i15=-196, i16=-7, i17=216, i18=7051, i19=7, i20=130;
        float f1=-105.668F;
        double d1=116.49915;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)24572);

        for (i = 11; 325 > i; i++) {
            Test.instanceCount += (i - i1);
            vMeth(-7L);
            for (i11 = 3; i11 < 80; i11++) {
                i1 += i;
                f1 += (-200 + (i11 * i11));
                f1 += i1;
                d1 = -1525981758857222213L;
                for (i13 = 1; i13 < 2; ++i13) {
                    Test.iArrFld[i11 - 1] *= (int)f1;
                    f1 = Test.instanceCount;
                    i12 -= (int)Test.instanceCount;
                }
                for (i15 = 1; i15 < 2; i15++) {
                    Test.iArrFld1[i15] = (int)Test.instanceCount;
                    i1 = Test.byFld;
                    i12 = i15;
                    i12 = -10;
                    i16 <<= i1;
                    i16 <<= (int)Test.instanceCount;
                    i16 += (int)f1;
                }
            }
        }
        for (i17 = 387; 13 < i17; i17--) {
            i19 = 67;
            do {
                i1 += i19;
                i1 = 0;
                i12 += (i19 + i16);
                Test.instanceCount += (long)f1;
                i20 = 1;
                while (++i20 < 1) {
                    f1 = i18;
                    Test.instanceCount -= -7;
                    sArr[i17 + 1] = (short)f1;
                }
            } while (--i19 > 0);
        }

        FuzzerUtils.out.println("i i1 i11 = " + i + "," + i1 + "," + i11);
        FuzzerUtils.out.println("i12 f1 d1 = " + i12 + "," + Float.floatToIntBits(f1) + "," +
            Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 sArr = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.iArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
