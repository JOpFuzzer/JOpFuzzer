// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=58078L;
    public static int iFld=-5;
    public static volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 22L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, double d2) {

        int i6=-10, i7=-36, i8=9456, i9=7, iArr1[]=new int[N];
        byte by1=71;
        boolean b=true;
        float f=0.324F, fArr1[]=new float[N];
        long l1=19018L;

        FuzzerUtils.init(iArr1, -3);
        FuzzerUtils.init(fArr1, 0.516F);

        for (i6 = 8; i6 < 138; ++i6) {
            switch ((((i5 >>> 1) % 10) * 5) + 19) {
            case 37:
                Test.instanceCount = i7;
                i5 = 51769;
                i7 = i7;
                break;
            case 63:
                iArr1[i6 - 1] = by1;
                i7 += (i6 + i7);
                for (i8 = 1; i8 < 12; i8++) {
                    iArr1[i6 - 1] = (int)-2368632895L;
                    b = b;
                    iArr1[i6] &= -5;
                    iArr1[i6] >>>= i9;
                    f -= Test.instanceCount;
                    fArr1[i8 - 1] *= 14;
                    iArr1[i6 + 1] = (int)l1;
                }
                break;
            case 36:
                i5 += 14;
                break;
            case 30:
                i5 = (int)1.289F;
                break;
            case 29:
                if (b) break;
                break;
            case 56:
                i9 -= (int)Test.instanceCount;
                break;
            case 68:
                l1 -= i7;
                break;
            case 47:
                by1 /= (byte)-122;
                break;
            case 26:
                by1 >>>= (byte)Test.iFld;
                break;
            case 49:
                i7 += (int)(-2.875F + (i6 * i6));
                break;
            }
        }
        vMeth1_check_sum += i5 + Double.doubleToLongBits(d2) + i6 + i7 + by1 + i8 + i9 + (b ? 1 : 0) +
            Float.floatToIntBits(f) + l1 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(int i1, short s) {

        double d1=-2.72138;
        int i2=13706, i3=229, i4=-40665, i10=-1, i11=9, iArr2[]=new int[N];
        float f1=1.584F;
        boolean b1=false;

        FuzzerUtils.init(iArr2, 11);

        for (d1 = 2; d1 < 126; ++d1) {
            for (i3 = 1; i3 < 13; i3++) {
                vMeth1(i3, d1);
                if (true) continue;
                i2 = i3;
                for (i10 = 1; i10 < 2; ++i10) {
                    switch (((i10 % 9) * 5) + 34) {
                    case 39:
                        i1 |= i2;
                        i4 -= i11;
                        i1 += i2;
                        break;
                    case 76:
                        i4 = (int)Test.instanceCount;
                    case 58:
                    case 60:
                        f1 = i10;
                        break;
                    case 79:
                        Test.instanceCount = i1;
                        Test.instanceCount <<= -36674;
                        break;
                    case 41:
                        iArr2[i3 - 1] = (int)d1;
                        break;
                    case 40:
                        i4 -= i10;
                        break;
                    case 63:
                        Test.instanceCount &= i4;
                    case 61:
                        i11 -= (int)Test.instanceCount;
                        break;
                    default:
                        b1 = b1;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + s + Double.doubleToLongBits(d1) + i2 + i3 + i4 + i10 + i11 + Float.floatToIntBits(f1) +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i) {

        short s1=-28285;
        int i12=154, i13=124, i14=13, iArr3[]=new int[N];
        boolean b2=false;
        byte by2=-33;
        double d3=1.69721;

        FuzzerUtils.init(iArr3, 15547);

        vMeth(Test.iFld, s1);
        i >>= (int)Test.instanceCount;
        for (i12 = 4; i12 < 150; i12++) {
            float f2=-66.324F;
            i -= i12;
            iArr3[i12 + 1] = (int)Test.instanceCount;
            iArr3[i12 + 1] *= (int)f2;
        }
        i14 = 249;
        do {
            Test.instanceCount = i13;
            if (b2) {
                Test.iFld += (i14 | i12);
                Test.iFld = -33837;
                iArr3[i14] >>>= -180;
            } else if (b2) {
                Test.instanceCount -= Test.iFld;
            } else if (b2) {
                s1 -= (short)i12;
            } else {
                by2 = (byte)d3;
            }
        } while (--i14 > 0);
        long meth_res = i + s1 + i12 + i13 + i14 + (b2 ? 1 : 0) + by2 + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-67;
        double d=22.119649;
        int i15=3, i16=35540, i17=-1199, i18=-11, iArr[]=new int[N];
        short s2=8507, sArr[]=new short[N];
        float f3=69.921F, f4=73.273F, fArr[]=new float[N];
        long l2=46879L;

        FuzzerUtils.init(sArr, (short)27928);
        FuzzerUtils.init(fArr, 2.771F);
        FuzzerUtils.init(iArr, -9);

        Test.iFld = (Test.iFld >>= Test.iFld);
        sArr[(Test.iFld >>> 1) % N] = (short)(-by);
        for (long l : Test.lArrFld) {
            Test.iFld = (Test.iFld + (Test.iFld--));
            d = (Long.reverseBytes(l) - (-(Test.iFld * d)));
            fArr[(Test.iFld >>> 1) % N] = (((Test.iFld * -37) * Test.iFld) - (sArr[(Test.iFld >>> 1) % N]++));
            iArr[(-6 >>> 1) % N] = (Test.iFld -= ((Test.iFld + by) - iMeth(Test.iFld)));
            switch (((-1 >>> 1) % 10) + 125) {
            case 125:
                Test.iFld = by;
                for (i15 = 3; i15 < 63; i15++) {
                    Test.iFld += (i15 * i15);
                    for (i17 = i15; i17 < 2; i17++) {
                        by += (byte)l;
                    }
                    iArr[i15] = i15;
                    Test.iFld -= i18;
                    iArr[i15 + 1] = i17;
                    Test.lArrFld[i15 + 1] = (long)d;
                    d += s2;
                    l = -134;
                }
                f3 = 1;
                while (++f3 < 63) {
                    switch ((((i17 >>> 1) % 7) * 5) + 30) {
                    case 33:
                        l2 = i16;
                        Test.instanceCount += i16;
                        d = i15;
                        Test.iFld += (int)(((f3 * i16) + i16) - f3);
                        break;
                    case 37:
                        Test.iFld <<= s2;
                        i16 = Test.iFld;
                        if (Test.bFld) break;
                        i16 *= -61313;
                        break;
                    case 43:
                        iArr[(int)(f3 - 1)] &= i17;
                        break;
                    case 41:
                        Test.iFld += i17;
                        break;
                    case 49:
                        Test.iFld *= -54;
                    case 57:
                        Test.iFld *= i17;
                    case 46:
                        Test.iFld = (int)Test.instanceCount;
                        break;
                    }
                }
                break;
            case 126:
                i18 = 27293;
                break;
            case 127:
                i18 = (int)f3;
                break;
            case 128:
                i18 += (int)Test.instanceCount;
            case 129:
                i18 -= (int)Test.instanceCount;
                break;
            case 130:
                i18 = by;
                break;
            case 131:
                if (Test.bFld) continue;
            case 132:
                Test.iFld ^= (int)Test.instanceCount;
            case 133:
                f4 += i17;
                break;
            case 134:
                by = (byte)i18;
                break;
            default:
                i16 = i16;
            }
        }

        FuzzerUtils.out.println("by d i15 = " + by + "," + Double.doubleToLongBits(d) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s2 f3 l2 = " + s2 + "," + Float.floatToIntBits(f3) + "," + l2);
        FuzzerUtils.out.println("f4 sArr fArr = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
