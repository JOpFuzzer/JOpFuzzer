// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=232604256L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(long l) {

        int i=61, iArr[]=new int[N];
        float f=2.910F;

        FuzzerUtils.init(iArr, -21652);

        i -= (int)(((++f) + (iArr[(i >>> 1) % N]--)) % (((Test.instanceCount - -55809) << (i + 6)) | 1));
        vSmallMeth_check_sum += l + i + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f2, int i6) {

        float f3=0.242F;
        int i7=65455, i8=-63100, i9=-55681, i10=3811, i11=-39245;
        byte by=56;
        boolean b=true;
        double d=36.56710, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.2734);

        vSmallMeth(2733877654L);
        for (f3 = 5; f3 < 164; f3++) {
            i6 += i7;
            Test.iArrFld[(int)(f3)] = i6;
            for (i8 = (int)(f3); i8 < 10; i8++) {
                if (b) {
                    for (i10 = 1; i10 < 1; ++i10) {
                        float f4=-1.443F;
                        f2 += i8;
                        f2 += (i10 - i7);
                        i11 = i9;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += (long)f4;
                        by *= (byte)Test.instanceCount;
                        Test.instanceCount = i9;
                        dArr[(int)(f3)] -= Test.instanceCount;
                    }
                    vMeth_check_sum += Float.floatToIntBits(f2) + i6 + Float.floatToIntBits(f3) + i7 + i8 + i9 + i10 +
                        i11 + by + (b ? 1 : 0) + Double.doubleToLongBits(d) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                } else {
                    d = Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + i6 + Float.floatToIntBits(f3) + i7 + i8 + i9 + i10 + i11 + by +
            (b ? 1 : 0) + Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static float fMeth() {

        int i2=5153, i3=-239, i4=-8045, i5=-6;
        float f1=-2.496F, fArr[]=new float[N];
        byte by1=13;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(fArr, 82.515F);

        i2 = (int)((Math.min(-4, 6) - (-41L + (-10 << i2))) - ((-2.236F + Math.min(i2, 8815)) * (f1 + i2)));
        vSmallMeth(Test.instanceCount);
        for (i3 = 1; i3 < 178; ++i3) {
            i4 += (i3 * Test.instanceCount);
        }
        i5 = 1;
        while (++i5 < 296) {
            i2 = (int)(((Test.iArrFld[i5 + 1] -= (int)Test.instanceCount) + 0) + ((i4 += (int)Test.instanceCount) *
                (169 * i2)));
            switch (((i5 % 2) * 5) + 44) {
            case 45:
                vMeth(f1, i2);
                i2 >>= i2;
                break;
            case 49:
                lArr[i5] -= (long)f1;
                i2 += (((i5 * i2) + by1) - Test.instanceCount);
                i2 |= (int)Test.instanceCount;
                break;
            }
            fArr[i5 + 1] -= i3;
            i4 >>= i2;
        }
        Test.instanceCount = Test.instanceCount;
        long meth_res = i2 + Float.floatToIntBits(f1) + i3 + i4 + i5 + by1 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1=7, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -114);

        for (int smallinvoc=0; smallinvoc<543; smallinvoc++) vSmallMeth((i1 + iArr1[(i1 >>> 1) % N]) -
            (Test.instanceCount--));
        vSmallMeth(-((i1 * i1) * (Test.instanceCount++)));
        i1 |= (int)(i1 <<= (int)(Math.max(i1, i1) + (-7690975715439995663L + fMeth())));

        FuzzerUtils.out.println("i1 iArr1 = " + i1 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test fMeth vMeth
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
