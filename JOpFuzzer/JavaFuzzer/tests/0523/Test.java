// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-59L;
    public float fFld=1.255F;
    public static int iFld=5;
    public static long lFld=130L;
    public static volatile byte byFld=56;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -33);
        FuzzerUtils.init(Test.fArrFld, -108.894F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, short s, int i6) {

        int i7=-74, i8=200, i9=12, i10=11, i11=-133;
        long l2=8077057021721296617L;
        double d1=-2.53151;

        for (i7 = 19; i7 < 374; i7++) {
            try {
                Test.iArrFld[i7 + 1] = (-63594 / i6);
                i8 = (i6 / i7);
                Test.iFld = (i8 / i7);
            } catch (ArithmeticException a_e) {}
            for (i9 = 1; 5 > i9; ++i9) {
                for (l2 = 1; l2 < 2; l2++) {
                    Test.iFld += (int)l2;
                    i6 = (int)Test.instanceCount;
                    i8 += (int)(l2 - i8);
                    Test.lFld += i6;
                    i6 >>= i10;
                    Test.instanceCount -= 226L;
                    Test.iArrFld[i9 + 1] -= 56799;
                    f *= i8;
                    if (false) continue;
                    s = (short)i11;
                }
            }
            Test.byFld *= (byte)d1;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + s + i6 + i7 + i8 + i9 + i10 + l2 + i11 +
            Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i5, double d, long l1) {

        float f1=3.576F;
        short s1=-16662;
        long l3=3936906874441037169L;
        int i12=7, i13=-7;
        boolean b=false;

        switch ((((Test.iFld--) >>> 1) % 2) + 68) {
        case 68:
            vMeth1(f1, s1, i5);
            Test.iFld -= (int)Test.instanceCount;
            break;
        case 69:
            i5 %= (int)(i5 | 1);
            break;
        default:
            d += d;
            l3 = 1;
            do {
                for (i12 = 10; i12 > 1; i12--) {
                    if (b) continue;
                    if (true) break;
                    i5 += (-244 + (i12 * i12));
                    Test.iFld += (i12 * i12);
                    Test.byFld = (byte)l1;
                    i13 = Test.iFld;
                    i13 += i12;
                }
                i13 += (int)(l3 + Test.instanceCount);
            } while (++l3 < 155);
        }
        vMeth_check_sum += i5 + Double.doubleToLongBits(d) + l1 + Float.floatToIntBits(f1) + s1 + l3 + i12 + i13 + (b ?
            1 : 0);
    }

    public static int iMeth() {

        int i2=233, i3=-69, i4=13, i14=112;
        double d2=100.74049;
        float f3=121.391F;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-14);

        i2 -= (int)Test.instanceCount;
        byArr[(5639 >>> 1) % N][(Test.iFld >>> 1) % N] <<= (byte)(i2++);
        for (i3 = 2; i3 < 300; ++i3) {
            Test.instanceCount += (i3 ^ Test.lFld);
            Test.iFld -= (int)(++Test.instanceCount);
            vMeth(-8375, d2, Test.instanceCount);
            Test.iArrFld[i3] = Test.iFld;
            Test.iFld = Test.iFld;
            Test.instanceCount = Test.lFld;
            d2 = -3;
            f3 = -5;
            i2 += i3;
            i14 = 1;
            do {
                Test.bFld = Test.bFld;
                Test.iArrFld[i14 + 1] = Test.iFld;
            } while (++i14 < 6);
        }
        long meth_res = i2 + i3 + i4 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f3) + i14 +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=41336L, l4=1L, lArr[][]=new long[N][N];
        int i=-57369, i1=5653, i15=1, i16=126, i17=-3, i18=-14, i19=-6, i20=14;
        double d3=2.112018;
        float f4=96.833F;
        short s2=7919;

        FuzzerUtils.init(lArr, 3L);

        for (l = 6; l < 253; l++) {
            i += (int)(((--Test.iArrFld[(int)(l + 1)]) - (fFld + i)) - (i++));
            i >>= (++i);
            i1 = 1;
            do {
                i = Math.min(i, iMeth());
            } while (++i1 < 102);
            Test.iArrFld[(int)(l)] = -25633;
            d3 = 109;
            Test.iArrFld[(int)(l - 1)] -= i1;
            for (l4 = 2; l4 < 102; ++l4) {
                for (i16 = (int)(l4); i16 < 2; ++i16) {
                    Test.iFld *= i16;
                    Test.iFld -= (int)Test.instanceCount;
                    lArr[i16] = FuzzerUtils.long1array(N, (long)8L);
                    Test.instanceCount = Test.byFld;
                    Test.fArrFld = Test.fArrFld;
                    i += (i16 * i);
                }
                for (i18 = 2; i18 > 1; --i18) {
                    Test.lFld = i19;
                }
                d3 = Test.instanceCount;
                switch ((int)(((l4 % 2) * 5) + 82)) {
                case 92:
                    i15 ^= i1;
                    i15 = i19;
                    break;
                case 85:
                    if (Test.bFld) {
                        if (Test.bFld) continue;
                        for (f4 = 1; f4 < 2; f4++) {
                            Test.lFld -= i1;
                            s2 <<= (short)i16;
                            Test.instanceCount += (203 + (f4 * f4));
                            Test.lFld *= i20;
                            i19 += i19;
                        }
                    } else if (false) {
                        fFld *= (float)-1.37741;
                    } else {
                        lArr[(int)(l4)] = lArr[(int)(l4 + 1)];
                    }
                    break;
                }
            }
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("d3 l4 i15 = " + Double.doubleToLongBits(d3) + "," + l4 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f4 i20 = " + i19 + "," + Float.floatToIntBits(f4) + "," + i20);
        FuzzerUtils.out.println("s2 lArr = " + s2 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.lFld Test.byFld Test.bFld = " + Test.lFld + "," + Test.byFld + "," + (Test.bFld ?
            1 : 0));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
