// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3911997347302574707L;
    public static short sFld=-7654;
    public static int iFld=-137;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i7=13, i8=0, i9=-2, i10=-55791, i11=185, i12=33, i13=-157, i14=-11, iArr[][]=new int[N][N];
        float f=0.700F, fArr[]=new float[N];
        boolean b=false;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 47045);
        FuzzerUtils.init(sArr, (short)-6161);
        FuzzerUtils.init(fArr, 1.240F);
        FuzzerUtils.init(lArr, -10L);

        i7 = 258;
        while (--i7 > 0) {
            iArr[i7][i7] = (int)f;
            for (i8 = 6; i8 > 1; i8 -= 3) {
                sArr[i7 - 1] = (short)i8;
            }
            i10 = 1;
            while (++i10 < 6) {
                for (i11 = 1; 1 > i11; i11 += 3) {
                    fArr[i10 + 1] = i10;
                    Test.instanceCount <<= Test.instanceCount;
                    fArr[i11] -= Test.instanceCount;
                    if (b) break;
                }
                for (i13 = 1; i13 < 1; i13++) {
                    Test.instanceCount *= (long)f;
                    if (true) break;
                    Test.instanceCount >>>= 196;
                    lArr[i7 + 1] = i13;
                }
            }
        }
        vMeth1_check_sum += i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + i13 + i14 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i5=47901, i6=14, i15=-35362, i16=5, i17=10633, iArr1[]=new int[N];
        float f1=2.172F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -18.255F);
        FuzzerUtils.init(iArr1, -23230);

        for (i5 = 1; 190 > i5; ++i5) {
            vMeth1();
            for (i15 = 1; i15 < 8; ++i15) {
                f1 = Test.instanceCount;
                fArr1[i5 + 1] = i5;
                Test.instanceCount >>= i15;
                i6 = i15;
                i17 = 2;
                do {
                    Test.sFld += (short)(i17 * i17);
                    iArr1[(i15 >>> 1) % N] += i15;
                    iArr1[i5] >>>= i17;
                    i6 = i5;
                } while (--i17 > 0);
                i6 = i17;
                i16 = (int)Test.instanceCount;
            }
        }
        i6 += i5;
        long meth_res = i5 + i6 + i15 + i16 + Float.floatToIntBits(f1) + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, double d1) {

        int i2=149, i3=176, i4=-63726, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -6);

        for (i2 = 3; i2 < 226; i2++) {
            i4 = 1;
            do {
                i1 >>= i1;
                Test.instanceCount = Math.min(iMeth(), i4);
                iArr2 = iArr2;
                i1 -= (int)Test.instanceCount;
                Test.instanceCount += i3;
            } while (++i4 < 7);
            i3 >>= i4;
            Test.instanceCount *= Test.instanceCount;
            i1 /= (int)(i4 | 1);
            iArr2[i2 - 1] = i4;
            Test.instanceCount -= 0;
            i3 = i2;
        }
        i1 = i3;
        iArr2[(i1 >>> 1) % N] = i4;
        vMeth_check_sum += i1 + Double.doubleToLongBits(d1) + i2 + i3 + i4 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d=0.2982;
        int i=-1645, i18=-64, i19=-10, i20=-168, i21=-42317, i22=-54638, i23=-224, i24=-88, iArr3[][]=new int[N][N];
        float f3=0.153F, fArr2[]=new float[N];

        FuzzerUtils.init(iArr3, -61560);
        FuzzerUtils.init(fArr2, -114.792F);

        Test.instanceCount += (long)(d % (((long)((i - i) + (d / (i | 1)))) | 1));
        vMeth(i, d);
        i -= i;
        lArrFld[(i >>> 1) % N] = i;
        iArr3[(i >>> 1) % N][(i >>> 1) % N] = i;
        for (i18 = 258; i18 > 13; i18--) {
            i19 += i19;
            for (i20 = 5; i20 < 103; ++i20) {
                float f2=103.473F;
                i19 *= i20;
                f2 -= i;
                Test.instanceCount *= i20;
                for (i22 = i20; i22 < 2; ++i22) {
                    switch (((i18 % 2) * 5) + 126) {
                    case 131:
                        i23 *= (int)2.39F;
                        break;
                    case 132:
                        Test.instanceCount += 45978;
                        break;
                    }
                }
                i19 += (((i20 * i19) + Test.iFld) - Test.sFld);
            }
            f3 -= Test.iFld;
            switch (((i >>> 1) % 3) + 97) {
            case 97:
                i19 += (i18 * i);
                break;
            case 98:
                i24 = 1;
                while (++i24 < 103) {
                    Test.instanceCount += i;
                    Test.instanceCount = -1;
                    i23 |= i21;
                }
                Test.instanceCount = -127;
                i23 = (int)Test.instanceCount;
                fArr2[i18 - 1] -= i;
            case 99:
                Test.iFld ^= i20;
                break;
            }
        }
        f3 *= -8496326990090473575L;
        Test.iFld >>= i20;
        i21 <<= i18;

        FuzzerUtils.out.println("d i i18 = " + Double.doubleToLongBits(d) + "," + i + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f3 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i24 iArr3 fArr2 = " + i24 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.iFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
