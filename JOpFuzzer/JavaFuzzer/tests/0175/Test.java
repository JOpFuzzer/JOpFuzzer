// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-42361L;
    public boolean bFld=false;
    public static volatile byte byFld=-121;
    public byte byFld1=121;
    public static volatile boolean bArrFld[]=new boolean[N];
    public float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long bMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l) {

        int i2=-2, i3=29829, i4=6202, i5=204, i6=178, iArr[]=new int[N];
        byte by=-101;
        boolean b=false;

        FuzzerUtils.init(iArr, 15135);

        i2 -= i2;
        l <<= i2;
        i3 = 1;
        do {
            by += (byte)(-3 + (i3 * i3));
            Test.instanceCount += (i3 ^ Test.instanceCount);
            if (b) continue;
            i4 = 1;
            do {
                if (i3 != 0) {
                    vMeth_check_sum += l + i2 + i3 + by + (b ? 1 : 0) + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr);
                    return;
                }
                for (i5 = 1; i5 < 1; ++i5) {
                    i2 = i6;
                    iArr[i4] -= 10;
                    i2 += (i5 + i5);
                    b = true;
                    if (b) break;
                }
                i6 = i2;
            } while (++i4 < 5);
        } while (++i3 < 341);
        vMeth_check_sum += l + i2 + i3 + by + (b ? 1 : 0) + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i1) {


        vMeth(Test.instanceCount);
        long meth_res = i1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static boolean bMeth() {

        int i7=-15105;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -4132459370269850496L);

        Test.instanceCount -= (long)(fMeth(-182) + i7);
        lArr[(i7 >>> 1) % N][(i7 >>> 1) % N] *= i7;
        long meth_res = i7 + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-164, i8=-51554, i9=-4456, i10=-27995, i11=10, i12=-10, i13=19954, i14=-54123, i15=-27, i16=44445;
        float f=-65.25F, f1=2.749F;
        double d=-27.14666;
        short s=5933, sArr[]=new short[N];
        boolean b1=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 2075220941L);
        FuzzerUtils.init(sArr, (short)24629);

        Test.bArrFld[(i >>> 1) % N] = (bFld = bMeth());
        if (true) {
            i -= (int)Test.instanceCount;
            i = (int)f;
            i += i;
            fArrFld[(i >>> 1) % N] += i;
        } else if (bFld) {
            d = s;
            for (f1 = 8; f1 < 130; f1++) {
                Test.byFld += (byte)(f1 + i9);
                i = (int)d;
                i = (int)Test.instanceCount;
                i9 += (int)(f1 * f1);
                Test.instanceCount >>= i;
                switch ((int)((f1 * 5) + 89)) {
                case 222:
                    iArrFld[(int)(f1 - 1)] -= (int)f;
                case 125:
                case 158:
                    for (i10 = 2; 205 > i10; i10++) {
                        d = 107;
                        Test.instanceCount += i10;
                    }
                    i8 += (int)4872819160693342370L;
                    break;
                case 323:
                    i11 = (int)d;
                    for (i12 = 205; i12 > 8; i12--) {
                        i11 -= (int)Test.instanceCount;
                        try {
                            iArrFld[(int)(f1 + 1)] = (25311 % i);
                            i13 = (i13 % i9);
                            i13 = (-61855 / i);
                        } catch (ArithmeticException a_e) {}
                        i += (i12 | (long)f);
                    }
                case 358:
                    lArr1[(int)(f1)] = Test.instanceCount;
                    i9 = i11;
                    break;
                case 143:
                    for (i14 = 205; i14 > 9; i14 -= 3) {
                        i13 *= i15;
                    }
                    break;
                case 210:
                case 270:
                    i = -77;
                    d = d;
                    break;
                case 336:
                    sArr[(int)(f1 + 1)] = (short)i;
                    break;
                case 432:
                    s += (short)i;
                    break;
                case 145:
                    try {
                        i = (i10 / -37619);
                        i13 = (-59430 / i9);
                        i13 = (i13 / i8);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 272:
                    i9 = i15;
                case 247:
                    i15 >>= i10;
                    break;
                case 115:
                    i += (int)f1;
                    break;
                case 379:
                case 164:
                    Test.instanceCount += (long)(f1 - Test.instanceCount);
                    break;
                case 146:
                    f = Test.instanceCount;
                    break;
                case 375:
                    lArr1[(int)(f1)] += Test.instanceCount;
                    break;
                case 254:
                    i8 = i14;
                    break;
                case 134:
                    i15 <<= i13;
                    break;
                case 412:
                    if (bFld) break;
                    break;
                case 341:
                    Test.instanceCount <<= i15;
                    break;
                case 367:
                    i13 += (int)(f1 * f1);
                    break;
                case 207:
                    f = i11;
                    break;
                case 90:
                    i11 += (int)Test.instanceCount;
                    break;
                case 226:
                    i8 = i8;
                case 91:
                    bFld = true;
                    break;
                case 230:
                    Test.instanceCount += i12;
                    break;
                case 317:
                    Test.byFld = (byte)Test.instanceCount;
                    break;
                case 168:
                    if (bFld) break;
                    break;
                case 205:
                    i9 = i10;
                    break;
                case 101:
                    fArrFld[(int)(f1 + 1)] *= Test.instanceCount;
                    break;
                case 218:
                    i = (int)d;
                    break;
                case 174:
                    i15 = (int)20L;
                    break;
                case 421:
                    f += i9;
                    break;
                case 321:
                    i13 += i12;
                    break;
                case 298:
                    i11 ^= byFld1;
                    break;
                case 147:
                    byFld1 += (byte)f1;
                    break;
                case 287:
                    iArrFld[(int)(f1 + 1)] |= i14;
                    break;
                case 333:
                    d -= f;
                    break;
                case 135:
                    i11 += (int)(f1 + f1);
                    break;
                case 281:
                    lArr1[(int)(f1)] = i12;
                    break;
                case 284:
                    try {
                        i11 = (-48065 % iArrFld[(int)(f1 - 1)]);
                        i11 = (i11 / i12);
                        i13 = (i11 % i9);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 380:
                    i9 += (int)-303608674L;
                    break;
                case 292:
                case 404:
                    i11 = (int)-3L;
                    break;
                case 397:
                    Test.instanceCount = i13;
                    break;
                case 132:
                    if (bFld) break;
                    break;
                case 302:
                    f = i9;
                    break;
                case 239:
                    iArrFld[(int)(f1)] += (int)Test.instanceCount;
                    break;
                case 290:
                    Test.instanceCount &= i8;
                case 313:
                    i16 = (int)f1;
                    break;
                case 400:
                    i11 >>= (int)Test.instanceCount;
                    break;
                case 159:
                    Test.instanceCount = i13;
                    break;
                case 324:
                    Test.instanceCount = i10;
                    break;
                case 359:
                    i13 = i8;
                    break;
                case 330:
                    i11 += (int)f1;
                    break;
                case 289:
                    i9 += i10;
                    break;
                case 99:
                    iArrFld[(int)(f1 + 1)] >>= i;
                    break;
                case 266:
                    i = byFld1;
                    break;
                case 388:
                    i11 += (int)f1;
                    break;
                case 418:
                    i9 <<= (int)Test.instanceCount;
                    break;
                case 114:
                    s &= (short)i12;
                    break;
                case 92:
                    i13 = i8;
                    break;
                case 165:
                    Test.instanceCount *= i13;
                case 240:
                    i += (int)f1;
                    break;
                case 316:
                    bFld = b1;
                    break;
                case 122:
                    dArrFld[(int)(f1 - 1)] -= -29;
                    break;
                case 419:
                case 342:
                    i13 += i11;
                    break;
                }
            }
        } else {
            i8 = i;
        }

        FuzzerUtils.out.println("i f d = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("s f1 i8 = " + s + "," + Float.floatToIntBits(f1) + "," + i8);
        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 b1 = " + i15 + "," + i16 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("lArr1 sArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.byFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Test.byFld);
        FuzzerUtils.out.println("byFld1 Test.bArrFld fArrFld = " + byFld1 + "," + FuzzerUtils.checkSum(Test.bArrFld) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("iArrFld dArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  fMeth ->  fMeth bMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
