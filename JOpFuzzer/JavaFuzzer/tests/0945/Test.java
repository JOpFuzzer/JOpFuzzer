// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1512852746L;
    public volatile float fFld=0.132F;
    public static float fArrFld[]=new float[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.294F);
        FuzzerUtils.init(Test.byArrFld, (byte)-60);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(byte by, int i4) {

        double d1=79.102858;
        int i5=19, i6=-226, i7=35034, iArr1[][]=new int[N][N];
        short s=15971;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 111);
        FuzzerUtils.init(lArr, 132L);

        d1 = Test.instanceCount;
        for (i5 = 6; i5 < 305; i5++) {
            i7 = 1;
            do {
                float f=-121.387F;
                i4 += i6;
                i6 = s;
                iArr1[i5][i7 - 1] = i6;
                d1 *= Test.instanceCount;
                switch (((-2890 >>> 1) % 1) + 100) {
                case 100:
                    Test.fArrFld[(i5 >>> 1) % N] *= 7;
                    break;
                default:
                    if (b) break;
                    switch (((i7 % 7) * 5) + 15) {
                    case 49:
                        s -= (short)i6;
                        lArr[i7 - 1] *= i5;
                        break;
                    case 38:
                        i6 += (((i7 * f) + Test.instanceCount) - i5);
                        i6 += (i7 ^ (long)f);
                    case 45:
                        Test.instanceCount += (i7 * i7);
                    case 34:
                        if (i7 != 0) {
                        }
                    case 19:
                        iArr1[(i6 >>> 1) % N][i7 + 1] <<= by;
                        break;
                    case 23:
                        i4 /= (int)(i4 | 1);
                    case 17:
                        f += i6;
                        break;
                    default:
                        f += i7;
                    }
                }
            } while (++i7 < 6);
        }
        long meth_res = by + i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + s + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(int i1, int i2, int i3) {

        int i8=3, i9=-4, i10=47372, i11=-175, i12=0;
        double d2=-89.9491;
        float f1=2.369F;
        byte by1=95;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 3L);

        lMeth((byte)(73), i3);
        i8 = 1;
        while (++i8 < 179) {
            for (i9 = 1; i9 < 9; i9++) {
                Test.instanceCount = (long)d2;
                i1 = (int)d2;
                i3 <<= -224;
                d2 = Test.instanceCount;
                f1 -= i1;
                i11 = 1;
                while (++i11 < 2) {
                    i3 += (((i11 * i9) + i2) - i12);
                    if (i1 != 0) {
                    }
                    i12 = -116;
                    lArr1[i8][i9 - 1] = i9;
                    by1 += (byte)(i11 * i11);
                    i2 >>= (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i8 + i9 + i10 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + i11 +
            i12 + by1 + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(long l, double d) {

        int i=23, i13=167, i14=11, i15=44856, i16=-11, i17=192, i18=5, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, 32);

        iArr[(i >>> 1) % N][(-34593 >>> 1) % N] = iMeth1(-49275, -235, 10);
        for (i13 = 3; i13 < 316; i13++) {
            for (i15 = 5; i15 > i13; i15 -= 3) {
                switch ((i13 % 2) + 8) {
                case 8:
                    try {
                        i = (i14 / 35375);
                        i14 = (i16 % 184);
                        i14 = (-164 / i15);
                    } catch (ArithmeticException a_e) {}
                    i += i15;
                    break;
                case 9:
                    i16 = i16;
                    i14 *= (int)2.200F;
                    for (i17 = 1; i17 < 1; ++i17) {
                        d *= fFld;
                        if (i14 != 0) {
                        }
                        i18 = (int)l;
                        Test.byArrFld = Test.byArrFld;
                        l -= i17;
                        i14 += (i17 | Test.instanceCount);
                    }
                    break;
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + i + i13 + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d3=30.61803, dArr[]=new double[N];
        int i19=-85, i20=60, i21=-130, i22=-37483, i23=25009, i24=14, i25=-21392, iArr2[][]=new int[N][N];
        boolean b1=false;
        short s1=-1266;
        byte by2=-45;
        long lArr2[]=new long[N];

        FuzzerUtils.init(dArr, -62.24018);
        FuzzerUtils.init(lArr2, -458542047L);
        FuzzerUtils.init(iArr2, 1);

        Test.instanceCount += iMeth(Test.instanceCount, d3);
        for (i19 = 3; i19 < 386; i19++) {
            for (i21 = 2; i21 < 66; i21 += 2) {
                i20 += (((i21 * Test.instanceCount) + i21) - i21);
                i20 *= (int)Test.instanceCount;
                i20 += (i21 * i21);
                if (b1) {
                    Test.instanceCount += i22;
                    dArr[i19 - 1] += i20;
                    i20 += i21;
                } else {
                    i20 *= i21;
                    switch (((i21 % 5) * 5) + 96) {
                    case 113:
                        i20 = -24;
                        i20 = i21;
                        i22 *= i19;
                        break;
                    case 109:
                        for (i23 = i21; i23 < 3; ++i23) {
                            d3 = Test.instanceCount;
                            lArr2[i23] >>= i22;
                            i25 -= i24;
                            i20 += i23;
                            i25 += i23;
                            iArr2[i23 + 1][i19 - 1] += i20;
                            fFld += i25;
                        }
                    case 100:
                        switch ((i21 % 9) + 122) {
                        case 122:
                            i25 <<= i24;
                            b1 = false;
                            if (b1) break;
                            break;
                        case 123:
                            d3 /= (i20 | 1);
                            break;
                        case 124:
                            iArr2[i21][i21 + 1] >>>= 32455;
                            fFld -= -37;
                            break;
                        case 125:
                            i24 /= (int)((long)(fFld) | 1);
                            break;
                        case 126:
                            fFld += (((i21 * fFld) + i19) - i25);
                            break;
                        case 127:
                            s1 += (short)(41653 + (i21 * i21));
                            break;
                        case 128:
                            by2 -= (byte)28.50952;
                        case 129:
                            Test.instanceCount *= (long)fFld;
                        case 130:
                            iArr2[i21 - 1][i21 + 1] -= (int)Test.instanceCount;
                        }
                        break;
                    case 106:
                        i25 -= (int)Test.instanceCount;
                    case 120:
                        iArr2[i19 - 1][i19] = (int)fFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d3 i19 i20 = " + Double.doubleToLongBits(d3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 b1 = " + i21 + "," + i22 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("s1 by2 dArr = " + s1 + "," + by2 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("lArr2 iArr2 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.fArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
