// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=37180L;
    public int iFld=-11;
    public float fFld=0.362F;
    public int iFld1=-79;
    public static byte byFld=110;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5240476233336242796L);
        FuzzerUtils.init(Test.iArrFld, 13);
    }

    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=-69, i5=83, i6=-197, i7=-180, i8=-45321, i9=210, i10=30, i11=-17, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 13);

        for (i4 = 11; 236 > i4; ++i4) {
            i5 = (int)Test.instanceCount;
            for (i6 = 1; 7 > i6; ++i6) {
                short s=32684;
                float f=1.556F;
                for (i8 = 1; i8 < 2; i8++) {
                    Test.instanceCount -= (long)-49.95913;
                    i7 += i8;
                    Test.instanceCount -= Test.instanceCount;
                }
                s = (short)i8;
                for (i10 = 1; 2 > i10; ++i10) {
                    iArr1[i4 - 1] -= i10;
                    Test.lArrFld[i10] *= i8;
                    i5 = i6;
                    iArr1 = FuzzerUtils.int1array(N, (int)-22109);
                    i11 = i11;
                }
                f += (-4 + (i6 * i6));
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i3) {

        float f1=124.634F, fArr[]=new float[N];
        int i12=4, i13=-14, i14=-5, i15=206, i16=6214, i17=-4882;
        byte by=25;
        double d1=-81.27110;

        FuzzerUtils.init(fArr, 0.224F);

        i3 = (int)(Double.longBitsToDouble(Test.instanceCount) * iMeth1());
        i3 = (int)f1;
        for (i12 = 5; i12 < 143; ++i12) {
            Test.instanceCount <<= -13573L;
            i13 = i3;
            for (i14 = 11; i14 > 1; --i14) {
                i3 += i14;
                i13 <<= i14;
            }
            by *= (byte)i14;
            for (i16 = 1; i16 < 11; ++i16) {
                Test.iArrFld[i12 + 1] = i12;
                switch (((i17 >>> 1) % 6) + 114) {
                case 114:
                    Test.instanceCount *= by;
                    i3 = i15;
                    i17 = by;
                    break;
                case 115:
                    d1 = i12;
                    break;
                case 116:
                    Test.iArrFld[(i17 >>> 1) % N] = i12;
                case 117:
                    i3 -= i14;
                    break;
                case 118:
                    fArr[i16] -= i16;
                case 119:
                    Test.instanceCount = i3;
                    break;
                }
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + by + i16 + i17 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth() {

        int i1=-25548, i2=-14230, i18=-7863, i19=-78, i20=-24517;
        double d2=0.39776;
        float f2=3.561F;
        boolean b=false;

        for (i1 = 14; i1 < 249; i1++) {
            Test.instanceCount = (long)((-17574 + iMeth(i1)) - d2);
            i2 = i1;
            i18 = 1;
            do {
                long l=-13504L;
                switch ((i18 % 5) + 83) {
                case 83:
                    Test.iArrFld[i18 + 1] = i18;
                    i2 >>>= 3;
                    break;
                case 84:
                    i2 -= (int)Test.instanceCount;
                    break;
                case 85:
                    try {
                        i2 = (318734979 % i1);
                        i2 = (i2 / 34419);
                        Test.iArrFld[(i18 >>> 1) % N] = (-1643494196 % i18);
                    } catch (ArithmeticException a_e) {}
                    i2 += i1;
                    for (i19 = 1; i19 < 1; i19++) {
                        Test.instanceCount = i2;
                        i2 -= (int)f2;
                        if (b) continue;
                    }
                    Test.instanceCount <<= l;
                case 86:
                    i20 &= i18;
                    break;
                case 87:
                    l += (((i18 * f2) + Test.instanceCount) - i18);
                    break;
                default:
                    Test.iArrFld = Test.iArrFld;
                }
            } while (++i18 < 7);
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + Float.floatToIntBits(f2) + (b ? 1 :
            0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=36486, i21=-14, i23=46, i24=122, i25=-4984, i26=-195, i27=45, i28=59715, i29=-35961, iArr[]=new int[N];
        double d=55.112598;
        boolean b1=true;

        FuzzerUtils.init(iArr, -25760);

        Test.lArrFld[(i >>> 1) % N] -= ((i--) + iArr[(i >>> 1) % N]);
        i -= (int)(((8 - (++d)) + (iFld + fFld)) + ((iFld - -14) % ((-15 + (23914 + byMeth())) | 1)));
        i21 = 1;
        do {
            i += (int)fFld;
            Test.instanceCount -= i21;
            if (b1) continue;
            for (i23 = 4; i23 < 122; ++i23) {
                i = i21;
                try {
                    Test.iArrFld[i23] = (i % -159);
                    iFld1 = (i21 % iFld1);
                    i24 = (-25242 / i23);
                } catch (ArithmeticException a_e) {}
                iFld *= iFld1;
                Test.byFld += (byte)(((i23 * iFld) + iFld) - i24);
                Test.instanceCount = (long)fFld;
                iArr[i23 - 1] *= iFld1;
                i -= (int)93.57F;
                iFld = (int)Test.instanceCount;
                iArr[i21 - 1] = i;
                iFld = i21;
            }
            fFld += (-10 + (i21 * i21));
            i25 = 1;
            while (++i25 < 122) {
                iFld1 += (i25 * i25);
                i24 *= (int)fFld;
            }
        } while (++i21 < 205);
        fFld = Test.instanceCount;
        for (i26 = 3; 134 > i26; i26++) {
            Test.instanceCount = (long)fFld;
            i24 <<= -43944;
            i24 += i23;
            Test.instanceCount += -15700;
            for (i28 = 1; 191 > i28; i28++) {
                b1 = b1;
                Test.instanceCount += (long)59.90924;
            }
        }

        FuzzerUtils.out.println("i d i21 = " + i + "," + Double.doubleToLongBits(d) + "," + i21);
        FuzzerUtils.out.println("b1 i23 i24 = " + (b1 ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 iArr = " + i28 + "," + i29 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount iFld fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("iFld1 Test.byFld Test.lArrFld = " + iFld1 + "," + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
