// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=811136390L;
    public static float fFld=10.684F;
    public static byte byFld=-95;
    public static volatile int iFld=-1;
    public static volatile int iFld1=-50359;
    public boolean bFld=true;
    public static float fArrFld[]=new float[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -114.95F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(short s) {

        int i4=50645, i5=12, i6=-51758, i7=-1, i8=22012, iArr[]=new int[N];
        boolean b=true;
        double d1=-39.60805;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6L);
        FuzzerUtils.init(iArr, -128);

        lArr = lArr;
        for (i4 = 1; i4 < 329; i4++) {
            Test.fFld *= -2.335F;
            Test.instanceCount = i4;
            Test.instanceCount += Test.instanceCount;
            for (i6 = 1; i6 < 5; i6++) {
                iArr[i4 + 1] *= i5;
                i7 += (-7 + (i6 * i6));
                b = b;
                Test.byFld += (byte)Test.instanceCount;
                i7 -= -225;
            }
            i5 <<= i4;
            for (d1 = 1; d1 < 5; d1++) {
                i5 *= i5;
            }
            b = b;
        }
        vMeth_check_sum += s + i4 + i5 + i6 + i7 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i8 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(float f1) {

        short s1=4460;
        double d2=-32.89869;
        int i9=8, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, 0);

        vMeth(s1);
        Test.iFld = -33639;
        Test.iFld1 >>= Test.iFld;
        Test.instanceCount = Test.instanceCount;
        d2 = Test.instanceCount;
        iArr1[(Test.iFld1 >>> 1) % N] -= 41276;
        Test.instanceCount = -47194L;
        i9 = 1;
        do {
            if (true) {
                if (false) continue;
                Test.instanceCount += Test.instanceCount;
                Test.iFld1 *= Test.iFld;
            } else if (b1) {
                Test.fArrFld[i9 + 1] = i9;
                Test.iFld1 -= (int)Test.instanceCount;
            } else if (false) {
                Test.byFld += (byte)(i9 * i9);
            } else {
                iArr1[i9] >>= (int)Test.instanceCount;
            }
        } while (++i9 < 318);
        long meth_res = Float.floatToIntBits(f1) + s1 + Double.doubleToLongBits(d2) + i9 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i10=41136, i11=-12780, i12=-4, i13=-42565, iArr2[]=new int[N];
        double d3=-20.65811;
        boolean b2=true;

        FuzzerUtils.init(iArr2, -45696);

        iMeth1(Test.fFld);
        iArr2[(Test.iFld >>> 1) % N] &= Test.iFld1;
        for (i10 = 7; i10 < 136; ++i10) {
            i11 -= Test.iFld1;
            i12 = 1;
            do {
                i13 = 1;
                do {
                    Test.iFld *= i10;
                    d3 = -10;
                    if (b2) {
                        Test.iFld1 += (int)Test.instanceCount;
                        Test.iFld -= (int)Test.instanceCount;
                        Test.iFld += i13;
                        Test.iFld += Test.iFld;
                    } else if (b2) {
                        i11 = 63218;
                        Test.iFld1 *= Test.iFld;
                    }
                } while (++i13 < 1);
            } while (++i12 < 12);
        }
        long meth_res = i10 + i11 + i12 + i13 + Double.doubleToLongBits(d3) + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-39653, i1=44, i2=-235, i3=44, i14=12, i15=116, iArr3[]=new int[N];
        double d=1.94318;
        float f=1.763F;
        boolean b3=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr3, -50);

        i <<= (int)(i * (d--));
        for (f = 18; f < 319; f += 2) {
            for (i2 = 2; i2 < 167; ++i2) {
                i <<= iMeth();
                i1 = i1;
                b3 = b3;
                if (b3) {
                    Test.fFld = -22463L;
                    Test.instanceCount += i2;
                    Test.fFld += (i2 + f);
                } else {
                    Test.instanceCount >>= i2;
                    for (i14 = 1; i14 < 2; i14++) {
                        i15 += 40;
                        Test.fFld += (((i14 * Test.byFld) + i3) - i2);
                        switch (((i2 % 4) * 5) + 6) {
                        case 9:
                            i1 += (int)Test.instanceCount;
                            break;
                        case 19:
                            d -= Test.fFld;
                            bFld = bFld;
                            Test.fArrFld[i2] *= 44196;
                        case 11:
                            Test.iFld1 *= (int)Test.fFld;
                            bArr[(int)(f)] = b3;
                            break;
                        case 7:
                            Test.fFld = f;
                        default:
                            dArrFld[(int)(f - 1)] = Test.iFld1;
                            iArr3[i14] = (int)1181635013L;
                        }
                        Test.fFld = -4726402724072128796L;
                        iArr3 = iArr3;
                        Test.iFld = i14;
                        i1 = (int)Test.instanceCount;
                        Test.instanceCount -= (long)f;
                    }
                }
                Test.iFld1 += (37997 + (i2 * i2));
            }
        }

        FuzzerUtils.out.println("i d f = " + i + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("b3 i14 i15 = " + (b3 ? 1 : 0) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("bArr iArr3 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.iFld Test.iFld1 bFld = " + Test.iFld + "," + Test.iFld1 + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fArrFld dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
