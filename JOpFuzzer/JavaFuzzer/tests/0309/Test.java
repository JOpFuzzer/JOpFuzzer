// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-17204L;
    public static int iFld=24802;
    public static boolean bFld=false;
    public static volatile short sFld=-22002;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 96);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=235, i7=9, i8=7, i9=13, i10=-13, i11=-1, i12=-8917;
        short s=20091;

        for (i6 = 13; i6 < 215; i6++) {
            i7 >>>= i7;
            i8 = 1;
            do {
                Test.iFld -= i6;
                i7 *= i8;
                for (i9 = 1; 1 < i9; --i9) {
                    Test.iArrFld1[i9] += (int)-1.212F;
                    Test.instanceCount += i9;
                }
                i10 <<= (int)-3804784841L;
                if (Test.bFld) {
                    for (i11 = 1; i11 > i8; --i11) {
                        long l=-14L;
                        Test.instanceCount = i10;
                        l = s;
                        Test.instanceCount -= i6;
                        Test.instanceCount = i6;
                    }
                }
            } while (++i8 < 8);
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + s;
    }

    public static void vMeth1() {

        int i13=11, i14=-4, i15=-175, i16=-30580, iArr[][]=new int[N][N];
        byte by1=80;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 16);
        FuzzerUtils.init(lArr, 2L);

        iArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] <<= (Test.iFld = Test.iFld);
        vMeth2();
        Test.iFld += (int)Test.instanceCount;
        Test.iFld = Test.iFld;
        for (i13 = 14; i13 < 339; i13++) {
            i14 = 13;
            lArr = lArr;
            i14 |= i13;
            Test.iFld ^= (int)Test.instanceCount;
            for (i15 = 5; i15 > 1; i15 -= 2) {
                try {
                    i14 = (i13 % 32315);
                    Test.iFld = (i13 % i13);
                    Test.iFld = (Test.iFld % i14);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld1 = FuzzerUtils.int1array(N, (int)-27);
                Test.instanceCount *= Test.iFld;
                i14 = by1;
                i16 = 11;
            }
        }
        vMeth1_check_sum += i13 + i14 + i15 + i16 + by1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(byte by, int i4, int i5) {


        vMeth1();
        vMeth_check_sum += by + i4 + i5;
    }

    public void mainTest(String[] strArr1) {

        int i=-46, i1=18, i2=-6, i3=-60505, i17=134;
        float f=67.305F, f1=0.838F;

        iArrFld[(i >>> 1) % N] /= (int)(((long)(f++)) | 1);
        for (f1 = 1; f1 < 389; f1++) {
            for (i2 = 3; 65 > i2; i2 += 2) {
                byte by2=37;
                if (Test.bFld) {
                    switch ((int)((f1 % 7) + 43)) {
                    case 43:
                        vMeth(by2, Test.iFld, i3);
                    case 44:
                        i1 = 1;
                        i17 = 3;
                        while ((i17 -= 2) > 0) {
                            i1 += i17;
                            i1 += (int)f1;
                            if (true) {
                                if (Test.bFld) {
                                    Test.instanceCount += (((i17 * Test.instanceCount) + i1) - Test.instanceCount);
                                    i <<= 8;
                                    try {
                                        iArrFld[i17 + 1] = (253 % Test.iFld);
                                        i1 = (-35259 % i3);
                                        i = (i3 % Test.iFld);
                                    } catch (ArithmeticException a_e) {}
                                }
                                i3 ^= i3;
                                if (Test.bFld) {
                                    i1 -= (int)2.33336;
                                    Test.sFld += (short)(i17 * i17);
                                    Test.iFld += (i17 | Test.instanceCount);
                                    Test.sFld = by2;
                                }
                            } else if (Test.bFld) {
                                i += i17;
                                Test.iFld = i3;
                                by2 += (byte)-102;
                                Test.iArrFld1[i17 - 1] -= i17;
                            }
                            by2 += (byte)i1;
                            Test.iFld *= -1;
                            i1 = i2;
                            Test.instanceCount += Test.instanceCount;
                            i1 = -5955;
                        }
                        break;
                    case 45:
                        Test.iFld += (((i2 * i1) + i2) - Test.sFld);
                        break;
                    case 46:
                        Test.iArrFld1[i2] -= (int)-1735278134649251185L;
                        break;
                    case 47:
                        Test.instanceCount |= Test.iFld;
                        break;
                    case 48:
                        iArrFld = iArrFld;
                    case 49:
                        iArrFld = iArrFld;
                        break;
                    default:
                        Test.instanceCount *= Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f f1 = " + i + "," + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i17 = " + i17);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.sFld iArrFld Test.iArrFld1 = " + Test.sFld + "," + FuzzerUtils.checkSum(iArrFld)
            + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
