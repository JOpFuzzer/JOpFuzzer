// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=108L;
    public static volatile float fFld=87.502F;
    public static double dFld=-1.50444;
    public static boolean bFld=true;
    public static short sFld=5905;
    public static volatile byte byFld=80;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-1);
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, float f) {

        int i7=-14, i8=-4711, i9=-205, i10=-32497, i11=-142, iArr2[]=new int[N];
        long l1=1662055332L;
        byte by=102;

        FuzzerUtils.init(iArr2, -60470);

        i6 -= i6;
        i7 = 1;
        do {
            Test.byArrFld[i7 - 1] += (byte)Test.instanceCount;
            i6 = (int)-18050L;
            if (Test.bFld) continue;
            for (i8 = 1; i8 < 6; i8 += 2) {
                i9 = (int)f;
                Test.instanceCount -= 32285;
                i6 += (29814 + (i8 * i8));
            }
            i6 >>= (int)Test.instanceCount;
            for (i10 = 1; i10 < 6; ++i10) {
                i11 += i8;
                l1 += (i10 + i8);
                Test.bFld = Test.bFld;
                iArr2[i10 + 1] |= by;
            }
        } while (++i7 < 290);
        vMeth1_check_sum += i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + l1 + by +
            FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth(int i3) {

        int i4=10, i5=-2, i12=48205, i13=141, i14=2936, i15=22570, i16=0, iArr1[]=new int[N];
        float fArr[]=new float[N], fArr1[]=new float[N];

        FuzzerUtils.init(iArr1, -6);
        FuzzerUtils.init(fArr, 2.977F);
        FuzzerUtils.init(fArr1, -1.261F);

        i3 += (int)617418431L;
        for (i4 = 346; i4 > 6; i4 -= 2) {
            iArr1[i4 - 1] = (int)fArr[i4];
            vMeth1(i5, Test.fFld);
            i5 += i4;
            for (i12 = 1; i12 < 9; ++i12) {
                if (i13 != 0) {
                }
                Test.instanceCount *= i4;
            }
        }
        i13 *= (int)Test.instanceCount;
        fArr1[(i13 >>> 1) % N] += -9;
        i3 += -14;
        i14 = 1;
        do {
            for (i15 = 1; i15 < 7; ++i15) {
                i16 <<= (int)Test.instanceCount;
                Test.instanceCount -= i5;
            }
        } while (++i14 < 242);
        long meth_res = i3 + i4 + i5 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, long l) {

        int i1=8, i2=197, i17=-4, i18=12, i19=-58341, i20=34231, iArr[]=new int[N];
        short s=31011;
        byte by1=-10;

        FuzzerUtils.init(iArr, -1);

        i *= (int)Test.fFld;
        for (i1 = 2; 324 > i1; ++i1) {
            iArr[i1] -= i1;
            Test.dFld = lMeth(i2);
            s = (short)i;
            for (i17 = i1; i17 < 5; i17 += 3) {
                by1 = (byte)i2;
            }
            i2 = i2;
            i2 >>= i2;
        }
        Test.fFld /= ((long)(Test.fFld) | 1);
        Test.instanceCount *= i1;
        for (i19 = 8; i19 < 237; i19++) {
            if (Test.bFld) {
                Test.fFld = i20;
            }
            i += i19;
        }
        vMeth_check_sum += i + l + i1 + i2 + s + i17 + i18 + by1 + i19 + i20 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=121, i22=-64, i23=3295, i24=-10, i25=-14795;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 11L);

        vMeth(-100, Test.instanceCount);
        Test.iArrFld[(159 >>> 1) % N] <<= 3;
        i21 = 1;
        while (++i21 < 219) {
            for (i22 = 5; i22 < 115; i22++) {
                i23 = i23;
                for (i24 = 1; i24 < 2; i24 += 2) {
                    lArr[i21 - 1] = i22;
                    i23 += (i24 * i24);
                    i23 = (int)Test.instanceCount;
                    Test.instanceCount += (17961 + (i24 * i24));
                    switch (((i22 % 7) * 5) + 52) {
                    case 76:
                        i25 = i23;
                        break;
                    case 82:
                        i25 += (((i24 * i25) + Test.instanceCount) - Test.instanceCount);
                        i25 -= (int)Test.dFld;
                    case 65:
                        Test.instanceCount -= i24;
                        break;
                    case 80:
                        i25 += (((i24 * Test.instanceCount) + i24) - i21);
                        break;
                    case 72:
                        Test.instanceCount = i21;
                        Test.instanceCount <<= i24;
                        break;
                    case 81:
                    case 60:
                        switch (((i21 % 4) * 5) + 22) {
                        case 27:
                            i25 <<= (int)Test.instanceCount;
                            i23 = (int)-2.977F;
                            i25 ^= i24;
                            break;
                        case 25:
                            i23 += Test.sFld;
                            Test.instanceCount += i22;
                        case 29:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 33:
                            i25 = Test.byFld;
                            Test.fFld += (i24 * i24);
                            if (Test.bFld) break;
                            i25 += i24;
                        }
                        Test.instanceCount += Test.instanceCount;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 lArr = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.sFld Test.byFld = " + (Test.bFld ? 1 : 0) + "," + Test.sFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.byArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
