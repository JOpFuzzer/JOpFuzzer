// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-37209L;
    public static int iFld=2597;
    public static float fFld=-1.956F;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 7);
        FuzzerUtils.init(Test.fArrFld, 0.576F);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        long l1=7458890552029828291L, lArr[]=new long[N];
        int i6=2, i7=-1, i8=-70, i9=-8, i10=25603, i11=158;
        short s=11420;
        float f=-127.609F;
        double d=2.96383;
        boolean b=false;

        FuzzerUtils.init(lArr, -6575L);

        Test.iFld = (int)-24699L;
        if (b) {
            for (l1 = 1; l1 < 175; ++l1) {
                Test.fFld -= -7;
                lArr[(int)(l1 - 1)] = -13;
                for (i7 = 1; i7 < 9; i7++) {
                    lArr[(int)(l1)] += i7;
                    Test.instanceCount += (((i7 * Test.fFld) + i8) - i7);
                    i6 *= s;
                }
                Test.iArrFld[(int)(l1 + 1)] = i6;
                for (i9 = 1; i9 < 9; i9++) {
                    Test.iArrFld[(int)(l1)] >>= 190;
                    for (f = 1; 2 > f; f++) {
                        i8 = i9;
                        Test.fFld *= -65.37F;
                    }
                }
            }
        } else if (b) {
            d %= -1;
        } else if (b) {
            lArr[(i11 >>> 1) % N] >>= Test.instanceCount;
        }
        long meth_res = l1 + i6 + i7 + i8 + s + i9 + i10 + Float.floatToIntBits(f) + i11 + Double.doubleToLongBits(d) +
            (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth(int i4, long l, int i5) {

        double d1=-1.54822, d2=-2.101781;
        int i12=5857, i13=25640, i14=-3, i15=2;
        boolean b1=false, bArr[]=new boolean[N];
        float f1=56.91F;
        byte by=40;

        FuzzerUtils.init(bArr, false);

        Test.iArrFld[(i5 >>> 1) % N] -= (-iMeth());
        for (d1 = 17; d1 < 306; ++d1) {
            i13 = 1;
            do {
                b1 = b1;
                Test.instanceCount -= -349255843L;
                for (i14 = 1; 1 > i14; ++i14) {
                    i5 -= i12;
                    f1 *= i12;
                    switch (((i5 >>> 1) % 2) + 95) {
                    case 95:
                        l += i5;
                        bArr[i14] = b1;
                        if (b1) break;
                    case 96:
                        d2 += Test.iFld;
                        by = (byte)6697353884796121408L;
                        i5 = (int)l;
                        break;
                    default:
                        Test.iArrFld[(int)(d1 - 1)] += i15;
                    }
                }
            } while (++i13 < 6);
        }
        long meth_res = i4 + l + i5 + Double.doubleToLongBits(d1) + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + by + FuzzerUtils.checkSum(bArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        int i3=-40257, i16=-46272, i17=-10, i18=-14;
        double d3=0.39818;
        boolean b2=false;
        byte by1=127;

        i3 = 1;
        do {
            byMeth(-8200, Test.instanceCount, i3);
            i16 = 1;
            do {
                d3 *= Test.fFld;
                Test.iArrFld[i16 - 1] += i3;
                if (false) continue;
                if (b2) continue;
                for (i17 = 1; i17 > 1; i17 -= 2) {
                    Test.iFld = i3;
                    i2 += (int)161L;
                    b2 = b2;
                    if (b2) {
                        by1 += (byte)49.309F;
                        Test.fArrFld = FuzzerUtils.float1array(N, (float)1.362F);
                        i18 >>= 60800;
                        vMeth_check_sum += i1 + i2 + i3 + i16 + Double.doubleToLongBits(d3) + (b2 ? 1 : 0) + i17 + i18
                            + by1;
                        return;
                    }
                }
            } while (++i16 < 11);
        } while (++i3 < 146);
        vMeth_check_sum += i1 + i2 + i3 + i16 + Double.doubleToLongBits(d3) + (b2 ? 1 : 0) + i17 + i18 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i=-10397, i19=-49329, i20=64204, i21=154, i22=63791, i23=52440, i24=-51965, i25=53585, i26=10, i27=-7854;
        double d4=74.109406, d5=-40.118936, dArr[]=new double[N];
        float f3=126.662F;

        FuzzerUtils.init(dArr, 2.102219);

        i = 1;
        do {
            vMeth(Test.iFld, -11651);
            for (i19 = 3; i19 < 72; i19++) {
                i20 += i19;
                Test.instanceCount += (10136 + (i19 * i19));
                i21 = 2;
                do {
                    i20 += i20;
                    d4 = Test.instanceCount;
                    Test.iFld -= (int)1.948F;
                } while ((i21 -= 2) > 0);
                dArr[i19 - 1] = Test.instanceCount;
                Test.iFld += i21;
            }
            Test.iFld = i22;
        } while (++i < 349);
        i20 *= i21;
        for (float f2 : Test.fArrFld) {
            Test.iArrFld = Test.iArrFld;
        }
        i22 >>= (int)Test.instanceCount;
        for (i23 = 3; i23 < 122; ++i23) {
            for (f3 = i23; 211 > f3; ++f3) {
                switch ((((i20 >>> 1) % 3) * 5) + 70) {
                case 77:
                    i24 += (int)(f3 * i22);
                    switch ((i23 % 2) + 69) {
                    case 69:
                        if (true) {
                            d5 = 1;
                            while (++d5 < 1) {
                                Test.instanceCount = -102;
                            }
                            i22 = -47415;
                            i25 %= (int)(i | 1);
                        }
                        for (i26 = 1; i26 < 1; ++i26) {
                            byte by2=-48;
                            i22 *= i25;
                            lArrFld[(int)(f3 - 1)] >>>= i27;
                            lArrFld[(int)(f3)] = by2;
                        }
                        break;
                    case 70:
                        try {
                            Test.iFld = (i24 / Test.iFld);
                            i20 = (i26 % i);
                            i27 = (i19 / -56679);
                        } catch (ArithmeticException a_e) {}
                        break;
                    }
                    break;
                case 83:
                    Test.iFld += (int)Test.instanceCount;
                    break;
                case 78:
                    Test.instanceCount += (long)f3;
                    break;
                default:
                    i22 *= i20;
                }
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d4 i22 = " + i21 + "," + Double.doubleToLongBits(d4) + "," + i22);
        FuzzerUtils.out.println("i23 i24 f3 = " + i23 + "," + i24 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i25 d5 i26 = " + i25 + "," + Double.doubleToLongBits(d5) + "," + i26);
        FuzzerUtils.out.println("i27 dArr = " + i27 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
