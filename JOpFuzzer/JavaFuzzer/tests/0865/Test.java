// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=88L;
    public static byte byArrFld[]=new byte[N];
    public static long lArrFld[]=new long[N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-62);
        FuzzerUtils.init(Test.lArrFld, -82L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=27703, i5=33861, i6=-12, i7=-168, i8=187, i9=-60185, iArr1[]=new int[N];
        double d=-126.126500;
        boolean b1=false;
        float f=-1.647F, fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -44);
        FuzzerUtils.init(fArr, 0.239F);

        Test.instanceCount >>= i4;
        for (d = 9; 333 > d; ++d) {
            for (i6 = 1; i6 < 5; i6++) {
                iArr1[(int)(d)] >>>= i7;
                Test.byArrFld[(int)(d - 1)] >>= (byte)-54117L;
            }
            i8 = 1;
            while (++i8 < 5) {
                if (b1) continue;
                i7 += (((i8 * f) + i7) - Test.instanceCount);
                fArr[(int)(d)] += 22210;
                Test.instanceCount |= -4;
                Test.lArrFld[(int)(d)] *= Test.instanceCount;
                if (b1) {
                    i4 += (((i8 * i6) + i9) - i5);
                    iArr1[i8 + 1] = i5;
                    Test.instanceCount += i8;
                } else {
                    i7 += (int)Test.instanceCount;
                    vMeth1_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) +
                        Float.floatToIntBits(f) + i9 + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
        }
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f) + i9 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i3=76, i10=19, i11=-122;
        boolean b=true, bArr[]=new boolean[N];
        short s=-4332;
        byte by1=123;

        FuzzerUtils.init(bArr, true);

        bArr[(i3 >>> 1) % N] = (b = b);
        vMeth1();
        s >>= (short)Test.instanceCount;
        for (i10 = 5; i10 < 134; ++i10) {
            Test.lArrFld[i10 + 1] >>= i3;
            by1 = (byte)i10;
            Test.instanceCount += i3;
        }
        long meth_res = i3 + (b ? 1 : 0) + s + i10 + i11 + by1 + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, int i2, byte by) {

        long l=9L;
        boolean b2=false;
        float f1=-55.964F;
        int i12=-29326, i13=196, i14=-138, i15=27965, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -5490);

        l = 326;
        do {
            iArr[(int)(l - 1)] *= iMeth();
            i1 >>= i2;
            switch ((int)(((l % 2) * 5) + 101)) {
            case 105:
                b2 = b2;
                break;
            case 104:
                f1 += (l - i1);
                for (i12 = 1; i12 < 10; ++i12) {
                    i13 = i2;
                    switch (((i2 >>> 1) % 1) + 76) {
                    case 76:
                        for (i14 = 2; 1 < i14; i14--) {
                            i1 -= (int)Test.instanceCount;
                            i1 += (int)(-1.237F + (i14 * i14));
                            Test.instanceCount *= (long)-2.1007F;
                            Test.instanceCount ^= l;
                        }
                        i2 ^= i13;
                        break;
                    default:
                        Test.lArrFld[(int)(l - 1)] = 203;
                    }
                }
            default:
                i13 += (int)l;
            }
        } while ((l -= 2) > 0);
        vMeth_check_sum += i1 + i2 + by + l + (b2 ? 1 : 0) + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=5, i16=7, i17=-8, i18=-148, i19=34, i20=4604, i21=5, i22=6565, i23=13, iArr2[]=new int[N];
        byte by2=110;
        float f2=61.979F, fArr1[]=new float[N];
        boolean b3=false;

        FuzzerUtils.init(fArr1, 63.1014F);
        FuzzerUtils.init(iArr2, -3203);

        if (b3) {
            i += i;
        } else if (true) {
            vMeth(0, i, by2);
        } else if (b3) {
            f2 *= i;
            i16 = 1;
            do {
                fArr1[i16 + 1] *= -147;
                i >>= i;
            } while (++i16 < 194);
            Test.instanceCount &= i16;
        }
        i17 = 1;
        while ((i17 += 3) < 311) {
            i &= i17;
            switch ((i17 % 4) + 18) {
            case 18:
                i = i;
                for (i18 = 243; 3 < i18; --i18) {
                    i *= i19;
                    for (i20 = i17; i20 < 2; ++i20) {
                        i21 <<= i19;
                        f2 = i18;
                        i += i18;
                        iArr2[i20] *= by2;
                        Test.instanceCount <<= 32019;
                    }
                }
                i += (i17 * Test.instanceCount);
                iArr2 = iArr2;
                break;
            case 19:
                i21 = i;
                break;
            case 20:
            case 21:
                fArr1[i17 - 1] -= i19;
                for (i22 = 243; i22 > i17; --i22) {
                    i -= (int)Test.instanceCount;
                }
                i21 = 10;
            }
            i21 = (int)-62.55F;
            i += i18;
            i21 >>>= i;
        }

        FuzzerUtils.out.println("i by2 f2 = " + i + "," + by2 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i16 b3 i17 = " + i16 + "," + (b3 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("fArr1 iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.byArrFld Test.lArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
