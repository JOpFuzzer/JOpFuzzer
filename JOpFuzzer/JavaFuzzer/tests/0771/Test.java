// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1882873733L;
    public int iFld=54450;
    public static byte byFld=-63;
    public static int iFld1=-55528;
    public int iArrFld[][]=new int[N][N];
    public static int iArrFld1[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 52527);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth(long l, long l1) {

        double d1=2.104308;
        int i5=88;

        d1 *= (--i5);
        long meth_res = l + l1 + Double.doubleToLongBits(d1) + i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i8, int i9) {

        int i10=158, i11=117, i12=-9, i13=19345, i14=214, i15=-14, i16=-5;
        double d2=-7.115634;
        float f2=-2.992F;
        boolean b=false;
        short s=28994;

        for (i10 = 9; i10 < 164; i10++) {
            i11 -= i10;
            d2 = Test.instanceCount;
            Test.iArrFld1[i10 - 1] = i11;
            if (false) {
                f2 -= Test.byFld;
            } else {
                switch (((i10 % 10) * 5) + 17) {
                case 60:
                    i8 += (i10 ^ i9);
                    if (b) break;
                    i12 = 10;
                    do {
                        Test.instanceCount += i10;
                    } while (--i12 > 0);
                case 52:
                    for (i13 = i10; i13 < 10; i13++) {
                        for (i15 = 1; i15 < 1; i15 += 2) {
                            i8 -= i14;
                            Test.iArrFld1[i10 + 1] >>= i8;
                        }
                    }
                    break;
                case 58:
                    b = b;
                    break;
                case 28:
                    f2 = f2;
                    break;
                case 45:
                case 57:
                    Test.iArrFld1[i10 - 1] -= (int)Test.instanceCount;
                case 59:
                    i14 += (int)Test.instanceCount;
                case 33:
                case 43:
                    s >>= (short)i11;
                    break;
                case 27:
                default:
                    i8 = (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + (b ? 1 : 0) +
            i12 + i13 + i14 + i15 + i16 + s;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i6, int i7) {

        byte by=25;
        short s1=6893;
        int i17=-77, i18=-12, i19=-9607, i20=152, i21=13;
        float f3=-14.974F;
        long l2=-124L;
        double d3=1.90932;

        by = (byte)iMeth1(i6, i6);
        Test.instanceCount >>= i6;
        s1 = (short)i6;
        i17 = 1;
        while (++i17 < 141) {
            for (i18 = 1; i18 < 11; i18++) {
                switch (((-17 >>> 1) % 6) + 42) {
                case 42:
                    for (i20 = i18; i20 < 2; ++i20) {
                        f3 += Test.instanceCount;
                        i21 += -152;
                        i19 = i6;
                        l2 -= i17;
                        Test.instanceCount += -47524;
                        i7 -= i19;
                        i19 >>>= Test.byFld;
                        i19 += i19;
                    }
                    break;
                case 43:
                    Test.iFld1 += i18;
                    break;
                case 44:
                    i7 = i7;
                    break;
                case 45:
                    Test.instanceCount -= -129;
                    break;
                case 46:
                    i7 *= (int)f3;
                    break;
                case 47:
                    Test.iFld1 = (int)d3;
                    break;
                }
            }
        }
        long meth_res = i6 + i7 + by + s1 + i17 + i18 + i19 + i20 + i21 + Float.floatToIntBits(f3) + l2 +
            Double.doubleToLongBits(d3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vSmallMeth(int i3, int i4, float f1) {


        f1 *= iMeth(lMeth(-92, i3), Test.instanceCount);
        vSmallMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-142, i2=8986, i22=-12, i23=-64, i24=32, i25=-141;
        double d=0.95048, d4=2.54728;
        float f=67.690F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 4046304472L);

        i = (int)((Test.instanceCount + (iFld * d)) + lArr[(iFld >>> 1) % N][(iFld >>> 1) % N]);
        for (i1 = 4; i1 < 200; i1++) {
            iFld -= (iArrFld[i1][i1 - 1] + (++iFld));
            Test.instanceCount += (((i1 * i2) + i) - f);
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth(i, i, f);
            f -= Test.iFld1;
        }
        i = i;
        i += (int)d;
        d4 = 1;
        while (++d4 < 302) {
            lArr[(int)(d4 - 1)][(int)(d4)] -= Test.iFld1;
            i22 = 1;
            while (++i22 < 83) {
                i += (((i22 * Test.byFld) + i2) - Test.iFld1);
                i23 = 1;
                while (++i23 < 1) {
                    iFld = (int)d;
                    Test.iArrFld1[i23 - 1] = (int)Test.instanceCount;
                    Test.iFld1 = i1;
                    dArrFld = dArrFld;
                    Test.iFld1 = i23;
                    iFld = i23;
                }
                Test.instanceCount += (i22 * i22);
                for (i24 = 1; i24 > 1; --i24) {
                    d = Test.instanceCount;
                    Test.iFld1 >>= 113;
                    iArrFld[i22][i24] = i25;
                    i = (int)Test.instanceCount;
                    f = 71;
                    Test.instanceCount ^= 247;
                    Test.iFld1 -= (int)f;
                }
                dArrFld[i22] -= i23;
                f *= i;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 f d4 = " + i2 + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 lArr = " + i25 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.byFld = " + Test.instanceCount + "," + iFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.iFld1 iArrFld Test.iArrFld1 = " + Test.iFld1 + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  iMeth1 ->  iMeth1 lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
