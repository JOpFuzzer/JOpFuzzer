// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1566121060229318509L;
    public static double dFld=-1.69630;
    public static short sFld=7111;
    public byte byFld=47;
    public static volatile float fFld=0.231F;
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=-39398, i3=47, i4=-31545, i5=-1, i6=-9, i7=-19158, iArr[]=new int[N];
        boolean b=false;
        byte by=124;

        FuzzerUtils.init(iArr, 119);

        Test.bArrFld[(i2 >>> 1) % N] = b;
        i3 = 1;
        do {
            if (b) {
                iArr = iArr;
                Test.instanceCount -= (long)Test.dFld;
            } else {
                i2 += (int)1.591F;
            }
            i2 = i2;
            i2 += i3;
            iArr = iArr;
            for (i4 = 1; i4 < 5; i4++) {
                for (i6 = 1; i6 < 2; i6++) {
                    if (b) continue;
                    i7 = 11;
                    by += (byte)Test.sFld;
                    Test.instanceCount *= -88;
                }
            }
        } while (++i3 < 349);
        vMeth1_check_sum += i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + i7 + by + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, int i1) {

        float f=2.463F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.214F);

        i = (int)(((i1 += i) - (-(--Test.dFld))) - ((54 - (i1 + Test.instanceCount)) + (Test.instanceCount - i1)));
        Test.dFld += (((Test.instanceCount >> i) - (i1 * -30.65091)) * (Math.abs(i1) + (65.755F - (-55961 - (--f)))));
        vMeth1();
        fArr[(i1 >>> 1) % N] -= 1;
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth() {

        int i8=-50409;

        vMeth(i8, -160);
        vSmallMeth_check_sum += i8;
    }

    public void mainTest(String[] strArr1) {

        int i9=-2, i10=-3, i11=36, i12=-100, i13=-46381, i15=10, i16=-52007, i17=-14, i18=9, iArr1[]=new int[N];
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2155272403016978246L);
        FuzzerUtils.init(iArr1, -435);

        for (int smallinvoc=0; smallinvoc<517; smallinvoc++) vSmallMeth();
        for (i9 = 15; i9 < 256; i9++) {
            if (b1) break;
            i10 = byFld;
            Test.fFld -= i10;
            i10 = (int)Test.instanceCount;
        }
        byFld &= (byte)-42855;
        i11 = 1;
        while (++i11 < 350) {
            lArr[i11] = i9;
            i10 = i9;
            Test.fFld += (((i11 * i11) + i11) - Test.fFld);
            iArr1[i11 - 1] += (int)Test.instanceCount;
            byFld += (byte)i11;
            i10 = i9;
            i10 += (int)Test.dFld;
            for (i12 = i11; i12 < 72; i12++) {
                i13 *= i13;
                i13 = i13;
                if (true) {
                    switch ((i11 % 1) + 98) {
                    case 98:
                        Test.instanceCount += (long)Test.fFld;
                        break;
                    }
                } else {
                    iArr1[i12] = (int)Test.instanceCount;
                }
            }
            iArr1[i11] = i12;
        }
        for (int i14 : iArr1) {
            i13 = 7;
            i14 <<= (int)Test.instanceCount;
            for (i15 = 2; i15 < 63; i15++) {
                for (i17 = 1; i17 < 2; ++i17) {
                    iArr1[i17 - 1] >>>= i17;
                    i14 = -224;
                }
            }
        }

        FuzzerUtils.out.println("i9 i10 b1 = " + i9 + "," + i10 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 lArr iArr1 = " + i18 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("byFld Test.fFld Test.bArrFld = " + byFld + "," + Float.floatToIntBits(Test.fFld) + ","
            + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
