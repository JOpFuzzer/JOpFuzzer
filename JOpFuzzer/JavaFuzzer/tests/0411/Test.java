// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1320052646280152790L;
    public static int iFld=9;
    public static double dFld=1.95807;
    public static byte byFld=17;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2537);
        FuzzerUtils.init(Test.byArrFld, (byte)-97);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l) {

        int i1=182, i2=37, i3=9;
        short s1=14307, sArr[]=new short[N];
        float f=-110.837F;

        FuzzerUtils.init(sArr, (short)17272);

        try {
            sArr[(Test.iFld >>> 1) % N] = (short)60686;
            Test.iFld %= (int)((long)(Test.dFld) | 1);
            for (i1 = 1; i1 < 375; ++i1) {
                i2 += (((i1 * l) + Test.instanceCount) - s1);
                Test.iArrFld[i1 - 1] *= i2;
                Test.byArrFld[i1 + 1] &= (byte)i1;
                Test.iArrFld[i1] += (int)4033711665L;
                i2 *= (int)-3791425191L;
                Test.iFld = Test.iFld;
                i3 = 1;
                do {
                    i2 >>>= (int)l;
                    i2 -= (int)f;
                    Test.iFld *= (int)f;
                    Test.iFld *= (int)Test.instanceCount;
                } while (++i3 < 5);
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test.iFld = i1;
        }
        vMeth_check_sum += l + i1 + i2 + s1 + i3 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth1(int i) {

        float f1=-91.771F, f2=2.250F, fArr[][]=new float[N][N];
        int i4=-7, i5=12, i6=-62142, i7=-53792;
        double d=0.60279;
        boolean b=false;
        short s2=-24962;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 114.244F);
        FuzzerUtils.init(lArr, 10L);

        vMeth(Test.instanceCount);
        Test.iFld += (int)Test.instanceCount;
        Test.instanceCount -= Test.iFld;
        for (f1 = 23; f1 < 368; ++f1) {
            for (d = 5; d > 1; d -= 2) {
                if (b) {
                    Test.iArrFld[(int)(f1)] = -101;
                    fArr[(int)(f1)][(int)(d)] -= i;
                    lArr[(int)(f1)] %= ((long)(f1) | 1);
                }
                for (i6 = 1; i6 < 3; i6++) {
                    Test.iArrFld[(int)(d)] = 0;
                    i4 = i6;
                }
            }
            Test.instanceCount += (long)(((f1 * i7) + s2) - Test.byFld);
            i4 += 58502;
            f2 += Test.instanceCount;
        }
        long meth_res = i + Float.floatToIntBits(f1) + i4 + Double.doubleToLongBits(d) + i5 + (b ? 1 : 0) + i6 + i7 +
            s2 + Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        short s=-1822;
        int i8=-27846, i9=0, i10=-1031, i11=0, i12=4, i13=8;
        boolean b1=true;

        Test.iFld -= ((--s) * iMeth1(Test.iFld));
        Test.instanceCount = Test.instanceCount;
        for (i8 = 1; i8 < 210; i8++) {
            if (b1) break;
            for (i10 = 8; i10 > 1; i10 -= 3) {
                for (i12 = 1; i12 < 4; i12++) {
                    i9 += (int)(-3408234388L + (i12 * i12));
                    Test.iFld *= Test.iFld;
                    i11 += -59931;
                    i11 = i11;
                    i13 >>>= i9;
                    i13 += i12;
                    b1 = false;
                    Test.instanceCount = (long)Test.dFld;
                }
                i9 += i10;
            }
        }
        long meth_res = s + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {


        Test.instanceCount = iMeth();


        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.iArrFld Test.byArrFld = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
