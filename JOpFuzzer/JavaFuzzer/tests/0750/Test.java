// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=56483L;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -80);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i5=-7, i6=-230, i7=-204, i8=-6, iArr1[]=new int[N];
        float f2=105.85F;
        short s=-29617;
        boolean b=false;

        FuzzerUtils.init(iArr1, 4);

        i5 *= (int)Test.instanceCount;
        f2 -= i5;
        i5 = (int)3093419062L;
        i6 = 210;
        do {
            iArr1[i6] -= (int)Test.instanceCount;
            try {
                i5 = (i6 % i6);
                i5 = (-96 % iArr1[i6]);
                i5 = (i6 / i6);
            } catch (ArithmeticException a_e) {}
            s += (short)(i6 * i6);
            for (i7 = 1; i7 < 8; ++i7) {
                i8 += i7;
                switch ((i7 % 9) + 104) {
                case 104:
                    i5 -= s;
                    i5 -= 12;
                    iArr1[i7 + 1] *= (int)Test.instanceCount;
                    i8 >>= (int)Test.instanceCount;
                    break;
                case 105:
                    Test.instanceCount = i6;
                    break;
                case 106:
                    i5 = s;
                case 107:
                    Test.instanceCount -= -202;
                    break;
                case 108:
                    s = (short)Test.instanceCount;
                    break;
                case 109:
                    i5 += i7;
                    break;
                case 110:
                    b = true;
                    break;
                case 111:
                    i5 = -14;
                case 112:
                    i5 += (int)f2;
                    break;
                }
            }
        } while (--i6 > 0);
        long meth_res = i5 + Float.floatToIntBits(f2) + i6 + s + i7 + i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f1, long l1) {

        int i2=1973, i3=-187, i4=43120, i9=59969, i10=142, iArr2[]=new int[N];
        short s1=3995;

        FuzzerUtils.init(iArr2, 175);

        i2 = 1;
        while (++i2 < 301) {
            for (i3 = 1; i3 < 5; i3++) {
                i4 += iMeth1();
                i4 *= s1;
                i4 -= (int)f1;
                i4 -= i3;
                if (Test.bFld) {
                    iArr2[(71 >>> 1) % N] = i4;
                    Test.instanceCount += l1;
                    Test.bFld = Test.bFld;
                } else {
                    for (i9 = 1; i9 < 2; i9++) {
                        Test.instanceCount <<= Test.instanceCount;
                        l1 += (long)(-2.286F + (i9 * i9));
                        try {
                            i4 = (iArr2[i2 - 1] / i2);
                            i10 = (iArr2[i3 - 1] % i10);
                            i10 = (142 / iArr2[i9 + 1]);
                        } catch (ArithmeticException a_e) {}
                        iArr2[i2] = -21271;
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + l1 + i2 + i3 + i4 + s1 + i9 + i10 + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(float f, long l, int i1) {

        int i11=22646, i12=25252, i13=20548, iArr[]=new int[N];
        double d1=-1.29972;
        short s2=9341;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(fArr, 125.879F);

        l = iArr[(i1 >>> 1) % N];
        vMeth(f, Test.instanceCount);
        i1 <<= (int)Test.instanceCount;
        i11 = 1;
        while (++i11 < 280) {
            for (i12 = 1; i12 < 6; ++i12) {
                d1 = 1;
                do {
                    l = (long)d1;
                    s2 >>= (short)i1;
                    i1 = i13;
                    i13 -= (int)l;
                    i13 += i1;
                    fArr[(int)(d1 + 1)] *= i12;
                } while (++d1 < 2);
                Test.bFld = true;
                i13 *= i12;
            }
            i1 <<= i1;
        }
        long meth_res = Float.floatToIntBits(f) + l + i1 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + s2 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=72;
        int i=2, i14=10, i15=-59831, i16=-14, i17=1, i18=56206;
        double d=0.27956;
        float f3=1.317F;
        short s3=-6405;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);

        by += (byte)(((i = by) * (i - d)) * iMeth(f3, Test.instanceCount, i));
        i14 = 1;
        while (++i14 < 293) {
            i += (((i14 * Test.instanceCount) + i14) - i);
            Test.instanceCount = -149L;
            i += i14;
            Test.instanceCount -= Test.instanceCount;
            for (i15 = 3; i15 < 86; ++i15) {
                i16 += -52250;
                switch ((i14 % 1) + 108) {
                case 108:
                }
                s3 ^= (short)230;
                i16 += i15;
                if (Test.bFld) continue;
                f3 *= s3;
                i16 += (i15 - Test.instanceCount);
                lArr[i14 + 1] -= 101;
            }
            for (i17 = 86; i17 > i14; i17 -= 2) {
                Test.instanceCount ^= by;
                i += (i17 * i16);
                Test.bFld = true;
                switch ((i14 % 2) + 36) {
                case 36:
                case 37:
                    lArr[i14] = 30764;
                    if (Test.bFld) {
                        i18 += i17;
                        switch ((((i >>> 1) % 1) * 5) + 116) {
                        case 120:
                            Test.iArrFld[i14 - 1] = i17;
                            i16 += -69;
                            break;
                        }
                        i16 += (31111 + (i17 * i17));
                        lArr = lArr;
                    } else {
                        i18 *= i16;
                        i = (int)d;
                    }
                    break;
                }
            }
        }

        FuzzerUtils.out.println("by i d = " + by + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("f3 i14 i15 = " + Float.floatToIntBits(f3) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 s3 i17 = " + i16 + "," + s3 + "," + i17);
        FuzzerUtils.out.println("i18 lArr = " + i18 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
