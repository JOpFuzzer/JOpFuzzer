// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=31962L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -242);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i9=65, i10=9, i11=2, i12=25366, i13=148, i14=-8, i15=15, i16=10;
        float f=76.479F;

        for (i9 = 273; i9 > 15; i9 -= 3) {
            Test.instanceCount += (long)1.119252;
        }
        i10 += 38710;
        for (i11 = 7; 193 > i11; i11 += 2) {
            Test.instanceCount *= i12;
            Test.instanceCount += i12;
            for (i13 = 1; i13 < 17; i13++) {
                Test.iArrFld[i13 + 1] = (int)Test.instanceCount;
                for (i15 = i11; i15 < 2; i15++) {
                    i14 += (((i15 * i15) + i12) - i10);
                    i10 &= i11;
                    i14 += i14;
                }
                Test.iArrFld[i11 + 1] /= (int)(i15 | 1);
                f -= f;
                f += f;
            }
        }
        vMeth1_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f);
    }

    public static void vMeth(int i5, int i6) {

        int i7=-3, i8=207, i17=30276, i18=-10, i19=-13;
        double d=0.102643;
        float f1=-1.55F;

        for (i7 = 6; 275 > i7; ++i7) {
            boolean b=false;
            vMeth1();
            switch ((i7 % 2) + 59) {
            case 59:
                if (b) {
                    Test.iArrFld[i7 - 1] = i6;
                    if (true) continue;
                }
                i6 >>>= i8;
                break;
            case 60:
                Test.iArrFld[i7 - 1] = i7;
                break;
            }
            for (i17 = 1; i17 < 6; ++i17) {
                i18 = i7;
                i18 = i6;
                i6 += (int)d;
                i19 = 2;
                while (--i19 > 0) {
                    f1 += (i19 - i5);
                    f1 += i19;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i17 + i18 + Double.doubleToLongBits(d) + i19 + Float.floatToIntBits(f1);
    }

    public static void vSmallMeth(int i4) {


        Test.iArrFld[(i4 >>> 1) % N] *= (++i4);
        vMeth(i4, i4);
        vSmallMeth_check_sum += i4;
    }

    public void mainTest(String[] strArr1) {

        int i=14824, i1=108, i2=13, i3=12, i20=-43293, i21=-97;
        short s=18502;
        double d1=-44.37003;
        byte by=-64;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i = 15; i < 246; ++i) {
            for (i2 = 3; i2 < 109; ++i2) {
                i3 += i2;
                for (int smallinvoc=0; smallinvoc<1; smallinvoc++) vSmallMeth(i2);
                s |= (short)i;
                s += (short)(i2 * i2);
            }
        }
        for (i20 = 17; i20 < 284; ++i20) {
            i3 = (int)d1;
            bArr = bArr;
            Test.iArrFld[i20 + 1] <<= i20;
        }
        by += (byte)i1;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 s i20 = " + i3 + "," + s + "," + i20);
        FuzzerUtils.out.println("i21 d1 by = " + i21 + "," + Double.doubleToLongBits(d1) + "," + by);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
