// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-241L;
    public static float fFld=1.421F;
    public static byte byFld=59;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 21);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, float f1) {

        float f2=119.577F;
        int i4=4, i5=51826, i6=3, i7=4;
        boolean b=true;
        short s=10551;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -116.4167);

        f2 = 1;
        while ((f2 += 2) < 286) {
            int i3=37922;
            i3 += (int)-94.104F;
            i3 -= i3;
            dArr[(int)(f2)] = i3;
            Test.instanceCount = (long)Test.fFld;
            i3 += -54403;
        }
        for (i4 = 1; i4 < 192; ++i4) {
            b = b;
            s += (short)i4;
            Test.instanceCount = Test.instanceCount;
            i5 <<= s;
            for (i6 = 1; i6 < 8; ++i6) {
                s = (short)i5;
                Test.fFld *= Test.instanceCount;
                i7 <<= (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i4 + i5 +
            (b ? 1 : 0) + s + i6 + i7 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i2=-34825, i8=4492, i9=-92, i10=8, i11=4944, i12=39;
        double d=118.77196;

        i2 = i2;
        vMeth1(-29.263F, Test.fFld);
        i2 += i2;
        for (i8 = 11; i8 < 182; i8++) {
            switch ((i8 % 6) + 64) {
            case 64:
                i10 = 1;
                while (++i10 < 9) {
                    boolean b1=true;
                    for (i11 = 1; i11 < 1; i11++) {
                        i9 += i9;
                        Test.iArrFld = Test.iArrFld;
                        i9 >>= i11;
                        Test.instanceCount -= (long)d;
                    }
                    if (b1) continue;
                    i2 = (int)102.878F;
                    Test.iArrFld[i8 + 1] = i12;
                    i2 *= i12;
                }
            case 65:
                i2 = 5461;
                break;
            case 66:
                i2 += (i8 * i8);
                break;
            case 67:
                i12 = Test.byFld;
                break;
            case 68:
                i9 += (i8 | Test.instanceCount);
                break;
            case 69:
                i12 <<= i12;
                break;
            }
        }
        vMeth_check_sum += i2 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d);
    }

    public static long lMeth() {

        int i1=46778;

        Test.instanceCount -= (long)(-Test.fFld);
        i1 += (int)Test.fFld;
        vMeth();
        i1 ^= i1;
        Test.fFld = i1;
        long meth_res = i1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9663, i13=-1, i14=-14, i15=2, i16=-13, i17=12, i18=1, i19=0, i20=-250, i21=-50571, i22=-157, i23=-225;
        double d1=1.34662;
        boolean b2=true;
        float f3=-36.33F, fArr[]=new float[N];
        short s1=-104;

        FuzzerUtils.init(fArr, -2.959F);

        fArr[(i >>> 1) % N] += (lMeth() * i);
        i13 = 1;
        while (++i13 < 289) {
            for (d1 = 1; d1 < 87; ++d1) {
                Test.iArrFld[(int)(d1)] = (int)Test.instanceCount;
                Test.byFld <<= (byte)i13;
                Test.instanceCount += (11085L + (d1 * d1));
                Test.instanceCount -= i14;
            }
        }
        for (i15 = 12; i15 < 347; i15++) {
            if (b2) {
                for (i17 = 75; i17 > 4; --i17) {
                    for (i19 = 1; i19 < 2; i19++) {
                        if (b2) break;
                        i20 += (i19 * i19);
                        Test.instanceCount += i19;
                        Test.instanceCount += (i19 | Test.instanceCount);
                        Test.instanceCount = -56269;
                    }
                    i += (i17 * i);
                    i20 *= -60;
                }
                for (i21 = 75; i15 < i21; --i21) {
                    Test.iArrFld[i15] += i21;
                    i >>= i14;
                    i20 -= (int)-132L;
                    i18 -= i14;
                    for (f3 = 1; 1 < f3; f3 -= 3) {
                        i18 += (int)Test.instanceCount;
                        Test.iArrFld[i21 - 1] = s1;
                        i20 += (int)f3;
                        i20 += i20;
                        i23 += (int)f3;
                        i14 >>>= (int)Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i13 d1 = " + i + "," + i13 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 b2 i21 = " + i20 + "," + (b2 ? 1 : 0) + "," + i21);
        FuzzerUtils.out.println("i22 f3 i23 = " + i22 + "," + Float.floatToIntBits(f3) + "," + i23);
        FuzzerUtils.out.println("s1 fArr = " + s1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
