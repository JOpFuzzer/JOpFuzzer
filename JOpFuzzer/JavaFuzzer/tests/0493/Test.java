// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-50049L;
    public boolean bFld=true;
    public double dFld=0.90141;
    public static float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -85.294F);
        FuzzerUtils.init(Test.dArrFld, 42.99495);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i4) {

        float f1=0.25F;
        int i6=13, i7=48, i8=181, iArr[]=new int[N];
        double d=2.122129;
        short s1=17315;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 56709);
        FuzzerUtils.init(lArr, -59346L);

        switch (((i4 >>> 1) % 9) + 69) {
        case 69:
        case 70:
            f1 += 18635;
            Test.instanceCount = 40090;
            i4 += (int)f1;
            for (int i5 : iArr) {
                i4 <<= i4;
                switch ((((-986 >>> 1) % 2) * 5) + 18) {
                case 25:
                case 21:
                    for (i6 = 1; i6 < 4; i6++) {
                        d += f1;
                    }
                    if (b) {
                        i4 *= i5;
                        if (b) continue;
                    } else if (b) {
                        i8 = 1;
                        while (++i8 < 4) {
                            Test.instanceCount *= i4;
                            Test.instanceCount <<= 7;
                        }
                    } else {
                        iArr[(i6 >>> 1) % N] += i6;
                    }
                }
            }
        case 71:
            Test.fArrFld = Test.fArrFld;
        case 72:
            i4 = (int)Test.instanceCount;
            break;
        case 73:
            b = b;
        case 74:
            f1 %= (s1 | 1);
        case 75:
            lArr[(i8 >>> 1) % N] += i4;
            break;
        case 76:
            i4 -= i4;
            break;
        case 77:
            i4 = i8;
            break;
        }
        vMeth1_check_sum += (b ? 1 : 0) + i4 + Float.floatToIntBits(f1) + i6 + i7 + Double.doubleToLongBits(d) + i8 +
            s1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l2) {

        int i3=-11;
        short s=-29888;
        float f=-29.252F, fArr[]=new float[N];
        byte by=-88;
        boolean b1=true;

        FuzzerUtils.init(fArr, -87.924F);

        i3 += (int)(((s + f) * f) + (fArr[(i3 >>> 1) % N] + (by - i3)));
        vMeth1(b1, i3);
        vMeth_check_sum += l2 + i3 + s + Float.floatToIntBits(f) + by + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public double dMeth(int i2, long l, long l1) {

        int i9=47, i10=55950, i11=5410, i12=8393, i13=12, i14=54384, i15=-96, i16=-9, iArr1[]=new int[N];
        float f2=65.612F;

        FuzzerUtils.init(iArr1, 1478);

        vMeth(-3547995426L);
        for (i9 = 6; 263 > i9; i9++) {
            i10 = (int)l;
            i2 -= (int)Test.instanceCount;
            if (i10 != 0) {
            }
        }
        for (i11 = 4; 134 > i11; i11++) {
            for (i13 = 1; i13 < 12; ++i13) {
                if (i14 != 0) {
                }
                for (i15 = 1; 2 > i15; ++i15) {
                    i14 += (((i15 * i9) + Test.instanceCount) - f2);
                    iArr1[i13] -= (int)Test.instanceCount;
                    f2 += l1;
                    l += 59471L;
                    i14 = i13;
                    i10 = (int)l1;
                }
            }
        }
        long meth_res = i2 + l + l1 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-27418, i1=0, i17=-68, i18=-14332, i19=1, i20=14015, i21=61, i22=117, i23=-28867, i24=-55436, iArr2[]=new
            int[N];
        byte by1=118;
        float f3=-85.655F;
        double d1=-89.100085;

        FuzzerUtils.init(iArr2, -22197);

        for (i = 12; i < 245; ++i) {
            i1 = (int)(dMeth(i1, Test.instanceCount, 45548511L) + i1);
            for (i17 = i; i17 < 108; i17++) {
                i18 = i1;
                iArr2 = iArr2;
                i1 |= by1;
                i18 -= i1;
                f3 *= -109;
            }
        }
        for (i19 = 19; i19 < 352; i19 += 2) {
            Test.dArrFld[i19] -= -3408776191L;
            i18 = i20;
            i1 ^= (int)Test.instanceCount;
            if (bFld) continue;
            i18 -= i18;
            i1 += (i19 * i1);
            Test.instanceCount += 18780;
        }
        i18 >>= i;
        for (i21 = 5; 366 > i21; i21 += 2) {
            i20 = -13;
            i1 = (int)Test.instanceCount;
            Test.dArrFld[i21] += -45968;
        }
        Test.instanceCount = Test.instanceCount;
        for (d1 = 244; d1 > 15; d1 -= 2) {
            i23 = (int)d1;
            i24 = 1;
            while (++i24 < 220) {
                dFld = 41.1019F;
                i1 -= (int)Test.instanceCount;
                Test.instanceCount *= i17;
                Test.instanceCount >>>= -14718;
            }
            i1 += (int)Test.instanceCount;
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 by1 f3 = " + i18 + "," + by1 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d1 i23 = " + i22 + "," + Double.doubleToLongBits(d1) + "," + i23);
        FuzzerUtils.out.println("i24 iArr2 = " + i24 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount bFld dFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.fArrFld Test.dArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
