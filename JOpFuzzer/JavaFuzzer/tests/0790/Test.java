// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13956L;
    public static int iFld=41;
    public static boolean bFld=true;
    public static double dFld=126.130983;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 174);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i10=-56348, i11=-15300, i12=-136, i13=-2, i14=5, i15=52216;
        float f=0.417F;
        short s1=24475;
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        Test.iFld |= Test.iFld;
        i10 = 1;
        while ((i10 += 2) < 149) {
            Test.instanceCount >>= i10;
            switch (((i10 % 9) * 5) + 95) {
            case 107:
            case 129:
                switch (((i10 % 1) * 5) + 77) {
                case 81:
                    i11 = 1;
                    while (++i11 < 21) {
                        if (i11 != 0) {
                            vMeth1_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f) + s1 + (b ?
                                1 : 0) + FuzzerUtils.checkSum(bArr);
                            return;
                        }
                        Test.iArrFld[i11] = -6;
                        Test.instanceCount *= i10;
                    }
                    for (i12 = 1; i12 < 21; ++i12) {
                        for (i14 = 1; 2 > i14; i14 += 3) {
                            i13 = (int)Test.instanceCount;
                            Test.iFld += (i14 * i11);
                            f += Test.iFld;
                            i15 += (-215 + (i14 * i14));
                        }
                    }
                    break;
                }
                break;
            case 109:
                i15 = Test.iFld;
            case 140:
                f = i15;
                break;
            case 118:
                Test.iArrFld[i10 - 1] *= i10;
            case 102:
                i13 = (int)Test.instanceCount;
            case 106:
                Test.iArrFld[i10 + 1] += s1;
                break;
            case 131:
                bArr[i10 - 1] = b;
                break;
            case 122:
            }
        }
        vMeth1_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f) + s1 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i6, int i7, short s) {

        int i8=0, i9=6731, i16=11, i17=-6, i18=10, i19=156, i20=-235, iArr[][]=new int[N][N];
        float f1=55.51F;
        double d1=-81.99845;
        long l1=140299227L;

        FuzzerUtils.init(iArr, -169);

        Test.iFld += ((iArr[(-244 >>> 1) % N][(i7 >>> 1) % N] + i6) - (iArr[(i6 >>> 1) % N][(i7 >>> 1) % N]--));
        for (i8 = 11; i8 < 369; i8++) {
            vMeth1();
            for (i16 = 5; i16 > 1; i16 -= 3) {
                if (i7 != 0) {
                    vMeth_check_sum += i6 + i7 + s + i8 + i9 + i16 + i17 + Float.floatToIntBits(f1) +
                        Double.doubleToLongBits(d1) + i18 + l1 + i19 + i20 + FuzzerUtils.checkSum(iArr);
                    return;
                }
                i6 += i16;
                Test.instanceCount += (((i16 * i9) + f1) - i9);
                Test.instanceCount += i16;
                d1 += i6;
                Test.bFld = true;
            }
            i18 &= (int)l1;
            for (i19 = 1; i19 < 5; ++i19) {
                iArr[i19][i19 + 1] -= -36385;
                i9 = i7;
                i6 = (int)l1;
            }
        }
        vMeth_check_sum += i6 + i7 + s + i8 + i9 + i16 + i17 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
            i18 + l1 + i19 + i20 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        long l=-65164L, lArr[]=new long[N];
        double d=-60.128872, dArr[]=new double[N];
        int i21=195, i22=168, i23=190;
        float f2=-1.939F;

        FuzzerUtils.init(dArr, 0.119639);
        FuzzerUtils.init(lArr, -8L);

        l = 328;
        do {
            d = 1;
            do {
                Test.iFld <<= (Test.iFld--);
                if (false) {
                    vMeth(Test.iFld, Test.iFld, (short)(-20720));
                    Test.iFld = Test.iFld;
                } else if (Test.bFld) {
                    dArr = dArr;
                    Test.iFld |= Test.iFld;
                    lArr[(int)(d)] = Test.iFld;
                    for (i21 = 1; i21 < 1; ++i21) {
                        f2 = -14L;
                        Test.instanceCount += i21;
                        f2 *= Test.iFld;
                        i23 += (16562 + (i21 * i21));
                        Test.instanceCount += (((i21 * Test.iFld) + Test.iFld) - i22);
                    }
                } else {
                    i22 -= i23;
                }
            } while (++d < 5);
        } while (--l > 0);
        long meth_res = l + Double.doubleToLongBits(d) + i21 + i22 + Float.floatToIntBits(f2) + i23 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-61108, i1=65, i2=6, i3=0, i4=-140, i5=-59488, i24=2, i25=-82, i26=4, i27=18;
        float f3=2.49F;
        byte by=117, byArr[]=new byte[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 4L);
        FuzzerUtils.init(byArr, (byte)74);

        for (i = 9; 247 > i; i++) {
            for (i2 = 6; 106 > i2; ++i2) {
                for (i4 = 1; i4 < 2; i4++) {
                    short s2=23826;
                    Test.instanceCount = (--i5);
                    switch ((i % 2) + 72) {
                    case 72:
                        i5 <<= (int)Test.instanceCount;
                        if (false) break;
                        i1 >>= iMeth();
                        break;
                    case 73:
                        Test.instanceCount = i1;
                        Test.iFld = i4;
                        i1 -= (int)-9181962429102412540L;
                        try {
                            Test.iFld = (i1 / -252);
                            Test.iFld = (1025428753 / i5);
                            i1 = (i2 % i5);
                        } catch (ArithmeticException a_e) {}
                        break;
                    }
                    Test.iFld -= (int)-111L;
                    Test.iFld -= (int)f3;
                    i5 = (int)Test.dFld;
                    lArr1[i][i - 1] %= (i | 1);
                    i3 *= s2;
                    f3 += i;
                }
                f3 = f3;
                for (i24 = 1; i24 < 2; i24++) {
                    Test.iArrFld[i2 - 1] = i2;
                    i25 = i4;
                    Test.iArrFld = Test.iArrFld;
                }
                Test.iArrFld[i2 - 1] = i4;
                if (Test.bFld) continue;
                i3 |= by;
                for (i26 = i2; i26 < 2; ++i26) {
                    Test.instanceCount = 0;
                }
            }
            byArr[i] -= (byte)Test.instanceCount;
        }
        i1 = 165;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("by i26 i27 = " + by + "," + i26 + "," + i27);
        FuzzerUtils.out.println("lArr1 byArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
