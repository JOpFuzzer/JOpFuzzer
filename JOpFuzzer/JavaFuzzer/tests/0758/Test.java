// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3637580760L;
    public static int iFld=56491;
    public static byte byFld=81;
    public static long lFld=3L;
    public volatile int iFld1=-11;
    public volatile boolean bFld=true;
    public double dFld=2.82923;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 235);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5) {

        int i6=-14, i7=-35281, i8=3, i9=-146, i10=5980, i11=-35, iArr[][]=new int[N][N];
        float f1=0.24F, fArr[]=new float[N];
        byte by=-55;
        double d=59.88999;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr, -174L);
        FuzzerUtils.init(fArr, -2.413F);

        i5 -= i5;
        for (i6 = 242; i6 > 6; i6 -= 2) {
            switch (((174 >>> 1) % 2) + 26) {
            case 26:
                switch ((((-27 >>> 1) % 10) * 5) + 89) {
                case 95:
                    i8 = 1;
                    while (++i8 < 13) {
                        Test.instanceCount >>= i7;
                        i7 = i7;
                    }
                    i7 += (int)f1;
                    iArr[i6][i6] = i7;
                    break;
                case 90:
                    i7 -= (int)2.176F;
                    f1 *= 20127;
                    lArr[(-14 >>> 1) % N] *= 62363;
                    break;
                case 136:
                    for (i9 = 1; i9 < 13; i9++) {
                        i10 >>= i8;
                        i7 += (i9 + Test.instanceCount);
                    }
                case 135:
                    lArr[i6] >>= by;
                    break;
                case 127:
                    i10 *= (int)-6574361994996316804L;
                    break;
                case 121:
                    Test.instanceCount ^= i7;
                    break;
                case 126:
                    Test.instanceCount = i11;
                    break;
                case 97:
                    Test.instanceCount *= i8;
                    break;
                case 103:
                    i10 >>= i9;
                    break;
                case 99:
                    Test.instanceCount -= 159;
                    break;
                default:
                    fArr[i6] += (float)d;
                }
                break;
            case 27:
                i11 = Test.iFld;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + by + i11 + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, long l, int i2) {

        int i3=-11, i4=53327, i12=-32, i13=-11165, i14=-150, i15=0, i16=191;
        short s=27437;
        float f2=-1.586F, f3=14.150F, f4=2.776F, fArr1[][]=new float[N][N];
        long l1=152L;
        boolean b=true;
        double d1=-24.32552;

        FuzzerUtils.init(fArr1, -116.179F);

        for (i3 = 275; i3 > 16; --i3) {
            i1 = iMeth1(Test.iFld);
            s += (short)(((i3 * i1) + f2) - Test.instanceCount);
        }
        for (f3 = 14; f3 < 397; ++f3) {
            i2 -= (int)f3;
        }
        for (l1 = 138; l1 > 6; --l1) {
            if (b) break;
            for (i14 = 1; i14 < 12; i14++) {
                for (d1 = 2; d1 > 1; --d1) {
                    f2 += l;
                    f4 = f3;
                    fArr1[(int)(d1)][(int)(d1 - 1)] = Test.instanceCount;
                    Test.byFld /= (byte)(Test.iFld | 1);
                    i15 = i2;
                    l <<= -106;
                }
            }
        }
        long meth_res = i1 + l + i2 + i3 + i4 + s + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i12 + l1 +
            i13 + (b ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d1) + i16 + Float.floatToIntBits(f4) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-3, i18=-43, i19=-131, i20=252, i21=-9887, i22=-152;
        float f=1.488F;
        short s1=-32330;
        boolean b1=false;
        double d2=-93.25025;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 4187745892L);

        i += (int)(f--);
        i <<= iMeth(-32130, -846927006L, Test.iFld);
        for (int i17 : Test.iArrFld) {
            i18 = 1;
            while (++i18 < 4) {
                i17 += (((i18 * i17) + i17) - i);
                for (i19 = 1; i19 < 1; ++i19) {
                    i -= (int)f;
                    lArr1 = FuzzerUtils.long1array(N, (long)-2705252229L);
                    f -= i;
                }
                i20 -= i;
                switch (i18 + 90) {
                case 90:
                    f = i20;
                    for (i21 = 1; i21 > 1; i21 -= 3) {
                        i = Test.iFld;
                        i -= (int)-2.297F;
                    }
                case 91:
                    i22 *= i18;
                    break;
                case 92:
                    Test.instanceCount += (i18 * i22);
                case 93:
                    Test.byFld += (byte)59502L;
                case 94:
                    i20 += (int)Test.instanceCount;
                case 95:
                    Test.instanceCount = i21;
                    break;
                case 96:
                case 97:
                    i17 += (int)Test.instanceCount;
                    break;
                case 98:
                    Test.byFld = (byte)32103L;
                    break;
                case 99:
                    i17 -= 43;
                    break;
                case 100:
                    i += (i18 * i18);
                    break;
                case 101:
                    Test.instanceCount += (((i18 * Test.byFld) + i17) - Test.instanceCount);
                    break;
                case 102:
                    Test.iFld += i;
                case 103:
                case 104:
                    Test.iFld = Test.iFld;
                    break;
                case 105:
                    i17 = (int)Test.instanceCount;
                    break;
                case 106:
                    i17 = i17;
                case 107:
                    Test.instanceCount = s1;
                case 108:
                    i20 *= (int)-14L;
                case 109:
                    i += i18;
                    break;
                case 110:
                    Test.instanceCount += (long)f;
                    break;
                case 111:
                    i20 *= s1;
                case 112:
                    Test.instanceCount += Test.instanceCount;
                case 113:
                    Test.iArrFld[i18 - 1] -= (int)Test.instanceCount;
                    break;
                case 114:
                    Test.iFld += (229 + (i18 * i18));
                    break;
                case 115:
                case 116:
                    if (b1) break;
                    break;
                case 117:
                    i22 -= i19;
                    break;
                case 118:
                case 119:
                    i17 <<= 43981;
                case 120:
                    i22 *= (int)Test.instanceCount;
                    break;
                case 121:
                    Test.instanceCount += i18;
                    break;
                case 122:
                    Test.iArrFld[i18] += (int)Test.instanceCount;
                case 123:
                    d2 = Test.instanceCount;
                    break;
                case 124:
                    i22 >>>= i20;
                    break;
                case 125:
                    i = i17;
                    break;
                case 126:
                    lArr1[i18 - 1] = i19;
                    break;
                case 127:
                    s1 -= (short)i20;
                    break;
                case 128:
                    Test.iArrFld[i18 - 1] = i22;
                    break;
                case 129:
                    i22 += i17;
                case 130:
                    Test.iArrFld[i18 - 1] ^= i17;
                case 131:
                    i20 = 11;
                    break;
                case 132:
                    Test.iArrFld[i18] -= (int)f;
                    break;
                case 133:
                    lArr1[i18 + 1] = (long)f;
                    break;
                case 134:
                    i17 = (int)Test.instanceCount;
                    break;
                case 135:
                    Test.iArrFld[i18 - 1] /= -6;
                    break;
                case 136:
                    i17 -= (int)d2;
                    break;
                case 137:
                    if (i19 != 0) {
                        vMeth_check_sum += i + Float.floatToIntBits(f) + i18 + i19 + i20 + i21 + i22 + s1 + (b1 ? 1 :
                            0) + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr1);
                        return;
                    }
                    break;
                case 138:
                    b1 = b1;
                case 139:
                    Test.instanceCount -= Test.byFld;
                    break;
                case 140:
                    i17 *= i19;
                    break;
                case 141:
                case 142:
                    Test.instanceCount >>= Test.instanceCount;
                    break;
                case 143:
                    i17 += i18;
                    break;
                case 144:
                    i20 |= i17;
                    break;
                case 145:
                    i20 += (i18 - i18);
                    break;
                case 146:
                    i = i18;
                    break;
                case 147:
                    d2 = i21;
                    break;
                case 148:
                    Test.instanceCount = -93666261L;
                case 149:
                case 150:
                    i22 *= (int)Test.instanceCount;
                    break;
                case 151:
                case 152:
                    Test.instanceCount -= i;
                    break;
                case 153:
                    i17 -= (int)f;
                    break;
                case 154:
                    i += (i18 + i20);
                    break;
                case 155:
                case 156:
                    Test.instanceCount += (222 + (i18 * i18));
                    break;
                case 157:
                    Test.iFld *= (int)Test.lFld;
                    break;
                case 158:
                    Test.iFld = i19;
                    break;
                case 159:
                    try {
                        i17 = (-10490 / i18);
                        i17 = (i21 % -34);
                        Test.iArrFld[i18] = (-133 % i19);
                    } catch (ArithmeticException a_e) {}
                    break;
                }
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i18 + i19 + i20 + i21 + i22 + s1 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i24=-144, i25=192, i26=-134, i27=-12, i28=11, i29=14, i30=242, i31=-4, i32=-2, i33=-118, i34=33254, i35=0;
        float f5=51.633F, f6=-1.750F, fArr2[]=new float[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr2, -2.725F);

        vMeth();
        Test.iFld = Test.iFld;
        iFld1 += Test.iFld;
        bArr[(iFld1 >>> 1) % N] = bFld;
        Test.iFld += iFld1;
        iFld1 = (int)Test.instanceCount;
        for (int i23 : Test.iArrFld) {
            i24 = 1;
            while (++i24 < 63) {
                f5 += (14 + (i24 * i24));
                for (i25 = 1; i25 < 1; i25++) {
                    Test.instanceCount = (long)dFld;
                    f5 *= -95.751F;
                    i23 ^= i26;
                    dFld -= i25;
                }
            }
            i23 -= i26;
            if (bFld) break;
        }
        for (i27 = 9; i27 < 199; i27++) {
            for (i29 = 2; i29 < 132; ++i29) {
                i26 <<= (int)Test.instanceCount;
                i28 += (i29 - Test.instanceCount);
            }
            fArr2[i27 + 1] = Test.iFld;
            if (bFld) {
                byArrFld[i27] -= (byte)87L;
                f6 = 1;
                while (++f6 < 132) {
                    Test.instanceCount = Test.iFld;
                    for (i32 = 1; i32 < 1; i32++) {
                        Test.iFld *= -12052;
                    }
                    for (i34 = 1; i34 < 1; i34++) {
                        Test.instanceCount *= i27;
                        iFld1 += i25;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i24 f5 i25 = " + i24 + "," + Float.floatToIntBits(f5) + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("f6 i32 i33 = " + Float.floatToIntBits(f6) + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 i35 bArr = " + i34 + "," + i35 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("fArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.byFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.lFld iFld1 bFld = " + Test.lFld + "," + iFld1 + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test.iArrFld byArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
