// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=28960L;
    public static boolean bFld=false;
    public static float fFld=104.943F;
    public static double dFld=45.59174;
    public int iArrFld[][]=new int[N][N];
    public volatile int iArrFld1[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l2, double d) {

        int i5=-13809, i6=3, i7=-13398, i8=91, i9=34077, i10=4, iArr[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(dArr, 67.23678);

        Test.instanceCount -= i5;
        i6 = 1;
        while (++i6 < 200) {
            i5 += i6;
            iArr[i6] += i6;
            Test.bFld = Test.bFld;
            i5 -= i6;
            for (i7 = 1; i7 < 8; i7 += 3) {
                i8 = i6;
                for (i9 = 1; i9 < 4; ++i9) {
                    i5 = (int)-31L;
                    Test.fFld += (-40324 + (i9 * i9));
                    l2 >>= i9;
                    if (false) continue;
                    Test.bFld = Test.bFld;
                    dArr[i6 - 1] += l2;
                }
            }
        }
        long meth_res = l2 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(float f1, long l1) {

        int i4=-60886, i11=-51095, i12=-189, i13=232, i14=55739;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 0.443F);
        FuzzerUtils.init(lArr, -2573260209L);

        i4 += (int)(fArr[(107 >>> 1) % N] + (-fMeth(l1, Test.dFld)));
        l1 <<= i4;
        for (i11 = 5; i11 < 231; i11++) {
            if (false) {
                if (true) {
                    lArr[i11 + 1] >>= i12;
                }
                i4 >>= (int)l1;
                i4 = (int)l1;
                i4 += (i11 | i4);
            }
            for (i13 = 1; 7 > i13; ++i13) {
                Test.bFld = Test.bFld;
            }
            fArr[i11 + 1] = i14;
        }
        fArr[(i11 >>> 1) % N] += l1;
        Test.dFld = i12;
        i12 -= i11;
        long meth_res = Float.floatToIntBits(f1) + l1 + i4 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1, long l) {

        int i2=42220, i3=-33645, i15=10, i16=-59, i18=95;
        float f=1.230F;
        byte by=8;

        for (i2 = 6; i2 < 176; i2++) {
            iArrFld[i2 + 1][i2] -= (int)(((i2 - i) * (f - -6L)) + ((252 * iMeth(Test.fFld, Test.instanceCount)) + i));
            i1 <<= -233;
            i += (int)23.961F;
            for (i15 = 1; i15 < 9; ++i15) {
                l += i15;
                switch ((((i >>> 1) % 1) * 5) + 27) {
                case 32:
                    Test.instanceCount += (long)f;
                    i16 += (3 + (i15 * i15));
                    f -= -1.729F;
                    i1 = i15;
                    break;
                }
            }
            if (Test.bFld) continue;
            if (Test.bFld) break;
        }
        i = by;
        iArrFld[(i2 >>> 1) % N][(i18 >>> 1) % N] = -11;
        vMeth_check_sum += i + i1 + l + i2 + i3 + Float.floatToIntBits(f) + i15 + i16 + by + i18;
    }

    public void mainTest(String[] strArr1) {

        int i19=-10, i20=-8065, i21=1, i22=-12, i23=206, i24=12700;
        float f2=-78.141F, f3=1.212F;
        byte by1=46, byArr[]=new byte[N];
        long l3=-134L;
        short s=-28627;

        FuzzerUtils.init(byArr, (byte)-111);

        iArrFld = (iArrFld = (iArrFld = (iArrFld = iArrFld)));
        vMeth(9, i19, Test.instanceCount);
        i19 -= i19;
        i19 <<= (int)Test.instanceCount;
        i19 -= -96;
        i19 -= i19;
        byArr[(i19 >>> 1) % N] += (byte)i19;
        for (f2 = 184; f2 > 7; --f2) {
            if (Test.bFld) {
                for (i21 = (int)(f2); 142 > i21; i21++) {
                    iArrFld1[i21 + 1] *= by1;
                    i20 += (-238 + (i21 * i21));
                    i19 ^= i21;
                    Test.instanceCount = -155;
                    Test.bFld = Test.bFld;
                    l3 = 1;
                    while ((l3 += 3) < 1) {
                        i20 |= 9;
                        Test.fFld += (l3 * l3);
                        Test.instanceCount += (l3 * Test.instanceCount);
                        i22 >>>= i22;
                    }
                    i20 = i20;
                    for (i23 = 1; i23 < 1; ++i23) {
                        i22 *= (int)f2;
                        i19 |= i23;
                        i20 += (i23 | (long)f3);
                    }
                }
            } else {
                Test.instanceCount += i22;
            }
            i24 = i23;
            i24 += (int)((long)f2 ^ (long)f3);
        }
        i19 += s;
        f3 = -5822;

        FuzzerUtils.out.println("i19 f2 i20 = " + i19 + "," + Float.floatToIntBits(f2) + "," + i20);
        FuzzerUtils.out.println("i21 i22 by1 = " + i21 + "," + i22 + "," + by1);
        FuzzerUtils.out.println("l3 i23 i24 = " + l3 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f3 s byArr = " + Float.floatToIntBits(f3) + "," + s + "," +
            FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld iArrFld iArrFld1 = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
