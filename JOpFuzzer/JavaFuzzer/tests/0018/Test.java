// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2269935416L;
    public static byte byFld=-89;
    public static short sFld=-22579;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -43630L);
        FuzzerUtils.init(Test.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=0, i3=12, i4=-242, i5=-24, i6=252, i7=-149;
        float f1=-115.423F, fArr[]=new float[N];
        double d=76.117263;

        FuzzerUtils.init(fArr, -1.889F);

        for (i2 = 22; 383 > i2; ++i2) {
            Test.instanceCount += i2;
            for (i4 = i2; 5 > i4; ++i4) {
                i5 = (int)Test.instanceCount;
                for (i6 = 1; i6 > 1; --i6) {
                    short s=15149;
                    Test.lArrFld[i4] = i2;
                    i3 += (((i6 * i3) + i4) - i2);
                    s = (short)i7;
                    i7 += (i6 * i6);
                    fArr[i2] = i3;
                }
                Test.instanceCount += i4;
                f1 += i7;
                i5 = 103;
                i3 = i3;
                d -= d;
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1() {

        int i8=45, i9=47904, i10=202, i11=-58107, i12=-183, iArr[]=new int[N];
        double d1=-60.18351;
        boolean b=false;

        FuzzerUtils.init(iArr, -30287);

        vMeth2();
        Test.instanceCount = Test.instanceCount;
        i8 += (int)-4165335701L;
        Test.instanceCount <<= i8;
        i8 += (int)16L;
        for (i9 = 13; i9 < 340; ++i9) {
            Test.instanceCount = Test.instanceCount;
            iArr[i9 + 1] = i9;
            if (false) break;
            for (i11 = 1; i11 < 5; i11++) {
                d1 += Test.byFld;
                Test.lArrFld = Test.lArrFld;
                i8 += (int)5484266798891048098L;
                iArr[i9] = i10;
            }
            if (b) continue;
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        int i1=-13, i13=-24, i14=-9184;
        float f2=-1.633F;

        i1 = 1;
        do {
            vMeth1();
            Test.lArrFld[i1] *= -64;
            f2 = i;
            i >>= i1;
            i >>= i1;
            i13 = 1;
            do {
                i14 -= -6;
                Test.iArrFld[i13 + 1][i1] += i14;
                Test.sFld >>= (short)5981964983922119933L;
                Test.iArrFld[i13][i13] += i14;
                i14 += (i13 | (long)f2);
                i14 *= (int)Test.instanceCount;
                i = (int)-74.110F;
            } while (++i13 < 27);
        } while ((i1 += 3) < 171);
        i = (int)Test.instanceCount;
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f2) + i13 + i14;
    }

    public void mainTest(String[] strArr1) {

        float f=41.391F;
        int i15=-15, i16=-107;

        Test.instanceCount += (long)f;
        vMeth(14);
        i15 = 1;
        do {
            f = i15;
            i16 += (i15 * i15);
        } while (++i15 < 192);
        Test.instanceCount *= Test.byFld;

        FuzzerUtils.out.println("f i15 i16 = " + Float.floatToIntBits(f) + "," + i15 + "," + i16);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
