// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7284602520015658677L;
    public static float fFld=0.912F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 24242);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7) {

        int i8=51315, i9=-74, iArr[]=new int[N];
        boolean b=true;
        byte by=65;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(dArr, -2.127048);

        for (i8 = 12; i8 < 209; i8++) {
            b = b;
            iArr[i8] *= -6723;
            Test.instanceCount += (((i8 * Test.instanceCount) + i9) - by);
            i9 <<= i7;
            i9 += i9;
            dArr[i8] *= i7;
        }
        Test.instanceCount *= i9;
        i7 = i9;
        Test.instanceCount = Test.instanceCount;
        Test.instanceCount -= Test.instanceCount;
        long meth_res = i7 + i8 + i9 + (b ? 1 : 0) + by + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(long l, long l1, int i6) {

        int i10=12, i11=48555, i13=-8, i14=6859, i15=124, i16=7, i17=-2, i18=159;

        iMeth(i6);
        for (i10 = 16; i10 < 329; i10++) {
            for (i13 = 5; i13 > 1; i13--) {
                i11 += i11;
                i11 = (int)l;
                l1 += (-22 + (i13 * i13));
                i14 += (58 + (i13 * i13));
            }
            i15 = 1;
            while ((i15 += 2) < 5) {
                for (i16 = 1; 3 > i16; i16++) {
                    i17 = i14;
                }
                i6 += i15;
                Test.fFld += i6;
            }
        }
        l1 -= i10;
        i6 <<= i18;
        i17 = (int)l;
        long meth_res = l + l1 + i6 + i10 + i11 + i13 + i14 + i15 + i16 + i17 + i18;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        float f=0.374F;
        int i4=-10, i5=5, i19=174, i20=50031, iArr1[]=new int[N];
        long lArr[]=new long[N];
        double dArr1[]=new double[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -9L);
        FuzzerUtils.init(dArr1, -1.96073);
        FuzzerUtils.init(byArr, (byte)107);
        FuzzerUtils.init(iArr1, 12);

        f *= (float)-85.91201;
        for (i4 = 7; i4 < 236; i4 += 3) {
            f += i4;
            i3 -= (int)fMeth(39954L, Test.instanceCount, i1);
            lArr[i4 - 1] -= 2L;
            dArr1[i4] *= Test.fFld;
            byArr[i4 - 1] += (byte)i4;
            i3 += (int)Test.instanceCount;
            i3 = (int)Test.instanceCount;
            iArr1[i4] <<= i2;
            i3 -= i5;
        }
        for (i19 = 22; i19 < 368; ++i19) {
            Test.instanceCount /= (i5 | 1);
            Test.instanceCount += (((i19 * i5) + i5) - Test.instanceCount);
            f -= i5;
        }
        vMeth_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i19 + i20 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=187, i21=79, i22=6, i23=-1, i24=132, i25=223, i26=-9, i27=-21656, i28=-232, i29=48609;
        double d=-126.75121;
        short s=18291;
        boolean b1=false;
        long l2=-60069L;

        i >>>= i;
        vMeth(i, 21427, i);
        for (i21 = 6; i21 < 218; i21 += 2) {
            i <<= 176;
            if (b1) {
                i23 = 1;
                do {
                    for (i24 = 1; i24 < 1; i24++) {
                        d += Test.fFld;
                        i22 += (int)Test.instanceCount;
                    }
                    i25 += (i23 * i23);
                    i25 = (int)Test.instanceCount;
                    s /= (short)(Test.instanceCount | 1);
                    Test.instanceCount += (i23 ^ (long)Test.fFld);
                    Test.fFld = (float)1.561;
                    b1 = true;
                    i25 = -45;
                    Test.instanceCount += i23;
                } while (++i23 < 236);
                Test.instanceCount = i23;
                i22 >>= (int)Test.instanceCount;
                i = (int)-1.126143;
            } else if (b1) {
                i25 = i25;
                for (i26 = 8; i26 < 236; ++i26) {
                    d += Test.fFld;
                    i27 >>= (int)Test.instanceCount;
                    i25 ^= s;
                    for (i28 = 2; i28 > i21; i28--) {
                        i29 += i27;
                        i = i22;
                        s *= (short)37193;
                    }
                    i22 += i26;
                }
            } else if (b1) {
                Test.instanceCount = i23;
            } else {
                l2 += (i21 | l2);
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("d s b1 = " + Double.doubleToLongBits(d) + "," + s + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 l2 = " + i29 + "," + l2);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
