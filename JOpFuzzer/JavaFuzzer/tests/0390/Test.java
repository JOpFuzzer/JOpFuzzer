// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-966172167L;
    public static int iFld=14;
    public static volatile double dFld=1.73173;
    public static float fFld=0.456F;
    public static boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        int i5=-14, i6=55172, i7=-59121, i8=21, i9=246;
        float f=-2.50F, fArr[]=new float[N];
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5L);
        FuzzerUtils.init(fArr, -20.582F);

        for (i5 = 4; i5 < 309; i5++) {
            lArr[i5 - 1] -= (long)f;
            for (i7 = 1; i7 < 5; ++i7) {
                Test.instanceCount += (long)41.813F;
                i9 = 1;
                while (++i9 < 2) {
                    Test.instanceCount *= (long)Test.dFld;
                    b = b;
                    fArr[i9 + 1] += i5;
                    i3 -= Test.iFld;
                    i3 <<= i7;
                    i8 += (i9 - f);
                    i6 *= i4;
                    i6 -= i5;
                    f = 32421;
                    if (b) continue;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static short sMeth(int i2, long l1) {

        int i10=-3, i11=52480, i12=-70, i13=-2009, i14=-161, i15=10, i16=104;
        byte by=-17;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        Test.iFld -= (Test.iFld++);
        Test.dFld *= i2;
        vMeth1(22570, Test.iFld);
        Test.instanceCount -= Test.instanceCount;
        for (i10 = 10; i10 < 257; ++i10) {
            i11 -= i10;
            i11 = by;
            if (i10 != 0) {
            }
            l1 += (((i10 * Test.iFld) + i2) - Test.iFld);
        }
        for (i12 = 2; 184 > i12; ++i12) {
            for (i14 = 1; i14 < 9; i14++) {
                Test.iFld = Test.iFld;
                i16 = 2;
                while (--i16 > 0) {
                    b1 = b1;
                    bArr[i16 - 1] = false;
                }
            }
        }
        long meth_res = i2 + l1 + i10 + i11 + by + i12 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(long l, double d1) {

        int iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -57465);

        iArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] >>= (int)((0.116F % (((long)(d1--)) | 1)) * (-11653L -
            sMeth(Test.iFld, Test.instanceCount)));
        vMeth_check_sum += l + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d=-124.63699, d2=41.5675, dArr[]=new double[N];
        int i=-14, i1=-230, i17=0, i18=4, i19=5290, i20=203, i21=81, i22=159, iArr1[]=new int[N];
        long l2=-7343039018751156122L;
        byte by1=-115;
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(dArr, 58.26213);
        FuzzerUtils.init(iArr1, 54197);
        FuzzerUtils.init(bArr1, true);

        Test.iFld |= Short.reverseBytes((short)((-(d + Test.iFld)) * (Test.iFld * Test.iFld)));
        for (i = 1; 148 > i; i += 2) {
            Test.iFld += (++Test.iFld);
            vMeth(Test.instanceCount, -109.32271);
            Test.instanceCount += i;
            Test.instanceCount += (i ^ (long)Test.fFld);
            Test.iFld = -199;
            Test.iFld = i1;
        }
        for (i17 = 20; i17 < 384; i17++) {
            Test.fFld = i;
        }
        for (i19 = 13; i19 < 229; ++i19) {
            for (l2 = 1; 116 > l2; ++l2) {
                for (d2 = 1; d2 < 2; d2++) {
                    double d3=-112.52446;
                    dArr[(int)(d2)] += d3;
                    switch ((int)(((d2 % 5) * 5) + 13)) {
                    case 37:
                        if (Test.bFld) continue;
                        i20 /= (int)(i20 | 1);
                        break;
                    case 33:
                    case 24:
                    case 21:
                        Test.iFld = 116;
                        switch ((int)(((l2 % 1) * 5) + 21)) {
                        case 23:
                            i22 >>= 5;
                            by1 <<= (byte)i22;
                            i20 = (int)l2;
                            i22 = i20;
                        default:
                            iArr1[i19] -= (int)Test.instanceCount;
                            Test.iFld = 14;
                        }
                        i1 += i20;
                        break;
                    case 27:
                        iArr1[(int)(l2 + 1)] = by1;
                        bArr1[(int)(d2 - 1)] = Test.bFld;
                    default:
                        Test.iFld += (int)Test.instanceCount;
                    }
                    Test.iFld *= (int)Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 l2 i21 = " + i20 + "," + l2 + "," + i21);
        FuzzerUtils.out.println("d2 i22 by1 = " + Double.doubleToLongBits(d2) + "," + i22 + "," + by1);
        FuzzerUtils.out.println("dArr iArr1 bArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.bFld = " + Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
