// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3731831316L;
    public static short sFld=-2415;
    public static volatile float fFld=53.146F;
    public static double dArrFld[]=new double[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -116.36532);
        FuzzerUtils.init(Test.lArrFld, -2467310135L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i1) {

        int i2=9, i3=13, i4=-16665, i5=1730, i6=-27849, i7=-119, i8=19716, iArr2[]=new int[N];
        double d=1.122860, d1=0.37682;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 250L);
        FuzzerUtils.init(iArr2, 48854);

        for (i2 = 20; i2 < 366; ++i2) {
            if (false) {
                i1 = (int)238L;
                Test.instanceCount *= i3;
                lArr[i2 - 1] = i1;
                for (d = 1; 5 > d; ++d) {
                    for (i5 = 2; i5 > 1; i5--) {
                        Test.instanceCount += i2;
                        b = true;
                        iArr2[i2] = (int)Test.instanceCount;
                    }
                    iArr2[i2] -= i4;
                    for (i7 = 1; i7 < 2; i7++) {
                        i3 += (i7 - i4);
                        d1 *= i7;
                        i6 += i7;
                    }
                }
            } else {
                i4 = i6;
            }
        }
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + (b ? 1 : 0) + i7 + i8 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i, long l) {

        double d2=2.127985;
        int i9=13, i10=-9, i11=-22581, i12=57, iArr1[]=new int[N];
        byte by=-70;
        long l1=4L;

        FuzzerUtils.init(iArr1, 17653);

        iArr1[(i >>> 1) % N] = (iMeth1(i) + i);
        for (d2 = 357; 10 < d2; d2 -= 2) {
            for (i10 = 1; i10 < 9; i10++) {
                i12 = 1;
                do {
                    i9 = (int)d2;
                    switch ((i10 % 10) + 5) {
                    case 5:
                        iArr1[i10] >>= i;
                        l += (81 + (i12 * i12));
                        break;
                    case 6:
                        i9 = (int)13L;
                        i9 <<= -3;
                        i11 *= (int)d2;
                        i += i12;
                        break;
                    case 7:
                        iArr1[(i11 >>> 1) % N] = i9;
                        break;
                    case 8:
                        if (i12 != 0) {
                        }
                        Test.instanceCount += i12;
                    case 9:
                        Test.dArrFld[i10] *= by;
                        break;
                    case 10:
                        Test.sFld = (short)l1;
                        break;
                    case 11:
                        Test.sFld = (short)i9;
                        break;
                    case 12:
                        Test.fFld = by;
                    case 13:
                        Test.sFld = (short)i10;
                    case 14:
                        Test.fFld -= i9;
                        break;
                    }
                } while (++i12 < 2);
            }
        }
        long meth_res = i + l + Double.doubleToLongBits(d2) + i9 + i10 + i11 + i12 + by + l1 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i13=-49621;

        iMeth(i13, Test.instanceCount);
        vMeth_check_sum += i13;
    }

    public void mainTest(String[] strArr1) {

        int i14=-17, i15=3, i17=2, i18=-53108, iArr[]=new int[N];
        byte by1=109;
        double d3=8.47317;

        FuzzerUtils.init(iArr, -90);

        iArr = (iArr = (iArr = (iArr = iArr)));
        vMeth();
        for (i14 = 9; i14 < 294; i14++) {
            i15 <<= -24484;
            iArr[i14] = i14;
            i15 += i14;
            i17 = 1;
            while (++i17 < 88) {
                Test.fFld -= i17;
                Test.fFld += (i17 + Test.instanceCount);
                iArr[i14] -= i15;
            }
            Test.instanceCount = by1;
            Test.instanceCount -= Test.instanceCount;
            i15 -= (int)d3;
        }
        Test.lArrFld[(68 >>> 1) % N][(i15 >>> 1) % N] -= Test.instanceCount;
        Test.instanceCount >>= Test.instanceCount;
        Test.instanceCount = i14;
        i15 = (int)Test.instanceCount;
        iArr[(i14 >>> 1) % N] += i18;

        FuzzerUtils.out.println("i14 i15 i17 = " + i14 + "," + i15 + "," + i17);
        FuzzerUtils.out.println("by1 d3 i18 = " + by1 + "," + Double.doubleToLongBits(d3) + "," + i18);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
