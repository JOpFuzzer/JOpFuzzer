// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-36056L;
    public static int iFld=-50246;
    public static short sFld=32278;
    public static volatile boolean bFld=false;
    public static volatile byte byFld=126;
    public static double dArrFld[]=new double[N];
    public static volatile long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -107.100953);
        FuzzerUtils.init(Test.lArrFld, 180L);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i2=7, i3=-36029, i4=5, i5=-15408, i6=-186, i7=8, i8=19052;
        double d=-38.112573;
        float f1=0.218F, f2=15.329F;

        for (i2 = 11; 330 > i2; ++i2) {
            boolean b=false;
            Test.instanceCount += (long)d;
            b = b;
            if (b) {
                i3 = -4959;
                Test.iFld += i2;
                Test.instanceCount *= (long)f1;
            }
            Test.iFld += (i2 + i2);
            i3 *= (int)-27.610F;
            f1 = 2.98F;
        }
        for (i4 = 254; i4 > 11; i4 -= 3) {
            for (i6 = i4; 19 > i6; ++i6) {
                for (f2 = i4; f2 < 1; f2++) {
                    Test.lArrFld[i6 + 1][i4 - 1] = i8;
                    i5 += (int)(((f2 * Test.instanceCount) + Test.iFld) - Test.instanceCount);
                }
            }
        }
        vMeth_check_sum += i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 +
            Float.floatToIntBits(f2) + i8;
    }

    public static long lMeth(long l1) {

        int i1=3, i9=104, i10=-6, i11=6856, i12=-11, i13=-43287, iArr[][]=new int[N][N];
        float f3=-40.320F, fArr[]=new float[N];
        boolean b1=true;

        FuzzerUtils.init(fArr, 2.595F);
        FuzzerUtils.init(iArr, -152);

        i1 = 1;
        do {
            vMeth();
            f3 += i1;
        } while (++i1 < 278);
        switch (((i1 >>> 1) % 7) + 89) {
        case 89:
            Test.iFld <<= Test.iFld;
            i9 = 1;
            while (++i9 < 132) {
                for (i10 = i9; 12 > i10; ++i10) {
                    for (i12 = 1; i12 < 1; ++i12) {
                        i13 += (int)f3;
                        Test.instanceCount += (((i12 * i13) + i12) - i13);
                        fArr[i9 - 1] -= l1;
                        if (i12 != 0) {
                        }
                        b1 = false;
                        iArr[i10] = iArr[i10 - 1];
                        i11 *= (int)l1;
                    }
                }
            }
            break;
        case 90:
            l1 = Test.instanceCount;
            break;
        case 91:
            i13 -= i13;
            break;
        case 92:
            Test.instanceCount -= i1;
            break;
        case 93:
            i11 *= (int)l1;
            break;
        case 94:
            i11 += (int)f3;
        case 95:
        }
        long meth_res = l1 + i1 + Float.floatToIntBits(f3) + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f, int i, long l) {


        f -= (191 + ((--i) << lMeth(Test.instanceCount)));
        Test.iFld <<= i;
        long meth_res = Float.floatToIntBits(f) + i + l;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f4=-68.796F, f5=-49.513F;
        int i14=45060, i15=14, i16=-11, i17=-12118, i18=-11, i19=-221, i20=14, i21=-1, i22=-13, i23=-1, i24=6, i25=468,
            i26=-9, iArr1[][]=new int[N][N];
        double d3=2.738, d5=-39.120826;

        FuzzerUtils.init(iArr1, -53);

        Test.iFld += Test.iFld;
        Test.iFld -= iMeth(f4, Test.iFld, 34360L);
        for (f5 = 4; f5 < 283; f5 += 3) {
            Test.iFld <<= i14;
        }
        Test.sFld = (short)i14;
        for (d3 = 6; d3 < 185; d3++) {
            iArr1[(int)(d3)][(int)(d3)] += (int)2L;
            d5 = f4;
        }
        for (i16 = 6; i16 < 295; i16++) {
            for (i18 = 1; 87 > i18; ++i18) {
                Test.lArrFld[i18 - 1][i16] -= i14;
                i17 += (int)Test.instanceCount;
                for (i20 = i18; 2 > i20; i20++) {
                    Test.iFld = i18;
                }
                for (i22 = 1; i22 < 2; ++i22) {
                    Test.sFld -= (short)Test.instanceCount;
                    i17 *= (int)Test.instanceCount;
                    if (Test.bFld) break;
                }
            }
            switch ((i16 % 4) + 66) {
            case 66:
                i23 += (-101 + (i16 * i16));
                break;
            case 67:
                Test.bFld = Test.bFld;
                i24 = 1;
                while (++i24 < 87) {
                    for (i25 = 1; i25 < 1; ++i25) {
                        byte by=37;
                        i17 |= by;
                        Test.iFld += (int)(1.916F + (i25 * i25));
                        f4 += i25;
                        Test.dArrFld = Test.dArrFld;
                        i17 = i26;
                        Test.instanceCount += Test.iFld;
                        Test.iFld += i25;
                    }
                }
                break;
            case 68:
                Test.byFld += (byte)i19;
                break;
            case 69:
                i14 -= -133;
                break;
            }
        }

        FuzzerUtils.out.println("f4 f5 i14 = " + Float.floatToIntBits(f4) + "," + Float.floatToIntBits(f5) + "," + i14);
        FuzzerUtils.out.println("d3 i15 d5 = " + Double.doubleToLongBits(d3) + "," + i15 + "," +
            Double.doubleToLongBits(d5));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 iArr1 = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.bFld Test.byFld Test.dArrFld = " + (Test.bFld ? 1 : 0) + "," + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
