// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1580190192675659265L;
    public static float fFld=-1.473F;
    public static double dFld=64.62315;
    public static boolean bFld=false;
    public static short sFld=-28222;
    public static long lArrFld[][]=new long[N][N];
    public boolean bArrFld[]=new boolean[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -131L);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, long l1, long l2) {

        int i10=65146, i11=63540, i12=-11, i13=-1721, i14=-87, iArr[]=new int[N];
        double d2=0.50382;

        FuzzerUtils.init(iArr, -29829);

        Test.fFld -= i9;
        for (i10 = 306; i10 > 18; i10 -= 2) {
            d2 = 1;
            while (++d2 < 11) {
                iArr = FuzzerUtils.int1array(N, (int)-34776);
                i9 = i9;
                i9 = (int)35253L;
                if (Test.bFld) {
                    Test.instanceCount = i12;
                    vMeth1_check_sum += i9 + l1 + l2 + i10 + i11 + Double.doubleToLongBits(d2) + i12 + i13 + i14 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                } else {
                    i11 = i11;
                }
                if (Test.bFld) continue;
                l2 += (long)Test.fFld;
                for (i13 = (int)(d2); i13 < 1; ++i13) {
                    i9 -= 54;
                    i9 <<= i12;
                    iArr[i10 + 1] <<= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i9 + l1 + l2 + i10 + i11 + Double.doubleToLongBits(d2) + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth(int i4, float f) {

        int i5=-58867, i6=13, i7=-1359, i8=-6, i15=-12, i16=-93, i17=2;
        float f1=0.530F;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 11L);
        FuzzerUtils.init(dArr, 73.76288);

        for (i5 = 4; i5 < 138; i5++) {
            i4 = (int)(((f * i5) + -1.557F) + Test.instanceCount);
        }
        for (i7 = 5; i7 < 334; i7++) {
            i4 *= (int)((i7 - (lArr[i7 + 1] += i8)) + Test.dFld);
            vMeth1(-2898, Test.instanceCount, Test.instanceCount);
            for (f1 = 1; 5 > f1; f1++) {
                i6 -= (int)f;
                i16 = 2;
                while ((i16 -= 2) > 0) {
                    i6 += (i16 * i16);
                    i8 -= i6;
                    Test.dFld = Test.dFld;
                    i8 += i17;
                    i4 += (i16 - i15);
                    Test.instanceCount -= 72;
                    dArr[(int)(f1)] = i17;
                }
            }
        }
        long meth_res = i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i15 + i16 + i17 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void vMeth(long l, boolean b) {

        double d1=0.96547, d3=-77.124337, dArr1[]=new double[N];
        int i1=-10, i2=-8438, i3=-21912, i18=84, i19=-4, i20=11, i21=-15970, i22=63, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.150F);
        FuzzerUtils.init(dArr1, 0.6414);
        FuzzerUtils.init(iArr1, -3);

        d1 -= i1;
        for (i2 = 18; i2 < 301; i2++) {
            fArr[i2 - 1] -= (float)dMeth(i3, Test.fFld);
            i18 = 1;
            while (++i18 < 6) {
                for (i19 = 1; 1 > i19; ++i19) {
                    i20 *= i18;
                    Test.lArrFld = Test.lArrFld;
                }
                dArr1[i18] -= i2;
                Test.instanceCount -= i20;
                if (true) continue;
                if (Test.bFld) {
                    for (i21 = 1; i21 < 1; ++i21) {
                        Test.sFld -= (short)i2;
                        i20 = i22;
                        i3 *= (int)d3;
                    }
                } else if (b) {
                    iArr1[i2] -= i22;
                }
            }
        }
        vMeth_check_sum += l + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i1 + i2 + i3 + i18 + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(d3) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=76, i23=218, i24=6, i25=38016, i26=9, i27=54974, i28=14, i29=-3, i30=-6, i31=-8, i32=51859, iArr2[]=new
            int[N];
        double d=-1.57789;
        float f2=-13.1021F;
        byte by=98;

        FuzzerUtils.init(iArr2, -36266);

        i *= (int)(Test.fFld--);
        d = 1;
        do {
            switch ((int)((d % 3) + 109)) {
            case 109:
                vMeth(19203L, Test.bFld);
                break;
            case 110:
                for (f2 = 1; f2 < 65; ++f2) {
                    Test.instanceCount += (long)f2;
                    for (i24 = 1; 2 > i24; ++i24) {
                        i26 = i25;
                        i <<= i26;
                    }
                    iArr2 = FuzzerUtils.int1array(N, (int)-152);
                    Test.sFld += (short)(((f2 * by) + i23) - i);
                    i += (int)28.763F;
                    switch (((-160 >>> 1) % 6) + 125) {
                    case 125:
                        for (i27 = (int)(d); i27 < 2; ++i27) {
                            i -= i27;
                            bArrFld[i27 + 1] = false;
                            Test.lArrFld[(int)(f2)][i27] >>>= i28;
                            by -= (byte)Test.fFld;
                            i26 *= 5;
                            iArr2[(int)(d + 1)] = i23;
                            try {
                                iArr2[(int)(f2 - 1)] = (i25 / i28);
                                i = (i23 / 53049);
                                iArr2[(int)(f2)] = (i26 / iArr2[(int)(d)]);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 126:
                        i23 += (int)(f2 * f2);
                        i -= (int)Test.dFld;
                        break;
                    case 127:
                        for (i29 = 1; i29 < 2; i29 += 3) {
                            i28 = i25;
                        }
                        iArr2[(int)(f2 - 1)] += i;
                        for (i31 = (int)(f2); i31 < 2; ++i31) {
                            i23 += (27495 + (i31 * i31));
                        }
                        break;
                    case 128:
                        fArrFld[(int)(f2 + 1)] = i25;
                        Test.fFld -= f2;
                        break;
                    case 129:
                        i23 += (int)Test.instanceCount;
                        break;
                    case 130:
                        Test.sFld = (short)Test.instanceCount;
                        break;
                    }
                }
                break;
            case 111:
            }
        } while (++d < 390);

        FuzzerUtils.out.println("i d f2 = " + i + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 by i27 = " + i26 + "," + by + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 iArr2 = " + i31 + "," + i32 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.sFld Test.lArrFld = " + (Test.bFld ? 1 : 0) + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("bArrFld fArrFld = " + FuzzerUtils.checkSum(bArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
