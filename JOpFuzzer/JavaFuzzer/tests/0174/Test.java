// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=69L;
    public short sFld=-8431;
    public long lFld=-141L;
    public volatile int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 63);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=198;

        i3 -= i3;
        vMeth2_check_sum += i3;
    }

    public static void vMeth1(long l, boolean b, byte by) {

        int i2=-10, i4=97, i5=-137, i6=-197, i7=-30, i8=-78;
        double d=53.24100;
        float f1=-99.908F, f2=0.442F;

        Test.iArrFld1[(-36454 >>> 1) % N] = -5;
        Test.iArrFld1[(i2 >>> 1) % N] -= by;
        vMeth2();
        for (i4 = 10; 266 > i4; ++i4) {
            i5 *= (int)d;
            switch ((i4 % 2) + 9) {
            case 9:
                i5 >>= (int)-59L;
                break;
            case 10:
                i5 = (int)f1;
                for (i6 = i4; i6 < 6; i6++) {
                    by += (byte)i2;
                    for (f2 = i6; f2 < 1; f2++) {
                        i8 = i5;
                        Test.instanceCount += i5;
                        i2 += i4;
                        i2 += -65292;
                    }
                }
            }
        }
        vMeth1_check_sum += l + (b ? 1 : 0) + by + i2 + i4 + i5 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1)
            + i6 + i7 + Float.floatToIntBits(f2) + i8;
    }

    public static void vMeth(int i1) {

        boolean b1=true;
        byte by1=-124;
        int i9=-7, i10=-5, i11=-22163, i12=14, i13=-50498, i14=-14, iArr[][]=new int[N][N];
        double d1=1.34498;
        float f3=111.821F;
        long l1=75L;

        FuzzerUtils.init(iArr, -58911);

        vMeth1(212L, b1, by1);
        for (i9 = 16; i9 < 275; i9++) {
            d1 = 35139L;
            f3 -= Test.instanceCount;
            i1 += (i9 * i9);
        }
        for (i11 = 3; i11 < 213; i11++) {
            iArr = iArr;
        }
        i12 >>= -8;
        for (i13 = 4; i13 < 163; ++i13) {
            f3 = i9;
            l1 = 1;
            do {
                i12 += (int)-51469L;
                i10 += (int)l1;
                f3 = i9;
                i12 += (int)Test.instanceCount;
            } while (++l1 < 10);
        }
        vMeth_check_sum += i1 + (b1 ? 1 : 0) + by1 + i9 + i10 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f3)
            + i11 + i12 + i13 + i14 + l1 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=28332, i15=126, i16=-11, i17=5, i18=-18208, i19=11, i20=3, i21=-99, i22=-12;
        float f=0.637F, fArr[]=new float[N];
        byte by2=14;
        double d2=-111.4492;
        boolean b2=false;

        FuzzerUtils.init(fArr, 1.587F);

        i -= (int)((++iArrFld[(i >>> 1) % N]) >> (long)((f - i) * (Test.instanceCount++)));
        vMeth(i);
        f -= i;
        by2 = (byte)i;
        d2 = i;
        i15 = 1;
        while (++i15 < 343) {
            iArrFld[i15 + 1] = (int)-153L;
            Test.iArrFld1[i15 + 1] += i;
            fArr[i15 + 1] += i15;
            b2 = true;
            for (i16 = i15; i16 < 73; ++i16) {
                i18 = 1;
                do {
                    i -= i;
                    i17 |= 74;
                    i17 = (int)-3733804843L;
                    i17 = i;
                    i = i16;
                    i17 <<= -5;
                } while (++i18 < 1);
                i = sFld;
            }
            lFld += (i15 ^ lFld);
            i = i18;
            for (i19 = 3; 73 > i19; ++i19) {
                for (i21 = 1; i21 < 2; i21++) {
                    i >>= i22;
                    i17 += i21;
                    i17 += i15;
                    if (b2) {
                        f = (float)d2;
                    } else if (b2) {
                        lFld += (((i21 * by2) + i19) - i16);
                    } else {
                        i20 &= i;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f by2 = " + i + "," + Float.floatToIntBits(f) + "," + by2);
        FuzzerUtils.out.println("d2 i15 b2 = " + Double.doubleToLongBits(d2) + "," + i15 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 fArr = " + i22 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount sFld lFld = " + Test.instanceCount + "," + sFld + "," + lFld);
        FuzzerUtils.out.println("iArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
