// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static double dFld=1.46167;
    public static float fFld=-1.77F;
    public volatile boolean bFld=true;
    public byte byFld=-86;
    public static short sFld=-12531;
    public static long lFld=1896405225276023016L;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 43069L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i9, boolean b, float f1) {

        int i11=-9, i12=135, iArr1[][]=new int[N][N], iArr2[]=new int[N];
        byte by=-23;

        FuzzerUtils.init(iArr1, -103);
        FuzzerUtils.init(iArr2, -76);

        iArr1[(i9 >>> 1) % N][(i9 >>> 1) % N] ^= i9;
        Test.instanceCount = i9;
        i9 *= i9;
        b = b;
        for (int i10 : iArr2) {
            f1 += i9;
            Test.instanceCount += (long)f1;
            Test.dFld -= i10;
            for (i11 = 1; i11 < 4; i11++) {
                Test.dFld *= Test.instanceCount;
                i12 >>= (int)Test.instanceCount;
                i9 -= (int)15.166F;
                i9 %= (int)(i10 | 1);
                Test.instanceCount += (long)Test.dFld;
                i9 += by;
            }
        }
        long meth_res = i9 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i11 + i12 + by + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1(int i2, long l, int i3) {

        int i4=7980, i5=-930, i6=-22, i7=40050, i8=-13, iArr[]=new int[N];
        double d=0.41083;
        float f=0.1000F;
        short s=-10693;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -36);
        FuzzerUtils.init(bArr, false);

        for (i4 = 5; 155 > i4; i4++) {
            l = i2;
            d = 1;
            do {
                switch ((int)((d % 10) + 45)) {
                case 45:
                    f = Test.instanceCount;
                    i3 ^= (--s);
                    i3 = (int)(((Test.lArrFld[(int)(d + 1)]--) * (2.127063 + iArr[i4])) * Test.lArrFld[(int)(d)]);
                    if (b1) {
                        if (b1) {
                            for (i6 = 1; i6 < 1; i6++) {
                                s >>= (short)(((++s) + (i8 + Test.instanceCount)) + (i5 = (i4 - i2)));
                                switch (((i6 % 2) * 5) + 74) {
                                case 75:
                                    i5 ^= (int)(i7 + dMeth(i5, false, f));
                                    i5 = i2;
                                    Test.dFld = i7;
                                    break;
                                case 81:
                                    i8 += (int)l;
                                    break;
                                }
                            }
                        } else if (false) {
                            i7 += (int)d;
                            vMeth1_check_sum += i2 + l + i3 + i4 + i5 + Double.doubleToLongBits(d) +
                                Float.floatToIntBits(f) + s + i6 + i7 + i8 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr)
                                + FuzzerUtils.checkSum(bArr);
                            return;
                        } else if (b1) {
                            i5 -= -232;
                        } else {
                            i2 -= i7;
                        }
                    }
                    break;
                case 46:
                    f += l;
                    break;
                case 47:
                    i3 = 4;
                    break;
                case 48:
                    s = (short)i4;
                    break;
                case 49:
                case 50:
                    i8 += i7;
                    break;
                case 51:
                    i7 -= -10469;
                    break;
                case 52:
                    i8 += (int)d;
                    break;
                case 53:
                    bArr[i4] = true;
                    break;
                case 54:
                    if (b1) break;
                    break;
                default:
                    f -= (float)Test.dFld;
                }
            } while (++d < 11);
        }
        vMeth1_check_sum += i2 + l + i3 + i4 + i5 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + s + i6 + i7
            + i8 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i13=64227, i14=-49463, i15=-51138, i16=-48062, i17=-30, i18=9, i19=-125, iArr3[]=new int[N];
        boolean b2=true;
        byte by1=54;

        FuzzerUtils.init(iArr3, 114);

        vMeth1(i13, Test.instanceCount, i13);
        iArr3[(i13 >>> 1) % N] = i13;
        i13 -= i13;
        for (i14 = 7; i14 < 298; i14 += 2) {
            i13 += (int)Test.fFld;
            for (i16 = 1; i16 < 11; ++i16) {
                i17 += (int)Test.fFld;
                if (b2) break;
                if (i16 != 0) {
                    vMeth_check_sum += i13 + i14 + i15 + i16 + i17 + (b2 ? 1 : 0) + i18 + i19 + by1 +
                        FuzzerUtils.checkSum(iArr3);
                    return;
                }
                switch ((i14 % 2) + 82) {
                case 82:
                    for (i18 = i14; 2 > i18; i18++) {
                        i13 = i17;
                        i17 *= -13;
                        i15 ^= i13;
                        by1 *= (byte)Test.dFld;
                    }
                case 83:
                    by1 >>= by1;
                }
            }
        }
        vMeth_check_sum += i13 + i14 + i15 + i16 + i17 + (b2 ? 1 : 0) + i18 + i19 + by1 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=30121, i20=8726, i21=5, i22=55, i23=7, i24=39, i25=-53413, i26=13, iArr4[][]=new int[N][N];

        FuzzerUtils.init(iArr4, -194);

        for (i = 10; i < 206; ++i) {
            vMeth();
            for (i20 = 4; i20 < 128; i20 += 2) {
                if (bFld) break;
                byFld *= (byte)1;
                i22 = 1;
                do {
                    i21 = (int)1.82096;
                    iArr4[i22 - 1][i22] |= i20;
                    i21 = i1;
                    i1 >>>= -53;
                    bFld = bFld;
                    i21 += (((i22 * Test.instanceCount) + i21) - Test.sFld);
                    i21 = i1;
                    iArr4[i20][i20] += (int)Test.instanceCount;
                } while (++i22 < 3);
                i21 += (i20 + i21);
                for (i23 = 3; i23 > i; i23 -= 3) {
                    Test.instanceCount = i24;
                    if (true) continue;
                    Test.instanceCount = i20;
                    Test.fFld += (((i23 * byFld) + i22) - i);
                }
                i1 = i22;
            }
        }
        i25 = 1;
        while (++i25 < 223) {
            i21 += (((i25 * Test.lFld) + i) - i20);
        }
        i24 = i;
        iArr4[(i1 >>> 1) % N][(i1 >>> 1) % N] &= 1754;
        i26 = 1;
        while (++i26 < 355) {
            i1 += (((i26 * i22) + i25) - Test.fFld);
            iArr4[(i24 >>> 1) % N][i26] <<= i24;
            Test.fFld = 47939;
            i1 %= (int)(i1 | 1);
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("iArr4 = " + FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("bFld byFld Test.sFld = " + (bFld ? 1 : 0) + "," + byFld + "," + Test.sFld);
        FuzzerUtils.out.println("Test.lFld Test.lArrFld = " + Test.lFld + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
