// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=31936L;
    public static short sFld=23796;
    public static volatile double dFld=122.124176;
    public static volatile int iFld=-160;
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i7) {

        int i8=35838, i9=-14, i10=40872, i11=-5, i12=-10, iArr1[]=new int[N];
        byte by=7;
        float f3=0.1008F;
        double d=12.20856;

        FuzzerUtils.init(iArr1, 0);

        i7 *= (int)1.478F;
        for (i8 = 11; i8 < 286; ++i8) {
            for (i10 = i8; i10 < 6; ++i10) {
                by &= (byte)i7;
                i9 *= 3415;
                i9 >>>= i10;
                f3 = -22;
                i9 += (i10 - i7);
                i9 += 16201;
            }
        }
        i11 += Test.sFld;
        i12 = 1;
        while (++i12 < 300) {
            iArr1[i12 - 1] += i11;
            l1 += i7;
            iArr1[i12 + 1] = i11;
            l1 += (long)d;
        }
        vMeth_check_sum += l1 + i7 + i8 + i9 + i10 + i11 + by + Float.floatToIntBits(f3) + i12 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth1(int i3, int i4, long l) {

        int i5=-11098, i6=-238, i13=0, i14=19784, iArr[]=new int[N];
        float f2=2.891F, f4=-36.336F, fArr[]=new float[N];
        boolean b=true;

        FuzzerUtils.init(iArr, -98);
        FuzzerUtils.init(fArr, 91.573F);

        for (i5 = 6; i5 < 356; i5 += 3) {
            f2 = (f2++);
            iArr[i5] = (int)(-((i3 - Test.sFld) - Test.instanceCount));
            vMeth(l, i3);
            f4 = 1;
            while (++f4 < 13) {
                b = false;
                i6 &= i5;
                for (i13 = 1; i13 < 1; i13++) {
                    i3 >>= i14;
                    i3 <<= i6;
                    fArr[(int)(f4)] += -9;
                    i14 += (((i13 * i5) + Test.sFld) - i3);
                    i4 += (int)l;
                    i4 += (i13 - Test.instanceCount);
                    iArr[(int)(f4)] = i3;
                }
            }
        }
        long meth_res = i3 + i4 + l + i5 + i6 + Float.floatToIntBits(f2) + Float.floatToIntBits(f4) + (b ? 1 : 0) + i13
            + i14 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i1=48803, i2=124, i15=-21, i16=149, i17=12, i18=182;
        float f1=20.294F;
        byte by1=-11, byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-114);
        FuzzerUtils.init(lArr, 30060L);

        i1 |= ((--i1) + (i1++));
        f1 -= (i1 * (i1--));
        i2 = 1;
        while (++i2 < 147) {
            i1 -= (int)((Test.instanceCount + iMeth1(-198, 8, Test.instanceCount)) - i1);
            i1 &= i2;
            Test.dFld += Test.dFld;
            for (i15 = 1; i15 < 11; ++i15) {
                if (false) break;
                for (i17 = i15; i17 < 2; i17++) {
                    boolean b1=false;
                    byArr = byArr;
                    i16 += (int)Test.instanceCount;
                    Test.instanceCount >>= -5;
                    by1 -= (byte)-3;
                    if (b1) continue;
                    lArr[i17 - 1] = 5;
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f1) + i2 + i15 + i16 + i17 + i18 + by1 + FuzzerUtils.checkSum(byArr)
            + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-3291, i19=-8, i20=-14, i21=-118, i22=13, i23=173, i24=-24;
        float f=-1.257F;

        i |= (int)(((--Test.instanceCount) * (Test.sFld - Test.instanceCount)) + (--f));
        i <<= (int)(i += (int)Test.instanceCount);
        iArrFld[(i >>> 1) % N] -= (int)(Math.abs((int)(1482662443L * (50363 * (i + i)))) + f);
        Test.instanceCount <<= (((Test.instanceCount * Test.instanceCount) - (i--)) % (iMeth() | 1));
        iArrFld[(i >>> 1) % N] <<= -63124;
        Test.instanceCount = i;
        f -= Test.instanceCount;
        i += i;
        Test.instanceCount = i;
        i = i;
        i = i;
        Test.sFld |= (short)i;
        i19 = 1;
        while (++i19 < 296) {
            i -= i;
            i20 = 1;
            while (++i20 < 85) {
                for (i21 = 1; i21 < 1; i21++) {
                    Test.instanceCount += i22;
                    i = i21;
                    i22 += i19;
                    Test.dFld += Test.sFld;
                    i += (-11 + (i21 * i21));
                    Test.iFld = (int)Test.instanceCount;
                }
                i += i19;
                i22 -= -10894;
                Test.iFld = -42268;
                for (i23 = 1; i23 < 1; ++i23) {
                    i24 += -1;
                    i += i23;
                }
                f = f;
            }
            iArrFld[i19] |= (int)-36487L;
        }

        FuzzerUtils.out.println("i f i19 = " + i + "," + Float.floatToIntBits(f) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 = " + i23 + "," + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld iArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
