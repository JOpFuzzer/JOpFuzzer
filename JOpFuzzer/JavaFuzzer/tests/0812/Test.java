// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-10593L;
    public static float fFld=-2.968F;
    public static boolean bFld=true;
    public static int iFld=-7;
    public float fFld1=75.614F;
    public boolean bFld1=true;
    public int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 105.421F);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, int i5) {

        int i6=-4678, i7=-208, i8=-14, iArr[]=new int[N];
        byte by=15;
        double d2=2.37712;

        FuzzerUtils.init(iArr, -246);

        for (i6 = 14; 285 > i6; i6++) {
            i5 += (((i6 * i5) + i6) - Test.fFld);
            i7 &= by;
            iArr[i6 + 1] <<= (int)Test.instanceCount;
            i4 += (i6 * i6);
            i5 *= i5;
            if (Test.bFld) continue;
        }
        i8 = 1;
        while (++i8 < 181) {
            iArr[i8] += by;
            i5 = i8;
            i4 = (int)Test.fFld;
            if (i8 != 0) {
            }
            i7 -= i5;
            i5 *= (int)d2;
            i5 >>= i5;
        }
        long meth_res = i4 + i5 + i6 + i7 + by + i8 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l2, double d1) {

        int i9=63604, i10=-752, i11=16860, i12=190, i13=51634, i14=3, i15=14, iArr1[]=new int[N];
        short s=5082, sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 23);
        FuzzerUtils.init(sArr, (short)5625);

        Test.instanceCount |= iMeth(i9, -8);
        for (i10 = 7; i10 < 141; i10++) {
            for (i12 = i10; i12 < 12; i12 += 3) {
                Test.fFld *= (float)-1.25242;
                iArr1[i10 - 1] <<= i10;
                Test.instanceCount = i9;
                for (i14 = 1; i14 < 1; ++i14) {
                    Test.fFld += (i14 * i14);
                    i11 = 10;
                    i15 += 3;
                    i13 >>= 97;
                    i15 -= i12;
                    sArr[i14 + 1] += (short)244;
                }
                Test.fArrFld[i10 + 1] = s;
                i9 += i9;
            }
        }
        vMeth1_check_sum += l2 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + i14 + i15 + s +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(long l, long l1, double d) {

        int i2=51, i3=1003, i16=11, i17=-42, i18=-124, i19=840;

        for (i2 = 161; i2 > 5; i2--) {
            Test.instanceCount += (i2 * i2);
            i3 += (-1 + (i2 * i2));
        }
        vMeth1(l1, d);
        for (i16 = 5; i16 < 155; i16++) {
            Test.fFld *= 236;
            for (i18 = 1; i18 < 11; i18++) {
                i3 += i2;
                Test.fFld *= -62653;
                if (true) {
                    if (true) {
                        Test.fFld *= 3;
                        Test.instanceCount += (((i18 * Test.fFld) + Test.fFld) - i2);
                    } else {
                        Test.fArrFld[i18 - 1] *= (float)d;
                        l *= i16;
                    }
                } else {
                    Test.instanceCount &= Test.iFld;
                }
            }
        }
        vMeth_check_sum += l + l1 + Double.doubleToLongBits(d) + i2 + i3 + i16 + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=-55, i1=46629, i20=-76, i21=11, i22=165, i23=-41799, i24=35103, i25=165, i26=-45010;
        float f=-2.282F;
        double d3=37.37416;
        short s1=16574;
        byte by1=-47, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-88);

        i <<= (int)(iArrFld[(i >>> 1) % N] <<= (int)((++Test.instanceCount) + iArrFld[(14 >>> 1) % N]));
        i -= (int)f;
        i1 = 1;
        do {
            vMeth(Test.instanceCount, Test.instanceCount, d3);
            if (Test.bFld) {
                iArrFld[i1 + 1] = (int)Test.instanceCount;
                for (i20 = 3; i20 < 64; i20++) {
                    i22 = 1;
                    while (++i22 < 2) {
                        byArr[i22] += (byte)f;
                        s1 += (short)i22;
                        Test.iFld += i22;
                        i += (i22 | (long)Test.fFld);
                        iArrFld[i22] = (int)d3;
                    }
                    for (i23 = i20; 2 > i23; ++i23) {
                        Test.instanceCount = 20303;
                    }
                    Test.fArrFld = Test.fArrFld;
                    iArrFld[i1] = i20;
                    for (i25 = 1; 2 > i25; ++i25) {
                        if (Test.bFld) {
                            lArrFld[i20 - 1] -= i25;
                            Test.bArrFld[i25] = Test.bFld;
                            i21 += by1;
                        } else if (true) {
                            switch (((i20 % 4) * 5) + 75) {
                            case 79:
                                i21 >>= i22;
                                fFld1 += i22;
                                i21 = i21;
                                break;
                            case 84:
                                if (false) {
                                    lArrFld[i25 + 1] = i1;
                                    s1 = (short)Test.instanceCount;
                                    Test.instanceCount = i25;
                                } else if (Test.bFld) {
                                    Test.fArrFld[i25] -= 151;
                                } else {
                                    try {
                                        i21 = (i26 % i26);
                                        i26 = (i26 / 211);
                                        i26 = (147 / i);
                                    } catch (ArithmeticException a_e) {}
                                }
                            case 76:
                                i21 = i25;
                                break;
                            case 93:
                                Test.fFld = Test.instanceCount;
                            default:
                                byArr[i1 + 1] -= (byte)Test.fFld;
                            }
                        } else {
                            i26 *= i26;
                        }
                    }
                }
            } else if (bFld1) {
                if (Test.bFld) break;
            }
        } while (++i1 < 391);

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("d3 i20 i21 = " + Double.doubleToLongBits(d3) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 s1 i23 = " + i22 + "," + s1 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("by1 byArr = " + by1 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld fFld1 bFld1 = " + Test.iFld + "," + Float.floatToIntBits(fFld1) + "," +
            (bFld1 ? 1 : 0));
        FuzzerUtils.out.println("iArrFld Test.fArrFld lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
