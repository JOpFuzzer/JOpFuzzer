// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static int iFld=-79;
    public static double dFld=0.63597;
    public static boolean bFld=false;
    public static byte byFld=90;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -223);
        FuzzerUtils.init(Test.lArrFld, -43L);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i12, short s) {

        int i13=-31455, i15=108, i16=33, i17=16571, i18=172, i19=53833;
        float f2=-59.536F;
        double d2=-66.14951;
        boolean b=true;

        Test.dFld = i12;
        i13 = 203;
        while (--i13 > 0) {
            Test.iFld += (int)1.67601;
            f2 += (((i13 * Test.instanceCount) + s) - i13);
            for (i15 = i13; 8 > i15; i15++) {
                Test.instanceCount += (i15 * i15);
                Test.instanceCount = s;
                Test.iArrFld[i15] += Test.iFld;
            }
            Test.iFld += (i13 ^ i13);
            f2 = 142;
            for (i17 = 1; i17 < 8; ++i17) {
                f2 *= i13;
                for (d2 = 1; d2 < 2; d2++) {
                    b = false;
                    i12 -= (int)d2;
                }
            }
        }
        vMeth_check_sum += l1 + i12 + s + i13 + Float.floatToIntBits(f2) + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(d2) + i19 + (b ? 1 : 0);
    }

    public static double dMeth(long l, int i9, double d1) {

        int i10=64, i11=-39834;
        short s1=31757;
        long l2=-2878667730139769454L, lArr[][]=new long[N][N];
        float f3=97.870F;

        FuzzerUtils.init(lArr, -1868642725L);

        for (i10 = 344; i10 > 9; i10 -= 2) {
            byte by=53;
            i9 = (Test.iFld = i9);
            l = i11;
            vMeth(l, 52942, s1);
            Test.instanceCount -= i11;
            if (Test.bFld) {
                Test.dFld += i9;
            } else if (true) {
                switch ((i10 % 3) + 105) {
                case 105:
                    l2 = 1;
                    while (++l2 < 9) {
                        i11 -= (int)Test.instanceCount;
                        Test.iArrFld[i10 + 1] >>= (int)Test.instanceCount;
                        if (false) continue;
                        Test.iFld *= (int)l;
                        lArr = lArr;
                    }
                case 106:
                    f3 *= by;
                    break;
                case 107:
                default:
                    Test.instanceCount <<= i10;
                }
            } else if (Test.bFld) {
                d1 = i10;
            } else {
                i11 -= (int)l2;
            }
        }
        long meth_res = l + i9 + Double.doubleToLongBits(d1) + i10 + i11 + s1 + l2 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth() {

        int i3=6, i4=-563, i5=-693, i6=29, i7=-41069, i8=253;
        float f1=0.590F;
        double d=-1.90019;

        Test.iFld <<= (int)(-Test.instanceCount);
        for (i3 = 363; 11 < i3; --i3) {
            for (i5 = 5; i5 > 1; --i5) {
                f1 = (float)((-(++i4)) - (d++));
                for (i7 = 1; i7 < 2; i7++) {
                    Test.iFld = (int)(dMeth(Test.instanceCount, Test.iFld, d) + Test.byFld);
                    f1 *= i8;
                }
                i4 = i6;
            }
            if (i6 != 0) {
            }
            Test.instanceCount += (long)(-2.766F + (i3 * i3));
            Test.instanceCount += i3;
            i8 += (int)Test.instanceCount;
            i4 += (i3 | i4);
            i8 = i3;
            Test.instanceCount >>= Test.instanceCount;
        }
        long meth_res = i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i7 + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=100, i20=-46993, i21=155, i22=72;
        float f=0.939F, fArr[]=new float[N];
        long l3=120L;
        short s2=-24352;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 59.460F);
        FuzzerUtils.init(byArr, (byte)52);

        i = 1;
        while (++i < 362) {
            int i2=-346;
            i2 <<= (int)((i2--) - ((86L - f) - iMeth()));
            for (i20 = 1; i20 < 70; ++i20) {
                for (l3 = 2; l3 > 1; l3 -= 2) {
                    Test.iArrFld[(int)(l3 + 1)] <<= (int)l3;
                    Test.iArrFld[i20 - 1] = i22;
                    s2 += (short)(l3 * s2);
                    i22 = i22;
                    i21 += i2;
                    i21 >>= i22;
                    Test.instanceCount = i;
                    f += (l3 * l3);
                    switch (((i % 7) * 5) + 37) {
                    case 51:
                        i21 = i21;
                        Test.dFld -= i20;
                        i22 += (int)l3;
                        i21 *= (int)Test.dFld;
                    case 70:
                        switch (((i22 >>> 1) % 8) + 114) {
                        case 114:
                            switch ((i % 2) + 102) {
                            case 102:
                                fArr[(int)(l3 + 1)] = f;
                                break;
                            case 103:
                                i21 += (int)(l3 - Test.iFld);
                                switch (((i22 >>> 1) % 4) + 69) {
                                case 69:
                                    Test.iArrFld[i20 + 1] = i20;
                                    Test.iFld *= i22;
                                    break;
                                case 70:
                                    i22 >>= Test.iFld;
                                    Test.instanceCount *= i21;
                                    break;
                                case 71:
                                    Test.iArrFld[i20] *= s2;
                                    Test.iFld = (int)114.219F;
                                    fArr[i] = i21;
                                    Test.iArrFld[(int)(l3)] = i;
                                    break;
                                case 72:
                                default:
                                    i22 -= (int)l3;
                                }
                                break;
                            }
                        case 115:
                            i2 += Test.iFld;
                            break;
                        case 116:
                            if (Test.bFld) continue;
                        case 117:
                            Test.lArrFld[(int)(l3 - 1)] -= i21;
                            break;
                        case 118:
                            f += (l3 * i);
                            break;
                        case 119:
                            Test.iFld -= i20;
                        case 120:
                            i22 += (int)Test.instanceCount;
                        case 121:
                            Test.iFld = i22;
                            break;
                        }
                        break;
                    case 67:
                        Test.instanceCount = l3;
                        break;
                    case 38:
                        Test.iArrFld[(int)(l3)] -= i22;
                        break;
                    case 54:
                    case 69:
                        byArr[i] = (byte)i20;
                        break;
                    case 62:
                        Test.iArrFld[i20 + 1] = (int)l3;
                        break;
                    default:
                        Test.instanceCount *= i20;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f i20 = " + i + "," + Float.floatToIntBits(f) + "," + i20);
        FuzzerUtils.out.println("i21 l3 i22 = " + i21 + "," + l3 + "," + i22);
        FuzzerUtils.out.println("s2 fArr byArr = " + s2 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.byFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
