// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=233L;
    public static byte byFld=-8;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, long l1, byte by) {

        int i6=-3030, i8=8, i9=-48429, i10=157, i11=-176, i12=90, i13=104, i14=-186, i15=5, i16=-3271, i17=9890,
            iArr[]=new int[N];
        float f=-1.486F;
        double d1=1.78275;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6L);
        FuzzerUtils.init(iArr, -7171);

        i5 -= i5;
        i6 = 1;
        while (++i6 < 355) {
            int i7=6;
            i7 *= i5;
            for (i8 = i6; i8 < 5; ++i8) {
                i5 <<= (int)Test.instanceCount;
                f = l1;
                for (i10 = 1; i10 < 1; ++i10) {
                    i11 += i10;
                    d1 = i10;
                }
            }
            for (i12 = 1; i12 < 5; ++i12) {
                for (i14 = 1; i14 < 2; i14++) {
                    i9 = i7;
                }
                for (i16 = 1; i16 < 2; ++i16) {
                    iArr[i16 - 1] >>= (int)-7064689381901690316L;
                }
                d1 = f;
            }
        }
        vMeth2_check_sum += i5 + l1 + by + i6 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 +
            Double.doubleToLongBits(d1) + i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, int i3, int i4) {

        short s=6231;
        int i18=23250, i19=0, i20=16, iArr1[]=new int[N];
        boolean b=false;
        double d2=-77.68516;

        FuzzerUtils.init(iArr1, -4);

        vMeth2(i4, Test.instanceCount, Test.byFld);
        s = (short)i4;
        for (i18 = 9; i18 < 203; ++i18) {
            b = b;
            d2 = 8;
            while (--d2 > 0) {
                i19 *= -60218;
            }
            i4 = (int)Test.instanceCount;
            b = b;
            i20 = 8;
            do {
                i19 -= -4;
                i19 = i3;
                Test.instanceCount *= i19;
                i4 = i20;
                iArr1[i20 - 1] *= (int)l;
                s += (short)(i20 - i3);
            } while (--i20 > 0);
        }
        vMeth1_check_sum += l + i3 + i4 + s + i18 + i19 + (b ? 1 : 0) + Double.doubleToLongBits(d2) + i20 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i1=53, i2=-126, i21=209, iArr2[]=new int[N];
        long l3=-238L;
        float f1=-1.856F;
        boolean b1=false;
        double d3=40.19082;
        short s1=-9602;

        FuzzerUtils.init(iArr2, -58);

        for (i1 = 1; 155 > i1; i1++) {
            i2 += (i1 ^ Test.instanceCount);
            switch ((i1 % 7) + 80) {
            case 80:
                vMeth1(-113L, i1, i1);
                for (l3 = 1; l3 < 10; ++l3) {
                    f1 = l3;
                    Test.instanceCount = i1;
                    i21 += (int)(l3 * l3);
                    if (b1) {
                        iArr2 = iArr2;
                    } else {
                        Test.instanceCount += i21;
                        Test.instanceCount >>= l3;
                        i21 = i21;
                        i2 -= -12;
                    }
                    Test.instanceCount += (((l3 * i2) + i21) - l3);
                }
                break;
            case 81:
                d3 *= l3;
            case 82:
                i21 = Test.byFld;
            case 83:
                i2 += i1;
                break;
            case 84:
                i2 -= (int)Test.instanceCount;
                break;
            case 85:
                iArr2[i1 + 1] -= i21;
                break;
            case 86:
                i21 = s1;
            default:
                Test.instanceCount = i2;
            }
        }
        vMeth_check_sum += i1 + i2 + l3 + i21 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + Double.doubleToLongBits(d3) +
            s1 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=2, i22=-4, i23=53885;
        double d=-2.2739;
        float f2=1.344F;
        boolean b2=true;

        i >>= i;
        d = 1;
        while (++d < 161) {
            if (b2) {
                vMeth();
                i -= i;
                i = (int)f2;
                iArrFld[(int)(d - 1)] = i;
            } else {
                iArrFld[(int)(d + 1)] ^= i;
                i -= (int)d;
            }
            i %= (int)-44053L;
            iArrFld[(i >>> 1) % N] += -208;
            i >>= 252;
            i += (int)(((d * f2) + Test.instanceCount) - i);
            Test.instanceCount <<= 44091L;
            iArrFld[(int)(d)] -= i;
        }
        Test.byFld += (byte)-81L;
        i = (int)Test.instanceCount;
        i22 = 1;
        do {
            Test.byFld -= (byte)-7402;
            Test.byFld >>= (byte)i;
            i += (int)Test.instanceCount;
            f2 = i22;
            i += (i22 * i22);
            Test.instanceCount = i22;
            i = (int)Test.instanceCount;
        } while (++i22 < 261);
        i23 = 1;
        do {
            i = i22;
            Test.instanceCount = i;
            iArrFld = iArrFld;
        } while (++i23 < 199);
        i >>= (int)-8270L;

        FuzzerUtils.out.println("i d f2 = " + i + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("b2 i22 i23 = " + (b2 ? 1 : 0) + "," + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld iArrFld = " + Test.instanceCount + "," + Test.byFld +
            "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
