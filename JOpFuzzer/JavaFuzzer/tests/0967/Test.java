// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2833490795165847711L;
    public static float fFld=-16.787F;
    public static byte byFld=126;
    public static volatile long lFld=2L;
    public static short sFld=-10339;
    public static boolean bFld=true;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.843F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, double d) {

        int i4=-3189, i5=42421, i6=-1, iArr[]=new int[N];
        boolean b=true;
        short s=-27955;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-26);
        FuzzerUtils.init(iArr, 27337);

        Test.instanceCount *= (long)Test.fFld;
        for (i4 = 3; 130 > i4; i4++) {
            switch ((i4 % 6) + 23) {
            case 23:
                byArr[i4 - 1] = (byte)i4;
                i6 = 1;
                while (++i6 < 12) {
                    if (b) {
                        iArr[i6] += (int)Test.instanceCount;
                        Test.fFld += i6;
                        b = b;
                    }
                    i5 += (i6 * i6);
                    Test.fFld = -12;
                    i3 -= i3;
                    Test.instanceCount = -254L;
                    i5 *= i4;
                    Test.instanceCount = -31600;
                }
                break;
            case 24:
                i5 += (int)(-37.643F + (i4 * i4));
                break;
            case 25:
                i5 -= (int)Test.instanceCount;
            case 26:
                i3 += (int)(5166L + (i4 * i4));
                break;
            case 27:
                i3 |= i6;
                break;
            case 28:
                s += (short)i4;
                break;
            default:
                if (b) continue;
            }
        }
        vMeth2_check_sum += i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + (b ? 1 : 0) + s +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1, int i2) {

        int i7=-99, i8=4, i9=-7, i10=88, i11=1862, iArr1[]=new int[N];
        float f=112.829F;
        double d1=-50.37392;
        short s1=-21566;
        boolean b1=true;

        FuzzerUtils.init(iArr1, 41197);

        i2 += (((i2++) + (-(i1 + 91))) - (i1 * (i1 * i2)));
        vMeth2(i2, 0.65532);
        for (i7 = 7; i7 < 387; ++i7) {
            for (f = 1; f < 4; f++) {
                iArr1[(int)(f + 1)] *= (int)Test.instanceCount;
                Test.instanceCount -= -772;
                d1 = 5L;
                i8 <<= Test.byFld;
                s1 += (short)((long)f | i8);
                if (true) {
                    for (i10 = 2; i10 > 1; --i10) {
                        d1 *= i9;
                        i8 += (((i10 * Test.instanceCount) + i8) - s1);
                        Test.instanceCount = i7;
                    }
                    Test.fFld += (f + Test.lFld);
                } else if (b1) {
                    i11 /= (int)(Test.lFld | 1);
                } else {
                    i1 -= 60;
                    vMeth1_check_sum += i1 + i2 + i7 + i8 + Float.floatToIntBits(f) + i9 + Double.doubleToLongBits(d1)
                        + s1 + i10 + i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i7 + i8 + Float.floatToIntBits(f) + i9 + Double.doubleToLongBits(d1) + s1 + i10 +
            i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i12=-195, i13=-231, i14=9, i15=148, i16=71, i17=20141, i18=47, iArr2[]=new int[N];
        boolean b2=false;
        short s2=6158;

        FuzzerUtils.init(iArr2, 38414);

        vMeth1(i12, i12);
        Test.fArrFld[(i12 >>> 1) % N] *= i12;
        for (i13 = 8; 327 > i13; ++i13) {
            if (b2) continue;
            Test.lFld = s2;
            for (i15 = i13; 5 > i15; i15++) {
                Test.instanceCount = i14;
                i12 = i12;
                i14 += i15;
                i12 = i12;
                if (b2) break;
                if (i16 != 0) {
                    vMeth_check_sum += i12 + i13 + i14 + (b2 ? 1 : 0) + s2 + i15 + i16 + i17 + i18 +
                        FuzzerUtils.checkSum(iArr2);
                    return;
                }
            }
            for (i17 = 1; 5 > i17; ++i17) {
                iArr2[i17 - 1] = i18;
                s2 += (short)Test.fFld;
            }
        }
        vMeth_check_sum += i12 + i13 + i14 + (b2 ? 1 : 0) + s2 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=64277, i19=59193, i20=1, i21=230, i22=0, i23=23605, i24=-5, iArr3[]=new int[N];
        double d2=1.43353, dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1L);
        FuzzerUtils.init(iArr3, -41740);
        FuzzerUtils.init(dArr, -1.70650);

        lArr[(161 >>> 1) % N] += (((i + i) / ((++i) | 1)) * ((i - -213) * (i * i)));
        vMeth();
        for (i19 = 7; i19 < 349; ++i19) {
            for (i21 = 2; i21 < 74; ++i21) {
                i22 = (int)Test.instanceCount;
                i22 >>= i20;
                iArr3[i21] /= 17772;
                switch ((((i20 >>> 1) % 9) * 5) + 71) {
                case 79:
                    i &= i;
                    Test.fFld /= (Test.instanceCount | 1);
                    break;
                case 106:
                    i23 = 1;
                    while (++i23 < 2) {
                        Test.fFld += (-64196 + (i23 * i23));
                        if (false) {
                            i = (int)Test.lFld;
                            i22 = (int)-46530L;
                            i22 += i23;
                            Test.lFld = Test.sFld;
                        } else {
                            i22 += (((i23 * Test.lFld) + Test.instanceCount) - i19);
                            Test.instanceCount = i21;
                            d2 -= i21;
                        }
                        i22 = i23;
                        Test.instanceCount ^= i;
                        Test.fArrFld[i21 - 1] -= Test.instanceCount;
                        i20 = Test.sFld;
                        if (false) {
                            try {
                                iArr3[i21 + 1] = (105 / i);
                                i20 = (i22 / i20);
                                i20 = (i20 / iArr3[i21]);
                            } catch (ArithmeticException a_e) {}
                            Test.fArrFld[i21 + 1] = (float)d2;
                            d2 -= i21;
                            Test.instanceCount = Test.byFld;
                        } else if (Test.bFld) {
                            i20 = (int)d2;
                        } else {
                            i20 >>= i;
                        }
                    }
                    break;
                case 85:
                    i |= i23;
                case 108:
                    Test.instanceCount |= -73;
                    break;
                case 76:
                    i24 = 50248;
                    break;
                case 112:
                    i24 += i21;
                    break;
                case 116:
                    try {
                        i24 = (214 / iArr3[i19 - 1]);
                        i = (-213 % i23);
                        i22 = (i19 % -31);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 115:
                    dArr[i19] = i22;
                    break;
                case 111:
                    Test.instanceCount >>= i24;
                    break;
                default:
                    Test.lFld = (long)-91.59508;
                }
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d2 i24 lArr = " + Double.doubleToLongBits(d2) + "," + i24 + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr3 dArr = " + FuzzerUtils.checkSum(iArr3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.lFld Test.sFld Test.bFld = " + Test.lFld + "," + Test.sFld + "," + (Test.bFld ? 1
            : 0));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
