// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=28979L;
    public static int iFld=-6;
    public static long lFld=14L;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -233);
        FuzzerUtils.init(Test.lArrFld, -11847L);
        FuzzerUtils.init(Test.fArrFld, 0.553F);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5, int i6) {

        int i7=-33, i8=-13, i9=49522, i10=-3, i11=51433, i12=0, iArr[]=new int[N];
        short s=-31614;
        double d1=6.69919;
        boolean b=true;

        FuzzerUtils.init(iArr, -26);

        for (i7 = 158; i7 > 1; i7 -= 3) {
            for (i9 = 1; i9 < 29; ++i9) {
                float f=2.553F;
                i6 = i4;
                f -= Test.instanceCount;
                iArr[i9 + 1] >>= 253;
                iArr[i9] >>>= (int)-4007747366L;
                Test.instanceCount <<= -97L;
                s = (short)Test.instanceCount;
            }
            i4 &= i8;
            i11 = 1;
            do {
                i12 = 1;
                do {
                    iArr[i7 + 1] = 22;
                    if (true) {
                        iArr = iArr;
                        Test.instanceCount += (long)d1;
                        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s + i11 + i12 +
                            Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    } else if (b) {
                        if (i6 != 0) {
                            vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s + i11 + i12 +
                                Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                    } else if (false) {
                        i4 = (int)Test.instanceCount;
                    }
                } while (++i12 < 4);
            } while ((i11 += 3) < 29);
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s + i11 + i12 + Double.doubleToLongBits(d1) + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr);
    }

    public static boolean bMeth(int i1, int i2, int i3) {

        int i13=-2, i14=206, i15=-202, i16=-58947, i17=-54, i18=15502, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, -238);

        vMeth1(Test.iFld, 25144, i3);
        Test.iFld = i1;
        for (i13 = 2; i13 < 370; ++i13) {
            for (i15 = 1; 5 > i15; ++i15) {
                if (false) continue;
                i16 += (((i15 * i16) + i2) - i13);
                Test.instanceCount >>>= Test.instanceCount;
                if (b1) break;
                b1 = b1;
                Test.iFld |= 27519;
                Test.instanceCount >>= Test.instanceCount;
                b1 = b1;
                for (i17 = 1; i17 < 2; ++i17) {
                    iArr1 = iArr1;
                    i16 = i2;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + i17 + i18 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(double d) {

        int i=47252, i19=-27821, i20=-2321, i21=25012, i22=-239, iArr2[]=new int[N];
        float f1=73.393F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, -150);
        FuzzerUtils.init(lArr, 13479L);

        Test.iFld >>= (--Test.iFld);
        i = 1;
        do {
            if (bMeth(Test.iFld, i, Test.iFld)) continue;
            for (i19 = i; 10 > i19; ++i19) {
                Test.instanceCount += (-9547 + (i19 * i19));
                i20 += (int)1.751F;
                Test.lFld |= i;
                for (i21 = 1; i21 < 1; i21++) {
                    Test.iArrFld[i - 1] = 54641;
                    i20 += (i21 ^ Test.lFld);
                    iArr2[i] >>>= -11;
                    lArr[i19 - 1] += i;
                    f1 *= (float)d;
                }
                i22 <<= (int)Test.lFld;
                Test.iFld += (i19 - f1);
            }
        } while (++i < 151);
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i19 + i20 + i21 + i22 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        double d2=64.100090, dArr[]=new double[N];
        int i23=-60, i24=26457, i25=7, i26=0, i27=-34879, i28=3, i29=194, i30=10532;
        boolean b2=true;
        float f2=2.853F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)29875);
        FuzzerUtils.init(dArr, -86.68768);

        vMeth(d2);
        i23 = 1;
        do {
            sArr = FuzzerUtils.short1array(N, (short)26650);
            Test.iFld += (int)-1.671F;
            for (i24 = 6; i24 < 150; i24++) {
                Test.lFld -= Test.lFld;
                Test.iFld = (int)Test.lFld;
                i26 = 1;
                do {
                    Test.iFld += (i26 ^ i25);
                    i25 = (int)Test.lFld;
                    if (b2) break;
                    Test.lArrFld = Test.lArrFld;
                    Test.iFld = (int)d2;
                    Test.fArrFld[i24] *= f2;
                    Test.lFld = Test.iFld;
                } while (++i26 < 2);
                Test.lFld -= Test.iFld;
                Test.iFld -= i24;
                Test.lFld -= i26;
                f2 /= (Test.lFld | 1);
                Test.lFld += i24;
                Test.iArrFld = Test.iArrFld;
            }
            for (i27 = 4; 150 > i27; ++i27) {
                Test.lFld *= (long)d2;
                Test.iFld = i28;
            }
            i28 += (i23 * i23);
            dArr[i23 - 1] = 0.131058;
            Test.iFld *= i27;
            for (i29 = 9; i29 < 150; i29++) {
                i30 += (-139 + (i29 * i29));
                i28 = i23;
            }
        } while (++i23 < 167);

        FuzzerUtils.out.println("d2 i23 i24 = " + Double.doubleToLongBits(d2) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 b2 = " + i25 + "," + i26 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("f2 i27 i28 = " + Float.floatToIntBits(f2) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 sArr = " + i29 + "," + i30 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.lFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
