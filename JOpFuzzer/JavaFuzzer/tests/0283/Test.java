// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=7767246537281267215L;
    public short sFld=7625;
    public long lFld=-25120L;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[][]=new double[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 19530);
        FuzzerUtils.init(Test.dArrFld, -43.48776);
        FuzzerUtils.init(Test.fArrFld, 2.696F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=100, i5=43211, i6=-225, i7=1, i8=-55331, i9=36335, i10=12, i11=64710;
        float f1=0.518F;
        double d1=-5.94991;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 0L);

        for (i4 = 11; i4 < 333; ++i4) {
            if (true) {
                for (i6 = 1; i6 < 5; ++i6) {
                    i3 *= 253;
                    Test.dArrFld = Test.dArrFld;
                    Test.fArrFld[i4 + 1] = -8590234902226145200L;
                }
                i5 += (((i4 * f1) + Test.instanceCount) - i4);
                Test.instanceCount += i4;
            } else {
                Test.iArrFld[i4 - 1] = (int)-4943208259034391526L;
                for (i8 = i4; i8 < 5; ++i8) {
                    short s=-8877;
                    i5 = i9;
                    lArr[i8][i4] = s;
                    for (i10 = 1; i10 < 1; ++i10) {
                        i5 += i10;
                        d1 = f1;
                    }
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i2=56603, i12=50, i13=194, i14=-41, i15=-249, i16=-213;
        short s1=6437;
        float f2=27.963F;
        byte by=-16;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 162L);

        i2 += ((Test.iArrFld[(-2 >>> 1) % N]--) - iMeth(i2));
        s1 += s1;
        for (f2 = 11; f2 < 301; ++f2) {
            Test.instanceCount = i12;
            for (i13 = 1; i13 < 6; i13++) {
                i2 += (i13 + by);
                Test.instanceCount += i13;
                i14 *= (int)-115.467F;
                i2 = (int)Test.instanceCount;
                i2 = i13;
                for (i15 = 2; i15 > 1; i15--) {
                    Test.instanceCount += (((i15 * i16) + Test.instanceCount) - Test.instanceCount);
                    i16 = 0;
                    lArr1[i15 - 1] -= i16;
                    Test.iArrFld[(int)(f2)] = s1;
                }
            }
        }
        vMeth1_check_sum += i2 + s1 + Float.floatToIntBits(f2) + i12 + i13 + i14 + by + i15 + i16 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        double d=47.100995;
        int i1=9, i17=0;
        long l=3842959314L, lArr2[][]=new long[N][N];
        float f4=-119.383F;

        FuzzerUtils.init(lArr2, -2200L);

        for (d = 2; d < 160; d++) {
            vMeth1();
        }
        for (l = 10; 372 > l; l++) {
            i17 = i1;
            i17 = i17;
            if (true) {
                i1 >>>= i17;
                Test.iArrFld[(int)(l + 1)] = i17;
            } else if (true) {
                i1 += (int)Test.instanceCount;
                Test.iArrFld[(int)(l)] = (int)l;
            } else {
                Test.fArrFld[(int)(l - 1)] += Test.instanceCount;
                i1 <<= i1;
                Test.instanceCount |= l;
                lArr2[(int)(l - 1)][(int)(l + 1)] += (long)48.59553;
            }
        }
        f4 *= i17;
        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + l + i17 + Float.floatToIntBits(f4) +
            FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=158, i18=-3, i19=-127, i20=-20017, i21=-60359, i22=-174, i23=195, i24=-11, i25=12, i26=-13;
        float f=-8.123F;
        long l1=12L;
        boolean b=true;

        Test.iArrFld[(i >>> 1) % N] -= (int)f;
        try {
            f -= (i--);
            vMeth();
            i18 = 1;
            do {
                Test.iArrFld[i18 + 1] >>>= (int)Test.instanceCount;
                sFld = (short)i;
                Test.instanceCount -= Test.instanceCount;
                i += (((i18 * i18) + i18) - i);
                Test.iArrFld[i18 - 1] -= 61366;
                try {
                    i = (i / i18);
                    i = (-19460 % i);
                    i = (i % -208);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += l1;
                i = i18;
                for (i19 = 1; i19 < 92; i19++) {
                    lFld *= i18;
                    if (b) continue;
                    i20 += (int)2.582F;
                    for (i21 = 1; i21 < 2; i21++) {
                        i20 += 19780;
                    }
                }
            } while (++i18 < 272);
        }
        catch (UserDefinedExceptionTest exc1) {
            Test.iArrFld[(i21 >>> 1) % N] = i18;
            i23 = 1;
            do {
                i22 += (i23 * i23);
                Test.instanceCount += (-21629L + (i23 * i23));
            } while ((i23 += 3) < 338);
        }
        i22 %= (int)(Test.instanceCount | 1);
        for (i24 = 8; 132 > i24; ++i24) {
            i25 += (((i24 * i23) + i26) - l1);
            i25 += (int)lFld;
            Test.dArrFld[i24][i24 + 1] *= i20;
            Test.iArrFld[i24 + 1] <<= i18;
            i22 += i23;
        }

        FuzzerUtils.out.println("i f i18 = " + i + "," + Float.floatToIntBits(f) + "," + i18);
        FuzzerUtils.out.println("l1 i19 i20 = " + l1 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("b i21 i22 = " + (b ? 1 : 0) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 = " + i26);

        FuzzerUtils.out.println("Test.instanceCount sFld lFld = " + Test.instanceCount + "," + sFld + "," + lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
