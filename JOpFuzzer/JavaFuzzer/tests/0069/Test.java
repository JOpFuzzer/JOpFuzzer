// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=153L;
    public static float fFld=-101.649F;
    public static double dFld=1.23553;
    public static volatile short sFld=-22391;
    public static byte byFld=76;
    public short sArrFld[]=new short[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.809F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, long l2, long l3) {

        byte by=89;
        int i5=-89, i6=-203, i7=-90, i8=11, i9=-12, iArr[]=new int[N];
        short s=17457;
        double d=0.96093;

        FuzzerUtils.init(iArr, 30);

        i4 += by;
        i5 = 1;
        while (++i5 < 361) {
            boolean b=true;
            by += (byte)(i5 * by);
            if (b) {
                i4 -= i4;
                i4 *= i5;
                iArr[i5 - 1] = (int)l3;
                for (i6 = 1; i6 < 5; i6++) {
                    s *= (short)l3;
                    i7 = -12372;
                    for (i8 = 2; i8 > i5; i8 -= 2) {
                        float f=2.545F;
                        d -= i5;
                        f /= (i9 | 1);
                        i4 += i8;
                        i9 += (((i8 * i4) + i8) - i8);
                    }
                }
            } else if (b) {
                i7 += (((i5 * i7) + i9) - i7);
            } else {
                l2 += i8;
            }
        }
        vMeth2_check_sum += i4 + l2 + l3 + by + i5 + i6 + i7 + s + i8 + i9 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        int i10=-13121, i11=4, i12=186, iArr1[]=new int[N];
        byte by1=3;
        short s1=-22576;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 8.891F);
        FuzzerUtils.init(iArr1, -17);

        vMeth2(i2, Test.instanceCount, Test.instanceCount);
        i2 -= i2;
        i3 *= (int)Test.fFld;
        i10 = 1;
        do {
            i2 = i2;
            i3 += i3;
        } while (++i10 < 232);
        fArr[(12 >>> 1) % N][(i3 >>> 1) % N] = i10;
        by1 = (byte)i3;
        i2 *= (int)Test.dFld;
        for (i11 = 3; i11 < 210; i11++) {
            s1 += (short)(i11 | i10);
            i2 = (int)Test.instanceCount;
            i12 >>= i2;
            Test.fFld = i3;
            Test.instanceCount += (i11 + i12);
        }
        vMeth1_check_sum += i2 + i3 + i10 + by1 + i11 + i12 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
            + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(long l) {

        int i=-128, i1=-14847, i14=9, i15=-33063, i16=-11983, i17=13;
        long l1=-1242668235L;

        sArrFld[(-14775 >>> 1) % N] = (short)(-((i >>= i) % (i | 1)));
        for (l1 = 14; l1 < 316; ++l1) {
            i1 += (int)(l1 + i);
            i1 += (int)(l1 - i);
        }
        vMeth1(i, i);
        i1 += i1;
        i = i1;
        for (i14 = 11; i14 < 298; ++i14) {
            switch (((i >>> 1) % 2) + 52) {
            case 52:
                i1 -= i14;
                i15 >>= i1;
                break;
            case 53:
                for (i16 = i14; 6 > i16; ++i16) {
                    Test.fFld = Test.sFld;
                    i15 ^= -11949;
                    i17 += (131 + (i16 * i16));
                }
                break;
            }
        }
        vMeth_check_sum += l + i + l1 + i1 + i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i18=-46148, i19=28509, i20=-3, i21=-148, i22=10, i23=35193, i24=2, iArr2[][]=new int[N][N];
        long l4=-8505227765277814675L;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(iArr2, 13);
        FuzzerUtils.init(fArr1, 0.487F);

        vMeth(Test.instanceCount);
        for (i18 = 387; i18 > 3; --i18) {
            i19 = i19;
            i19 *= (int)Test.instanceCount;
            for (i20 = 1; i20 < 66; i20++) {
                for (l4 = i20; l4 < 2; l4++) {
                    i21 = (int)Test.fFld;
                    i21 += (int)Test.instanceCount;
                    Test.instanceCount += (l4 * l4);
                    Test.fArrFld[(int)(l4 + 1)] = l4;
                    Test.byFld = (byte)i18;
                    i22 = i22;
                    i22 *= (int)1644133635006304280L;
                    i21 = -46823;
                }
                i22 -= (int)Test.instanceCount;
                Test.instanceCount = l4;
                i21 = i22;
                for (i23 = i18; i23 < 2; ++i23) {
                    Test.instanceCount += i20;
                    i19 = i21;
                    i19 = i24;
                    Test.instanceCount = (long)Test.dFld;
                    iArr2[i18][i18 + 1] = i24;
                }
            }
            Test.instanceCount >>= i18;
            fArr1[i18 - 1][i18 + 1] -= Test.fFld;
            switch ((i18 % 3) + 83) {
            case 83:
                i24 <<= i21;
                i22 = -46;
                Test.instanceCount -= i24;
                break;
            case 84:
                i24 -= i19;
                break;
            case 85:
                Test.fFld = i21;
                break;
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 l4 i22 = " + i21 + "," + l4 + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr2 = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.sFld Test.byFld sArrFld = " + Test.sFld + "," + Test.byFld + "," +
            FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
