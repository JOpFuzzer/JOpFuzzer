// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-131L;
    public boolean bFld=true;
    public static double dFld=-1.87529;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 40.389F);
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth() {

        float f=2.528F;
        int i2=-47112, i3=20582, i4=-35002, i5=-1, i6=168, i7=-13, i8=-1, iArr[]=new int[N];
        long l=-7396665157634895910L, lArr[]=new long[N];
        boolean b1=false;
        double d=2.110602;
        short s=-23238;

        FuzzerUtils.init(lArr, 194L);
        FuzzerUtils.init(iArr, 215);

        lArr[(133 >>> 1) % N] += (long)f;
        for (i2 = 14; i2 < 253; ++i2) {
            i3 += (i2 * i2);
            if (b1) {
                for (i4 = 1; i4 < 7; i4++) {
                    for (l = 1; l < 2; ++l) {
                        i3 = i3;
                    }
                    b1 = b1;
                    d = i6;
                    for (i7 = 1; i7 < 2; i7++) {
                        f = -14L;
                        if (b1) break;
                        f -= (float)0.105510;
                        f -= Test.instanceCount;
                        iArr = iArr;
                    }
                }
            } else {
                Test.instanceCount = s;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + l + i6 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(d) + i7 + i8 + s + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1() {

        boolean b=true;
        int i9=-217;

        b = bMeth();
        Test.fArrFld[(i9 >>> 1) % N] *= i9;
        vMeth1_check_sum += (b ? 1 : 0) + i9;
    }

    public void vMeth() {

        int i10=-7, i11=-7451, i12=-3, i13=-12222, i14=174, i15=-31140, i16=-141;
        double d1=-13.13708, d2=33.129308;
        short s1=25367;

        vMeth1();
        for (i10 = 13; i10 < 214; i10 += 3) {
            i11 -= i10;
            i11 = (int)Test.instanceCount;
            Test.instanceCount = i11;
        }
        for (i12 = 5; i12 < 184; ++i12) {
            Test.instanceCount >>= i13;
            d1 %= (i12 | 1);
            for (d2 = 1; d2 < 9; d2++) {
                if (bFld) {
                    for (i15 = 1; i15 < 2; ++i15) {
                        i11 += (((i15 * i16) + Test.instanceCount) - i12);
                        i16 += i13;
                        Test.iArrFld[i12] += i12;
                        d1 *= 85L;
                    }
                } else {
                    lArrFld[(int)(d2 - 1)] += s1;
                    vMeth_check_sum += i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) +
                        Double.doubleToLongBits(d2) + i14 + i15 + i16 + s1;
                    return;
                }
            }
        }
        vMeth_check_sum += i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i14 +
            i15 + i16 + s1;
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=40134, i17=-1, i18=1, i19=9681, i20=-10, i21=-10992, i22=-135, i23=-33100, i24=-8, iArr1[][]=new
            int[N][N];
        byte by=-30;
        float f1=106.745F;
        short s2=26227;

        FuzzerUtils.init(iArr1, -7);

        for (i = 3; 180 > i; ++i) {
            vMeth();
            lArrFld[i] = (long)Test.dFld;
            if (bFld) break;
            for (i17 = 142; i17 > 6; i17 -= 3) {
                i18 -= (int)Test.dFld;
                lArrFld[i + 1] = i17;
                lArrFld[i - 1] = by;
                i18 *= (int)Test.instanceCount;
                if (bFld) continue;
                i18 -= i;
                i18 = (int)f1;
                for (i19 = i; i19 < 4; ++i19) {
                    iArr1 = iArr1;
                    f1 += (i19 + i20);
                }
                switch (((i17 % 4) * 5) + 39) {
                case 49:
                    lArrFld = lArrFld;
                    for (i21 = i; i21 < 4; ++i21) {
                        i22 += (i21 * i21);
                    }
                case 41:
                    i18 = (int)Test.dFld;
                    f1 = i1;
                    break;
                case 51:
                    for (i23 = 1; i23 < 4; i23++) {
                        i24 = s2;
                        i22 += (((i23 * i23) + i24) - i1);
                        i20 += (i23 * Test.instanceCount);
                        Test.dFld -= i18;
                        i20 &= i1;
                        lArrFld[i - 1] = i1;
                        s2 *= (short)1.506F;
                        s2 += (short)(2.799F + (i23 * i23));
                    }
                    break;
                case 50:
                    if (bFld) break;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 by f1 = " + i18 + "," + by + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("s2 iArr1 = " + s2 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.dFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fArrFld Test.iArrFld lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
