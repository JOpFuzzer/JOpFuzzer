// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=8635852655642749848L;
    public static short sFld=27570;
    public static volatile double dFld=1.36039;
    public int iFld=-5;
    public static float fFld=-44.918F;
    public long lFld=-5359255533807889469L;
    public long lArrFld[]=new long[N];
    public int iArrFld[][]=new int[N][N];
    public float fArrFld[]=new float[N];
    public volatile byte byArrFld[]=new byte[N];

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        int i5=-59567, i6=-176, i7=11, i8=-11, i9=-127, i10=3, iArr[]=new int[N];
        float f=0.588F;
        boolean b1=false, bArr[]=new boolean[N];
        byte by=-1;
        double d1=9.41575;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, -11L);

        for (i5 = 222; 8 < i5; --i5) {
            for (i7 = 1; i7 < 8; ++i7) {
                i6 >>= -10;
                switch ((((i7 >>> 1) % 10) * 5) + 74) {
                case 95:
                    for (i9 = 2; i9 > 1; i9--) {
                        iArr[i5 - 1] = (int)f;
                        b1 = b1;
                        i3 = by;
                        i3 = -59703;
                        d1 -= i10;
                        Test.sFld *= (short)f;
                        i6 = (int)Test.instanceCount;
                    }
                    bArr[i7 + 1] = b1;
                    Test.instanceCount += i7;
                    lArr = lArr;
                case 99:
                    i10 ^= i3;
                case 79:
                    i6 <<= i3;
                    break;
                case 116:
                    i8 >>= i10;
                    break;
                case 115:
                    iArr = iArr;
                    break;
                case 75:
                    i10 += (198 + (i7 * i7));
                case 124:
                    f *= Test.instanceCount;
                    break;
                case 84:
                    Test.instanceCount = i4;
                case 87:
                    iArr[i5] = i5;
                    break;
                case 123:
                    Test.instanceCount = Test.instanceCount;
                    break;
                default:
                    Test.instanceCount = i7;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + by +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, double d, long l1) {

        int i11=-53688;

        vMeth1(i11, i11);
        vMeth_check_sum += l + Double.doubleToLongBits(d) + l1 + i11;
    }

    public float fMeth(int i, boolean b, int i1) {

        int i2=-56646, i12=62158, i13=8, i14=-7, i15=-36;
        double d2=-2.109176;
        float f1=-61.577F;

        i2 = 1;
        do {
            switch (((i2 % 8) * 5) + 23) {
            case 58:
                i += (-2 + (i2 * i2));
                if (b) continue;
                break;
            case 57:
                vMeth(Test.instanceCount, Test.dFld, Test.instanceCount);
                for (i12 = 1; i12 < 8; i12++) {
                    if (b) break;
                    Test.instanceCount += i12;
                    for (i14 = 2; 1 < i14; i14 -= 2) {
                        lArrFld[i12] -= i;
                        iArrFld[i2 - 1][i2 + 1] += i14;
                        i15 = i1;
                        lArrFld[i12] >>= -46068;
                        i13 = i14;
                        Test.instanceCount += (i14 ^ i13);
                    }
                }
            case 36:
                i15 -= (int)Test.instanceCount;
            case 45:
                i15 >>= i;
                break;
            case 26:
                i += i2;
                break;
            case 40:
                i -= i14;
            case 48:
                i *= (int)d2;
                break;
            case 24:
                iArrFld[i2][i2 - 1] -= (int)f1;
                break;
            }
        } while (++i2 < 212);
        long meth_res = i + (b ? 1 : 0) + i1 + i2 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=0, i17=-23075, i18=137, i19=-13, i20=-12770, i21=42, i22=-13, i23=-28504, i24=14863, i25=-62488;
        boolean b2=false;
        long l2=6L;

        Test.instanceCount = (long)fMeth(i16, b2, i16);
        i17 = 1;
        do {
            i16 += i17;
            for (i18 = 1; i18 < 66; ++i18) {
                i19 -= i19;
                i16 = i19;
                Test.instanceCount += i17;
                i16 += i19;
                i19 = i16;
            }
            iFld *= (int)Test.instanceCount;
            for (l2 = 1; l2 < 66; l2++) {
                fArrFld[i17 + 1] -= i19;
                i20 *= -41;
                iFld *= (int)Test.fFld;
                byArrFld[(i20 >>> 1) % N] >>= (byte)iFld;
                for (i21 = 2; i21 > 1; --i21) {
                    Test.dFld += i16;
                    Test.instanceCount = l2;
                }
            }
            i23 = 1;
            do {
                for (i24 = i23; i24 < 3; i24 += 2) {
                    if (b2) break;
                    lFld = l2;
                    iArrFld[i17][i24] += (int)Test.dFld;
                    Test.instanceCount = -4;
                    iArrFld[i23 - 1][i17] = i21;
                    iArrFld[i23 - 1][i17 - 1] += 64;
                    i19 = i20;
                    i16 = (int)Test.fFld;
                }
                iArrFld[i23 - 1][i17 - 1] += i18;
                iFld |= (int)lFld;
            } while ((i23 += 3) < 66);
        } while (++i17 < 384);

        FuzzerUtils.out.println("i16 b2 i17 = " + i16 + "," + (b2 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 l2 = " + i18 + "," + i19 + "," + l2);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iFld Test.fFld lFld = " + iFld + "," + Float.floatToIntBits(Test.fFld) + "," + lFld);
        FuzzerUtils.out.println("lArrFld iArrFld fArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
