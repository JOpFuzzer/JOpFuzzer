// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-965506794717912065L;
    public static short sFld=5676;
    public static float fFld=-123.6F;
    public static int iArrFld[][]=new int[N][N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -65486);
        FuzzerUtils.init(Test.lArrFld, 3225383290L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2, float f2) {

        int i6=-1406, i7=8, i8=15513, i9=-1;
        boolean b=false;
        long l3=-3318730256L;

        i6 = (int)f2;
        i6 += Test.sFld;
        b = b;
        i6 -= -15316;
        for (i7 = 257; i7 > 15; i7 -= 2) {
            Test.iArrFld = Test.iArrFld;
            Test.lArrFld[i7 - 1] &= -88;
            i8 = i7;
            Test.iArrFld[i7 - 1][i7 + 1] = i8;
        }
        for (l3 = 15; 343 > l3; l3++) {
            f2 += (l3 - l3);
            Test.iArrFld[(int)(l3 - 1)][(int)(l3)] >>= i9;
            i9 *= 5;
            Test.iArrFld[(int)(l3)] = Test.iArrFld[(int)(l3 + 1)];
            if (i8 != 0) {
                vMeth2_check_sum += l1 + l2 + Float.floatToIntBits(f2) + i6 + (b ? 1 : 0) + i7 + i8 + l3 + i9;
                return;
            }
        }
        vMeth2_check_sum += l1 + l2 + Float.floatToIntBits(f2) + i6 + (b ? 1 : 0) + i7 + i8 + l3 + i9;
    }

    public static void vMeth1(int i5) {

        short s=-16329;
        float f1=-2.531F;
        int i10=-51, i11=-93, i12=-57579, i13=-213, i14=10, i15=0;
        double d=-2.47114;

        i5 -= (int)(((--i5) - (s++)) - f1);
        vMeth2(Test.instanceCount, Test.instanceCount, 2.337F);
        for (i10 = 2; i10 < 170; ++i10) {
            i5 += i5;
            i5 -= i10;
        }
        Test.iArrFld[(i11 >>> 1) % N][(i11 >>> 1) % N] = i11;
        d -= i11;
        f1 -= f1;
        for (i12 = 13; i12 < 305; i12++) {
            i11 += Test.sFld;
            f1 = -14;
            for (i14 = 1; i14 < 6; i14++) {
                i15 += (177 + (i14 * i14));
                Test.lArrFld[i12] *= (long)f1;
            }
            f1 -= 1;
        }
        vMeth1_check_sum += i5 + s + Float.floatToIntBits(f1) + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 +
            i14 + i15;
    }

    public static void vMeth(long l, int i4, float f) {

        byte by=-95;

        by += (byte)0;
        vMeth1(i4);
        vMeth_check_sum += l + i4 + Float.floatToIntBits(f) + by;
    }

    public void mainTest(String[] strArr1) {

        int i=62, i1=-13307, i2=-4, i3=29, i16=187, i17=-13, i19=-53, i20=-28230, iArr[]=new int[N];
        double d1=-61.63043;
        byte by1=24;
        boolean b1=true;
        float fArr[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -13320);
        FuzzerUtils.init(fArr, -14.216F);
        FuzzerUtils.init(sArr, (short)28596);

        i = ((i - (++i)) + (-(i * i)));
        i1 = 1;
        do {
            for (i2 = 153; 8 < i2; i2 -= 2) {
                float f3=-17.476F;
                vMeth(Test.instanceCount, i2, f3);
                i3 += i2;
                Test.sFld += (short)(i2 * i2);
            }
        } while (++i1 < 164);
        for (i16 = 160; i16 > 6; i16 -= 3) {
            for (int i18 : iArr) {
                fArr[i16] = i3;
                Test.instanceCount += 223;
                switch (((i16 % 1) * 5) + 12) {
                case 17:
                    iArr[i16] /= (int)(Test.instanceCount | 1);
                    i17 = (int)Test.instanceCount;
                    for (i19 = 1; i19 < 2; i19++) {
                        switch ((i16 % 7) + 105) {
                        case 105:
                            Test.fFld = (float)d1;
                            Test.iArrFld[i19 - 1] = iArr;
                            i20 >>= i20;
                            switch (((i16 % 7) * 5) + 91) {
                            case 93:
                                sArr[i16] = (short)i19;
                                Test.fFld += i3;
                            case 112:
                                i += (int)Test.instanceCount;
                                i17 *= i20;
                                i17 += i19;
                                Test.lArrFld[i16] = -7832652816896751097L;
                            case 103:
                                i17 <<= (int)Test.instanceCount;
                                Test.fFld += (i19 * i19);
                                by1 -= (byte)Test.fFld;
                                break;
                            case 107:
                                iArr[i19 + 1] *= (int)d1;
                                Test.lArrFld[i19] -= i18;
                                break;
                            case 108:
                                i20 >>>= i20;
                                break;
                            case 122:
                                i20 += i19;
                                break;
                            case 111:
                            default:
                                Test.fFld = i16;
                            }
                        case 106:
                            Test.iArrFld[i16 + 1][i16 + 1] -= i2;
                        case 107:
                            by1 = (byte)i1;
                            break;
                        case 108:
                            if (b1) break;
                            break;
                        case 109:
                            i20 = i16;
                            break;
                        case 110:
                            i3 += (i19 | i20);
                        case 111:
                            Test.instanceCount += Test.instanceCount;
                            break;
                        }
                    }
                    break;
                default:
                    iArr[i16 - 1] *= i20;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i16 i17 = " + i3 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i19 i20 d1 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("by1 b1 iArr = " + by1 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
