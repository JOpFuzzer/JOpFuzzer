// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=509993517L;
    public static float fFld=0.352F;
    public static byte byFld=-34;
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4615943679528490066L);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s1, int i3, int i4) {

        long l=26327L;
        double d1=50.113970;
        int i5=-148, i6=79, i7=6, i8=1;

        l = 1;
        while (++l < 189) {
            for (d1 = 1; 8 > d1; d1++) {
                for (i6 = 1; i6 < 2; ++i6) {
                    boolean b=false;
                    Test.lArrFld[(i8 >>> 1) % N] += (long)d1;
                    i8 += (int)l;
                    s1 ^= (short)Test.instanceCount;
                    Test.instanceCount += (long)73.836F;
                    s1 = (short)l;
                    i3 += 28;
                    if (b) continue;
                    Test.fFld = (float)d1;
                    Test.instanceCount += i8;
                    Test.instanceCount = 2;
                }
                Test.instanceCount += (long)(d1 * i8);
                i7 = (int)Test.instanceCount;
            }
        }
        long meth_res = s1 + i3 + i4 + l + Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(double d) {

        int i2=-5, i9=3, i10=11, i11=9, iArr[][]=new int[N][N];
        short s2=10232;
        float f=0.760F;
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -97.75639);
        FuzzerUtils.init(iArr, -54);

        i2 <<= (int)(-32655 - (i2 + (-(2.123286 * (Test.fFld + 1013343617685221328L)))));
        i2 *= 141;
        dArr[(i2 >>> 1) % N] = -225;
        i2 >>= i2;
        i2 = (int)(Test.fFld + (Test.instanceCount << (-184 - iMeth1(s2, i2, i2))));
        for (i9 = 10; i9 < 181; i9++) {
            Test.fFld += (1077552451L + (i9 * i9));
        }
        Test.instanceCount *= i10;
        iArr[(i9 >>> 1) % N][(i10 >>> 1) % N] = i10;
        i10 &= Test.byFld;
        for (f = 24; f < 392; f++) {
            if (b1) continue;
        }
        iArr[(i9 >>> 1) % N][(i10 >>> 1) % N] = i10;
        Test.instanceCount <<= i9;
        Test.instanceCount += -230;
        long meth_res = Double.doubleToLongBits(d) + i2 + s2 + i9 + i10 + Float.floatToIntBits(f) + i11 + (b1 ? 1 : 0)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(short s) {

        int i1=145, i12=2, i13=-125, i14=-118, i15=37654, i16=14, iArr1[][]=new int[N][N];
        double d2=-1.57946;
        float f1=1.814F;

        FuzzerUtils.init(iArr1, 1);

        Test.instanceCount = (-((i1 - Test.instanceCount) * iMeth(d2)));
        i1 = i1;
        for (f1 = 254; f1 > 9; --f1) {
            Test.instanceCount <<= Test.instanceCount;
            i1 = i12;
            iArr1[(int)(f1 + 1)][(int)(f1 - 1)] = i1;
            for (i13 = 1; i13 < 7; i13++) {
                Test.fFld += f1;
            }
            i14 += (int)(((f1 * i13) + Test.instanceCount) - Test.instanceCount);
            i14 += (int)f1;
            Test.lArrFld[(int)(f1)] = i1;
            for (i15 = 1; i15 < 7; i15++) {
                if (i16 != 0) {
                }
                i1 *= (int)f1;
                iArr1[(int)(f1 - 1)][i15 + 1] = 12;
            }
        }
        long meth_res = s + i1 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-14;

        i -= (int)lMeth((short)(21192));

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
