// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static byte byFld=-43;
    public static int iFld=245;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 203L);
        FuzzerUtils.init(Test.iArrFld, -64371);
    }

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, long l, double d1) {

        int i11=68, i12=217, i13=-14, i15=-10, i16=-5;
        short s=-24835;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.367F);

        Test.iFld <<= (int)Test.instanceCount;
        i11 = 1;
        while (++i11 < 156) {
            float f3=-2.856F;
            for (i12 = 1; i12 < 10; ++i12) {
                switch (((i12 % 1) * 5) + 74) {
                case 77:
                }
                s -= (short)Test.instanceCount;
                Test.iFld = 250;
                Test.iArrFld[i11 - 1] *= (int)Test.instanceCount;
                Test.iFld /= (int)(i13 | 1);
                fArr = fArr;
                if (Test.bFld) break;
            }
            f3 += (i11 * i11);
        }
        for (int i14 : Test.iArrFld) {
            for (i15 = 1; i15 < 4; i15++) {
                Test.iFld += i15;
                Test.iFld += (i15 ^ i11);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l + Double.doubleToLongBits(d1) + i11 + i12 + i13 + s + i15 +
            i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(int i6, int i7) {

        float f2=67.991F;
        int i8=36930, i9=-36040, i10=-47966, i17=235, i18=1820, i19=-2;
        double d2=-1.45960;

        f2 = (i7--);
        for (i8 = 11; i8 < 226; i8++) {
            switch (((((i10 += i9) >>> 1) % 9) * 5) + 25) {
            case 53:
                i10 += (i8 ^ Test.instanceCount);
                f2 += (((i8 * i9) + Test.instanceCount) - Test.byFld);
                vMeth(-38.24042, Test.instanceCount, d2);
            case 51:
                for (i17 = 1; i17 < 7; i17++) {
                    i19 = 1;
                    while (++i19 < 2) {
                        i10 %= (int)-5919060499123247832L;
                    }
                    i18 -= i6;
                    Test.iFld = -125;
                    i10 = i17;
                    i18 = i17;
                }
            case 48:
                i6 = (int)-10L;
                if (Test.bFld) continue;
            case 33:
                Test.iArrFld[i8 - 1] -= i17;
                break;
            case 46:
                Test.iArrFld[i8 + 1] *= (int)Test.instanceCount;
                break;
            case 32:
                try {
                    i10 = (-59205 / i7);
                    i18 = (Test.iArrFld[i8] / i19);
                    i18 = (i8 / i9);
                } catch (ArithmeticException a_e) {}
                break;
            case 56:
                if (Test.bFld) break;
            case 26:
            case 27:
                f2 = 1;
            }
        }
        long meth_res = i6 + i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + Double.doubleToLongBits(d2) + i17 + i18 +
            i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(boolean b) {

        float f1=2.87F;
        int i=-14, i1=5, i2=60168, i3=10, i4=-63077, i5=-154, iArr[]=new int[N];
        short s1=-31205, sArr[]=new short[N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(sArr, (short)19234);

        f1 = i;
        Test.lArrFld = (Test.lArrFld = (Test.lArrFld = (Test.lArrFld = Test.lArrFld)));
        i &= 9;
        Test.instanceCount -= (((i - i) - (-(++i))) + i);
        if (Test.bFld) {
            for (i1 = 384; i1 > 16; i1 -= 2) {
                for (i3 = 1; 9 > i3; ++i3) {
                    i5 = 1;
                    while (++i5 < 2) {
                        iArr = (iArr = (iArr = (iArr = iArr)));
                        Test.lArrFld[i5 + 1] *= ((++iArr[i3 + 1]) - (-(-iMeth(i5, 6))));
                        if (false) {
                            Test.byFld = (byte)i4;
                            Test.iFld += (((i5 * i3) + Test.instanceCount) - s1);
                        } else {
                            Test.instanceCount <<= i1;
                            sArr[i5 + 1] ^= (short)i2;
                        }
                    }
                }
            }
        }
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f1) + i + i1 + i2 + i3 + i4 + i5 + s1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=50.688F;
        int i20=8, i21=-94, i22=196, i23=-205, i24=27, i25=-12613, i26=-7, i27=-11, i28=-4, i29=-17762, i30=0;
        short s2=18510;
        long l1=44480L;

        f -= fMeth(Test.bFld);
        Test.byFld = (byte)f;
        for (i20 = 264; i20 > 4; i20 -= 3) {
            i21 += (((i20 * i21) + Test.instanceCount) - i20);
            i21 += i20;
        }
        Test.instanceCount -= i20;
        Test.iFld >>= -1;
        Test.iFld <<= i20;
        f += Test.instanceCount;
        Test.iFld = (int)-1.476F;
        Test.bFld = Test.bFld;
        i22 = 328;
        while ((i22 -= 2) > 0) {
            Test.instanceCount *= (long)f;
            f *= 175;
        }
        i23 = 220;
        do {
            s2 = Test.byFld;
            Test.iFld += (((i23 * Test.instanceCount) + Test.iFld) - Test.instanceCount);
            for (i24 = 114; i24 > 5; i24--) {
                for (i26 = i23; i26 < 2; ++i26) {
                    Test.instanceCount = (long)1.802F;
                }
                if (Test.bFld) break;
            }
        } while (--i23 > 0);
        for (i28 = 7; i28 < 140; i28++) {
            double d3=8.27971;
            d3 = i24;
            Test.instanceCount = i21;
            Test.iArrFld = FuzzerUtils.int1array(N, (int)1);
            Test.iFld |= (int)-229L;
        }
        for (l1 = 12; l1 < 359; l1++) {
            Test.instanceCount -= 13;
            s2 /= (short)(i22 | 1);
            i21 += i29;
        }

        FuzzerUtils.out.println("f i20 i21 = " + Float.floatToIntBits(f) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 s2 = " + i22 + "," + i23 + "," + s2);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("l1 i30 = " + l1 + "," + i30);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.lArrFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
