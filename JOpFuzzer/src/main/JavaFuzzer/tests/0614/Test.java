// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3328L;
    public static volatile boolean bFld=false;
    public static short sFld=-24338;
    public float fFld=-91.826F;
    public long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -93.1016F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, double d, int i5) {

        int i6=-155, i7=-17322, i8=-7, i9=-596, i10=-7, iArr1[][]=new int[N][N];
        float f1=-1.398F, fArr[]=new float[N];
        long l=7L, lArr[]=new long[N];
        boolean b=true;

        FuzzerUtils.init(lArr, -16230L);
        FuzzerUtils.init(iArr1, -32751);
        FuzzerUtils.init(fArr, 2.479F);

        i5 += -85;
        i6 = 1;
        do {
            lArr[i6 - 1] = (long)f1;
            iArr1[i6][i6] &= (int)Test.instanceCount;
            i5 = i4;
            for (l = 6; l > i6; --l) {
                for (i8 = 1; i8 < 1; ++i8) {
                    if (b) {
                        f1 -= 38438;
                        i7 >>= (int)Test.instanceCount;
                        i4 = i7;
                    } else {
                        fArr[(int)(l + 1)] = i5;
                        try {
                            i5 = (i4 % i5);
                            i7 = (i7 / 1706731108);
                            i7 = (i4 / i4);
                        } catch (ArithmeticException a_e) {}
                        i7 = i10;
                    }
                    Test.instanceCount -= i6;
                }
            }
        } while (++i6 < 291);
        vMeth2_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f1) + l + i7 + i8 + i9 +
            (b ? 1 : 0) + i10 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1() {

        int i11=239, i12=143, i13=-18807, i14=6, i15=-7;
        double d1=1.19311;
        float f2=-1.130F;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        vMeth2(i11, d1, i11);
        i11 = (int)d1;
        i11 *= i11;
        for (i12 = 9; i12 < 279; i12++) {
            if (Test.bFld) break;
            d1 *= f2;
            i11 += (i12 - i11);
            f2 += f2;
            d1 += i12;
            for (i14 = 1; i14 < 6; i14++) {
                i13 *= -204;
                if (i15 != 0) {
                    vMeth1_check_sum += i11 + Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f2) + i14
                        + i15 + FuzzerUtils.checkSum(bArr);
                    return;
                }
            }
            f2 -= i15;
            bArr[i12 - 1][i12 - 1] = Test.bFld;
            f2 = i14;
        }
        vMeth1_check_sum += i11 + Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f2) + i14 + i15 +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i3, float f) {

        double d2=22.18135;
        float f3=-1.644F;
        int i16=38, i17=28130, i18=-4, iArr2[]=new int[N];
        long l1=717943888L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -14243L);
        FuzzerUtils.init(iArr2, 13);

        vMeth1();
        i3 -= (int)d2;
        lArr1[(-6 >>> 1) % N] = i3;
        f = i3;
        iArr2[(i3 >>> 1) % N] |= i3;
        i3 *= (int)Test.instanceCount;
        if (Test.bFld) {
            for (f3 = 1; 129 > f3; f3++) {
                i16 += i16;
                i16 *= Test.sFld;
                for (i17 = 1; i17 < 12; i17++) {
                    if (Test.bFld) {
                        Test.instanceCount += i3;
                        i3 <<= i16;
                        vMeth_check_sum += i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) +
                            Float.floatToIntBits(f3) + i16 + i17 + i18 + l1 + FuzzerUtils.checkSum(lArr1) +
                            FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    i16 += (((i17 * i3) + f3) - i3);
                }
            }
        } else if (Test.bFld) {
            l1 += i16;
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + Float.floatToIntBits(f3) + i16
            + i17 + i18 + l1 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=10, i2=51, i19=-156, i20=-9, i21=-48, i22=12, i23=98, i24=32498, i25=56, i26=-10, i27=31, i28=-14,
            i29=41273, iArr[]=new int[N];
        byte by=127;

        FuzzerUtils.init(iArr, 0);

        i = (int)Test.instanceCount;
        for (i1 = 9; i1 < 373; i1++) {
            Test.instanceCount += i;
            i2 -= (int)(((Test.instanceCount + 3322884107L) * (i--)) - (iArr[i1 + 1]--));
        }
        i2 += (((i++) - Math.max(i1, i)) + ((i2++) - (-5 * i)));
        vMeth(i1, fFld);
        i2 *= i1;
        for (i19 = 1; i19 < 218; ++i19) {
            for (i21 = 7; 116 > i21; i21++) {
                i20 = (int)Test.instanceCount;
            }
        }
        i2 += (int)fFld;
        lArrFld[(i22 >>> 1) % N] <<= i2;
        for (i23 = 233; i23 > 10; --i23) {
            i2 &= by;
            i += (8271 + (i23 * i23));
            i -= 128;
        }
        for (i25 = 13; i25 < 384; i25++) {
            Test.instanceCount += 493042144735815023L;
            if (Test.bFld) {
                Test.bFld = false;
                Test.instanceCount -= i22;
                lArrFld = lArrFld;
            } else if (Test.bFld) {
                Test.instanceCount = i26;
            }
            i27 = 68;
            do {
                for (i28 = i27; i28 < 1; i28++) {
                    i26 += (int)(753103042L + (i28 * i28));
                    i -= (int)Test.instanceCount;
                    iArr[i28] = (int)fFld;
                    Test.fArrFld[i25] += i;
                }
                i24 |= i19;
            } while (--i27 > 0);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("by i25 i26 = " + by + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("fFld lArrFld Test.fArrFld = " + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
