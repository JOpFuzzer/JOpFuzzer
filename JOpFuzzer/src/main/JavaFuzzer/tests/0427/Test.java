// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-635602579L;
    public volatile int iFld=134;
    public static volatile double dFld=-104.23636;
    public volatile float fFld=-1.79F;
    public boolean bFld=false;
    public volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 62.25F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i12=-6, i13=-223, i14=159, i15=-11;
        short s1=-10870;
        float f1=0.390F;
        boolean b2=false;

        i12 >>= s1;
        i12 &= (int)Test.instanceCount;
        f1 = 1;
        while (++f1 < 146) {
            for (i13 = 11; 1 < i13; i13 -= 3) {
                Test.instanceCount += i12;
                i12 += i12;
            }
            i14 *= -6824;
            if (b2) {
                i15 = 1;
                do {
                    if (b2) break;
                    Test.instanceCount *= i12;
                    i14 -= s1;
                    i14 += (int)Test.instanceCount;
                    if (i13 != 0) {
                        vMeth1_check_sum += i12 + s1 + Float.floatToIntBits(f1) + i13 + i14 + i15 + (b2 ? 1 : 0);
                        return;
                    }
                    Test.instanceCount = Test.instanceCount;
                } while (++i15 < 11);
            } else {
            }
        }
        vMeth1_check_sum += i12 + s1 + Float.floatToIntBits(f1) + i13 + i14 + i15 + (b2 ? 1 : 0);
    }

    public static void vMeth(boolean b, boolean b1, int i10) {

        int i11=10, i16=-18, i17=31519, i18=-69, i19=8139, i20=-31639, i21=197, iArr1[]=new int[N];
        float f2=2.807F;

        FuzzerUtils.init(iArr1, -12460);

        i10 += (-(--iArr1[(3 >>> 1) % N]));
        i11 = 1;
        while (++i11 < 390) {
            Test.instanceCount <<= (long)(3285100501L + ((-(i11 - i10)) + (--Test.fArrFld[i11 + 1])));
            vMeth1();
            for (i16 = i11; i16 < 4; ++i16) {
                for (i18 = 1; 1 < i18; --i18) {
                    f2 = f2;
                    i10 += i18;
                }
                i19 += i16;
            }
            for (i20 = i11; i20 < 4; i20++) {
                if (b1) break;
                if (b) {
                    Test.instanceCount <<= i17;
                    f2 += i16;
                    Test.instanceCount = i11;
                } else {
                    i10 *= (int)f2;
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + i10 + i11 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f2) +
            i20 + i21 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(float f) {

        int i4=-246, i5=8, i6=41201, i7=-8041, i8=4, i9=-32038, iArr[]=new int[N];
        long l=3L;
        boolean b3=false;
        short s2=31457;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -119);
        FuzzerUtils.init(fArr, -58.43F);

        i4 = (int)l;
        i5 = 184;
        while (--i5 > 0) {
            i4 += (i5 - i5);
            i4 = iArr[(i5 >>> 1) % N];
            fArr = (fArr = (fArr = (fArr = fArr)));
        }
        iArr[(i5 >>> 1) % N] *= (++i4);
        iArr[(i5 >>> 1) % N] = -86;
        for (i6 = 2; i6 < 200; ++i6) {
            for (i8 = 1; 8 > i8; ++i8) {
                iArr = iArr;
                f = (((f += 117.511F) + (iArr[i8]--)) * (++fArr[i8 + 1]));
                i7 += i8;
                vMeth(b3, b3, -10);
                Test.instanceCount += (((i8 * i8) + s2) - Test.instanceCount);
                if (i5 != 0) {
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i4 + l + i5 + i6 + i7 + i8 + i9 + (b3 ? 1 : 0) + s2 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-189, i2=59833, i3=91, i22=0, i23=64807, i24=-10, i25=81, i26=49698, i27=-3, i28=78, i29=-89,
            i30=-6, i31=-3;
        short s=26972;
        byte by=-82;
        float f3=0.249F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 4129547136733144769L);

        iFld -= ((iFld++) + ((++iFld) >>> iArrFld[(iFld >>> 1) % N]));
        for (i = 4; i < 140; ++i) {
            iFld += i;
            i1 -= (iFld = (--iFld));
            for (i2 = 10; i2 < 184; ++i2) {
                lArr[i + 1] >>= s;
                iArrFld[i2 - 1] += (int)Test.instanceCount;
                Test.dFld = (iMeth(fFld) - 14);
                i3 += (((i2 * fFld) + fFld) - Test.instanceCount);
            }
            lArr[i - 1] *= (long)fFld;
        }
        Test.fArrFld[(iFld >>> 1) % N] = i22;
        iFld += i1;
        iFld -= by;
        for (i23 = 6; i23 < 232; i23++) {
            i24 += (210 + (i23 * i23));
            i25 = 1;
            while (++i25 < 111) {
                i26 = 1;
                while (++i26 < 1) {
                    i22 += (int)Test.instanceCount;
                }
                Test.dFld -= -2.129861;
                iFld *= i1;
                f3 = iFld;
                for (i27 = i23; i27 < 1; i27++) {
                    Test.fArrFld[i23 - 1] -= i2;
                    if (bFld) {
                        i24 = i3;
                    }
                }
                i24 += (-9893 + (i25 * i25));
            }
            for (i29 = 3; i29 < 111; ++i29) {
                if (bFld) {
                    Test.instanceCount -= Test.instanceCount;
                    Test.dFld += iFld;
                } else {
                    Test.instanceCount = i31;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 s i22 = " + i3 + "," + s + "," + i22);
        FuzzerUtils.out.println("by i23 i24 = " + by + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 f3 = " + i25 + "," + i26 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 lArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("fFld bFld iArrFld = " + Float.floatToIntBits(fFld) + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
