// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3856418274942481007L;
    public static float fFld=10.761F;
    public static short sFld=273;
    public static int iFld=11;
    public volatile int iFld1=224;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i8=-131;

        Test.instanceCount >>>= i8;
        Test.iArrFld[(-13 >>> 1) % N] -= i8;
        long meth_res = i8;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(double d2, double d3) {

        int i3=228, i4=2479, i5=-66, i6=116, i7=-56, i9=13, i10=-23;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(fArr, 0.25F);

        i3 = Test.iArrFld[(i3 >>> 1) % N];
        for (i4 = 8; i4 < 387; i4++) {
            Test.instanceCount += (i5--);
            if ((12L * Test.instanceCount) < (--Test.instanceCount)) continue;
            for (i6 = 1; i6 < 4; ++i6) {
                iMeth1();
                d2 = i3;
                for (i9 = 2; i9 > i6; --i9) {
                    Test.fFld = i5;
                    i7 >>= (int)Test.instanceCount;
                    lArr[i4] = i5;
                    fArr[i9 - 1] = (float)-2.69114;
                    d2 = -1;
                }
                Test.instanceCount += Test.sFld;
                try {
                    Test.iArrFld[i4 + 1] = (-24056 / i10);
                    i10 = (Test.iArrFld[i4 - 1] % Test.iArrFld[i4]);
                    i3 = (i7 / i3);
                } catch (ArithmeticException a_e) {}
            }
        }
        long meth_res = Double.doubleToLongBits(d2) + Double.doubleToLongBits(d3) + i3 + i4 + i5 + i6 + i7 + i9 + i10 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(int i2, double d1) {

        float f=1.745F, fArr1[]=new float[N];
        int i11=-37300, i12=-54198, i13=-199, i14=64657;
        long l=29443L;

        FuzzerUtils.init(fArr1, 35.375F);

        d1 *= 3867104410L;
        f = (float)(i2 - (Test.iArrFld[(i2 >>> 1) % N] -= (int)dMeth(d1, d1)));
        Test.instanceCount -= 12;
        i2 >>>= i2;
        for (i11 = 189; i11 > 1; --i11) {
            Test.iArrFld[i11 - 1] <<= 181;
            i12 >>= i12;
            l = 8;
            do {
                Test.instanceCount <<= l;
                d1 = i11;
                for (i13 = 1; i13 > 1; i13--) {
                    fArr1[(int)(l)] = 61;
                }
                i14 -= i2;
                Test.instanceCount = Test.instanceCount;
                Test.instanceCount += (l ^ (long)Test.fFld);
            } while (--l > 0);
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i11 + i12 + l + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-1.59346;
        int i=59622, i1=8, i15=5, i16=-50;
        float f1=-26.763F, fArr2[]=new float[N];

        FuzzerUtils.init(fArr2, -27.3F);

        Test.instanceCount *= (long)d;
        for (i = 14; i < 304; ++i) {
            iMeth(i1, d);
            for (f1 = 87; 5 < f1; --f1) {
                i15 = (int)d;
                d -= i;
                Test.instanceCount -= i15;
            }
            i1 *= (int)Test.instanceCount;
            i16 = 1;
            do {
                i15 = Test.sFld;
            } while (++i16 < 87);
            Test.instanceCount += i;
            try {
                Test.iFld = (Test.iFld / -29);
                Test.iArrFld[i] = (56 % Test.iArrFld[i]);
                i15 = (i15 / Test.iArrFld[i + 1]);
            } catch (ArithmeticException a_e) {}
            Test.iFld *= Test.iFld;
            fArr2[i + 1] -= -2L;
            Test.iFld *= Test.iFld;
        }
        Test.fFld -= Test.instanceCount;
        Test.instanceCount = Test.iFld;
        Test.iFld = iFld1;

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("f1 i15 i16 = " + Float.floatToIntBits(f1) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("fArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld iFld1 Test.iArrFld = " + Test.iFld + "," + iFld1 + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
