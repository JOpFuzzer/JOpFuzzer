// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-31517L;
    public static long lFld=1L;
    public static short sFld=-24831;
    public static double dFld=1.53838;
    public static byte byFld=-54;
    public static boolean bFld=true;
    public float fFld=2.280F;

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        long l2=182L;
        int i8=5983, i9=40099, i10=-43479, i11=13, i12=195;
        float f1=30.322F;
        boolean b=true;
        double d=0.115560;

        for (l2 = 11; l2 < 326; l2++) {
            i8 = (int)f1;
            i8 = i8;
            b = b;
            i8 -= i8;
            i8 = -7407;
            i8 += (2 + (l2 * l2));
            Test.lFld += (long)d;
            for (i9 = 5; i9 > 1; i9--) {
                for (i11 = 1; i11 < 2; ++i11) {
                    Test.lFld += (i11 * i11);
                    d = f1;
                    f1 = i8;
                    i8 = 78;
                    d *= -67.1039;
                }
            }
        }
        long meth_res = l2 + i8 + Float.floatToIntBits(f1) + (b ? 1 : 0) + Double.doubleToLongBits(d) + i9 + i10 + i11
            + i12;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i5, long l1, float f) {

        int i6=-60963, i7=-185, i13=64, i14=-56571, i15=21798, i16=-2, i17=236, i18=-50556;
        long l3=-48L;
        double d1=29.124447;
        boolean b1=true;

        for (i6 = 1; i6 < 335; i6++) {
            i5 = (iMeth1() - i5);
            Test.lFld += (22 + (i6 * i6));
        }
        i5 -= (int)l1;
        Test.instanceCount ^= l1;
        for (i13 = 2; i13 < 207; i13++) {
            i5 += (((i13 * i6) + Test.lFld) - l1);
            for (l3 = 8; l3 > 1; l3 -= 3) {
                i5 = i5;
                for (i16 = 1; i16 < 4; i16++) {
                    f = Test.sFld;
                }
                for (d1 = 1; 4 > d1; d1++) {
                    if (false) {
                        i5 += (int)(d1 * d1);
                        i15 += (int)d1;
                    } else if (false) {
                        i18 >>>= i13;
                    } else if (b1) {
                        f *= l1;
                    }
                }
            }
        }
        long meth_res = i5 + l1 + Float.floatToIntBits(f) + i6 + i7 + i13 + i14 + l3 + i15 + i16 + i17 +
            Double.doubleToLongBits(d1) + i18 + (b1 ? 1 : 0);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(int i1, int i2, int i3) {

        long l=-65L;
        int i4=-14, i19=43454, i20=5, i21=-5, i22=-4820;
        boolean b2=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.11653);

        for (l = 9; l < 172; l++) {
            Test.instanceCount -= (long)(dMeth(-5123, Test.lFld, -13.689F) * 14);
        }
        for (i19 = 4; i19 < 253; i19++) {
            for (i21 = 1; i21 < 7; i21++) {
                i1 -= 128;
                i3 += i22;
                if (b2) {
                    i22 = i22;
                } else if (b2) {
                    Test.dFld += i4;
                } else if (true) {
                    dArr[i19 - 1] *= i19;
                } else {
                    if (i19 != 0) {
                    }
                    Test.instanceCount = i21;
                }
                Test.dFld = Test.instanceCount;
                Test.lFld >>= i3;
                i4 = i19;
            }
        }
        long meth_res = i1 + i2 + i3 + l + i4 + i19 + i20 + i21 + i22 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-16167, i23=3, i24=11, i25=-149, i26=57448, i27=-170, i28=-60538, iArr[]=new int[N], iArr1[]=new int[N];
        double d2=6.60725, dArr1[]=new double[N];
        long l4=-77L, lArr[]=new long[N];

        FuzzerUtils.init(iArr, 65);
        FuzzerUtils.init(lArr, 3666141832296503220L);
        FuzzerUtils.init(iArr1, -148);
        FuzzerUtils.init(dArr1, 1.10605);

        i = 1;
        do {
            iArr[i + 1] = (int)Math.abs((-10 << (-(-iMeth(i, 13, i)))) * i);
            switch ((i % 7) + 29) {
            case 29:
                iArr[i] = i23;
            case 30:
                i23 += (9 + (i * i));
                iArr[i - 1] = (int)0L;
                for (d2 = 1; d2 < 73; d2 += 2) {
                    float f2=84.1005F;
                    i23 >>= (int)148L;
                    lArr[i - 1] -= Test.instanceCount;
                    i24 -= i;
                    i24 = (int)f2;
                    f2 = i24;
                    for (i25 = i; i25 < 3; ++i25) {
                        i23 += (i25 - i23);
                        i24 += i25;
                    }
                    if (true) break;
                    for (i27 = 1; i27 < 3; i27++) {
                        switch ((int)(((d2 % 6) * 5) + 19)) {
                        case 34:
                            iArr[(i >>> 1) % N] += i;
                            i28 += (i27 * i23);
                            switch ((int)(((d2 % 1) * 5) + 87)) {
                            case 88:
                                f2 += -87;
                                i23 = i23;
                                Test.byFld >>= Test.byFld;
                                iArr1[i27] -= -4;
                                break;
                            default:
                                i26 = 17141;
                            }
                        case 47:
                        case 40:
                            if (Test.bFld) break;
                            dArr1[i - 1] -= i26;
                            if (Test.bFld) break;
                            break;
                        case 39:
                            i28 += (int)l4;
                            break;
                        case 27:
                            fFld -= f2;
                            break;
                        case 31:
                        }
                    }
                }
                break;
            case 31:
                lArr[i + 1] += Test.sFld;
                break;
            case 32:
                l4 >>>= i;
            case 33:
                Test.lFld *= (long)d2;
                break;
            case 34:
                if (Test.bFld) continue;
                break;
            case 35:
                l4 += i26;
                break;
            default:
                lArr[i + 1] += (long)d2;
            }
        } while (++i < 344);

        FuzzerUtils.out.println("i i23 d2 = " + i + "," + i23 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 l4 = " + i27 + "," + i28 + "," + l4);
        FuzzerUtils.out.println("iArr lArr iArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr) +
            "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.sFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.bFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.byFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld = " + Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
