// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7336L;
    public static volatile boolean bFld=false;
    public static int iFld=-3;
    public static float fFld=-54.673F;
    public static volatile int iFld1=35930;
    public static int iArrFld[]=new int[N];
    public int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i14) {

        int i15=-21684, i16=11, i17=6, i18=82, iArr1[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 12);
        FuzzerUtils.init(lArr1, 1423669789L);

        i14 -= (int)Test.instanceCount;
        i14 = (int)Test.instanceCount;
        for (i15 = 15; i15 < 240; ++i15) {
            Test.instanceCount = i16;
            for (i17 = 1; i17 < 7; i17++) {
                i16 = -4;
                Test.fFld = i16;
                iArr1 = iArr1;
                switch (((i17 >>> 1) % 4) + 25) {
                case 25:
                    lArr1[i17] += Test.iFld;
                    Test.instanceCount = Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                case 26:
                    Test.iFld = i17;
                    Test.instanceCount += (i17 + i17);
                    break;
                case 27:
                    i14 = (int)Test.instanceCount;
                case 28:
                    Test.instanceCount -= Test.iFld;
                    break;
                }
            }
        }
        long meth_res = i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i5) {

        int i6=-17110, i7=160, i8=-10, i9=-172, i10=-64404, i11=-57058, i12=8, i13=-166, iArr[][]=new int[N][N];
        float fArr[][]=new float[N][N];
        long lArr[][]=new long[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 0.133F);
        FuzzerUtils.init(iArr, -98);
        FuzzerUtils.init(lArr, 5466137509838145149L);
        FuzzerUtils.init(byArr, (byte)-21);

        for (i6 = 17; i6 < 306; ++i6) {
            fArr[i6][i6 - 1] = i7;
            for (i8 = 1; i8 < 6; i8++) {
                Test.instanceCount += i8;
                i7 += iArr[i8][i8];
                Test.iFld += i8;
                if (i7 != 0) {
                    vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
                        FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                iArr[i8] = (iArr[i6 + 1] = (iArr[i8] = (iArr[i6 + 1] = iArr[i6 + 1])));
                for (i10 = 1; i10 < 2; ++i10) {
                    try {
                        i11 = (i10 % -46350);
                        i7 = (i5 / -41948);
                        i11 = (i7 % -25416);
                    } catch (ArithmeticException a_e) {}
                }
            }
            switch (((i6 % 9) * 5) + 123) {
            case 143:
                Test.instanceCount <<= ((lArr[i6 + 1][i6 - 1]++) - (-(Test.iFld++)));
                for (i12 = i6; i12 < 6; i12 += 3) {
                    Test.fFld += i12;
                    Test.fFld = ((i8 + i7) + i7);
                }
                break;
            case 144:
                i13 = (Test.iFld--);
                break;
            case 124:
                iArr = (iArr = (iArr = (iArr = FuzzerUtils.int2array(N, (int)-3))));
                break;
            case 158:
                lMeth(i5);
                break;
            case 161:
                Test.instanceCount = (long)Test.fFld;
                break;
            case 163:
                byArr[i6 + 1] -= (byte)35639;
                break;
            case 138:
                i7 += i6;
                break;
            case 156:
                Test.fFld = i8;
            case 151:
                i13 += (int)-1.372F;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(long l, int i, long l1) {

        int i1=8068, i2=-37855, i3=52190, i4=-13;
        short s=22776;
        double dArr[]=new double[N];
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(dArr, 23.23717);
        FuzzerUtils.init(byArr1, (byte)-21);

        for (i1 = 21; 389 > i1; i1++) {
            i += (i1 * i1);
            Test.bFld = (Test.bFld = false);
            i2 >>= i;
            i = (int)((Double.longBitsToDouble(l) + (i2 - i)) - (s++));
            for (i3 = 1; i3 < 5; i3++) {
                vMeth1(i4);
                dArr[i1 - 1] += Test.iFld;
                byArr1[i3] |= (byte)-67;
                i = Test.iFld;
                byArr1[i1] = (byte)s;
                Test.instanceCount *= Test.instanceCount;
                i2 ^= i4;
                if (Test.bFld) break;
                Test.fFld *= l;
            }
        }
        vMeth_check_sum += l + i + l1 + i1 + i2 + s + i3 + i4 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(byArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=0.115921, dArr1[]=new double[N];
        int i19=18572, i20=-10, i21=43216, i22=34, i23=-11, i24=-72, i25=-180;
        short s1=4765;
        byte by=-62, byArr2[]=new byte[N];
        boolean bArr[]=new boolean[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(byArr2, (byte)-104);
        FuzzerUtils.init(dArr1, -1.111476);
        FuzzerUtils.init(fArr1, 2.292F);

        vMeth(Test.instanceCount, Test.iFld, Test.instanceCount);
        d -= Test.instanceCount;
        try {
            for (i19 = 13; (369 + 400) > i19; i19++) {
                Test.iFld &= i21;
                Test.iArrFld[i19 + 1] = -8;
                switch ((i19 % 9) + 83) {
                case 83:
                    Test.fFld += Test.instanceCount;
                    break;
                case 84:
                case 85:
                    for (i22 = i19; i22 < 63; i22++) {
                        Test.fFld *= i23;
                        Test.iFld += (((i22 * i22) + Test.iFld) - Test.iFld1);
                        switch (((i22 % 9) * 5) + 7) {
                        case 20:
                            for (i24 = 1; i24 < (1 + 400); i24++) {
                                Test.iFld += (i24 * i24);
                                i25 += (i24 + Test.instanceCount);
                                Test.iArrFld[i22 + 1] = 7;
                                i21 += (i24 * i24);
                                Test.iFld = i24;
                                Test.iFld += i25;
                                i23 += 28117;
                                Test.fFld += (((i24 * i19) + s1) - i25);
                                Test.iFld1 *= 201;
                                Test.bFld = Test.bFld;
                            }
                            Test.fFld += (i22 + Test.iFld);
                            Test.instanceCount *= 26934;
                        case 14:
                            i23 >>= i20;
                            bArr[i19] = Test.bFld;
                            Test.instanceCount = i23;
                            break;
                        case 45:
                            i20 = 61490;
                        case 26:
                            i23 -= (int)Test.instanceCount;
                        case 8:
                            byArr2[i19] &= (byte)Test.instanceCount;
                            break;
                        case 12:
                            i21 -= s1;
                        case 29:
                            i21 <<= s1;
                            break;
                        case 11:
                            iArrFld1 = iArrFld1;
                            break;
                        case 17:
                            Test.iFld >>= (int)Test.instanceCount;
                            break;
                        }
                    }
                    break;
                case 86:
                    Test.instanceCount += 128;
                    break;
                case 87:
                    dArr1[i19 - 1] *= Test.fFld;
                    break;
                case 88:
                    i23 = Test.iFld;
                    break;
                case 89:
                    fArr1[i19 + 1] -= Test.instanceCount;
                case 90:
                case 91:
                    i23 += (((i19 * by) + i20) - Test.instanceCount);
                    break;
                default:
                    i23 += (96 + (i19 * i19));
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test.iArrFld[(-41551 >>> 1) % N] <<= i23;
        }
        finally {
            d *= -21748;
        }

        FuzzerUtils.out.println("d i19 i20 = " + Double.doubleToLongBits(d) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 s1 = " + i24 + "," + i25 + "," + s1);
        FuzzerUtils.out.println("by bArr byArr2 = " + by + "," + FuzzerUtils.checkSum(bArr) + "," +
            FuzzerUtils.checkSum(byArr2));
        FuzzerUtils.out.println("dArr1 fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.fFld Test.iFld1 Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("iArrFld1 = " + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
