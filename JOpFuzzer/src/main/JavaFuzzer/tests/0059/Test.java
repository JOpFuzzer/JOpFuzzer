// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-11020L;
    public static double dFld=119.101960;
    public static boolean bFld=false;
    public static float fFld=26.737F;
    public byte byFld=-86;
    public static long lFld=-12L;
    public static volatile int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -74);
        FuzzerUtils.init(Test.dArrFld, -1.86564);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i9, int i10, int i11) {

        long l=3993112393L, l1=0L;
        int i12=-8, i13=59284, i14=-1195, i15=-6, i16=241, i17=-115;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (l = 19; l < 389; ++l) {
            for (i13 = 5; 1 < i13; i13 -= 3) {
                i10 += (42115 + (i13 * i13));
                for (l1 = i13; l1 < 5; ++l1) {
                    boolean b1=true;
                    if (b1) continue;
                }
                for (i16 = 1; i16 < 5; ++i16) {
                    i12 *= i12;
                    i14 = -47495;
                    Test.instanceCount += l1;
                    i14 = (int)Test.instanceCount;
                    if (Test.bFld) break;
                    i10 += i16;
                    i14 += 51254;
                    Test.instanceCount *= i17;
                    bArr[i16 - 1] = Test.bFld;
                }
            }
        }
        vMeth2_check_sum += i9 + i10 + i11 + l + i12 + i13 + i14 + l1 + i15 + i16 + i17 + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1(double d) {

        int i7=-24591, i8=56, i18=202, iArr[]=new int[N];
        float f1=105.822F;

        FuzzerUtils.init(iArr, -123);

        for (i7 = 10; i7 < 272; i7++) {
            vMeth2(i7, i8, -14);
            switch (((i7 % 3) * 5) + 2) {
            case 17:
                i8 += (i7 ^ Test.instanceCount);
                f1 -= f1;
                f1 = 124;
                switch ((i7 % 1) + 26) {
                case 26:
                    f1 = 2;
                    break;
                default:
                    i8 -= -20870;
                }
                break;
            case 7:
                f1 *= i7;
                Test.instanceCount = i7;
                break;
            case 9:
                i18 = 1;
                while (++i18 < 6) {
                    if (i7 != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d) + i7 + i8 + Float.floatToIntBits(f1) + i18 +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    i8 >>>= (int)-2068131268L;
                    iArr[i18 - 1] = i8;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i7 + i8 + Float.floatToIntBits(f1) + i18 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(boolean b, byte by) {

        int i5=15101, i6=-193, i19=216, i20=13, i21=-46, i22=64600, iArr1[]=new int[N];
        float f=-96.758F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -12.5412);
        FuzzerUtils.init(iArr1, 192);

        for (i5 = 23; i5 < 395; i5++) {
            f = ((long)((i6 -= (int)f) - 11104) ^ (long)((Test.dFld * i6) + (Test.instanceCount - -78.30072)));
            vMeth1(Test.dFld);
            for (i19 = 5; i19 > 1; i19--) {
                dArr[i5 - 1] -= Test.instanceCount;
                i20 = i5;
                i20 += i19;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.instanceCount -= i5;
                    f -= f;
                    i6 >>= i22;
                    if (b) break;
                }
                iArr1[i5 - 1] += (int)Test.instanceCount;
                i22 += (i19 ^ i21);
            }
            Test.instanceCount *= Test.instanceCount;
        }
        vMeth_check_sum += (b ? 1 : 0) + by + i5 + i6 + Float.floatToIntBits(f) + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=133, i1=-12660, i2=-10633, i3=-42281, i4=-129, i23=-23900, i24=-36972, i25=-14;
        float f2=2.375F;
        short s=-13798;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)89);
        FuzzerUtils.init(lArr, 8L);

        i |= i;
        Test.instanceCount *= (long)(((Test.dFld++) + (Test.instanceCount / (Test.instanceCount | 1))) + (i++));
        for (i1 = 9; i1 < 236; i1++) {
            i += (((i1 * i1) + Test.instanceCount) - i);
            Test.instanceCount += i;
            for (i3 = 2; i3 < 111; ++i3) {
                vMeth(Test.bFld, (byte)(-36));
            }
        }
        i23 = 162;
        while ((i23 -= 3) > 0) {
            switch (((i23 % 7) * 5) + 90) {
            case 97:
                i4 += (i23 * i23);
                i4 = -26011;
                Test.instanceCount = Test.instanceCount;
                break;
            case 114:
            case 102:
                byArr[(i3 >>> 1) % N] -= (byte)12178;
                Test.fFld += i23;
                break;
            case 92:
                i24 = 1;
                do {
                    for (f2 = 1; f2 < 4; f2++) {
                        i25 = i2;
                        switch ((i24 % 4) + 108) {
                        case 108:
                            lArr[(int)(f2 + 1)] = s;
                            i25 = i;
                            break;
                        case 109:
                            switch (((i >>> 1) % 9) + 124) {
                            case 124:
                                i4 = i;
                                Test.instanceCount |= 16912;
                                byFld = (byte)i4;
                                break;
                            case 125:
                                i2 += (int)-1.111F;
                                break;
                            case 126:
                                Test.fFld *= -49024L;
                                byFld += (byte)(((f2 * i) + i24) - i25);
                            case 127:
                                i25 -= i2;
                                i2 += (int)(f2 - byFld);
                                Test.fFld = s;
                                break;
                            case 128:
                                Test.iArrFld[i23] -= i4;
                                break;
                            case 129:
                            case 130:
                                Test.iArrFld[(int)(f2)] = i24;
                            case 131:
                                try {
                                    i2 = (i25 / i2);
                                    i2 = (496879375 % i25);
                                    i = (i1 % i1);
                                } catch (ArithmeticException a_e) {}
                            case 132:
                                Test.dArrFld[i24 + 1] -= i3;
                                break;
                            }
                            break;
                        case 110:
                            i += (67 + (f2 * f2));
                            break;
                        case 111:
                            Test.instanceCount = (long)2.103758;
                            break;
                        default:
                            if (Test.bFld) break;
                        }
                    }
                } while (++i24 < 126);
                break;
            case 94:
                i25 = (int)Test.instanceCount;
                break;
            case 112:
                i25 = i;
                break;
            case 125:
                Test.lFld += (((i23 * i2) + i4) - byFld);
                break;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i23 = " + i3 + "," + i4 + "," + i23);
        FuzzerUtils.out.println("i24 f2 i25 = " + i24 + "," + Float.floatToIntBits(f2) + "," + i25);
        FuzzerUtils.out.println("s byArr lArr = " + s + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld byFld Test.lFld = " + Float.floatToIntBits(Test.fFld) + "," + byFld + "," +
            Test.lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
