// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2828901883L;
    public int iFld=-5;
    public int iFld1=-129;
    public static int iFld2=43220;
    public boolean bFld=false;
    public static volatile int iFld3=-175;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -36);
        FuzzerUtils.init(Test.lArrFld, 13L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=11, i10=222, i11=-34385, i12=-5, i13=46562, i14=-176, i15=202;
        byte by=-18;
        short s=4143;
        double d2=84.104812;
        long l1=-3081620743L;
        float f=0.542F;

        for (i9 = 3; 179 > i9; i9++) {
            by -= (byte)i9;
            i10 += 21704;
            s = (short)i9;
            Test.iArrFld[i9] *= (int)Test.instanceCount;
        }
        i10 /= (int)(i11 | 1);
        i10 += (int)d2;
        d2 -= i11;
        i11 -= (int)11L;
        Test.lArrFld[(i9 >>> 1) % N] -= 24220;
        for (i12 = 14; i12 < 298; ++i12) {
            for (l1 = 1; l1 < 6; ++l1) {
                f = (float)d2;
                try {
                    Test.iArrFld[i12 - 1] = (i10 % 237);
                    i15 = (-698105308 % i15);
                    i14 = (-23102875 % i13);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld[i12 - 1] += i11;
            }
        }
        long meth_res = i9 + i10 + by + s + i11 + Double.doubleToLongBits(d2) + i12 + i13 + l1 + i14 +
            Float.floatToIntBits(f) + i15;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i3) {

        double d1=0.101703;
        int i4=-45144, i5=-8, i6=-39100, i7=-122, i8=-242, i16=-160;
        float f1=1.853F;

        for (d1 = 12; d1 < 287; d1++) {
            i4 &= (int)l;
            for (i5 = 6; i5 > 1; i5 -= 3) {
                for (i7 = 6; i7 > 1; i7 -= 3) {
                    Test.instanceCount = ((Test.iArrFld[(int)(d1 + 1)]--) - i7);
                    Test.iArrFld[i5] -= iMeth1();
                    i6 = i7;
                    i6 += i7;
                    f1 %= (Test.instanceCount | 1);
                    Test.iArrFld = Test.iArrFld;
                    i6 += (i7 | Test.instanceCount);
                }
                i6 += (i5 * Test.instanceCount);
                i16 = 1;
                while (++i16 < 6) {
                    i4 += (i16 * i16);
                    if (i16 != 0) {
                        vMeth_check_sum += l + i3 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + i8 +
                            Float.floatToIntBits(f1) + i16;
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += l + i3 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) +
            i16;
    }

    public int iMeth(int i) {

        int i1=-4, i2=9, i17=171, i18=17563, i19=15665, i20=-10, i21=217, i22=-119, i23=-168;
        double d3=-1.8403;
        float f2=-13.293F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -137L);

        lArr[(i >>> 1) % N] /= (iFld | 1);
        for (i1 = 7; i1 < 234; i1++) {
            vMeth(149L, 9);
            Test.iArrFld[i1] += iFld1;
        }
        Test.instanceCount *= i2;
        switch (((iFld1 >>> 1) % 1) + 98) {
        case 98:
            for (i17 = 4; i17 < 268; i17++) {
                d3 = f2;
                i2 = i19;
                for (i20 = 1; i20 < 6; ++i20) {
                    for (i22 = 1; i22 < 2; i22++) {
                        i -= i1;
                        i2 *= i17;
                        iFld = (int)Test.instanceCount;
                        i23 += (int)Test.instanceCount;
                    }
                }
            }
            break;
        }
        long meth_res = i + i1 + i2 + i17 + i18 + Double.doubleToLongBits(d3) + Float.floatToIntBits(f2) + i19 + i20 +
            i21 + i22 + i23 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-1.60604;
        int i24=-38746, i25=1, i26=-43775, i27=12, i28=8, i29=6, i30=1;
        byte by1=1;
        float f3=87.912F;
        short s1=-4116;
        boolean b=false;

        d += ((-d) + Math.max(Test.instanceCount, Test.instanceCount >> iFld));
        iFld1 = ((--iFld1) * iFld);
        iFld1 ^= iFld1;
        d += iMeth(iFld1);
        Test.iArrFld[(20425 >>> 1) % N] <<= iFld;
        for (i24 = 13; i24 < 395; ++i24) {
            i25 += i24;
            Test.iArrFld[i24] -= by1;
            i26 = 66;
            while ((i26 -= 2) > 0) {
                i25 = (int)Test.instanceCount;
                Test.iFld2 &= iFld1;
                iFld1 *= (int)f3;
                Test.instanceCount -= Test.instanceCount;
                switch ((i26 % 3) + 1) {
                case 1:
                    Test.instanceCount = -9;
                    break;
                case 2:
                    iFld1 *= (int)f3;
                    for (i27 = 1; i27 < 2; ++i27) {
                        f3 += -13L;
                        Test.iFld2 ^= i24;
                        s1 *= (short)-4;
                    }
                    b = bFld;
                    for (i29 = 1; i29 < 2; i29++) {
                        iFld1 += (i29 ^ Test.iFld3);
                        d += -140;
                        iFld <<= i28;
                        Test.instanceCount += (long)d;
                        Test.iFld2 += (14399 + (i29 * i29));
                        Test.iArrFld[i26 + 1] = 40446;
                        Test.iArrFld[i29 - 1] = i25;
                        Test.instanceCount -= Test.iFld2;
                    }
                case 3:
                    if (b) break;
                default:
                    s1 = by1;
                }
            }
        }

        FuzzerUtils.out.println("d i24 i25 = " + Double.doubleToLongBits(d) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("by1 i26 f3 = " + by1 + "," + i26 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 s1 = " + i27 + "," + i28 + "," + s1);
        FuzzerUtils.out.println("b i29 i30 = " + (b ? 1 : 0) + "," + i29 + "," + i30);

        FuzzerUtils.out.println("Test.instanceCount iFld iFld1 = " + Test.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test.iFld2 bFld Test.iFld3 = " + Test.iFld2 + "," + (bFld ? 1 : 0) + "," + Test.iFld3);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
