// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-2L;
    public static byte byFld=-107;
    public static volatile int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -239);
        FuzzerUtils.init(Test.lArrFld, 14L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-206, i6=-10, i7=8961;
        boolean b=true;
        float f=121.469F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3385341282L);

        for (i5 = 14; i5 < 350; ++i5) {
            i6 *= i5;
            Test.instanceCount >>= i5;
            Test.instanceCount = i5;
            b = false;
            Test.iArrFld[i5 - 1][i5 - 1] -= (int)Test.instanceCount;
            i6 <<= i6;
            if (i6 != 0) {
                vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
                return;
            }
            i6 = i6;
        }
        Test.iArrFld[(i6 >>> 1) % N][(i6 >>> 1) % N] *= i6;
        i7 = 1;
        do {
            f = Test.instanceCount;
        } while (++i7 < 219);
        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, int i4, double d) {

        int i8=-13, i9=84, i10=-55582, i11=30336, i12=123, i13=2;
        float f1=-2.297F, f2=-72.246F;
        boolean b1=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -11L);

        vMeth1();
        lArr1 = lArr1;
        for (i8 = 9; 287 > i8; i8 += 2) {
            Test.byFld *= (byte)i3;
            f1 = i8;
            i9 *= i10;
            i4 -= -8;
            b1 = false;
            for (f2 = i8; f2 < 11; ++f2) {
                if (b1) break;
                i10 += (int)((long)f2 ^ Test.instanceCount);
            }
        }
        if (b1) {
            for (i12 = 15; i12 < 293; ++i12) {
                i13 += (int)(2346569232L + (i12 * i12));
                d *= -1.777F;
            }
        } else if (b1) {
            Test.instanceCount -= Test.instanceCount;
        }
        vMeth_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i8 + i9 + Float.floatToIntBits(f1) + i10 + (b1 ? 1 :
            0) + Float.floatToIntBits(f2) + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i, int i1, int i2) {

        double d1=2.30459, d2=-11.110194;
        int i14=7, i15=14, i16=4, i18=-14175, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 29629);

        vMeth(i, i1, d1);
        i14 = 1;
        while ((i14 += 2) < 241) {
            Test.lArrFld[(i >>> 1) % N] = i1;
            i2 = i14;
        }
        i15 = 1;
        while (++i15 < 168) {
            Test.lArrFld[i15 + 1] -= (long)d1;
            i2 = -31903;
            Test.iArrFld[i15 + 1] = Test.iArrFld[i15 - 1];
            Test.byFld ^= (byte)i1;
            i16 += (i15 + Test.instanceCount);
        }
        i16 = 6247;
        for (int i17 : iArr) {
            for (d2 = 1; d2 < 4; d2++) {
                i1 >>>= 14;
                iArr[(int)(d2)] = -17088;
            }
        }
        long meth_res = i + i1 + i2 + Double.doubleToLongBits(d1) + i14 + i15 + i16 + Double.doubleToLongBits(d2) + i18
            + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i19=-1, i20=3095, i21=7447, i22=-10, i23=179, i24=23641, i25=-5, i26=-217, i27=-62835, i28=-3, i29=-4;
        float f3=0.483F, f4=0.909F;
        boolean b2=false, bArr[]=new boolean[N];
        double d3=56.104885, dArr[]=new double[N];
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)105);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 1.43800);

        iMeth(i19, i19, i19);
        for (f3 = 216; f3 > 4; f3 -= 2) {
            Test.instanceCount = i20;
        }
        i20 = i20;
        for (i21 = 5; i21 < 122; i21++) {
            i23 = 214;
            while ((i23 -= 2) > 0) {
                Test.byFld >>>= (byte)i23;
                Test.instanceCount -= -82L;
                b2 = b2;
                Test.instanceCount = Test.instanceCount;
                byArr[i23][i21 - 1] *= (byte)Test.instanceCount;
                f4 += Test.instanceCount;
                if (b2) {
                    if (b2) {
                        for (i24 = 2; 1 < i24; --i24) {
                            i25 += (int)1.606F;
                            i20 += (i24 - Test.instanceCount);
                            bArr[i21 + 1] = b2;
                        }
                        d3 *= f4;
                    } else {
                        d3 += i22;
                        i20 = -29959;
                        dArr[i23] += Test.instanceCount;
                        Test.iArrFld[i23 - 1][i21 + 1] -= i22;
                    }
                } else {
                    if (b2) break;
                    i19 += (-59951 + (i23 * i23));
                }
                Test.lArrFld = Test.lArrFld;
            }
        }
        for (i26 = 8; i26 < 152; i26++) {
            for (i28 = 7; 174 > i28; i28++) {
                i19 += Test.byFld;
                i22 <<= i24;
            }
        }

        FuzzerUtils.out.println("i19 f3 i20 = " + i19 + "," + Float.floatToIntBits(f3) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("b2 f4 i24 = " + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f4) + "," + i24);
        FuzzerUtils.out.println("i25 d3 i26 = " + i25 + "," + Double.doubleToLongBits(d3) + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("byArr bArr dArr = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(bArr) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iArrFld = " + Test.instanceCount + "," + Test.byFld
            + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
