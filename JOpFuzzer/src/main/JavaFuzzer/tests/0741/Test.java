// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8864658632634333358L;
    public static double dFld=-2.120230;
    public float fFld=2.183F;
    public short sFld=-25248;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, long l1, int i6) {

        int i7=-7, i8=3, i9=-11, iArr[]=new int[N];
        byte by=68;
        boolean b=false, bArr[]=new boolean[N];
        short s=-28373;
        long lArr[]=new long[N];
        double dArr[]=new double[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -25738L);
        FuzzerUtils.init(dArr, -77.127219);
        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(fArr, 79.551F);

        i7 = 201;
        do {
            i6 = (int)1.435;
            for (i8 = 1; 8 > i8; i8++) {
                by *= (byte)61485L;
                i6 = 42036;
                i9 >>>= (int)Test.instanceCount;
                bArr[i7 + 1] = b;
            }
            i6 = s;
            if (i8 != 0) {
                vMeth2_check_sum += Float.floatToIntBits(f1) + l1 + i6 + i7 + i8 + i9 + by + (b ? 1 : 0) + s +
                    FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i6 = i9;
            i9 -= i6;
            switch ((((i6 >>> 1) % 10) * 5) + 104) {
            case 115:
                i9 = i6;
                i6 = (int)Test.instanceCount;
            case 109:
                Test.dFld = Test.instanceCount;
                break;
            case 145:
                dArr = dArr;
                break;
            case 137:
            case 117:
                iArr = iArr;
            case 127:
                dArr[i7 - 1] = i7;
                break;
            case 153:
                f1 *= i9;
                break;
            case 128:
                fArr[i7] -= -113;
            case 131:
                iArr[i7 - 1] += (int)Test.dFld;
                break;
            case 150:
                i9 >>= 3;
                break;
            }
        } while (--i7 > 0);
        vMeth2_check_sum += Float.floatToIntBits(f1) + l1 + i6 + i7 + i8 + i9 + by + (b ? 1 : 0) + s +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(long l) {

        int i3=-14, i4=200, i5=-19256, i10=-52648, i11=-5, i12=53392, iArr1[][]=new int[N][N];
        float f=70.268F;
        byte by1=2;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -1892001162846156373L);
        FuzzerUtils.init(iArr1, 4);

        for (i3 = 15; i3 < 346; i3++) {
            i5 = 1;
            while (++i5 < 5) {
                if (i4 != 0) {
                    vMeth1_check_sum += l + i3 + i4 + i5 + Float.floatToIntBits(f) + i10 + i11 + by1 + i12 +
                        FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                f += (i5 * i5);
                vMeth2(f, Test.instanceCount, i3);
                switch (((i5 >>> 1) % 8) + 43) {
                case 43:
                    i4 -= i3;
                    lArr1[i5 + 1] = Test.instanceCount;
                    for (i10 = 1; i10 < 1; ++i10) {
                        Test.instanceCount += by1;
                        i4 -= (int)f;
                        Test.instanceCount |= -8;
                        i4 += (((i10 * f) + i10) - i11);
                        try {
                            i12 = (i5 % -814294878);
                            i4 = (-83 % iArr1[i3 + 1][i5]);
                            i11 = (i10 % -153);
                        } catch (ArithmeticException a_e) {}
                    }
                    iArr1[i3 - 1][i5 + 1] *= i3;
                    break;
                case 44:
                case 45:
                    lArr1[i5 + 1] = i12;
                case 46:
                    i12 -= (int)f;
                    break;
                case 47:
                    i11 |= i3;
                    break;
                case 48:
                    iArr1[i3 - 1][i3 - 1] *= i3;
                case 49:
                    i12 -= i11;
                    break;
                case 50:
                    i11 >>= (int)187L;
                    break;
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + Float.floatToIntBits(f) + i10 + i11 + by1 + i12 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i=242, i1=-83, i2=-4, i13=-50814;
        float f2=2.540F;
        short s1=31748;

        i *= (int)Test.instanceCount;
        for (i1 = 394; i1 > 19; i1 -= 2) {
            vMeth1(Test.instanceCount);
            for (f2 = 1; f2 < 9; ++f2) {
                i13 /= (int)((long)(f2) | 1);
                Test.instanceCount = i1;
                i13 = s1;
                i += (int)f2;
                Test.instanceCount -= i1;
                Test.instanceCount = Test.instanceCount;
                i -= i1;
                i13 <<= (int)Test.instanceCount;
                i13 &= i2;
                Test.instanceCount += i13;
            }
            Test.instanceCount %= (i13 | 1);
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f2) + i13 + s1;
    }

    public void mainTest(String[] strArr1) {

        int i14=-23588, i15=65189, i16=-203, i17=155;
        double d1=-75.128160;
        boolean b1=true, bArr1[]=new boolean[N];
        byte by2=-32;

        FuzzerUtils.init(bArr1, false);

        vMeth();
        i14 = 1;
        do {
            switch (((i14 % 5) * 5) + 1) {
            case 18:
            case 21:
                for (d1 = 3; d1 < 101; ++d1) {
                    for (i16 = 2; i16 > 1; i16 -= 3) {
                        Test.instanceCount <<= i17;
                        if (b1) continue;
                        if (b1) {
                            i15 += (int)d1;
                            bArr1[(int)(d1)] = b1;
                        } else if (false) {
                            by2 += (byte)i15;
                            i15 = i17;
                            Test.instanceCount += (i16 + i17);
                        }
                        switch (((i16 % 10) * 5) + 10) {
                        case 17:
                            i17 -= i17;
                        case 55:
                            Test.instanceCount *= (long)fFld;
                            i15 *= (int)48.135F;
                            i17 -= i16;
                            break;
                        case 56:
                            i15 += sFld;
                            break;
                        case 47:
                            i17 += (-50748 + (i16 * i16));
                        case 12:
                            i15 = i15;
                            i17 -= i16;
                            i15 = i15;
                            i17 += (i16 ^ sFld);
                        case 57:
                            i17 -= i16;
                            i15 >>= i15;
                            break;
                        case 27:
                            iArrFld[i14 + 1] -= (int)d1;
                            break;
                        case 31:
                            i15 += (i16 - i14);
                            i15 = (int)Test.instanceCount;
                            break;
                        case 46:
                            fFld += (((i16 * i16) + i15) - i17);
                        case 29:
                            b1 = b1;
                            break;
                        }
                    }
                }
            case 24:
                if (b1) continue;
            case 15:
                iArrFld = iArrFld;
            case 6:
                by2 |= (byte)i15;
                break;
            default:
                iArrFld = iArrFld;
            }
        } while (++i14 < 249);

        FuzzerUtils.out.println("i14 d1 i15 = " + i14 + "," + Double.doubleToLongBits(d1) + "," + i15);
        FuzzerUtils.out.println("i16 i17 b1 = " + i16 + "," + i17 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("by2 bArr1 = " + by2 + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("sFld iArrFld = " + sFld + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
