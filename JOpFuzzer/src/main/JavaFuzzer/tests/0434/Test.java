// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-37763L;
    public static int iFld=-233;
    public static long lFld=8L;
    public float fFld=1.352F;
    public float fFld1=1.552F;
    public int iFld1=-202;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public long lArrFld1[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -61979);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, float f, int i4) {

        int i5=-55, i6=-5, i7=-33149, i8=-14, i9=-178, iArr[]=new int[N];
        double d=0.92847;
        short s=-13445;
        boolean b=true;

        FuzzerUtils.init(iArr, 53855);

        iArr[(i4 >>> 1) % N] = i4;
        if (b) {
            f -= i4;
            i5 = 393;
            while (--i5 > 0) {
                for (i6 = 1; i6 < 4; i6++) {
                    i4 += (int)d;
                    Test.iFld = (int)1.11899;
                    i3 += i6;
                    d -= s;
                    f -= 68;
                    i4 += (int)Test.instanceCount;
                }
                for (i8 = 4; i8 > 1; i8--) {
                    i7 ^= -5;
                    Test.lFld *= -58337L;
                    f += i6;
                }
            }
        } else if (b) {
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + s + i8 + i9
            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        float f1=-2.2F, fArr[][]=new float[N][N];
        int i10=-8, i11=19403, i12=-186, i13=13393, i14=14, i15=230, i16=213;
        long l=-4L;

        FuzzerUtils.init(fArr, 0.1012F);

        vMeth1(Test.iFld, f1, Test.iFld);
        for (i10 = 8; i10 < 299; ++i10) {
            i11 = Test.iFld;
            i12 = 1;
            do {
                Test.lFld = i10;
                f1 += Test.iFld;
            } while (++i12 < 6);
            Test.iFld -= 64696;
        }
        i13 = 1;
        do {
            for (i14 = i13; i14 < 8; i14++) {
                Test.iFld -= 59;
                Test.iFld = 22233;
                fArr[i14 + 1][i14 + 1] *= 36993;
                i11 += i14;
                l |= i16;
                i16 = -11;
            }
        } while (++i13 < 189);
        vMeth_check_sum += Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + i15 + l + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(int i2) {

        int i17=202, i18=-44816, i19=-64997, i20=-1, i21=-33606;
        boolean b1=true;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 1.101297);

        Test.instanceCount = (((i2 - i2) | (i2 *= i2)) * 7);
        vMeth();
        for (i17 = 221; i17 > 2; --i17) {
            i2 <<= (int)Test.instanceCount;
            switch ((i17 % 3) + 79) {
            case 79:
                dArr[i17 - 1][i17] *= 16492L;
                switch (((-53685 >>> 1) % 1) + 70) {
                case 70:
                    i19 = 1;
                    while (++i19 < 7) {
                        for (i20 = i17; i20 < 1; i20++) {
                            i18 = i21;
                            i2 += (((i20 * i2) + i2) - i20);
                            if (b1) break;
                            if (b1) break;
                            Test.iFld = Test.iFld;
                            Test.iFld -= (int)fFld;
                        }
                    }
                    break;
                }
            case 80:
                Test.iFld -= 14;
                break;
            case 81:
                Test.iArrFld[i17] -= (int)2.101069;
            }
        }
        long meth_res = i2 + i17 + i18 + i19 + i20 + i21 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=185, i1=5, i22=5, i23=-53757, iArr1[][]=new int[N][N];
        float f2=-1.700F;
        boolean b2=false;

        FuzzerUtils.init(iArr1, -14);

        for (i = 12; i < 264; i++) {
            iMeth(i1);
            for (i22 = 1; 100 > i22; ++i22) {
                byte by=-86;
                Test.instanceCount = i1;
                i1 -= by;
                f2 = 1;
                do {
                    switch (((i >>> 1) % 8) + 19) {
                    case 19:
                        lArrFld[i22] += Test.instanceCount;
                        break;
                    case 20:
                        i23 *= (int)2L;
                    case 21:
                        i1 = (int)Test.instanceCount;
                        Test.instanceCount -= 121;
                        Test.iArrFld[i22] |= i;
                        Test.iFld <<= (int)Test.instanceCount;
                        break;
                    case 22:
                        b2 = b2;
                        i1 += (int)(f2 * i);
                        Test.instanceCount -= Test.lFld;
                        fFld *= i1;
                    case 23:
                        i1 = (int)Test.instanceCount;
                        fFld1 -= i1;
                        i23 -= i;
                        if (b2) {
                            i23 <<= Test.iFld;
                            i23 = i22;
                            fFld += (2329204855L + (f2 * f2));
                        }
                    case 24:
                        Test.lFld += (long)(f2 * Test.instanceCount);
                        Test.iArrFld[i] += i;
                        break;
                    case 25:
                        Test.iArrFld = Test.iArrFld;
                        Test.iArrFld[(i1 >>> 1) % N] >>>= i22;
                        iArr1 = iArr1;
                        lArrFld1 = lArrFld1;
                        break;
                    case 26:
                        i1 = iFld1;
                    default:
                        if (true) break;
                    }
                } while (++f2 < 2);
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 f2 b2 = " + i23 + "," + Float.floatToIntBits(f2) + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.lFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.lFld);
        FuzzerUtils.out.println("fFld fFld1 iFld1 = " + Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(fFld1)
            + "," + iFld1);
        FuzzerUtils.out.println("Test.iArrFld lArrFld lArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
