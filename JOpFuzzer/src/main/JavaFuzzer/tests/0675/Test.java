// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-8759786566187993424L;
    public static float fFld=-2.801F;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 14L);
        FuzzerUtils.init(Test.iArrFld, -9344);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i8, int i9) {

        int i10=12, i11=-8, i12=51234, i13=130, i14=-3, iArr1[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, -12);

        Test.instanceCount /= (Test.instanceCount | 1);
        iArr1[(i8 >>> 1) % N] = i9;
        i10 = 1;
        do {
            i9 -= (int)Test.instanceCount;
            for (i11 = i10; 10 > i11; i11++) {
                Test.instanceCount >>= Test.instanceCount;
            }
            Test.instanceCount = -236L;
            Test.instanceCount += (i10 * i10);
            if (b) break;
        } while (++i10 < 159);
        Test.instanceCount -= 14;
        i8 = i9;
        for (i13 = 12; i13 < 193; ++i13) {
            try {
                i9 = (i12 / 832184187);
                i8 = (i9 / -13155);
                i8 = (i9 / -45973);
            } catch (ArithmeticException a_e) {}
            i9 += i13;
            Test.lArrFld[i13 - 1] = Test.instanceCount;
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + i13 + i14 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2, int i3, int i4) {

        double d1=0.53819;
        float f=-47.7F;
        int i5=-13, i6=4, i7=-147, iArr[]=new int[N];
        byte by=-13;
        short s=10933;
        boolean b1=false;

        FuzzerUtils.init(iArr, 62367);

        iArr[(i3 >>> 1) % N] *= (int)((++i2) * d1);
        for (f = 6; f < 357; f++) {
            for (i6 = (int)(f); i6 < 5; i6++) {
                iArr = (iArr = (iArr = (iArr = iArr)));
                i3 -= i3;
                i3 = (by++);
                iArr[(int)(f + 1)] *= iMeth1(70, i6);
                Test.fFld -= s;
            }
            Test.instanceCount *= (long)Test.fFld;
            i5 += (int)(f * f);
            Test.instanceCount = -13L;
            i4 += (17149 + (f * f));
            iArr[(int)(f - 1)] = i3;
            iArr[(int)(f)] = 126;
            if (b1) break;
        }
        long meth_res = i2 + i3 + i4 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i5 + i6 + i7 + by + s +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l, int i1) {

        double d=-67.3308;
        int i15=-135, i16=9, i17=-4508, i18=-64932, i19=11328;
        byte by1=11;

        d = ((d - (-iMeth(-173, i, i1))) - i);
        i15 = 1;
        do {
            for (i16 = 1; i16 < 9; ++i16) {
                for (i18 = 1; i18 < 2; ++i18) {
                    by1 = (byte)i17;
                    i17 *= i17;
                    i += (214 + (i18 * i18));
                    i1 = i19;
                    i1 >>>= i16;
                    i19 -= i1;
                    i1 += i18;
                    Test.lArrFld[(-167 >>> 1) % N] += i17;
                    Test.fFld = 38501;
                }
                l += i16;
                Test.iArrFld = FuzzerUtils.int2array(N, (int)14);
            }
        } while (++i15 < 170);
        vMeth_check_sum += i + l + i1 + Double.doubleToLongBits(d) + i15 + i16 + i17 + i18 + i19 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i20=-33129;

        vMeth(i20, 118L, i20);
        i20 = i20;

        FuzzerUtils.out.println("i20 = " + i20);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.lArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
