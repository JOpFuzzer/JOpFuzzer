// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5130642312744204140L;
    public static double dFld=69.25700;
    public static byte byFld=74;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];
    public static short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 51041L);
        FuzzerUtils.init(Test.iArrFld, 13);
        FuzzerUtils.init(Test.sArrFld, (short)7847);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by, short s) {

        int i7=54, i8=-200, i9=106, iArr[]=new int[N];
        float f=32.799F;

        FuzzerUtils.init(iArr, 13);

        for (i7 = 226; 14 < i7; i7--) {
            i8 |= (int)-2276825814406226920L;
            if (i7 != 0) {
                vMeth1_check_sum += by + s + i7 + i8 + i9 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
                return;
            }
            i9 = 1;
            while (++i9 < 8) {
                Test.instanceCount ^= s;
                Test.lArrFld[i7][i7 + 1] += Test.instanceCount;
                switch (((i9 % 1) * 5) + 8) {
                case 12:
                    f += 3234399069L;
                    i8 <<= i8;
                    i8 = -12;
                    i8 += (i9 - i7);
                default:
                    i8 += (int)Test.instanceCount;
                }
                iArr[i7] = i7;
                Test.instanceCount += (((i9 * i9) + Test.instanceCount) - i7);
                i8 *= i7;
            }
        }
        vMeth1_check_sum += by + s + i7 + i8 + i9 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i6) {

        short s1=26661;
        int i10=10724, i11=65101, i12=-10, i13=-4, i14=57253;
        float f1=-1.307F;
        boolean b=true;

        vMeth1((byte)(-23), s1);
        i6 += i6;
        s1 -= (short)i6;
        i10 = 1;
        while (++i10 < 145) {
            for (i11 = 1; 11 > i11; ++i11) {
                for (i13 = 1; i13 < 2; i13++) {
                    try {
                        i6 = (190 / i6);
                        i12 = (-1384879723 % i14);
                        i6 = (i6 / Test.iArrFld[i13 - 1]);
                    } catch (ArithmeticException a_e) {}
                    i12 -= i14;
                    i6 -= (int)Test.instanceCount;
                    if (i10 != 0) {
                        vMeth_check_sum += i6 + s1 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + (b ? 1 :
                            0);
                        return;
                    }
                    i6 *= (int)8L;
                    Test.iArrFld[i11] = 7997;
                    f1 %= (s1 | 1);
                    Test.dFld += 0;
                    if (b) break;
                }
            }
        }
        vMeth_check_sum += i6 + s1 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + (b ? 1 : 0);
    }

    public static int iMeth(int i2, int i3) {

        int i4=-14261, i5=-54250, i15=132, i16=2, i17=5, i18=3, i19=30076;
        float f2=-70.495F;

        for (i4 = 397; i4 > 1; i4 -= 2) {
            vMeth(i15);
            switch ((i4 % 6) + 32) {
            case 32:
                Test.instanceCount += i4;
                for (i16 = 1; i16 < 8; i16++) {
                    i3 = 27933;
                    for (i18 = 1; i18 < 2; i18++) {
                        i19 = (int)Test.dFld;
                        i17 += (((i18 * Test.instanceCount) + f2) - i4);
                        Test.iArrFld[i16] |= (int)Test.instanceCount;
                    }
                    i5 &= i19;
                    i5 += (((i16 * Test.byFld) + i3) - i17);
                    if (false) break;
                    Test.lArrFld[i16 + 1][i4 - 1] -= i4;
                    i19 *= (int)Test.instanceCount;
                }
            case 33:
                i15 += (((i4 * Test.byFld) + Test.instanceCount) - i18);
                break;
            case 34:
                i15 = i19;
            case 35:
                i17 += (i4 * i4);
                break;
            case 36:
                i2 += (int)(-107.11F + (i4 * i4));
                break;
            case 37:
                Test.instanceCount *= (long)f2;
                break;
            default:
                Test.instanceCount <<= Test.instanceCount;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i15 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=-46019, i20=-86, i21=28992, i22=46258, i23=2, i24=56, i25=-192, i26=7, i27=-7, i28=5;
        boolean b1=false;
        short s2=11984;
        float f3=-59.920F;
        long l=-7681575898146945993L;

        for (i = 8; i < 186; ++i) {
            i1 -= iMeth(i1, i);
            i20 = 1;
            while (++i20 < 141) {
                if (b1) break;
                Test.sArrFld[i20 + 1][i20 - 1] = s2;
            }
            i21 = 1;
            while (++i21 < 141) {
                i1 += (-5 + (i21 * i21));
            }
            i1 += (int)Test.instanceCount;
            i1 += -12;
        }
        for (i22 = 1; i22 < 165; i22++) {
            switch (((i22 % 2) * 5) + 3) {
            case 11:
                i23 = (int)f3;
                i1 -= 37201;
                break;
            case 10:
                i23 >>= (int)Test.instanceCount;
                for (i24 = 9; i24 < 153; i24++) {
                    i25 += i22;
                    for (i26 = i22; i26 < 2; i26++) {
                        i1 += (int)132L;
                        s2 -= s2;
                        b1 = true;
                        i27 += i;
                        switch ((i24 % 10) + 93) {
                        case 93:
                            i1 = 35;
                        case 94:
                            if (b1) continue;
                            Test.iArrFld[i22 + 1] %= (int)((long)(f3) | 1);
                            break;
                        case 95:
                            switch (((i22 % 2) * 5) + 118) {
                            case 126:
                                i25 += (((i26 * i27) + i27) - i28);
                                try {
                                    i25 = (i22 % i23);
                                    Test.iArrFld[i22 - 1] = (i26 / i24);
                                    Test.iArrFld[i22 - 1] = (i1 % i25);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 120:
                                i23 = (int)Test.instanceCount;
                                i23 -= (int)f3;
                                break;
                            }
                            break;
                        case 96:
                            Test.lArrFld[i24 - 1] = Test.lArrFld[i24 - 1];
                            break;
                        case 97:
                            i27 -= (int)l;
                            break;
                        case 98:
                            Test.instanceCount = -52928;
                        case 99:
                            i28 += (int)1.67178;
                            break;
                        case 100:
                            i25 -= i25;
                            break;
                        case 101:
                            i27 += i26;
                            break;
                        case 102:
                            Test.iArrFld[i26 - 1] = i28;
                        default:
                            l += s2;
                        }
                    }
                }
                break;
            default:
                f3 += Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("b1 s2 i21 = " + (b1 ? 1 : 0) + "," + s2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f3 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 l = " + i27 + "," + i28 + "," + l);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld Test.sArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + ","
            + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
