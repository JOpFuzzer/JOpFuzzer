// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=535L;
    public int iFld=72;
    public static double dFld=0.18740;
    public int iFld1=43168;
    public volatile short sFld=-25824;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 61939);
        FuzzerUtils.init(Test.fArrFld, -2.505F);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i7) {

        byte by=-105;
        int i8=196, i9=12100;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.363F);

        fArr = fArr;
        Test.instanceCount /= (by | 1);
        i7 += (int)Test.instanceCount;
        i7 = i8;
        i9 = 1;
        while (++i9 < 268) {
            i8 += (int)f;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i7 + by + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(long l, long l1, int i3) {

        int i4=-53675, i5=-11, i6=-53882, i10=15959, i11=5;
        float f1=-35.184F;
        double d=-2.74483;
        boolean b=false;

        i4 = 1;
        while (++i4 < 362) {
            for (i5 = i4; i5 < 5; ++i5) {
                vMeth1(f1, 10);
                i3 -= (int)l1;
                i3 <<= (int)Test.instanceCount;
                i6 += (-57698 + (i5 * i5));
                i6 -= (int)d;
                i6 += i5;
                for (i10 = 1; i10 < 1; i10++) {
                    if (false) {
                        i6 -= i10;
                        Test.fArrFld[i10 + 1] = i3;
                        f1 += i5;
                    } else if (b) {
                        f1 += (97.450F + (i10 * i10));
                        f1 += i6;
                    }
                }
            }
        }
        long meth_res = l + l1 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i10 + i11
            + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i) {

        int i1=19071, i2=3, i12=238, i13=10;
        short s=17128;
        long l2=-2992486145L, l3=0L;
        float f2=-2.733F;
        double d1=2.3176, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 124.118142);

        for (i1 = 4; i1 < 287; ++i1) {
            switch (((((i1 - s) >>> 1) % 9) * 5) + 26) {
            case 46:
                dArr[i1 + 1] = 112;
                break;
            case 53:
            case 48:
                switch (((i >>> 1) % 9) + 108) {
                case 108:
                    Test.iArrFld[i1 + 1] = (int)(((s & Test.instanceCount) * lMeth(Test.instanceCount,
                        3176419377569889810L, i1)) - l2);
                    break;
                case 109:
                    i >>= i2;
                    break;
                case 110:
                    l2 += (i1 + i2);
                    for (l3 = 1; l3 < 6; l3++) {
                        i += i;
                        switch ((int)((l3 % 5) + 40)) {
                        case 40:
                            f2 += l3;
                            i12 += (int)l3;
                            Test.instanceCount += i1;
                            s = (short)i13;
                            break;
                        case 41:
                            f2 = i1;
                            break;
                        case 42:
                            d1 -= l2;
                            break;
                        case 43:
                            s <<= (short)l2;
                            break;
                        case 44:
                            l2 += i;
                            break;
                        }
                    }
                    break;
                case 111:
                    Test.instanceCount += i1;
                    break;
                case 112:
                    f2 *= l2;
                    break;
                case 113:
                    i13 = i12;
                    break;
                case 114:
                    f2 = f2;
                    break;
                case 115:
                    i += i1;
                    break;
                case 116:
                    i2 = (int)l3;
                    break;
                default:
                    Test.iArrFld[i1 - 1] = i12;
                }
                break;
            case 47:
                d1 *= Test.instanceCount;
                break;
            case 35:
                if (false) break;
                break;
            case 49:
                i12 = (int)l2;
                break;
            case 61:
                i12 = i;
                break;
            case 32:
                Test.instanceCount = i13;
                break;
            case 66:
                Test.iArrFld = Test.iArrFld;
                break;
            }
        }
        vMeth_check_sum += i + i1 + i2 + s + l2 + l3 + i12 + Float.floatToIntBits(f2) + i13 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i14=1, i15=-137, i16=9, i17=-25879, i18=-34, i19=0, i20=24187, i21=-3, i22=7, i23=60788;
        float f3=7.539F, f4=0.187F;
        boolean b1=true;
        byte by1=-84;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 7228905331267289162L);

        vMeth(iFld);
        for (i14 = 14; i14 < 290; ++i14) {
            for (i16 = 91; i16 > i14; i16--) {
                iFld = (int)Test.instanceCount;
                i15 >>= i17;
            }
            for (i18 = 91; i18 > i14; i18 -= 3) {
                switch ((((i18 >>> 1) % 2) * 5) + 84) {
                case 93:
                    i19 -= i14;
                    f3 = i17;
                    break;
                case 90:
                    Test.iArrFld[i14] = i14;
                    iFld = 164;
                    for (i20 = 1; i20 < 1; ++i20) {
                        i19 += i20;
                        lArr[i14 + 1][i14 + 1] -= i15;
                        i15 *= (int)Test.instanceCount;
                    }
                }
                if (b1) break;
                Test.iArrFld[i14] = i14;
                i21 *= i21;
                i17 = (int)Test.instanceCount;
                Test.dFld -= 20;
                Test.iArrFld[i18 + 1] = (int)Test.dFld;
                iFld1 += (int)Test.instanceCount;
            }
            for (f4 = 3; 91 > f4; ++f4) {
                i17 = (int)Test.instanceCount;
                i23 = 1;
                do {
                    by1 *= (byte)i16;
                    Test.instanceCount = Test.instanceCount;
                    i15 *= 9;
                    if (b1) continue;
                    f3 -= sFld;
                } while (++i23 < 2);
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f3 i20 i21 = " + Float.floatToIntBits(f3) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b1 f4 i22 = " + (b1 ? 1 : 0) + "," + Float.floatToIntBits(f4) + "," + i22);
        FuzzerUtils.out.println("i23 by1 lArr = " + i23 + "," + by1 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iFld1 sFld Test.iArrFld = " + iFld1 + "," + sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
