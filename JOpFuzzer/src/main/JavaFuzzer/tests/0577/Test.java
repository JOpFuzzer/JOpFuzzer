// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-241L;
    public static float fFld=1.84F;
    public static short sFld=7441;
    public volatile float fFld1=2.179F;
    public boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i12) {

        int i13=10901, i14=3, i15=25, i16=-31272, iArr1[]=new int[N];
        double d=0.23675;
        float f1=0.41F, fArr[]=new float[N];
        byte by=-22;

        FuzzerUtils.init(iArr1, 13);
        FuzzerUtils.init(fArr, 2.347F);

        i12 ^= (int)Test.instanceCount;
        for (i13 = 13; i13 < 254; ++i13) {
            i15 = 1;
            do {
                iArr1[i15 - 1] = (int)Test.instanceCount;
                i14 = i13;
                Test.instanceCount = i14;
                for (d = 1; i15 < d; d -= 3) {
                    i14 = (int)Test.instanceCount;
                    switch (((i13 % 7) * 5) + 101) {
                    case 115:
                        i14 = (int)10L;
                        f1 += f1;
                        Test.instanceCount = (long)d;
                        break;
                    case 102:
                        i14 += i14;
                        i14 += i16;
                        i14 >>= by;
                        break;
                    case 113:
                        if (false) continue;
                        break;
                    case 117:
                        fArr[i13 + 1] = Test.instanceCount;
                    case 128:
                    case 103:
                        i16 += (int)(((d * i13) + i15) - i15);
                        break;
                    case 108:
                        iArr1[i15] = i12;
                    }
                }
            } while (++i15 < 7);
        }
        vMeth1_check_sum += i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) + i16 + Float.floatToIntBits(f1) + by +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(int i7, int i8, int i9) {

        int i10=708, i11=-25697, i17=1240, i18=-51983, i19=12, i20=25683;
        float f2=-1.491F;
        double d1=0.34244, dArr[]=new double[N];
        short s=22779;
        byte by1=-7;

        FuzzerUtils.init(dArr, 1.62143);

        for (i10 = 6; i10 < 166; i10++) {
            vMeth1(i10);
            f2 += 23027;
            i8 += (int)d1;
        }
        i8 = s;
        i8 += i10;
        for (i17 = 13; i17 < 247; ++i17) {
            i18 ^= (int)Test.instanceCount;
        }
        for (i19 = 9; i19 < 311; ++i19) {
            Test.instanceCount >>= by1;
            i11 <<= s;
            dArr[i19 + 1] *= i8;
            f2 += i18;
        }
        i20 -= i11;
        i9 = s;
        long meth_res = i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + s + i17 +
            i18 + i19 + i20 + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i5=-64, i6=5, i21=1044, iArr[][]=new int[N][N];
        long l=-52L, l1=36237L;
        boolean b=true;

        FuzzerUtils.init(iArr, -49);

        iArr[(i5 >>> 1) % N][(-9769 >>> 1) % N] = ((i5++) - Math.min(i5, i5 = i5));
        l = 1;
        do {
            i6 = 1;
            do {
                i5 = (int)((Math.abs(i6) + Float.intBitsToFloat(i6)) + (iMeth(i5, i5, i6) + -3238));
                for (l1 = 1; l1 < 1; ++l1) {
                    int i22=-11;
                    Test.fFld *= -11;
                    iArr[i6 + 1][(int)(l - 1)] *= (int)3733754698726625222L;
                    if (false) {
                        b = b;
                        Test.fFld += (9 + (l1 * l1));
                    }
                    i5 = (int)l1;
                    i5 = i22;
                    i22 -= i21;
                }
                Test.instanceCount |= i21;
                i5 |= (int)l;
            } while (++i6 < 5);
        } while (++l < 323);
        vMeth_check_sum += i5 + l + i6 + l1 + i21 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=45801, i1=-52884, i2=-38009, i3=58865, i4=-149, i23=-30920, i24=36069, iArr2[][]=new int[N][N];
        float f=0.64F;
        byte by2=14, byArr[]=new byte[N];
        double d2=1.49702;

        FuzzerUtils.init(iArr2, -4);
        FuzzerUtils.init(byArr, (byte)76);

        for (i = 20; i < 374; i++) {
            for (i2 = 1; 71 > i2; ++i2) {
                for (f = 1; f < 2; ++f) {
                    switch ((i % 2) + 88) {
                    case 88:
                        vMeth();
                        break;
                    case 89:
                        iArr2 = FuzzerUtils.int2array(N, (int)-11);
                    }
                    i3 -= i3;
                    i1 += (int)(f * i4);
                    i3 /= (int)(i3 | 1);
                }
                i3 += (int)Test.instanceCount;
                by2 += (byte)(-69.355F + (i2 * i2));
                i4 += (int)Test.instanceCount;
                Test.instanceCount += (((i2 * i) + i4) - Test.sFld);
                for (i23 = 1; 2 > i23; ++i23) {
                    d2 -= fFld1;
                    by2 += (byte)(((i23 * i2) + Test.instanceCount) - Test.instanceCount);
                    i4 = i1;
                    by2 += (byte)(235 + (i23 * i23));
                    iArr2[i2 - 1][i23] += 12408;
                    if (true) {
                        i24 = (int)Test.instanceCount;
                        Test.instanceCount = i24;
                    } else if (bFld) {
                        i4 = i24;
                        if (bFld) break;
                    } else {
                        i4 = i3;
                    }
                    Test.instanceCount += i23;
                    Test.instanceCount += (i23 * i23);
                    byArr[i] += (byte)i23;
                    i1 += (((i23 * i4) + by2) - i);
                }
                i1 <<= (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i4 = " + i3 + "," + Float.floatToIntBits(f) + "," + i4);
        FuzzerUtils.out.println("by2 i23 i24 = " + by2 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d2 iArr2 byArr = " + Double.doubleToLongBits(d2) + "," + FuzzerUtils.checkSum(iArr2) +
            "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("fFld1 bFld = " + Float.floatToIntBits(fFld1) + "," + (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
