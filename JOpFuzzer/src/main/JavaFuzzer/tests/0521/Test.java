// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3938088335L;
    public float fFld=0.528F;
    public static float fFld1=1.273F;
    public static double dFld=119.25995;
    public static short sFld=-10976;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 152);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i4) {

        int i5=-4, i6=0, i7=-20, i8=1;
        short s=24090;

        for (i5 = 3; i5 < 183; i5++) {
            Test.fFld1 -= i6;
            for (i7 = 1; 9 > i7; ++i7) {
                i8 = i6;
                Test.instanceCount -= (long)Test.dFld;
                i8 = i5;
                Test.fFld1 *= Test.fFld1;
                Test.dFld += i7;
                if (false) continue;
                Test.instanceCount += (i7 | i8);
                Test.iArrFld[i5] = i7;
            }
            switch (((i5 % 8) * 5) + 13) {
            case 20:
                i4 += 0;
                break;
            case 18:
                i8 += (i5 ^ Test.instanceCount);
                break;
            case 15:
                i4 = i6;
            case 25:
                s >>>= (short)Test.instanceCount;
                break;
            case 26:
                Test.fFld1 += (((i5 * l1) + i4) - i4);
                break;
            case 17:
                i6 += i8;
                break;
            case 42:
                i4 = i5;
                break;
            case 40:
                i6 += -128;
            default:
                l1 = 0L;
            }
        }
        long meth_res = l1 + i4 + i5 + i6 + i7 + i8 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(int i3, long l) {

        int i9=33, i10=4, i11=13, i12=-13, iArr[][]=new int[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(dArr, 105.80357);

        i3 >>= iMeth(l, i3);
        Test.iArrFld[(i3 >>> 1) % N] = (int)Test.fFld1;
        i9 = 1;
        while (++i9 < 294) {
            for (i10 = 6; i10 > 1; --i10) {
                i12 = 2;
                do {
                    short s1=-24970;
                    l += i12;
                    Test.instanceCount *= i3;
                    l = 50483;
                    i3 >>>= (int)-11L;
                    s1 = (short)i10;
                    switch (((i10 % 3) * 5) + 126) {
                    case 130:
                        iArr = iArr;
                        Test.instanceCount += (i12 - Test.fFld1);
                        break;
                    case 133:
                        dArr[i9] = s1;
                        break;
                    case 134:
                        i3 += (int)1.50571;
                    }
                } while ((i12 -= 3) > 0);
            }
        }
        long meth_res = i3 + l + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(double d1) {

        boolean b=true;
        int i13=-30855, i14=4, i15=241, i16=58405, i17=-58527, i18=-64887, i19=5;
        short sArr[]=new short[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(sArr, (short)-4672);
        FuzzerUtils.init(dArr1, 1.784);

        b = (false ^ (bMeth(i13, 1448769714L) == b));
        Test.sFld = (short)i13;
        for (i14 = 2; i14 < 336; ++i14) {
            i15 -= i15;
            Test.fFld1 = i13;
            i13 += (i14 ^ Test.instanceCount);
            i15 = i15;
            i13 = i15;
            b = b;
        }
        for (i16 = 297; i16 > 1; i16 -= 3) {
            Test.iArrFld[i16 - 1] = i16;
            sArr[i16 - 1] = (short)i14;
        }
        for (i18 = 12; i18 < 233; ++i18) {
            dArr1[i18] += i17;
            if (b) continue;
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + (b ? 1 : 0) + i13 + i14 + i15 + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=215, i2=1, i20=-4, i21=-143, i22=-28067, i23=15203, i24=-26306, i25=13, i26=-5856, i27=3553;
        double d=-2.17416;
        boolean b1=true;
        float f=2.129F, fArr[]=new float[N];
        byte by=42;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -1.177F);
        FuzzerUtils.init(lArr, -6129470871121525763L);

        i += (int)(-(Test.instanceCount + (d - Test.instanceCount)));
        for (i1 = 133; i1 > 7; i1 -= 3) {
            fArr[i1] = (fFld--);
            vMeth(-1.66503);
            for (i20 = 4; i20 < 383; ++i20) {
                if (b1) break;
                i21 -= i21;
                Test.instanceCount = Test.instanceCount;
            }
            i21 -= (int)Test.instanceCount;
            Test.instanceCount >>>= i;
            Test.instanceCount = i1;
            i += (i1 * i1);
        }
        i22 = 1;
        do {
            for (f = 9; f < 194; ++f) {
                switch ((int)(((f % 1) * 5) + 113)) {
                case 115:
                    if (Test.bFld) continue;
                    for (i24 = (int)(f); i24 < 2; ++i24) {
                        lArr[i22] -= -15965;
                        i23 -= (int)Test.fFld1;
                        i21 += i24;
                        i25 = by;
                        Test.sFld *= (short)fFld;
                        Test.fFld1 = i21;
                        i23 -= i25;
                        i2 >>= i22;
                    }
                    Test.iArrFld[i22] += i23;
                }
                Test.instanceCount = Test.instanceCount;
                for (i26 = 1; i26 < 2; ++i26) {
                    int i28=158;
                    Test.instanceCount = i28;
                    i2 *= by;
                }
            }
        } while (++i22 < 129);

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 i20 i21 = " + i2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b1 i22 f = " + (b1 ? 1 : 0) + "," + i22 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("by i26 i27 = " + by + "," + i26 + "," + i27);
        FuzzerUtils.out.println("fArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.fFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println("Test.dFld Test.sFld Test.bFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.sFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
