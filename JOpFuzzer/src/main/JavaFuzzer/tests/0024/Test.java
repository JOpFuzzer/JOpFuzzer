// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=4230667689575851961L;
    public static float fFld=1.579F;
    public static volatile int iFld=6;
    public static double dFld=86.128926;
    public byte byFld=40;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -97);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i6, int i7) {

        int i8=-13, i9=-36170, i10=13, i11=-35584;
        long l=-1L;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.65449);

        for (double d1 : dArr) {
            for (i8 = 4; i8 > 1; i8 -= 3) {
                for (i10 = 1; i10 < 4; i10++) {
                    switch (((i8 >>> 1) % 1) + 19) {
                    case 19:
                        l <<= -40096;
                        i7 *= i10;
                        break;
                    }
                    i9 = i7;
                    i9 *= i6;
                    Test.fFld = -23713L;
                }
                Test.instanceCount *= -26849;
                if (i8 != 0) {
                }
                i9 += i11;
                Test.iArrFld[i8] = i6;
                d1 = 41880;
                i9 *= (int)Test.instanceCount;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + l + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i4, int i5) {

        int i12=-45980, i13=9, i14=0, i15=-14919, i16=-14, i17=-41089, i18=134, i19=-3;
        short s=-26188;

        Test.iArrFld[(-145 >>> 1) % N] >>= (i5 >> (iMeth2(i4, 228) << 228));
        for (i12 = 15; i12 < 395; ++i12) {
            try {
                i13 = (i5 % i5);
                i5 = (i12 % i5);
                i13 = (166 / i13);
            } catch (ArithmeticException a_e) {}
            Test.iArrFld = Test.iArrFld;
            Test.iArrFld[i12 + 1] = i4;
        }
        for (i14 = 14; 294 > i14; i14++) {
            Test.instanceCount += (i14 ^ i5);
            for (i16 = 1; i16 < 6; i16++) {
                i15 = i5;
                for (i18 = 1; 2 > i18; i18++) {
                    switch (((780 >>> 1) % 3) + 36) {
                    case 36:
                    case 37:
                        i4 += (12 + (i18 * i18));
                        Test.instanceCount = (long)Test.fFld;
                        s += (short)(((i18 * i5) + i15) - i14);
                    case 38:
                        i4 -= i13;
                        break;
                    default:
                        Test.fFld = -30070;
                    }
                }
            }
        }
        long meth_res = i4 + i5 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + s;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i) {

        int i1=126, i2=117, i3=8, i20=-59142, i21=6306, i22=3;
        float f=82.936F;

        i1 = 1;
        do {
            i -= (++i);
            Test.instanceCount += (i1 - i1);
            for (i2 = 1; 6 > i2; ++i2) {
                f += iMeth1(2850, i3);
            }
            Test.iArrFld[i1 + 1] &= (int)Test.instanceCount;
            i3 += (((i1 * Test.instanceCount) + Test.instanceCount) - i2);
            Test.iArrFld[i1 + 1] >>= i;
            for (i20 = 1; i20 < 6; ++i20) {
                i += i2;
                try {
                    i21 = (57 / i);
                    Test.iArrFld[(i21 >>> 1) % N] = (18429 / i3);
                    i = (146 / Test.iArrFld[i1 - 1]);
                } catch (ArithmeticException a_e) {}
                i22 = 1;
                while (++i22 < 2) {
                    Test.iArrFld[i20 + 1] = (int)-5516653018585556308L;
                    i += (((i22 * i3) + i20) - f);
                }
                Test.instanceCount += (i20 * i);
            }
        } while (++i1 < 294);
        long meth_res = i + i1 + i2 + i3 + Float.floatToIntBits(f) + i20 + i21 + i22;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-30.60435;
        int i23=-13821, i24=182, i25=-5, i26=3, i27=29575, i28=168, i29=86, i30=0, i31=-33123;
        long l1=-46998L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3436523029L);

        d *= iMeth(4682);
        Test.iFld -= (int)Test.dFld;
        Test.iFld -= Test.iFld;
        Test.instanceCount = Test.instanceCount;
        i23 = 1;
        while (++i23 < 306) {
            Test.iFld += (int)(1L + (i23 * i23));
            Test.iFld = i23;
        }
        byFld /= (byte)-1.869F;
        Test.iFld *= i23;
        Test.dFld -= i23;
        l1 = 1;
        do {
            Test.iArrFld[(int)(l1)] -= Test.iFld;
            Test.iArrFld[(int)(l1 - 1)] = i23;
        } while (++l1 < 245);
        Test.iFld = 8;
        for (i24 = 6; i24 < 138; ++i24) {
            for (i26 = 6; i26 < 190; ++i26) {
                Test.instanceCount += i26;
                lArr[i24 - 1] += l1;
                Test.instanceCount = i25;
                i25 >>>= i24;
                for (i28 = 1; 2 > i28; i28++) {
                    boolean b=false;
                    if (b) continue;
                    i27 *= (int)l1;
                }
                for (i30 = 2; i30 > 1; i30 -= 2) {
                    Test.instanceCount += i30;
                    i29 += i30;
                    Test.iFld *= i26;
                }
            }
            i27 -= i23;
            i27 += (i24 * Test.fFld);
            Test.iArrFld[i24 - 1] |= i24;
        }

        FuzzerUtils.out.println("d i23 l1 = " + Double.doubleToLongBits(d) + "," + i23 + "," + l1);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 lArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld byFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + byFld +
            "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
