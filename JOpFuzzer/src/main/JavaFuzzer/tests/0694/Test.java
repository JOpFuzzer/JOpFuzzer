// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=64L;
    public static float fFld=-125.755F;
    public static volatile boolean bFld=true;
    public static int iFld=-35793;
    public static int iFld1=3;
    public static volatile int iFld2=177;
    public volatile int iFld3=-9;
    public static short sFld=-19258;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 239);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i12, double d, long l) {

        int i13=-59930, i14=-64808, i15=-7, i16=-7138, i17=1, i18=-250, i19=-182, iArr1[]=new int[N];
        float f1=-11.16F;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -41);
        FuzzerUtils.init(lArr, -39L);

        i12 = (int)Test.fFld;
        for (i13 = 21; i13 < 343; i13++) {
            i12 = (int)Test.instanceCount;
            for (i15 = 1; i15 < 5; ++i15) {
                for (i17 = i15; 2 > i17; i17++) {
                    Test.instanceCount = i18;
                    i16 = i18;
                }
                iArr1[i13 - 1] = (int)l;
            }
            if (b) {
                lArr[i13] <<= i18;
                i18 += (int)Test.fFld;
                for (f1 = 5; f1 > 1; --f1) {
                    iArr1 = iArr1;
                    i16 += (int)f1;
                    i12 += (int)(3531665969031613214L + (f1 * f1));
                }
            }
        }
        vMeth2_check_sum += i12 + Double.doubleToLongBits(d) + l + i13 + i14 + i15 + i16 + i17 + i18 +
            Float.floatToIntBits(f1) + i19 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(byte by) {

        int i8=8, i9=14, i10=-16, i11=5, i20=-6, i21=13, i22=5, i23=194, i24=24458, i25=-231, iArr2[][]=new int[N][N];
        double d1=-58.119151;
        short s1=21599, sArr[]=new short[N];
        long l1=205L, lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, 2212872446L);
        FuzzerUtils.init(fArr, -78.917F);
        FuzzerUtils.init(iArr2, 3);
        FuzzerUtils.init(sArr, (short)-27009);

        i8 >>= ((i8 * (48497 * (++i9))) >> ((i8 - i9) - -5));
        for (i10 = 8; i10 < 370; i10++) {
            vMeth2(i9, -68.70826, Test.instanceCount);
            d1 += i11;
            i9 += i10;
            i11 *= i8;
            Test.fFld = i11;
            i20 = 1;
            do {
                switch ((i10 * 5) + 29) {
                case 71:
                    by += (byte)i20;
                    if (Test.bFld) continue;
                    lArr1[(i8 >>> 1) % N] = s1;
                    for (i21 = 1; i21 > 1; i21--) {
                        i11 &= (int)Test.instanceCount;
                        by -= (byte)i22;
                    }
                    break;
                case 57:
                    Test.iArrFld[i20 + 1] -= i10;
                    break;
                case 319:
                case 304:
                case 295:
                    i8 = -187;
                case 369:
                    Test.fFld -= Test.instanceCount;
                case 87:
                    i22 *= i23;
                    break;
                case 267:
                    Test.instanceCount -= Test.instanceCount;
                case 59:
                    if (Test.bFld) continue;
                    break;
                case 94:
                    i24 -= (int)Test.instanceCount;
                case 373:
                    Test.bFld = true;
                    break;
                case 50:
                    Test.instanceCount &= by;
                    break;
                case 360:
                    i24 += i20;
                case 284:
                    Test.instanceCount += (i20 * Test.instanceCount);
                case 240:
                    lArr1[i20] = i8;
                case 69:
                    Test.iArrFld[i10] += i22;
                    break;
                case 201:
                case 44:
                    if (Test.bFld) continue;
                    break;
                case 100:
                    Test.iArrFld[i10 + 1] = (int)-43.170F;
                    break;
                case 247:
                    i9 += (i20 * i20);
                    break;
                case 90:
                    Test.iArrFld[i20 + 1] ^= (int)-743923067L;
                case 285:
                    Test.instanceCount = -120;
                    break;
                case 67:
                    fArr = FuzzerUtils.float1array(N, (float)-94.168F);
                    break;
                case 32:
                    Test.instanceCount = i23;
                case 157:
                case 164:
                    i11 *= Test.iFld;
                case 283:
                    Test.iFld *= by;
                    break;
                case 39:
                    Test.iArrFld[i10] *= (int)58374L;
                    break;
                case 250:
                    i24 &= (int)474581522L;
                    break;
                case 320:
                    i24 -= i10;
                    break;
                case 199:
                    if (Test.bFld) continue;
                    break;
                case 122:
                case 334:
                    i22 += (((i20 * Test.iFld) + i23) - i11);
                case 128:
                    s1 |= (short)i10;
                    break;
                case 272:
                    Test.instanceCount += l1;
                case 33:
                    fArr[i20 + 1] += i11;
                case 217:
                    iArr2 = FuzzerUtils.int2array(N, (int)0);
                case 216:
                    i23 = Test.iFld;
                    break;
                case 239:
                    Test.bFld = Test.bFld;
                    break;
                case 327:
                    Test.fFld = -40347;
                    break;
                case 256:
                    l1 |= i23;
                case 271:
                    i24 = i21;
                case 307:
                    Test.iArrFld[i10] = (int)Test.instanceCount;
                    break;
                case 167:
                    Test.iFld += (i20 * i20);
                    break;
                case 178:
                    i23 >>= i22;
                    break;
                case 359:
                    Test.iFld -= (int)Test.instanceCount;
                    break;
                case 35:
                    Test.fFld += i20;
                    break;
                case 155:
                    Test.iFld += (((i20 * i25) + i8) - i9);
                    break;
                case 296:
                    l1 += (i20 * i20);
                    break;
                case 202:
                    s1 += (short)i10;
                    break;
                case 357:
                    if (Test.bFld) continue;
                case 101:
                    d1 = i22;
                case 200:
                    Test.fFld *= i20;
                    break;
                case 363:
                    by = (byte)i21;
                case 367:
                    Test.fFld += l1;
                    break;
                case 258:
                    Test.fFld = s1;
                case 266:
                    i9 <<= (int)l1;
                case 333:
                    try {
                        i9 = (31207 % i24);
                        i9 = (iArr2[i10 + 1][i10] % 52);
                        i24 = (Test.iFld1 % i20);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 358:
                    Test.iArrFld[i20] &= Test.iFld;
                    break;
                case 174:
                    Test.iFld = i11;
                case 376:
                    Test.iArrFld[i10 - 1] -= Test.iFld1;
                case 182:
                    Test.fFld += i22;
                    break;
                case 260:
                    l1 -= i22;
                    break;
                case 351:
                    sArr[i20 - 1] -= (short)Test.fFld;
                    break;
                case 80:
                    i23 += (5 + (i20 * i20));
                    break;
                case 265:
                    i25 *= -78;
                    break;
                case 356:
                    Test.bFld = Test.bFld;
                case 129:
                    i11 = Test.iFld1;
                    break;
                case 161:
                    d1 = 8;
                    break;
                case 298:
                    iArr2[i20 - 1] = iArr2[i20 - 1];
                }
            } while (++i20 < 5);
        }
        vMeth1_check_sum += by + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + i20 + s1 + i21 + i22 + i23 + i24 +
            l1 + i25 + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i2, int i3, float f) {

        int i4=-11, i5=1, i6=227, i7=222, i26=8696, i27=12, iArr[]=new int[N];
        short s=30725;

        FuzzerUtils.init(iArr, -13);

        i2 = (iArr[(5 >>> 1) % N]++);
        for (i4 = 6; i4 < 149; ++i4) {
            i3 *= (int)-110.837F;
        }
        i5 += (int)Test.instanceCount;
        iArr = iArr;
        s += (short)((i4 + (i5 - Test.instanceCount)) + Test.instanceCount);
        for (i6 = 2; i6 < 230; i6++) {
            byte by1=-59;
            vMeth1(by1);
            for (i26 = 7; i26 > 1; --i26) {
                Test.fFld %= (i26 | 1);
                if (Test.iFld != 0) {
                    vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + s + i6 + i7 + i26 + i27 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                by1 *= (byte)Test.instanceCount;
                if (Test.bFld) {
                    iArr[i26] = (int)Test.instanceCount;
                    Test.iArrFld[i26] <<= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + s + i6 + i7 + i26 + i27 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=53385, i1=0, i28=-183, i29=-23523;
        double d2=2.109826, d3=-2.5216;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -47.817F);

        for (i = 14; i < 358; i++) {
            vMeth(Test.iFld2, iFld3, Test.fFld);
            i1 = i;
            Test.iFld = i;
        }
        Test.iArrFld[(iFld3 >>> 1) % N] = (int)d2;
        Test.iArrFld[(iFld3 >>> 1) % N] = Test.iFld;
        i28 = 1;
        while (++i28 < 389) {
            Test.iFld >>= (int)Test.instanceCount;
            Test.sFld = (short)-212;
            switch (((i28 % 10) * 5) + 2) {
            case 49:
                Test.iFld1 >>= (int)Test.instanceCount;
                break;
            case 47:
                Test.iFld1 += i28;
                Test.fFld += -165;
                Test.iArrFld = Test.iArrFld;
                if (Test.bFld) continue;
            case 41:
                fArr1[i28 - 1] += Test.iFld2;
                Test.instanceCount -= i1;
                break;
            case 26:
                if (Test.bFld) {
                    iFld3 >>>= iFld3;
                    iFld3 += (i28 * i28);
                }
                for (d3 = 3; 65 > d3; d3++) {
                    Test.iFld2 *= (int)Test.instanceCount;
                    Test.iFld2 *= (int)Test.instanceCount;
                    Test.instanceCount <<= i29;
                    Test.instanceCount = (long)Test.fFld;
                }
                i29 &= -2;
                break;
            case 8:
                Test.iFld1 -= Test.iFld;
                i1 += (((i28 * Test.sFld) + i28) - Test.iFld2);
            case 27:
                Test.sFld -= (short)Test.iFld;
                break;
            case 39:
                i29 = i1;
                break;
            case 48:
                Test.instanceCount = Test.instanceCount;
                break;
            case 14:
                iFld3 += (5 + (i28 * i28));
            case 24:
            }
        }

        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i28 d3 i29 = " + i28 + "," + Double.doubleToLongBits(d3) + "," + i29);
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.iFld1 Test.iFld2 = " + Test.iFld + "," + Test.iFld1 + "," + Test.iFld2);
        FuzzerUtils.out.println("iFld3 Test.sFld Test.iArrFld = " + iFld3 + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
