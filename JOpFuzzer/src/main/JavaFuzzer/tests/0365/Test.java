// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1627735225567232516L;
    public int iFld=27;
    public int iFld1=-58330;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -107.51934);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7) {

        int i8=-56118, i9=89, i10=251, i11=-3, i12=51066, i13=-83, i14=-5, iArr1[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, -5);

        if (b1) {
            i7 <<= i7;
            for (i8 = 206; 11 < i8; --i8) {
                iArr1[i8 + 1] %= (int)(i9 | 1);
                i9 >>= i9;
                i7 = i7;
            }
            i7 -= i9;
        } else {
            for (i10 = 3; i10 < 139; ++i10) {
                b1 = b1;
                i9 = i10;
                i9 <<= i7;
                i12 = 1;
                do {
                    for (i13 = 1; i13 < 1; ++i13) {
                        i9 -= 4;
                        i14 -= (int)Test.instanceCount;
                    }
                } while (++i12 < 12);
            }
        }
        long meth_res = i7 + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i1=0, i2=-4, i3=-181, i4=-10, i5=-9, i6=-56119, iArr[]=new int[N];
        boolean b=false;
        long l=-5371434554765701281L;
        float f1=-9.576F;
        byte by1=-12;

        FuzzerUtils.init(iArr, 6);

        for (i1 = 6; i1 < 383; ++i1) {
            Test.instanceCount = (long)Test.dArrFld[i1 + 1];
            for (i3 = 1; i3 < 4; ++i3) {
                i2 >>= (int)(--Test.instanceCount);
                b = b;
                for (i5 = 1; i5 < 2; ++i5) {
                    l = Integer.reverseBytes((int)(i2 -= (int)(i6 - Test.instanceCount)));
                    i4 += (i2++);
                    f1 *= ((by1 = (byte)(--iArr[i1])) - ((--f1) + (-iMeth(i1))));
                    if (true) continue;
                }
            }
            i2 = (int)l;
            switch (((i1 % 1) * 5) + 95) {
            case 99:
                i2 += i1;
                i2 = by1;
                Test.instanceCount = -51703L;
                break;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + (b ? 1 : 0) + i5 + i6 + l + Float.floatToIntBits(f1) + by1 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i) {


        vMeth();
        i += i;
        vSmallMeth_check_sum += i;
    }

    public void mainTest(String[] strArr1) {

        float f=117.170F, fArr[]=new float[N];
        byte by=-40;
        int i16=-4521, i19=2, i20=-20250, i21=3, i22=-2260, i23=0, i24=11, iArr2[]=new int[N], iArr3[][]=new int[N][N];
        short s=-28410;
        double d=94.128269;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.994F);
        FuzzerUtils.init(iArr2, 4);
        FuzzerUtils.init(iArr3, 184);
        FuzzerUtils.init(lArr, -5L);

        fArr[(-208 >>> 1) % N] *= iFld;
        f *= ((++f) * (--by));
        for (int smallinvoc=0; smallinvoc<101; smallinvoc++) vSmallMeth(iFld);
        i16 = 1;
        do {
            int i17=-27000;
            switch (((i16 % 10) * 5) + 127) {
            case 164:
                iFld += (((i16 * f) + i16) - i17);
                break;
            case 157:
                for (int i18 : iArr2) {
                    by += (byte)(((i16 * i16) + Test.instanceCount) - s);
                    iArr2[i16 - 1] = iFld;
                }
                break;
            case 141:
                Test.instanceCount = -21;
                Test.instanceCount /= -6498;
                iArr3 = iArr3;
                i17 = iFld;
                break;
            case 155:
                i17 = -40699;
                i17 = i19;
                f = iFld1;
                iArr2[i16] |= iFld1;
                break;
            case 139:
                for (i20 = 16; i20 < 366; ++i20) {
                    i21 = (int)d;
                    iFld = iFld;
                    i21 *= i22;
                    switch ((i20 % 7) + 120) {
                    case 120:
                        for (i23 = 1; i23 < 2; i23++) {
                            Test.instanceCount = i20;
                        }
                        iFld >>= i19;
                        f += i20;
                        lArr[i20 - 1] >>= i24;
                        break;
                    case 121:
                        i22 -= (int)116.95054;
                        break;
                    case 122:
                        iArr2[i16 + 1] *= (int)Test.instanceCount;
                        break;
                    case 123:
                        Test.instanceCount -= Test.instanceCount;
                    case 124:
                        iFld = iFld;
                        break;
                    case 125:
                        f = -5881;
                        break;
                    case 126:
                        i24 /= (int)(i19 | 1);
                        break;
                    }
                }
                break;
            case 133:
                lArr[i16] = iFld1;
                break;
            case 130:
                i22 >>= i16;
                break;
            case 147:
                iFld1 += (int)2.116;
                break;
            case 165:
                iFld1 += (int)(0.366F + (i16 * i16));
                break;
            case 152:
                Test.instanceCount >>>= 172;
            default:
                i22 += i22;
            }
        } while ((i16 += 3) < 130);

        FuzzerUtils.out.println("f by i16 = " + Float.floatToIntBits(f) + "," + by + "," + i16);
        FuzzerUtils.out.println("s i19 i20 = " + s + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d i22 = " + i21 + "," + Double.doubleToLongBits(d) + "," + i22);
        FuzzerUtils.out.println("i23 i24 fArr = " + i23 + "," + i24 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr2 iArr3 lArr = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(iArr3)
            + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld iFld1 = " + Test.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
