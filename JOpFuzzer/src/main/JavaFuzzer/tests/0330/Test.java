// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=4127610332672769727L;
    public static volatile float fFld=-60.540F;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 50078);
        FuzzerUtils.init(Test.fArrFld, -61.720F);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f1) {

        int i6=-14, i7=6, i8=-2;
        double d2=-67.57618;
        byte by1=-38;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -45605L);

        Test.instanceCount = i6;
        lArr1[(i6 >>> 1) % N] += (long)f1;
        lArr1[(i6 >>> 1) % N] = i6;
        Test.iArrFld[(-203 >>> 1) % N] <<= i6;
        for (i7 = 148; i7 > 9; --i7) {
            switch (((i7 % 6) * 5) + 47) {
            case 59:
                d2 += i6;
                i6 >>>= i6;
                break;
            case 75:
                i6 = i7;
                i6 -= i7;
                Test.instanceCount = Test.instanceCount;
                i6 = i8;
                break;
            case 51:
                i8 &= (int)Test.instanceCount;
                i6 *= (int)d2;
                i8 = i8;
                break;
            case 60:
                f1 += Test.instanceCount;
                break;
            case 52:
                i6 = -55815;
            case 69:
                Test.instanceCount += by1;
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i6 + i7 + i8 + Double.doubleToLongBits(d2) + by1 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i3, int i4, byte by) {

        float f=0.789F;
        int i5=23709, i9=198, i10=124, i11=-1, i12=13;

        Test.iArrFld[(-14 >>> 1) % N] -= (int)f;
        i5 = 1;
        while (++i5 < 334) {
            vMeth(f);
            Test.instanceCount += i5;
            i3 >>= -31750;
            Test.instanceCount += (((i5 * Test.instanceCount) + f) - f);
            Test.instanceCount += Test.instanceCount;
            Test.fArrFld = Test.fArrFld;
            for (i9 = i5; 5 > i9; ++i9) {
                for (i11 = 1; i11 < 1; i11++) {
                    boolean b1=true;
                    i3 += (-14 + (i11 * i11));
                    Test.fArrFld[i11 - 1][i5] -= Test.instanceCount;
                    i12 -= i3;
                    i4 = i10;
                    if (b1) continue;
                }
            }
        }
        long meth_res = i3 + i4 + by + Float.floatToIntBits(f) + i5 + i9 + i10 + i11 + i12;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(short s) {

        int i2=13526, i13=13, i14=5, i15=-235, i16=-61, i17=-48725;
        double d1=33.3463;
        byte by2=-52, byArr[]=new byte[N];
        float f2=2.294F;

        FuzzerUtils.init(byArr, (byte)-63);

        i2 = ((i2++) * (-(++byArr[(i2 >>> 1) % N])));
        d1 += iMeth(i2, -8, by2);
        i13 = 1;
        while (++i13 < 166) {
            for (i14 = 1; i14 < 10; i14++) {
                f2 = i15;
                for (i16 = 1; i16 < 2; i16++) {
                    i17 -= s;
                    switch ((i13 % 2) + 58) {
                    case 58:
                    case 59:
                        i2 += i16;
                        Test.iArrFld[i14] = i2;
                        Test.iArrFld = Test.iArrFld;
                        Test.instanceCount >>= s;
                        break;
                    }
                    f2 = i16;
                    i15 ^= i13;
                    i2 += i17;
                }
            }
        }
        long meth_res = s + i2 + Double.doubleToLongBits(d1) + by2 + i13 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
            i17 + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        int i=-1, i1=0, i18=13, i19=3, i20=114, i21=10, i22=38, i23=-12, i24=-4, i25=-12, i26=2;
        double d=2.41099;
        short s1=-14811;
        long l=3659433784336348421L, lArr[][]=new long[N][N];
        byte by3=45;

        FuzzerUtils.init(lArr, -6L);

        b = (b = b);
        lArr[(i >>> 1) % N][(i >>> 1) % N] += Math.min((int)(142 - d), (i - 70) - Integer.reverseBytes(i));
        i += (int)(((i - 33789) - (i1 * i1)) + d);
        i1 = (int)(145 - (-Test.instanceCount));
        lMeth(s1);
        Test.instanceCount = i;
        b = b;
        for (i18 = 6; i18 < 351; ++i18) {
            Test.fFld += (70.327F + (i18 * i18));
            i >>= i1;
            if (true) continue;
            l = 1;
            while (++l < 73) {
                i += 12;
            }
            Test.instanceCount |= i18;
            i /= (int)(Test.instanceCount | 1);
            i -= s1;
        }
        i20 = 1;
        while (++i20 < 172) {
            Test.fFld += 4L;
            i21 += i1;
            i19 += (int)Test.instanceCount;
            for (i22 = i20; i22 < 146; i22++) {
                switch ((((i >>> 1) % 2) * 5) + 7) {
                case 10:
                    Test.iArrFld[(i20 >>> 1) % N] += i1;
                    Test.instanceCount += (((i22 * by3) + i) - l);
                    for (i24 = 1; 1 > i24; i24++) {
                        i21 += i24;
                        d *= Test.instanceCount;
                        i >>= 203;
                        i19 <<= i26;
                        i <<= i25;
                    }
                    break;
                case 13:
                    i1 *= i1;
                }
            }
        }

        FuzzerUtils.out.println("b i d = " + (b ? 1 : 0) + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i1 s1 i18 = " + i1 + "," + s1 + "," + i18);
        FuzzerUtils.out.println("i19 l i20 = " + i19 + "," + l + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("by3 i24 i25 = " + by3 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 lArr = " + i26 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
