// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static volatile byte byFld=-113;
    public static short sFld=17882;
    public boolean bFld=true;
    public static int iFld=-167;
    public volatile float fFld=0.87F;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 167);
        FuzzerUtils.init(Test.dArrFld, -102.76126);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i1, int i2) {

        double d=0.18200;
        int i3=-12, i4=59944, i5=-5, i6=11, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(lArr, 2L);

        d = Test.byFld;
        iArr[(i1 >>> 1) % N] >>= i1;
        i2 -= i2;
        for (i3 = 6; i3 < 154; ++i3) {
            for (i5 = 11; i5 > 1; i5 -= 2) {
                Test.instanceCount -= i2;
                i4 *= (int)Test.instanceCount;
                i2 += (180 + (i5 * i5));
                i1 += (int)f1;
                iArr[i5 - 1] -= i1;
                lArr[i3] = i6;
                i6 &= 93;
            }
            Test.instanceCount <<= i3;
        }
        i2 += i1;
        Test.instanceCount = i4;
        vMeth2_check_sum += Float.floatToIntBits(f1) + i1 + i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(float f, long l) {

        int i7=6, i8=-7445, i9=33699, i10=-11, i11=99;
        boolean b1=false, b2=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.502F);

        vMeth2(f, i7, i7);
        for (i8 = 309; i8 > 8; i8 -= 2) {
            i9 -= i9;
            i7 += (i8 + i7);
            Test.sFld = (short)Test.instanceCount;
            for (i10 = 11; i10 > i8; i10--) {
                i9 += (((i10 * Test.byFld) + l) - i9);
                i9 = Test.sFld;
                i11 = i7;
                l = Test.instanceCount;
            }
            b1 = b2;
            i7 = (int)l;
        }
        fArr[(i9 >>> 1) % N] -= i11;
        i11 = (int)Test.instanceCount;
        b1 = b2;
        vMeth1_check_sum += Float.floatToIntBits(f) + l + i7 + i8 + i9 + i10 + i11 + (b1 ? 1 : 0) + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(boolean b) {

        int i=-4, i12=1, i13=-126, i14=19070, i15=59, i16=-19, i17=30310;
        byte by=-100;
        float f2=1.110F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 2.80F);

        i = (by--);
        vMeth1(f2, 9L);
        for (i12 = 7; i12 < 252; ++i12) {
            for (i14 = 7; i14 > 1; --i14) {
                if (b) {
                    Test.instanceCount *= i12;
                }
            }
            i = (int)Test.instanceCount;
            fArr1[i12 + 1] = Test.instanceCount;
            if (b) continue;
            Test.instanceCount += (i12 + i15);
            for (i16 = 1; i16 < 7; i16++) {
                double d1=0.6204;
                i13 = (int)-368164329787079430L;
                d1 += d1;
                i = 21667;
                d1 *= i12;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i + by + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i18=-130, i19=-38107, i20=226, i21=-12, i22=2;
        double d2=2.58477;
        byte byArr[]=new byte[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-118);
        FuzzerUtils.init(lArr1, -948L);

        vMeth(bFld);
        Test.iFld &= Test.iFld;
        for (byte by1 : byArr) {
            Test.iFld -= Test.iFld;
            Test.iFld -= (int)fFld;
            i18 = 1;
            while (++i18 < 63) {
                Test.instanceCount += (i18 - i18);
                Test.iArrFld = Test.iArrFld;
                lArr1[i18] >>= 0;
                fFld += Test.iFld;
                Test.iFld = Test.iFld;
                Test.instanceCount = Test.sFld;
                Test.iFld += (i18 + by1);
                for (i19 = 1; 1 > i19; ++i19) {
                    Test.iFld = i18;
                    fFld += (i19 - i19);
                    Test.instanceCount += i18;
                    Test.iFld = (int)113.673F;
                }
                for (i21 = 1; i21 < 1; i21++) {
                    i20 += (int)fFld;
                    Test.iArrFld[i21 - 1] -= (int)fFld;
                    Test.iFld *= (int)-128L;
                    Test.instanceCount += (i21 + fFld);
                    i20 <<= Test.sFld;
                    Test.dArrFld[i18 - 1] = -33.57396;
                    i20 = (int)fFld;
                    byArr = byArr;
                    i22 += (((i21 * Test.sFld) + i22) - i22);
                    d2 -= i22;
                }
                i20 -= -5;
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 d2 = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("byArr lArr1 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("bFld Test.iFld fFld = " + (bFld ? 1 : 0) + "," + Test.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
