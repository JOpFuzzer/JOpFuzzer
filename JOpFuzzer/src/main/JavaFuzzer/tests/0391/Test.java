// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-148L;
    public static volatile short sFld=-31818;
    public static byte byFld=97;
    public static float fFld=0.266F;
    public volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 51L);
        FuzzerUtils.init(Test.iArrFld1, 5);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(double d1, float f2, int i8) {

        int i9=1, i10=-1, i11=10710, i12=73, iArr[][]=new int[N][N];
        boolean b=true;
        long l4=-38508L;
        float f3=0.908F;

        FuzzerUtils.init(iArr, -244);

        Test.byFld = (byte)d1;
        d1 += f2;
        for (i9 = 20; 349 > i9; i9++) {
            Test.byFld = (byte)Test.instanceCount;
            f2 -= (float)d1;
            if (b) continue;
            for (l4 = 1; l4 < 5; ++l4) {
                b = b;
                for (f3 = 1; f3 < 2; f3++) {
                    Test.instanceCount += (long)(((f3 * f3) + l4) - Test.instanceCount);
                    iArr[(int)(l4)][(int)(l4 + 1)] &= (int)l4;
                    i12 = i10;
                    iArr[(int)(l4)][(int)(l4 - 1)] = (int)f3;
                }
                Test.byFld %= (byte)2;
                i12 -= -5;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i8 + i9 + i10 + (b ? 1 : 0) + l4 + i11
            + Float.floatToIntBits(f3) + i12 + FuzzerUtils.checkSum(iArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(long l2, long l3) {

        int i6=0, i7=-20, i13=93, i14=-241, i15=251, i16=-245, iArr1[]=new int[N];
        float f1=35.617F;
        long l5=-103L;

        FuzzerUtils.init(iArr1, 46951);

        for (i6 = 3; i6 < 121; ++i6) {
            Test.sFld += (short)i6;
            i7 = (int)(f1++);
            i7 += iMeth2(-1.109710, f1, i6);
            Test.lArrFld = Test.lArrFld;
            iArr1[i6] = (int)l3;
            for (l5 = 1; l5 < 13; l5++) {
                for (i14 = 1; 2 > i14; i14++) {
                    Test.sFld -= (short)i6;
                    iArr1[i6] += i7;
                    switch ((i14 % 2) + 97) {
                    case 97:
                        if (i14 != 0) {
                        }
                        Test.lArrFld[(int)(l5 + 1)] *= i7;
                        Test.lArrFld[(int)(l5 - 1)] = i6;
                    case 98:
                        i16 <<= i7;
                        break;
                    }
                }
            }
        }
        long meth_res = l2 + l3 + i6 + i7 + Float.floatToIntBits(f1) + l5 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, long l1) {

        int i4=-30785, i5=20617, i17=3, i18=-7, i19=33373, i20=-59143, i21=114;
        long l6=254L;
        double d2=-71.47949;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-29177);

        for (i4 = 1; i4 < 286; i4++) {
            iMeth1(5344611092931878902L, l1);
            sArr = sArr;
        }
        Test.iArrFld1[(i5 >>> 1) % N] -= i4;
        for (l6 = 2; 217 > l6; l6++) {
            Test.lArrFld[(int)(l6)] += i4;
            for (i18 = 1; 7 > i18; i18++) {
                i19 += (((i18 * i17) + l) - i18);
                i5 += i18;
                i17 += (i18 * i18);
            }
            i19 += (int)Test.fFld;
            for (i20 = 1; i20 < 7; i20++) {
                i21 += i21;
                l *= l;
                d2 -= i4;
            }
        }
        long meth_res = l + l1 + i4 + i5 + l6 + i17 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-51947, i1=-188, i2=-127, i3=1, i22=-34881, i23=176, i24=226;
        float f=2.169F, fArr[]=new float[N];
        double d=33.31896, d3=127.3795;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, 0.42F);

        for (i = 2; i < 189; i++) {
            bArr[i + 1] = (((i1 = i1) - fArr[i]) >= (i1 * i));
            for (i2 = 1; i2 < 134; i2++) {
                if (true) continue;
                f -= Integer.reverseBytes((int)((~(++i3)) + Test.lArrFld[i]));
                i1 = (iArrFld[i2] *= (++iArrFld[i2 + 1]));
                i1 = (int)(((--Test.lArrFld[i - 1]) - d) + iMeth(Test.instanceCount, Test.instanceCount));
                i3 += (((i2 * Test.fFld) + Test.instanceCount) - Test.instanceCount);
                Test.instanceCount += (((i2 * i2) + i1) - i);
                switch (((i % 1) * 5) + 107) {
                case 108:
                    i3 = 12;
                    break;
                default:
                    Test.instanceCount += i3;
                }
                i1 -= i1;
                Test.lArrFld[i2] *= (long)f;
                Test.fFld = Test.fFld;
            }
            for (i22 = 134; i22 > 4; i22 -= 3) {
                try {
                    Test.iArrFld1[i22 + 1] = (iArrFld[i] % -1733);
                    i1 = (Test.iArrFld1[i22] % -25602);
                    i1 = (62445 / Test.iArrFld1[i - 1]);
                } catch (ArithmeticException a_e) {}
                switch (((i2 >>> 1) % 1) + 37) {
                case 37:
                    i3 *= i22;
                }
                for (d3 = 4; d3 > 1; d3--) {
                    i23 *= i23;
                    Test.fFld += i2;
                    i24 += (55957 + (d3 * d3));
                    f += (float)((long)d3 ^ (long)Test.fFld);
                    bFld = false;
                    i24 = i1;
                }
                Test.instanceCount = 10193;
                i24 *= (int)1.156F;
                Test.iArrFld1[i22 - 1] += (int)3908394301L;
            }
            i3 += i;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f d = " + i3 + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i22 i23 d3 = " + i22 + "," + i23 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i24 bArr fArr = " + i24 + "," + FuzzerUtils.checkSum(bArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld bFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 :
            0) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("iArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
