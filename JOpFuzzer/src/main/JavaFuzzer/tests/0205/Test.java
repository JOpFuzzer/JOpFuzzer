// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-60299L;
    public static float fFld=-2.848F;
    public static volatile int iFld=-6;
    public static volatile byte byFld=123;
    public static boolean bFld=true;
    public long lArrFld[][]=new long[N][N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i7=10, i8=3, i9=-48119, iArr1[]=new int[N];
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 138);
        FuzzerUtils.init(lArr, 3L);

        for (int i6 : iArr1) {
            for (i7 = 1; i7 < 4; i7++) {
                i6 -= 25735;
                i6 += (i7 ^ i6);
            }
            lArr[(i6 >>> 1) % N] = i6;
            iArr1[(i8 >>> 1) % N] -= (int)Test.instanceCount;
            i8 *= i6;
            i9 %= (int)(i9 | 1);
            b = false;
            iArr1 = iArr1;
            if (b) continue;
            Test.fFld -= i9;
            if (false) {
                iArr1[(i9 >>> 1) % N] -= i8;
                b = b;
            } else if (false) {
                iArr1[(14 >>> 1) % N] -= i6;
            } else if (b) {
                Test.instanceCount = i6;
            } else {
                iArr1[(i9 >>> 1) % N] >>= i7;
            }
        }
        vMeth1_check_sum += l1 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(short s1, double d1) {

        long l2=13L;
        int i10=11945, i11=-195, i12=3, i13=-13, i14=71, i15=-4091, i16=-65396, i17=37482;
        boolean b1=true;

        vMeth1(l2);
        switch ((((Test.iFld >>> 1) % 2) * 5) + 81) {
        case 88:
            for (i10 = 16; i10 < 264; ++i10) {
                i11 <<= i12;
                for (i13 = i10; i13 < 7; i13++) {
                    switch ((i13 % 6) + 85) {
                    case 85:
                        for (i15 = 1; i15 < 1; i15++) {
                            i11 |= (int)8426692650519030531L;
                            i17 >>= 14;
                            Test.iFld >>>= (int)l2;
                            i17 *= (int)d1;
                            Test.instanceCount <<= Test.iFld;
                            Test.fFld *= (float)d1;
                            i12 += 27653;
                            d1 += i17;
                        }
                        break;
                    case 86:
                        i11 >>>= (int)l2;
                        break;
                    case 87:
                        i17 += (i13 | i17);
                        break;
                    case 88:
                        i11 = i11;
                        break;
                    case 89:
                        if (b1) break;
                        break;
                    case 90:
                        Test.instanceCount = Test.iFld;
                        break;
                    default:
                        l2 += (-4 + (i13 * i13));
                    }
                }
            }
        case 85:
        default:
            i12 = (int)Test.fFld;
        }
        long meth_res = s1 + Double.doubleToLongBits(d1) + l2 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (b1 ? 1
            : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1, long l, int i2) {

        int i3=8, i4=6127, i5=8, i18=-2, i19=27926, iArr2[]=new int[N];
        float f=1.430F, f1=2.59F;
        short s=-32408;
        double d=45.57102;
        boolean b2=true;

        FuzzerUtils.init(iArr2, 8);

        for (i3 = 12; 198 > i3; i3++) {
            f = (++i4);
        }
        f1 = 1;
        do {
            i5 = 1;
            while (++i5 < 11) {
                s *= (short)(((i4 * d) + (~lMeth(s, d))) * d);
                iArr2[i5] += (int)d;
                Test.iFld += i3;
                Test.instanceCount = i1;
                Test.instanceCount -= i2;
                b2 = b2;
                i4 -= (int)l;
                iArr2[(int)(f1 - 1)] = Test.iFld;
                for (i18 = 1; i18 < 1; ++i18) {
                    i4 += (int)f1;
                    i1 += (((i18 * i3) + i1) - l);
                }
            }
        } while (++f1 < 141);
        vMeth_check_sum += i1 + l + i2 + i3 + i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + s +
            Double.doubleToLongBits(d) + (b2 ? 1 : 0) + i18 + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=193, i20=7, i21=63, i22=77, i23=-152, i24=148, i25=-70, i26=-13, i27=-13, i28=-45128, iArr[]=new int[N],
            iArr3[][]=new int[N][N];
        float f2=50.834F;
        double d2=0.1226;
        long l3=-29571L;
        short s2=-5413;

        FuzzerUtils.init(iArr, 6);
        FuzzerUtils.init(iArr3, -3);

        lArrFld[(i >>> 1) % N][(i >>> 1) % N] = (iArr[(i >>> 1) % N]++);
        vMeth(4265, -44300L, i);
        iArr3 = FuzzerUtils.int2array(N, (int)-4815);
        Test.fFld *= Test.fFld;
        for (f2 = 1; 283 > f2; ++f2) {
            if (true) break;
            for (i21 = 5; i21 < 89; ++i21) {
                for (i23 = 1; i23 < 2; ++i23) {
                    i20 += (int)Test.fFld;
                    Test.byFld += (byte)i23;
                    d2 *= Test.byFld;
                }
                Test.instanceCount >>= Test.instanceCount;
                Test.iFld += (i21 - i24);
                Test.instanceCount += 9;
                i = i23;
                Test.fFld += (-90 + (i21 * i21));
                i20 = i23;
            }
            l3 = -38526;
            switch ((int)(((f2 % 3) * 5) + 30)) {
            case 34:
                i22 += (int)(f2 + Test.iFld);
                Test.instanceCount = s2;
                if (Test.bFld) continue;
                i24 = 11174;
                break;
            case 40:
                for (i25 = (int)(f2); 89 > i25; ++i25) {
                    i20 += (int)l3;
                }
                if (Test.bFld) break;
                Test.instanceCount -= Test.instanceCount;
                break;
            case 41:
                for (i27 = 3; 89 > i27; ++i27) {
                    i26 += 38927;
                    l3 = i25;
                }
                break;
            default:
                if (Test.bFld) break;
            }
        }

        FuzzerUtils.out.println("i f2 i20 = " + i + "," + Float.floatToIntBits(f2) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 d2 l3 = " + i24 + "," + Double.doubleToLongBits(d2) + "," + l3);
        FuzzerUtils.out.println("s2 i25 i26 = " + s2 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.byFld Test.bFld lArrFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
