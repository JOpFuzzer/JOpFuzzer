// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=28895L;
    public static float fFld=8.845F;
    public static byte byFld=43;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1) {

        float f=56.525F;
        boolean b=false;
        int i2=12, i3=-13, i4=3, i5=-8, i6=-9679, i7=46;

        i1 -= (int)f;
        b = b;
        for (i2 = 5; i2 < 133; i2++) {
            for (i4 = 12; i4 > 1; --i4) {
                if (b) continue;
                i5 += i4;
                i3 += i4;
                for (i6 = 1; i6 < 2; ++i6) {
                    i1 -= i2;
                    i1 = 14;
                    if (b) continue;
                    i5 += (i6 + i2);
                    i7 *= i7;
                    Test.instanceCount = i4;
                }
                Test.instanceCount += (i4 * i4);
            }
        }
        vMeth2_check_sum += i1 + Float.floatToIntBits(f) + (b ? 1 : 0) + i2 + i3 + i4 + i5 + i6 + i7;
    }

    public static void vMeth1(long l) {

        int i8=19611;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 136L);

        for (long l1 : lArr) {
            vMeth2(i8);
        }
        vMeth1_check_sum += l + i8 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i) {

        short s=12671;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -20);

        vMeth1(Test.instanceCount);
        iArr[(i >>> 1) % N] = s;
        vMeth_check_sum += i + s + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i9=-29893, i10=-32404, i11=-184, i12=-18694, i13=-126, i14=-2, i15=168, i16=-13, i17=74, i18=-2305,
            i19=-113, i20=6569, iArr1[]=new int[N];
        boolean b1=false;
        short s1=18719;
        double d1=2.61273;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.499F);
        FuzzerUtils.init(iArr1, 209);

        vMeth(i9);
        for (i10 = 133; i10 > 2; --i10) {
            Test.fFld += i11;
            fArr[i10 - 1] *= i10;
        }
        lArrFld[(49406 >>> 1) % N] += -186L;
        for (i12 = 2; i12 < 279; ++i12) {
            for (i14 = i12; i14 < 91; ++i14) {
                for (i16 = i14; i16 < 1; ++i16) {
                    float f1=-2.61F;
                    b1 = b1;
                    i15 = i9;
                    i17 += (((i16 * f1) + i15) - i10);
                }
                i18 = 1;
                while (--i18 > 0) {
                    double d=117.93620;
                    i9 >>= -14;
                    iArr1[i18 - 1] <<= i15;
                    i11 = (int)Test.fFld;
                    lArrFld[i18 + 1] -= (long)d;
                }
                for (i19 = i12; i19 < 1; ++i19) {
                    i11 += (int)Test.instanceCount;
                    i13 += (int)Test.instanceCount;
                    i20 *= i13;
                    i20 = s1;
                    i15 += (i19 ^ Test.instanceCount);
                    i11 *= i14;
                    d1 -= i12;
                    switch (((i16 >>> 1) % 1) + 30) {
                    case 30:
                        Test.fFld += i16;
                        Test.byFld >>= (byte)i15;
                    default:
                        i20 += -1;
                        Test.instanceCount += (i19 + i16);
                        i13 -= (int)Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 s1 d1 = " + i20 + "," + s1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("fArr iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
