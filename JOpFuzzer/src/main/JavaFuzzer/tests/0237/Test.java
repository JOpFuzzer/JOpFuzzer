// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public static int iFld1=-57875;
    public float fFld=-33.610F;
    public static int iFld2=-37823;
    public static boolean bFld=true;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth(int i, int i1) {

        int i2=-39803, i3=55631;
        float f=-117.44F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 175L);

        Test.instanceCount *= (Math.max(i1 - i1, (int)(i & Test.instanceCount)) - 15877);
        i += (int)((Integer.reverseBytes(Test.iFld1) * Test.iFld1) - lArr[(i >>> 1) % N]);
        Test.instanceCount = ((++Test.instanceCount) - (i %= (int)((-43484 - (44 + (i - i1))) | 1)));
        for (i2 = 9; i2 < 255; ++i2) {
            byte by=-44;
            i3 += by;
        }
        Test.instanceCount %= (((long)(f - (--i3))) | 1);
        vMeth_check_sum += i + i1 + i2 + i3 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l1) {

        int i18=-929, i19=2, i20=-226, iArr2[][]=new int[N][N];
        long l2=169570720L;
        boolean b=false;
        short s=15049, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-15133);
        FuzzerUtils.init(iArr2, 131);

        sArr[(-5616 >>> 1) % N] *= (short)Test.iFld2;
        l1 = l1;
        for (i18 = 4; 354 > i18; i18++) {
            l2 = 1;
            do {
                Test.instanceCount <<= l1;
                if (Test.iFld2 != 0) {
                }
                iArr2 = iArr2;
                if (b) break;
                Test.iFld2 = s;
                Test.iFld1 += (int)l2;
                if (b) continue;
                Test.instanceCount = (long)1.931F;
                l1 += (l2 ^ i18);
                iArr2[(int)(l2 + 1)][(int)(l2)] += i18;
            } while (++l2 < 5);
            i20 >>= Test.iFld2;
        }
        long meth_res = l1 + i18 + i19 + l2 + (b ? 1 : 0) + s + i20 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i15, int i16, int i17) {

        double d=115.28709;
        int i21=57264, i22=208, i23=9921, i24=-9078, i25=-102, i26=-13467, iArr1[][]=new int[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2798818908L);
        FuzzerUtils.init(iArr1, -12043);

        i16 += (int)(d--);
        lArr1[(i17 >>> 1) % N] = (i17 += ((-Math.max(i16, Test.iFld1)) - (iArr1[(i15 >>> 1) % N][(Test.iFld1 >>> 1) %
            N] = i16)));
        iMeth(63259L);
        i21 = 1;
        while (++i21 < 352) {
            Test.iFld1 = Test.iFld2;
            Test.iFld2 = -79;
        }
        for (i22 = 339; i22 > 11; i22--) {
            i15 = (int)Test.instanceCount;
            if (i17 != 0) {
                vMeth1_check_sum += i15 + i16 + i17 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + i25 + i26 +
                    FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
                return;
            }
        }
        Test.instanceCount %= (i21 | 1);
        i17 += (int)1.329F;
        i24 = 1;
        while (++i24 < 241) {
            for (i25 = 1; 7 > i25; ++i25) {
                if (Test.iFld1 != 0) {
                    vMeth1_check_sum += i15 + i16 + i17 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + i25 +
                        i26 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                if (i15 != 0) {
                    vMeth1_check_sum += i15 + i16 + i17 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + i25 +
                        i26 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        vMeth1_check_sum += i15 + i16 + i17 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + i25 + i26 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i9, long l, int i10) {

        int i11=0, i12=-18952, i13=47195, i14=-58536, iArr[][]=new int[N][N];
        float f1=2.632F;
        byte by1=-34;
        short s1=1508;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -213);
        FuzzerUtils.init(lArr2, -5L);

        for (i11 = 9; i11 < 194; ++i11) {
            for (f1 = 9; f1 > 1; f1 -= 3) {
                vMeth((int)((long)((f1 + Test.iFld1) + (l - by1)) & (Test.iFld1 += (int)Test.instanceCount)), i9);
                iArr = (iArr = (iArr = (iArr = FuzzerUtils.int2array(N, (int)1))));
                Test.iFld2 >>= (int)((--Test.instanceCount) - l);
                i14 = 1;
                do {
                    vMeth1(8, i12, Test.iFld1);
                    i9 += i14;
                } while (++i14 < 5);
                l += 224L;
                i12 -= i13;
                l >>= 10224;
                s1 = (short)i10;
                i10 = i14;
            }
            lArr2[i11] >>>= s1;
            Test.iFld1 -= i14;
        }
        long meth_res = i9 + l + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + by1 + i14 + s1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i4=11, i5=-2, i6=113, i7=240, i8=-61589, i27=233, i28=14, i29=14;
        float f2=1.64F, fArr[]=new float[N];
        byte by2=1, byArr[]=new byte[N];
        long lArr3[]=new long[N];

        FuzzerUtils.init(fArr, 1.367F);
        FuzzerUtils.init(byArr, (byte)1);
        FuzzerUtils.init(lArr3, -7948000395044295717L);

        Test.iFld1 -= Math.max(141, (int)(-(Test.instanceCount + 16094L)));
        Test.instanceCount += (long)((fFld *= Test.iFld1) * fFld);
        switch ((((Test.iFld1 >>> 1) % 4) * 5) + 113) {
        case 125:
            Test.instanceCount *= (long)(Long.reverseBytes(Test.iFld1 + Test.instanceCount) - (fFld++));
            vMeth((int)(-(-(Test.iFld1 - 0.60F))), Test.iFld1++);
            Test.instanceCount *= Test.iFld2;
            break;
        case 133:
            try {
                for (i4 = 6; 166 > i4; ++i4) {
                    Test.iFld1 = (int)(Test.instanceCount++);
                    switch (((i4 % 2) * 5) + 67) {
                    case 68:
                        i6 = 1;
                        do {
                            for (i7 = 1; i7 < 1; i7++) {
                                Test.iFld2 *= (int)Math.abs(lMeth(i5, Test.instanceCount, i4));
                                i8 += i7;
                            }
                            fFld += (((i6 * fFld) + Test.iFld1) - i5);
                        } while (++i6 < 157);
                        break;
                    case 75:
                        for (f2 = 9; f2 < 157; f2++) {
                            for (i28 = 1; i28 < 2; i28++) {
                                i8 += i28;
                                i29 = i6;
                                Test.instanceCount |= i5;
                                i5 += (((i28 * Test.instanceCount) + Test.iFld1) - by2);
                                by2 += (byte)(((i28 * i28) + Test.iFld1) - Test.iFld1);
                                fFld += i7;
                                fArr[i28] = -12;
                                byArr[i4] -= (byte)i7;
                            }
                            if (Test.bFld) break;
                            i27 += (int)(f2 * f2);
                            Test.instanceCount -= 181L;
                            fFld += f2;
                            i29 >>= i4;
                        }
                        break;
                    }
                }
            }
            catch (UserDefinedExceptionTest exc2) {
                i27 = i29;
            }
            break;
        case 127:
            fFld -= i6;
            break;
        case 120:
            iArrFld = iArrFld;
            break;
        }

        FuzzerUtils.out.println("i4 i5 i6 = " + i4 + "," + i5 + "," + i6);
        FuzzerUtils.out.println("i7 i8 f2 = " + i7 + "," + i8 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("by2 fArr byArr = " + by2 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("lArr3 = " + FuzzerUtils.checkSum(lArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld1 fFld = " + Test.instanceCount + "," + Test.iFld1 + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iFld2 Test.bFld iArrFld = " + Test.iFld2 + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
