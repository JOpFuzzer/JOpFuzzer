// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=9024892162301053747L;
    public static int iFld=116;
    public byte byFld=-21;
    public static short sFld=9066;
    public static int iFld1=50049;
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1049119158L);
        FuzzerUtils.init(Test.iArrFld, 25229);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, long l1, int i5) {

        int i6=-28822, i7=21648;

        i5 ^= i5;
        Test.iFld = Test.iFld;
        Test.instanceCount += Test.iFld;
        i5 >>= Test.sFld;
        i5 = (int)l1;
        i6 = 1;
        do {
            Test.iFld ^= -27723;
            Test.iFld += i6;
            Test.instanceCount &= Test.iFld;
            i5 = 10;
            Test.iFld *= 11;
            i5 += i7;
            i5 <<= (int)l1;
        } while (++i6 < 315);
        Test.iFld = (int)-59183L;
        Test.iArrFld[(i7 >>> 1) % N] = Test.iFld;
        vMeth1_check_sum += Double.doubleToLongBits(d1) + l1 + i5 + i6 + i7;
    }

    public static void vMeth(boolean b, long l, int i3) {

        int i4=37625, i8=8, i9=50816, i10=-47474, i11=-243, i12=9;
        double d2=102.59940;
        float f1=94.788F;
        byte by=-23;

        i4 = 1;
        do {
            vMeth1(d2, Test.instanceCount, i4);
        } while (++i4 < 371);
        Test.iFld += Test.iFld;
        for (i8 = 3; i8 < 369; ++i8) {
            for (f1 = 1; f1 < 5; f1++) {
                i10 = Test.iFld1;
                by += (byte)((long)f1 | (long)f1);
                for (i11 = i8; i11 < 2; ++i11) {
                    float f2=0.37F;
                    i10 *= i8;
                    d2 -= -10L;
                    i12 = (int)f1;
                    f2 += (((i11 * f1) + i10) - Test.instanceCount);
                    i12 = i10;
                }
                if (b) break;
                Test.instanceCount >>= i3;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + l + i3 + i4 + Double.doubleToLongBits(d2) + i8 + i9 + Float.floatToIntBits(f1)
            + i10 + by + i11 + i12;
    }

    public static void vSmallMeth() {


        vMeth(false, Test.instanceCount, Test.iFld1);
        Test.iArrFld[(Test.iFld >>> 1) % N] = (int)Test.instanceCount;
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-226, i1=-40, i2=-62, i13=66, i14=32234, i15=-180, i16=-12, i17=-252, i18=7;
        double d=0.13620;
        float f=-44.1012F, f3=-1.440F;
        boolean b1=false;

        Test.iFld = (int)((byFld - Test.lArrFld[(-34780 >>> 1) % N]) - Test.iArrFld[(Test.iFld >>> 1) % N]);
        for (i = 176; i > 9; --i) {
            byFld |= (byte)((i1--) + (Short.reverseBytes(Test.sFld) - (d - i1)));
            sArrFld = (sArrFld = (sArrFld = (sArrFld = FuzzerUtils.short1array(N, (short)-7330))));
            for (f = 4; f < 150; f++) {
                for (int smallinvoc=0; smallinvoc<1; smallinvoc++) vSmallMeth();
                switch (((i % 5) * 5) + 97) {
                case 103:
                    Test.instanceCount -= -126;
                    i2 *= 5;
                    Test.iFld += (int)(f * f);
                    break;
                case 121:
                    for (i13 = 1; i13 < 2; i13 += 3) {
                        i14 -= 114;
                        Test.iFld1 += (-3 + (i13 * i13));
                        i2 <<= i;
                    }
                    break;
                case 101:
                    f3 -= Test.iFld1;
                    try {
                        Test.iArrFld[i - 1] = (Test.iFld1 % Test.iFld);
                        i1 = (i13 / -90);
                        Test.iFld1 = (Test.iFld1 % 85);
                    } catch (ArithmeticException a_e) {}
                    for (i15 = 1; i15 < 2; i15++) {
                        i14 = Test.sFld;
                        i17 = -28297;
                        if (b1) continue;
                        Test.iFld = (int)4L;
                        i14 -= (int)Test.instanceCount;
                        Test.instanceCount += i13;
                        Test.iFld += (21862 + (i15 * i15));
                    }
                    i18 = 1;
                    do {
                        d = Test.instanceCount;
                        Test.sFld = (short)i16;
                        i2 += (int)(101.222F + (i18 * i18));
                        i1 = byFld;
                        byFld += (byte)(i18 - i1);
                    } while (++i18 < 2);
                    break;
                case 119:
                    Test.iArrFld[i] *= i2;
                case 117:
                    i2 += i2;
                    break;
                default:
                    f3 -= -118.565F;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("f i2 i13 = " + Float.floatToIntBits(f) + "," + i2 + "," + i13);
        FuzzerUtils.out.println("i14 f3 i15 = " + i14 + "," + Float.floatToIntBits(f3) + "," + i15);
        FuzzerUtils.out.println("i16 i17 b1 = " + i16 + "," + i17 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i18 = " + i18);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld byFld = " + Test.instanceCount + "," + Test.iFld + "," +
            byFld);
        FuzzerUtils.out.println("Test.sFld Test.iFld1 Test.lArrFld = " + Test.sFld + "," + Test.iFld1 + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld sArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
