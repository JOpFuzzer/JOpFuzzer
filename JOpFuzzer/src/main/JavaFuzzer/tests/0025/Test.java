// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2039486049L;
    public static volatile byte byFld=-62;
    public static double dFld=2.71059;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -312541270L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vSmallMeth() {

        int i1=-11;
        double d=-62.159;

        i1 = (int)((d * i1) - Test.instanceCount);
        vSmallMeth_check_sum += i1 + Double.doubleToLongBits(d);
    }

    public static int iMeth(int i3, int i4, int i5) {

        boolean b=false;
        int i6=97, i7=-211, i8=-45658, i9=-11, i10=-241, i11=-176;
        float f1=28.966F;

        b = b;
        for (i6 = 7; i6 < 209; ++i6) {
            vSmallMeth();
            b = false;
        }
        f1 = 1;
        while (++f1 < 344) {
            for (i8 = 1; 5 > i8; i8++) {
                i3 >>>= i5;
                i4 = i9;
                if (i7 != 0) {
                }
                Test.lArrFld[(int)(f1)] = i8;
                for (i10 = 2; i10 > 1; i10--) {
                    i5 = i3;
                    i3 *= i11;
                    i7 += (((i10 * i10) + i3) - i5);
                    i4 *= i9;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i2) {

        int i12=-251, i13=5, i14=-64420, i15=60, i16=13, iArr1[]=new int[N];
        short s=-25753, s1=-14427;

        FuzzerUtils.init(iArr1, 11872);

        Test.instanceCount = ((iMeth(i2, i2, i2) - Test.byFld) - -8L);
        for (i12 = 10; i12 < 191; ++i12) {
            s *= Test.byFld;
            i13 ^= i12;
            for (i14 = 9; i14 > 1; i14 -= 2) {
                switch (((i14 % 1) * 5) + 86) {
                case 88:
                    Test.instanceCount = i13;
                    iArr1[i12] >>= i14;
                default:
                    i13 += i15;
                }
                i16 = 1;
                do {
                    s += (short)(((i16 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                } while (++i16 < 3);
                f += s1;
                i13 += (int)56.30262;
                i2 -= (int)-1223309809153964320L;
                i2 *= i13;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i12 + i13 + s + i14 + i15 + i16 + s1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-132, i17=12, i18=-56715, i19=202, i20=66, i21=13, i22=34230, i23=-7, i24=4, i25=-172, i26=64423,
            iArr[][]=new int[N][N];
        float f2=-85.579F;
        long l=282901181L;

        FuzzerUtils.init(iArr, 38473);

        i -= (int)(Test.lArrFld[(i >>> 1) % N]++);
        i *= ((iArr[(i >>> 1) % N][(i >>> 1) % N]++) * i);
        for (int smallinvoc=0; smallinvoc<332; smallinvoc++) vSmallMeth();
        vMeth(f2, i);
        Test.dFld *= Test.dFld;
        for (i17 = 10; i17 < 281; i17++) {
            for (i19 = 4; i19 < 93; ++i19) {
                iArr[i17 + 1][i17] += i18;
                i18 += (int)1.396F;
            }
            for (i21 = 3; i21 < 93; i21++) {
                i22 = i20;
                Test.instanceCount -= i18;
                for (i23 = 1; 2 > i23; ++i23) {
                    i24 += (i23 + i24);
                    Test.dFld -= Test.instanceCount;
                    Test.byFld = (byte)i17;
                    f2 *= i19;
                    Test.dFld -= i23;
                }
                i24 -= i23;
                i24 = i23;
                i22 += (i21 * i21);
                i24 += (i21 + Test.byFld);
                i22 += (((i21 * i22) + l) - i17);
                i25 = 1;
                while (++i25 < 2) {
                    i26 += -3;
                    iArr[i17][i21 + 1] += 22814;
                    iArr[i17 + 1][i25] ^= (int)84L;
                    iArr[i25][i25 + 1] &= i18;
                    i22 = i24;
                    i26 += i23;
                }
            }
        }

        FuzzerUtils.out.println("i f2 i17 = " + i + "," + Float.floatToIntBits(f2) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 l i25 = " + i24 + "," + l + "," + i25);
        FuzzerUtils.out.println("i26 iArr = " + i26 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test iMeth vMeth
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
