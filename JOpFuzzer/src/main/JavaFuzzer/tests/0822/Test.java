// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2101801998L;
    public static double dFld=1.83917;
    public static boolean bFld=false;
    public static float fFld=-1.185F;
    public static boolean bFld1=false;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 232);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=246, i7=14, i8=-104, i9=-6, i10=56762, i11=-1268, iArr[][]=new int[N][N];
        double d=1.77373;
        long lArr2[][]=new long[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr2, 12807L);
        FuzzerUtils.init(fArr, 16.46F);
        FuzzerUtils.init(iArr, 33612);

        Test.dFld += i6;
        for (i7 = 4; i7 < 156; i7++) {
            for (d = i7; 10 > d; ++d) {
                lArr2[(int)(d - 1)][(int)(d)] = Test.instanceCount;
                if (Test.bFld) continue;
                fArr[i7 - 1] = i8;
            }
            Test.fFld = i9;
            i10 = 1;
            while (++i10 < 10) {
                i9 = -13;
                i6 += i10;
                Test.instanceCount = i8;
                i11 = 1;
                while (++i11 < 1) {
                    iArr[i10][i11] = i11;
                    Test.iArrFld[i10 + 1] = i7;
                }
                i8 = i10;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        int i4=2, i5=155, i12=-48001, i13=166;
        float f1=-2.893F, fArr1[][]=new float[N][N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 3488534156L);
        FuzzerUtils.init(fArr1, -1.255F);

        for (i4 = 6; i4 < 361; ++i4) {
            i5 = (int)((--lArr1[i4 - 1][i4 + 1]) - ((2670L + (f1 + i3)) - Integer.reverseBytes(34066)));
            try {
                Test.iArrFld[i4] = (97 / i5);
                i5 = (i4 % i4);
                i3 = (-13 % Test.iArrFld[i4 - 1]);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount += (i4 * i4);
        }
        Test.instanceCount = ((i2--) - ((i4 * i4) - (Test.instanceCount++)));
        vMeth2();
        i3 = i4;
        i2 = i4;
        Test.instanceCount ^= 66;
        Test.instanceCount += i4;
        i2 ^= (int)Test.instanceCount;
        for (i12 = 13; i12 < 296; i12++) {
            i13 *= i3;
            f1 -= Test.instanceCount;
            fArr1[i12 - 1] = fArr1[i12];
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + Float.floatToIntBits(f1) + i12 + i13 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(float f) {

        int i=-13, i1=21354, i14=-4, i15=-208, i16=5870;
        long lArr[]=new long[N];
        float fArr2[]=new float[N];

        FuzzerUtils.init(lArr, 86L);
        FuzzerUtils.init(fArr2, 0.683F);

        Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld)));
        for (i = 5; i < 136; i++) {
            i1 -= i1;
            i1 -= (int)lArr[i + 1];
            Test.iArrFld[i + 1] *= (int)(lArr[i - 1] = -55);
            i1 = (i1--);
            vMeth1(i, i1);
            i14 = 1;
            while (++i14 < 12) {
                Test.instanceCount = i1;
                fArr2 = FuzzerUtils.float1array(N, (float)0.844F);
                i1 += (-61040 + (i14 * i14));
                for (i15 = 1; 1 > i15; i15++) {
                    i16 = -234;
                    Test.instanceCount >>>= -11;
                    if (true) break;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
    }

    public void mainTest(String[] strArr1) {

        int i17=33, i18=134, i19=21802, i20=-12, i21=34, i22=35241, i23=-68, i24=-59692, i25=8, i26=178, i27=-130;
        byte by=-25;
        long l=-3178317684L;

        vMeth(Test.fFld);
        Test.instanceCount += i17;
        for (i18 = 398; i18 > 12; i18--) {
            for (i20 = 65; 4 < i20; --i20) {
                Test.iArrFld[i20 - 1] += 35059;
                Test.iArrFld[i18 + 1] >>= -8;
                i17 = 3;
            }
            Test.bFld = Test.bFld;
        }
        switch (((i17 >>> 1) % 1) + 72) {
        case 72:
            i21 = (int)Test.instanceCount;
            break;
        }
        for (i22 = 8; i22 < 214; ++i22) {
            for (i24 = 7; i24 < 122; ++i24) {
                try {
                    i17 = (Test.iArrFld[i24 - 1] % 207);
                    i19 = (i19 / -169);
                    i25 = (17 % i19);
                } catch (ArithmeticException a_e) {}
                for (i26 = 2; i26 > 1; i26 -= 2) {
                    Test.fFld *= i26;
                    by += (byte)(9398L + (i26 * i26));
                    i21 += (-3406 + (i26 * i26));
                    Test.instanceCount = 14;
                    Test.instanceCount *= i21;
                    i17 = i26;
                    switch (((i24 % 8) * 5) + 11) {
                    case 49:
                        if (Test.bFld1) continue;
                        switch (((i24 % 10) * 5) + 36) {
                        case 76:
                            Test.instanceCount += i26;
                            break;
                        case 40:
                            i25 <<= (int)Test.instanceCount;
                        case 44:
                            i19 -= i27;
                            Test.instanceCount -= i24;
                            break;
                        case 68:
                            i17 -= (int)l;
                            Test.instanceCount += i26;
                            i17 += (i26 * i26);
                            break;
                        case 66:
                            Test.fFld += by;
                        case 53:
                            Test.iArrFld[i26 - 1] = i21;
                            break;
                        case 83:
                            i27 = -97;
                            break;
                        case 57:
                            Test.fFld *= -1L;
                        case 75:
                            i25 = i17;
                            break;
                        case 80:
                            Test.instanceCount *= (long)Test.dFld;
                            break;
                        }
                    case 48:
                        i23 *= (int)l;
                    case 38:
                        by = (byte)i22;
                        break;
                    case 27:
                        Test.fFld += (i26 * i27);
                        break;
                    case 46:
                        i25 += (((i26 * i24) + i27) - Test.fFld);
                        break;
                    case 40:
                        i23 = i25;
                    case 39:
                        l += (long)1.26519;
                        break;
                    case 43:
                        i21 += i17;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by = " + i26 + "," + i27 + "," + by);
        FuzzerUtils.out.println("l = " + l);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld Test.bFld1 Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            (Test.bFld1 ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
