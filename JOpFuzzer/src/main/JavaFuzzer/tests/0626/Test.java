// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=30279L;
    public static byte byFld=103;
    public static double dFld=60.110685;
    public static boolean bArrFld[]=new boolean[N];
    public static byte byArrFld[][]=new byte[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.byArrFld, (byte)-104);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        int i5=13, i6=20238, i7=123, i8=-131;
        float f1=-50.453F, fArr[]=new float[N];
        double d=-43.83527;

        FuzzerUtils.init(fArr, 0.637F);

        i5 = 1;
        do {
            for (i6 = 12; i6 > 1; i6--) {
                boolean b=true;
                if (b) continue;
                Test.instanceCount &= -50;
                Test.bArrFld[i5] = b;
                fArr[i6 + 1] = i5;
                f1 -= i6;
                switch (((i5 % 1) * 5) + 7) {
                case 12:
                    i7 += (int)d;
                    i8 = 1;
                    do {
                        Test.instanceCount &= -127L;
                        i4 *= (int)Test.instanceCount;
                        i7 *= (int)1.860F;
                        f1 = i6;
                        Test.instanceCount >>>= i6;
                    } while ((i8 += 3) < 2);
                    break;
                default:
                    d += i5;
                }
            }
        } while (++i5 < 134);
        vMeth1_check_sum += i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(float f) {

        int i3=-25680, i9=-33142, i10=4576, i11=53958, i12=80, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 61693);
        FuzzerUtils.init(lArr, 1L);

        i3 += (--Test.byFld);
        vMeth1(i3);
        for (i9 = 24; 397 > i9; ++i9) {
            iArr[i9] = (int)Test.dFld;
            i3 += i10;
            i3 -= i9;
        }
        i11 = 1;
        do {
            Test.instanceCount -= i10;
            i10 = i3;
            i10 = i11;
            i3 *= i9;
            f += (float)-37.84954;
            i12 = 1;
            while (++i12 < 4) {
                Test.instanceCount >>>= i12;
                i3 -= i9;
            }
        } while (++i11 < 396);
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, long l) {

        int i2=-2, i13=-53841, iArr1[]=new int[N];
        float f2=0.666F;
        double d1=0.101055;

        FuzzerUtils.init(iArr1, 14);

        i2 = 285;
        do {
            i1 <<= (int)l;
            vMeth(f2);
            i1 = i2;
            iArr1[i2 - 1] *= 203;
            for (d1 = 6; 1 < d1; d1--) {
                f2 = i13;
                i1 += (int)((long)d1 | i1);
                i13 += (int)(d1 * d1);
                i13 += (int)((long)d1 | Test.instanceCount);
            }
            Test.byArrFld[i2 - 1][i2 + 1] ^= (byte)i2;
            f2 = -39666;
        } while (--i2 > 0);
        i13 *= (int)71.51906;
        long meth_res = i1 + l + i2 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i13 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-5, i15=9, i16=-3, i17=0, i18=-25, i19=20358, i20=36530, i21=51, iArr2[]=new int[N];
        float f3=2.468F;

        FuzzerUtils.init(iArr2, 11);

        i -= iMeth(i, Test.instanceCount);
        for (int i14 : iArr2) {
            short s=-20155;
            boolean b1=false;
            s *= (short)-28590;
            if (b1) {
                f3 *= Test.instanceCount;
                i14 -= i;
                for (i15 = 1; i15 < 63; ++i15) {
                    for (i17 = 1; i17 < 2; ++i17) {
                        lArrFld = lArrFld;
                        iArr2[i17 - 1] += (int)Test.instanceCount;
                        switch (((i15 % 4) * 5) + 31) {
                        case 39:
                            i = i17;
                            i14 += (i17 - i14);
                            i16 += (i17 + Test.instanceCount);
                            break;
                        case 44:
                        case 46:
                            Test.instanceCount = (long)f3;
                            f3 += ((long)i17 | (long)f3);
                            switch (((i18 >>> 1) % 5) + 102) {
                            case 102:
                                Test.byFld *= (byte)i16;
                                break;
                            case 103:
                                Test.instanceCount -= i14;
                                i18 = 81;
                                iArr2[i17 + 1] -= i14;
                            case 104:
                            case 105:
                            case 106:
                            default:
                                Test.instanceCount += (((i17 * Test.instanceCount) + i15) - i);
                                f3 -= Test.instanceCount;
                            }
                            iArr2[i15 - 1] = 24789;
                            break;
                        case 43:
                            i += 27018;
                            break;
                        }
                        i19 -= (int)Test.instanceCount;
                    }
                    Test.instanceCount >>>= 0;
                    for (i20 = 1; i20 < 2; i20++) {
                        i21 >>= (int)Test.instanceCount;
                        Test.instanceCount &= i14;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f3 i15 = " + i + "," + Float.floatToIntBits(f3) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bArrFld Test.byArrFld lArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
