// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=14438L;
    public boolean bFld=true;
    public static long lFld=49261L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 34386);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i10, long l2, int i11) {


        l2 += i10;
        i10 <<= i10;
        long meth_res = i10 + l2 + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(float f, int i7) {

        int i8=-155, i9=-144, i12=-12114, i13=13, i15=36731, i16=4, i17=58, i18=0;
        byte by1=-84;
        short s1=14887;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -63.653F);

        for (i8 = 8; i8 < 151; i8++) {
            i7 += (i8 ^ Test.instanceCount);
            i9 -= (int)(i7 -= (int)lMeth(i9, -1121303446L, i9));
            try {
                i9 = (-94 / i7);
                Test.iArrFld[i8] = (41724 % Test.iArrFld[i8 + 1]);
                Test.iArrFld[i8] = (Test.iArrFld[i8 - 1] % i8);
            } catch (ArithmeticException a_e) {}
        }
        i9 = (int)f;
        by1 >>= (byte)s1;
        f = f;
        for (i12 = 386; i12 > 19; i12--) {
            for (i15 = 1; i15 < 5; ++i15) {
                switch ((i12 % 5) + 91) {
                case 91:
                    for (i17 = 1; i17 < 2; ++i17) {
                        i16 *= 168;
                        fArr = fArr;
                        Test.instanceCount += i8;
                        try {
                            i7 = (i18 % i9);
                            i16 = (Test.iArrFld[i15 + 1] / Test.iArrFld[i17 + 1]);
                            Test.iArrFld[i12 - 1] = (Test.iArrFld[i12] % i7);
                        } catch (ArithmeticException a_e) {}
                    }
                    break;
                case 92:
                    Test.instanceCount >>= by1;
                case 93:
                    i7 *= -1917;
                    break;
                case 94:
                    i18 *= (int)f;
                    break;
                case 95:
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i7 + i8 + i9 + by1 + s1 + i12 + i13 + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l, long l1) {

        int i4=45471, i5=-32757, i6=-47815, i19=8629, i20=-35923, i21=42432, i22=-30562, iArr[]=new int[N];
        short s=-12652;
        byte by=16;
        float f1=22.240F, fArr1[]=new float[N];
        double d=84.88750, dArr[]=new double[N];
        boolean b=false;

        FuzzerUtils.init(dArr, 0.98697);
        FuzzerUtils.init(iArr, -40751);
        FuzzerUtils.init(fArr1, -55.1004F);

        dArr[(i4 >>> 1) % N] = (iArr[(i4 >>> 1) % N]--);
        for (i5 = 186; i5 > 11; i5 -= 2) {
            switch (((i5 % 8) * 5) + 67) {
            case 73:
                s = (short)(iArr[i5 - 1]--);
                i6 = ((by + (--i4)) + (--i6));
                break;
            case 74:
                vMeth1(f1, i4);
                break;
            case 68:
            case 102:
                for (i19 = 1; i19 < 18; i19 += 3) {
                    for (i21 = 1; i21 < 4; i21++) {
                        i22 *= (int)d;
                        d = 48018;
                        b = b;
                        l *= 15053;
                        i4 += (((i21 * i19) + l1) - l1);
                    }
                    i22 >>= i22;
                    d *= -32780L;
                }
            case 70:
                fArr1[i5 - 1] -= 9;
                break;
            case 101:
                i22 += i5;
            case 104:
                f1 += (2.201F + (i5 * i5));
            case 90:
                l += (i5 | i5);
                break;
            }
        }
        vMeth_check_sum += l + l1 + i4 + i5 + i6 + s + by + Float.floatToIntBits(f1) + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(d) + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=-40944, i2=121, i3=212, i23=144, i24=248, i25=14738, i26=20403;
        double d1=1.49033, d2=87.108117;
        float f2=-2.775F;
        long l3=-383099522L;
        short s2=-29349;
        byte by2=72;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i = 6; 122 > i; i += 2) {
            for (i2 = 8; i2 < 320; i2++) {
                vMeth(7108110656218604811L, Test.instanceCount);
                Test.iArrFld[i] = i;
                Test.instanceCount = i1;
                if (bFld) break;
                d1 %= (i1 | 1);
                f2 -= 1667040202806962872L;
            }
            if (true) {
                for (i23 = 1; i23 < 249; i23++) {
                    for (l3 = 1; l3 < 2; l3++) {
                        bArr[i23 - 1] = bFld;
                        Test.instanceCount += (l3 ^ i1);
                        switch ((i % 3) + 108) {
                        case 108:
                            i24 += (-24 + (l3 * l3));
                            i24 += (int)l3;
                            break;
                        case 109:
                            Test.instanceCount += l3;
                            i1 = i2;
                            break;
                        case 110:
                            i24 >>= i25;
                            Test.instanceCount = i24;
                            Test.lFld -= (long)-1.562F;
                            break;
                        }
                        i3 += (int)2450864402635907896L;
                        i3 *= (int)l3;
                        Test.iArrFld[i23 - 1] &= i2;
                        i25 += -10;
                    }
                    for (d2 = 1; d2 < 2; ++d2) {
                        i26 += (int)(d2 + i23);
                        i3 -= (int)f2;
                        i25 = s2;
                        i25 = i26;
                    }
                }
            } else {
                by2 = (byte)i26;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d1 f2 = " + i3 + "," + Double.doubleToLongBits(d1) + "," +
            Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i23 i24 l3 = " + i23 + "," + i24 + "," + l3);
        FuzzerUtils.out.println("i25 d2 i26 = " + i25 + "," + Double.doubleToLongBits(d2) + "," + i26);
        FuzzerUtils.out.println("s2 by2 bArr = " + s2 + "," + by2 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.lFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Test.lFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
