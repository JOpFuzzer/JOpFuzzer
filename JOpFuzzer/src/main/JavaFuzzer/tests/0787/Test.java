// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=35529L;
    public static boolean bFld=true;
    public static byte byFld=27;
    public static float fFld=-127.1004F;
    public static volatile short sFld=-32395;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8) {

        int i9=-248, i10=0, i11=-204, i12=-133, i13=196, i14=-237, i15=-98, iArr1[]=new int[N];
        short s=13250, sArr[]=new short[N];
        double d=2.60122;
        float f1=2.391F;
        byte by=-127;

        FuzzerUtils.init(sArr, (short)-245);
        FuzzerUtils.init(iArr1, 53);

        for (i9 = 181; i9 > 7; --i9) {
            i10 -= 1;
            s *= (short)-159L;
            Test.instanceCount += (i9 * i9);
            sArr[i9 + 1] -= (short)i9;
        }
        for (d = 313; d > 4; d--) {
            i12 = 1;
            while (++i12 < 5) {
                Test.instanceCount = i12;
                if (Test.bFld) break;
                for (i13 = 1; i13 < 1; i13++) {
                    try {
                        iArr1[i13 - 1] = (i12 % -217);
                        i10 = (-57256 % i11);
                        iArr1[i12 - 1] = (i8 / 40976);
                    } catch (ArithmeticException a_e) {}
                    f1 += i11;
                    i11 -= (int)Test.instanceCount;
                    i14 -= by;
                    Test.instanceCount -= i15;
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + s + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 +
            Float.floatToIntBits(f1) + by + i15 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5, int i6, int i7) {

        int i16=1163, i17=-28536, i18=11, i19=16359, i20=0, iArr2[]=new int[N];
        double d1=-1.101252;
        byte by1=-114;
        float f2=69.661F;
        short s1=5747;

        FuzzerUtils.init(iArr2, -45);

        vMeth1(i5);
        for (i16 = 17; i16 < 338; i16++) {
            i5 = -188;
            iArr2[i16 + 1] = (int)-23.10627;
            i6 += 8;
            for (d1 = i16; d1 < 5; d1++) {
                i6 += (int)d1;
                by1 += (byte)d1;
                for (i19 = 1; i19 < 1; ++i19) {
                    if (true) break;
                    Test.instanceCount = i5;
                    f2 = i16;
                    s1 += (short)d1;
                    Test.instanceCount = i6;
                    Test.bFld = true;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i16 + i17 + Double.doubleToLongBits(d1) + i18 + by1 + i19 + i20 +
            Float.floatToIntBits(f2) + s1 + FuzzerUtils.checkSum(iArr2);
    }

    public static float fMeth(float f, int i3, int i4) {

        int i21=-6800, i22=62989, i23=-1, i24=-34824;
        short s2=-16307;
        double d2=60.16486;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -38895L);

        vMeth(i4, i3, i4);
        i4 = i3;
        i3 *= -19868;
        Test.instanceCount *= i4;
        i3 = 159;
        for (i21 = 9; i21 < 199; ++i21) {
            i4 = i22;
            for (i23 = 1; i23 < 8; i23++) {
                s2 = (short)Test.instanceCount;
                switch (((i23 % 1) * 5) + 94) {
                case 98:
                }
                lArr[i21] >>= Test.instanceCount;
                i4 = i21;
                Test.instanceCount *= Test.instanceCount;
                d2 = i21;
                Test.byFld ^= (byte)i23;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i3 + i4 + i21 + i22 + i23 + i24 + s2 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=20029, i1=0, i2=-35327, i25=-13, i26=5, i27=35749, i28=-1, i29=-247, i30=58946, iArr[]=new int[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr1, -3324507109166489996L);

        Test.instanceCount = (Test.instanceCount++);
        for (i = 317; i > 7; i--) {
            i2 = 81;
            while (--i2 > 0) {
                iArr[i2] = (int)fMeth(1.400F, i1, -8);
                iArr[i2 - 1] += (int)29.6F;
                i1 += (int)(-96.332F + (i2 * i2));
                Test.fFld += (i2 * i2);
                i1 >>= i1;
                i1 = i1;
                for (i25 = 1; i25 > 1; i25--) {
                    Test.fFld = i;
                }
                i1 <<= (int)136L;
            }
            for (i27 = 2; i27 < 81; i27++) {
                Test.instanceCount = Test.sFld;
                i1 = (int)Test.instanceCount;
                for (i29 = 1; i29 < 2; ++i29) {
                    i30 += (i29 - Test.instanceCount);
                    i30 = i26;
                    i30 += i2;
                    Test.sFld += (short)i28;
                    i1 ^= i1;
                    iArr[i27 - 1] *= (int)Test.instanceCount;
                    lArr1[i][i] >>>= i30;
                    Test.byFld += (byte)(((i29 * i1) + i) - i26);
                    i28 >>= i26;
                    i26 -= i1;
                }
                Test.fFld += i27;
            }
            i1 = i28;
        }
        Test.instanceCount = (long)9.27376;
        i1 = (int)Test.instanceCount;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("iArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.byFld = " + Test.instanceCount + "," + (Test.bFld ?
            1 : 0) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.sFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.sFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
