// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public static int iFld=26091;
    public static float fFld=-114.91F;
    public static short sFld=7440;
    public static double dFld=0.85980;
    public static short sArrFld[]=new short[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-3881);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1() {

        int i5=-5, i6=-9, i7=-1, i8=1, i9=-10, i10=-40395, i11=237, iArr[]=new int[N];
        byte by=-67;
        float f2=23.270F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -157);
        FuzzerUtils.init(lArr1, 1923985506L);

        Test.iFld += (int)Test.fFld;
        for (i5 = 10; i5 < 350; ++i5) {
            for (i7 = 5; i7 > i5; i7--) {
                by = (byte)i6;
                Test.instanceCount = Test.sFld;
                i8 += (int)Test.fFld;
                iArr[i7 - 1] = i9;
                Test.dFld += Test.instanceCount;
                i8 = 49662;
                Test.iFld += (i7 | i6);
                for (i10 = 1; 1 > i10; i10++) {
                    lArr1[i7 + 1] *= (long)Test.dFld;
                }
                iArr[i5] &= Test.iFld;
                i8 <<= Test.iFld;
            }
            Test.instanceCount = (long)f2;
        }
        long meth_res = i5 + i6 + i7 + i8 + by + i9 + i10 + i11 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(lArr1);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(long l, int i1, float f1) {

        int i2=37099, i3=-21212, i4=-53725, i12=-2, i13=29, i14=-127, i15=6;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)-16349);

        for (i2 = 3; i2 < 133; ++i2) {
            i4 = 12;
            do {
                i3 *= (int)lMeth1();
                for (i12 = 1; i12 < 3; i12++) {
                    i13 += (((i12 * i2) + i3) - i4);
                    i3 -= i12;
                    i1 = i13;
                    i1 = (int)Test.instanceCount;
                    i1 += (i12 - Test.sFld);
                }
                i3 *= i3;
                i13 += (int)(-39275L + (i4 * i4));
                for (i14 = 1; 3 > i14; ++i14) {
                    sArr = sArr;
                }
                Test.iFld *= (int)f1;
                Test.dFld *= 0.41518;
            } while ((i4 -= 3) > 0);
        }
        long meth_res = l + i1 + Float.floatToIntBits(f1) + i2 + i3 + i4 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, short s) {

        float f=23.309F;
        int i16=-41, i17=-23513, i18=-63455, i19=9, i20=-61;
        boolean b=false;
        long l1=-976164799L, lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -8L);

        lArr[(i >>> 1) % N][(i >>> 1) % N] += (long)((--i) + (f = (--i)));
        lMeth(-36962L, Test.iFld, -2.786F);
        switch ((((-41837 >>> 1) % 1) * 5) + 26) {
        case 31:
            for (i16 = 15; i16 < 247; i16++) {
                b = b;
                for (i18 = 1; i18 < 7; ++i18) {
                    i %= (int)((long)(Test.dFld) | 1);
                    i = (int)Test.instanceCount;
                    Test.sArrFld[i16 - 1] &= (short)i18;
                    i17 += (i18 | i);
                    for (l1 = 1; l1 < 2; l1++) {
                        Test.dFld += -180L;
                        lArr[i18 + 1][i18] = 2026;
                        i19 *= Test.iFld;
                        Test.fFld = i18;
                    }
                }
            }
            break;
        default:
            i += i16;
        }
        vMeth_check_sum += i + s + Float.floatToIntBits(f) + i16 + i17 + (b ? 1 : 0) + i18 + i19 + l1 + i20 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=129, i22=74, i24=14, i25=-1, i26=7918, i27=3, i28=-7, i29=0, i30=13, iArr1[]=new int[N];
        byte by1=-103;
        double d=2.66491;
        long l2=-7452940727552756606L, lArr2[]=new long[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, 4);
        FuzzerUtils.init(lArr2, -9L);

        vMeth(Test.iFld, Test.sFld);
        for (i21 = 8; i21 < 324; i21 += 3) {
            iArr1 = FuzzerUtils.int1array(N, (int)62566);
            Test.sFld >>>= (short)Test.instanceCount;
            by1 *= (byte)96L;
            for (i24 = 7; i24 < 239; ++i24) {
                for (d = 2; d > 1; --d) {
                    i25 *= (int)Test.fFld;
                    Test.dFld = i21;
                }
                Test.fFld = 5;
                Test.instanceCount = Test.instanceCount;
                Test.iFld = (int)-5384349777797864338L;
                i25 = Test.iFld;
            }
            if (b1) {
                lArr2[i21 - 1] += i21;
                for (l2 = 6; l2 < 239; l2 += 2) {
                    Test.sFld = (short)i25;
                    i26 = i21;
                    Test.fFld *= (float)-35.30632;
                    Test.instanceCount -= by1;
                    byArrFld[i21 - 1] = (byte)Test.instanceCount;
                    i26 += (int)(((l2 * i24) + Test.fFld) - l2);
                    iArr1[i21 - 1] += i24;
                }
                i26 += (i21 + Test.iFld);
            }
            for (i28 = i21; i28 < 239; i28++) {
                i30 = 1;
                while (++i30 < 1) {
                    Test.instanceCount *= Test.instanceCount;
                    iArr1[i28 + 1] = i30;
                    i25 = -248;
                    Test.instanceCount = Test.sFld;
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 by1 = " + i21 + "," + i22 + "," + by1);
        FuzzerUtils.out.println("i24 i25 d = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i26 l2 i27 = " + i26 + "," + l2 + "," + i27);
        FuzzerUtils.out.println("b1 i28 i29 = " + (b1 ? 1 : 0) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 iArr1 lArr2 = " + i30 + "," + FuzzerUtils.checkSum(iArr1) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld Test.dFld Test.sArrFld = " + Test.sFld + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
