// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=148L;
    public int iFld=-45448;
    public static int iFld1=-8;
    public static boolean bFld=false;
    public static byte byFld=-7;
    public static boolean bFld1=false;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.933F);
        FuzzerUtils.init(Test.iArrFld, -86);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, float f2) {

        int i1=181, i2=-39932, i3=12, i4=21335, i5=187, i6=-43;
        byte by=-94;
        double d=-2.73641;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -54971L);

        i1 = 1;
        do {
            Test.iFld1 -= Test.iFld1;
            switch (((i1 % 7) * 5) + 60) {
            case 66:
                Test.fArrFld[(Test.iFld1 >>> 1) % N] -= i1;
                Test.instanceCount += (long)f1;
                Test.iFld1 = i2;
            case 95:
                Test.iArrFld[i1] = 37891;
                for (i3 = 1; i3 < 7; i3++) {
                    for (i5 = i1; i5 < 2; i5++) {
                        i4 = i5;
                        Test.iArrFld = Test.iArrFld;
                        by <<= (byte)Test.iFld1;
                    }
                    Test.iFld1 *= i6;
                }
                i6 |= -18129;
            case 73:
                d = i2;
                break;
            case 91:
                Test.iFld1 ^= i4;
            case 68:
                Test.iFld1 = i2;
                break;
            case 82:
                if (false) break;
                break;
            case 62:
                d *= -2.72793;
                break;
            }
        } while (++i1 < 219);
        vMeth1_check_sum += Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i1 + i2 + i3 + i4 + i5 + i6 + by +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        float f3=1.337F;
        int i7=-18, i8=38258, i9=-11, i10=-48169, i11=215, i12=88, i13=3;
        short s1=-5648;

        vMeth1(f3, f3);
        Test.iFld1 = Test.iFld1;
        for (i7 = 14; i7 < 299; i7++) {
            Test.instanceCount = (long)f3;
            Test.instanceCount -= -38564;
            f3 += i7;
            for (i9 = 1; i9 < 6; ++i9) {
                for (i11 = i9; i11 < 2; ++i11) {
                    double d1=0.7098;
                    Test.instanceCount -= (long)f3;
                    switch (((i9 % 7) * 5) + 66) {
                    case 94:
                        if (Test.bFld) break;
                        Test.instanceCount = i7;
                        i13 -= i13;
                        break;
                    case 73:
                        i10 -= i12;
                        d1 %= 13;
                    case 95:
                        i10 = i13;
                        break;
                    case 96:
                        Test.instanceCount += i11;
                        break;
                    case 68:
                        Test.iFld1 += i11;
                        break;
                    case 83:
                        s1 = (short)Test.instanceCount;
                        break;
                    case 89:
                        Test.iArrFld[i7] ^= -14;
                        break;
                    default:
                        i12 += (i11 * Test.instanceCount);
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f3) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + s1;
    }

    public static int iMeth(long l, float f, long l1) {


        vMeth();
        long meth_res = l + Float.floatToIntBits(f) + l1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i14=2, i15=-12, i16=-36077, i17=-232, i18=212, i19=-4, iArr[]=new int[N];
        short s=-15295;
        float f4=-1.82F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -114);
        FuzzerUtils.init(bArr, true);

        iArr[(iFld >>> 1) % N] = iFld;
        i = 1;
        do {
            s += (short)i;
            iArr = (iArr = (iArr = (iArr = iArr)));
            iFld = ((iMeth(-184L, 17.832F, 7L) + 32337) - -253);
            for (i14 = 248; i14 > 4; i14--) {
                i15 = iFld;
            }
            Test.iFld1 >>= (int)Test.instanceCount;
            if (false) {
                Test.instanceCount += i;
                i15 += (((i * Test.iFld1) + s) - Test.iFld1);
            } else if (false) {
                Test.iFld1 *= (int)f4;
            } else if (Test.bFld1) {
                Test.iFld1 += (((i * i14) + s) - f4);
                Test.instanceCount = Test.iFld1;
                switch ((i % 2) + 3) {
                case 3:
                    Test.fArrFld[i] = 9L;
                    for (i16 = 12; i16 < 248; i16 += 2) {
                        for (i18 = 1; i18 < 3; i18 += 3) {
                            i19 >>= Test.iFld1;
                            Test.bFld = Test.bFld;
                            f4 -= iFld;
                            Test.iArrFld[i] += (int)Test.instanceCount;
                            Test.instanceCount *= Test.instanceCount;
                            i19 |= (int)Test.instanceCount;
                            Test.instanceCount = Test.iFld1;
                        }
                        bArr[i - 1] = Test.bFld;
                        Test.iArrFld[i - 1] += (int)Test.instanceCount;
                        i19 += (i16 * s);
                        Test.iArrFld[i + 1] = i15;
                        s += (short)i16;
                    }
                case 4:
                    Test.iFld1 *= Test.byFld;
                    break;
                default:
                    iArr[i] = 8;
                }
            }
        } while ((i += 3) < 303);

        FuzzerUtils.out.println("i s i14 = " + i + "," + s + "," + i14);
        FuzzerUtils.out.println("i15 f4 i16 = " + i15 + "," + Float.floatToIntBits(f4) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("iArr bArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.bFld Test.byFld Test.bFld1 = " + (Test.bFld ? 1 : 0) + "," + Test.byFld + "," +
            (Test.bFld1 ? 1 : 0));
        FuzzerUtils.out.println("Test.fArrFld Test.iArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
