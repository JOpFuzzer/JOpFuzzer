// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=4L;
    public static float fFld=-2.936F;
    public static int iFld=-4810;
    public static volatile short sFld=-30416;
    public static volatile boolean bFld=false;
    public double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2941495020128158549L);
        FuzzerUtils.init(Test.iArrFld, 174);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8, byte by1) {


        Test.instanceCount = (long)-1.72030;
        Test.lArrFld[(Test.iFld >>> 1) % N] >>= Test.sFld;
        i8 = (int)Test.instanceCount;
        Test.iFld *= i8;
        long meth_res = i8 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2) {

        float f=0.483F;
        int i3=2, i4=-215, i5=-232, i6=9779, i7=-4, iArr[]=new int[N];
        boolean b=false;
        byte by=-20;
        short s=-30571;

        FuzzerUtils.init(iArr, -43483);

        for (f = 6; f < 339; ++f) {
            i2 += (int)(f * f);
            for (i4 = 1; i4 < 5; ++i4) {
                for (i6 = 2; i6 > f; i6--) {
                    i2 = i5;
                    Test.instanceCount = i3;
                    switch (((i6 % 7) * 5) + 82) {
                    case 97:
                        iArr = (iArr = iArr);
                        i7 <<= ((i7++) - (++i5));
                        Test.fFld -= (Test.iFld * Test.instanceCount);
                        break;
                    case 96:
                        if (b = ((Test.instanceCount >= (--i2)) || ((-i2) != (by - s)))) break;
                        iArr = (iArr = (iArr = (iArr = iArr)));
                        i5 = Math.min(iMeth(i3, by), i7);
                        break;
                    case 100:
                        iArr[i6 - 1] *= -109;
                    case 105:
                        i7 -= Test.sFld;
                        break;
                    case 98:
                    case 115:
                        iArr[(int)(f - 1)] -= i4;
                        break;
                    case 94:
                        i7 += i5;
                        break;
                    default:
                        i5 -= i4;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + by + s +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i1=8, i10=-211, i11=-160, i12=198;
        double d=2.83350;
        float f1=0.97F, f3=0.682F;

        i1 = (int)((Test.instanceCount * (i1 * d)) + Test.lArrFld[(i1 >>> 1) % N]);
        vMeth1(-21916);
        for (int i9 : Test.iArrFld) {
            Test.instanceCount = i1;
            Test.fFld -= i1;
            Test.lArrFld[(i1 >>> 1) % N] -= Test.instanceCount;
            for (f1 = 1; f1 < 4; ++f1) {
                i10 -= i1;
                Test.instanceCount += (long)(((f1 * Test.instanceCount) + i10) - Test.iFld);
            }
            for (f3 = 1; f3 < 4; f3++) {
                i12 = 1;
                while (++i12 < 2) {
                    i10 = Test.iFld;
                    if (true) {
                        Test.iFld = i11;
                        i11 *= i12;
                    } else if (Test.bFld) {
                        i1 += (-11464 + (i12 * i12));
                    } else {
                        i11 = (int)-3668955187109649772L;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i10 + Float.floatToIntBits(f3)
            + i11 + i12;
    }

    public void mainTest(String[] strArr1) {

        int i=89;

        dArrFld[(i >>> 1) % N] *= ((++i) + Test.instanceCount);
        vMeth();
        Test.iFld <<= 0;

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.sFld Test.bFld dArrFld = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
