// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=25113L;
    public static int iFld=43040;
    public static float fFld=-1.368F;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 15.78915);
        FuzzerUtils.init(Test.iArrFld, -1194);
        FuzzerUtils.init(Test.lArrFld, -2978836238L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4, int i5) {

        long l=-18509L, lArr[]=new long[N];
        int i6=12, i7=-1, i8=22404, i9=-45916, i10=60612;

        FuzzerUtils.init(lArr, 14L);

        for (l = 10; l < 160; l++) {
            for (i7 = 1; 11 > i7; ++i7) {
                Test.fFld += (i7 - l);
                i5 += (int)67.37525;
                Test.instanceCount -= Test.iFld;
                Test.iFld = i8;
                i3 *= -63736;
                Test.instanceCount <<= l;
                Test.instanceCount >>= i5;
                lArr[i7 + 1] -= -1;
            }
            lArr = lArr;
            i5 |= i4;
            for (i9 = 1; i9 < 11; i9++) {
                Test.iArrFld[i9] = (int)Test.fFld;
                Test.instanceCount = l;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + l + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        long l1=14L;
        int i11=9, i12=-8, i13=62045, i14=212;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 100.551F);

        vMeth1(Test.iFld, Test.iFld, Test.iFld);
        Test.lArrFld[(Test.iFld >>> 1) % N] += 1500120045842180204L;
        for (l1 = 397; l1 > 8; l1--) {
            Test.iFld += (int)(l1 ^ i11);
            Test.dArrFld[(int)(l1 + 1)] = Test.iFld;
            Test.fFld = Test.iFld;
            i12 = 1;
            do {
                Test.lArrFld[i12 - 1] *= i11;
                Test.iArrFld[(int)(l1)] = Test.iFld;
                switch ((int)((l1 % 3) + 62)) {
                case 62:
                    fArr[i12] = l1;
                case 63:
                    Test.instanceCount += Test.iFld;
                    for (i13 = 1; i13 < 1; ++i13) {
                        Test.iFld *= (int)Test.fFld;
                        i14 -= (int)1.102648;
                    }
                    break;
                case 64:
                    Test.instanceCount = Test.instanceCount;
                    break;
                }
            } while (++i12 < 4);
        }
        long meth_res = l1 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        byte by=35;
        int i2=-6, i15=7, i16=49, i17=-1240, i18=26845;
        double d=-69.129639, dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.58132);

        Test.instanceCount = (by >>= (byte)Test.iFld);
        Test.iFld = (int)(--Test.instanceCount);
        Test.dArrFld = (Test.dArrFld = (Test.dArrFld = (dArr[(Test.iFld >>> 1) % N] = dArr[(Test.iFld >>> 1) % N])));
        i2 = 1;
        while (++i2 < 366) {
            iMeth();
            for (i15 = 1; i15 < 5; i15++) {
                i16 -= Test.iFld;
                Test.iFld += (int)d;
                Test.iFld <<= (int)Test.instanceCount;
            }
            i17 = 1;
            do {
                if (i2 != 0) {
                    vMeth_check_sum += by + i2 + i15 + i16 + Double.doubleToLongBits(d) + i17 + i18 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                i18 = 1;
                while (++i18 < 1) {
                    Test.fFld *= i18;
                    i16 += (i18 * i15);
                    Test.iFld = (int)Test.instanceCount;
                }
            } while (++i17 < 5);
        }
        vMeth_check_sum += by + i2 + i15 + i16 + Double.doubleToLongBits(d) + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-12495, i1=6, i19=201, i20=-7, i21=-20544, i22=-96, i23=-18422, i24=58017, i25=813, i26=137, i27=-31293;
        short s=24058;
        long l2=38162L;

        for (i = 127; i > 6; --i) {
            vMeth();
            s += (short)(i * i);
            for (i19 = 207; 4 < i19; i19 -= 3) {
                i20 += (43 + (i19 * i19));
                Test.iFld -= s;
                for (l2 = 1; l2 < 4; l2++) {
                    Test.iArrFld[i19 + 1] *= Test.iFld;
                }
                for (i22 = 1; 4 > i22; i22++) {
                    i21 = i21;
                    i21 += (int)Test.instanceCount;
                    try {
                        i1 = (i1 % i21);
                        i21 = (i22 % Test.iArrFld[i22 + 1]);
                        i23 = (1646291758 / i21);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = (long)Test.fFld;
                    i20 = (int)l2;
                    Test.instanceCount = l2;
                }
                Test.iFld *= i20;
                Test.instanceCount = (long)7.637F;
                Test.instanceCount += i19;
            }
        }
        switch ((((12 >>> 1) % 2) * 5) + 2) {
        case 9:
            i21 = i;
        case 11:
            for (i24 = 17; 301 > i24; i24++) {
                Test.instanceCount -= i;
                i25 = 58835;
                for (i26 = 3; i26 < 89; ++i26) {
                    Test.instanceCount = l2;
                    Test.iFld >>= i26;
                    Test.iArrFld[i24] += i22;
                    Test.iArrFld[i24] -= (int)-38L;
                    i25 -= i21;
                    s += (short)-14941;
                }
            }
            break;
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i19 i20 l2 = " + i19 + "," + i20 + "," + l2);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dArrFld Test.iArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld) +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
