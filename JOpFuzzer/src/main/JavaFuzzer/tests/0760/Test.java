// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static float fFld=110.750F;
    public static volatile short sFld=17820;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i10, long l, int i11) {

        int i12=17008, i13=251, i14=226, i15=-206, i16=112, i17=-48577, i18=-43103, iArr1[]=new int[N];
        short s=-11785, sArr[]=new short[N];
        double d1=98.104364;
        byte by=-99;

        FuzzerUtils.init(iArr1, -2);
        FuzzerUtils.init(sArr, (short)-28259);

        for (i12 = 9; i12 < 199; i12++) {
            i10 &= s;
            for (i14 = i12; 8 > i14; i14++) {
                l -= i16;
                iArr1[i14] *= 41002;
                i16 = i16;
                i16 >>= i12;
                i15 >>= (int)l;
                iArr1[i12 - 1] = (int)l;
                Test.fFld += (i14 * i14);
                d1 *= i11;
                for (i17 = i12; i17 < 1; ++i17) {
                    i15 = (int)l;
                }
            }
            i10 >>= i12;
        }
        sArr[(i18 >>> 1) % N] *= by;
        long meth_res = i10 + l + i11 + i12 + i13 + s + i14 + i15 + i16 + Double.doubleToLongBits(d1) + i17 + i18 + by
            + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(int i4, int i5) {

        int i6=-9, i7=60830, i8=-55048, i9=-6, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -29);

        for (i6 = 15; 329 > i6; ++i6) {
            i7 += (i6 + i6);
            for (i8 = 1; i8 < 5; ++i8) {
                i5 -= (i5--);
            }
            if (i7 != 0) {
                vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr);
                return;
            }
            i5 >>= (-(i9--));
        }
        i4 -= ((++iArr[(i9 >>> 1) % N]) - Math.abs(i7));
        Test.fFld += (byMeth(i6, -145L, i7) - i8);
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(double d) {

        int i=8, i1=-19111, i2=135, i3=-22, i19=12, i20=-2886, i21=-14, i22=-1, i23=-4, i24=-34495;

        for (i = 2; i < 242; i += 3) {
            for (i2 = 1; 19 > i2; ++i2) {
                vMeth1(i1, i);
                Test.instanceCount = i;
                i3 = (int)Test.instanceCount;
            }
            Test.instanceCount %= (i | 1);
            Test.instanceCount += i3;
        }
        for (i19 = 11; 207 > i19; ++i19) {
            Test.instanceCount = i20;
            for (i21 = 1; i21 < 8; ++i21) {
                for (i23 = 2; i23 > 1; i23--) {
                    Test.fFld += i20;
                    Test.instanceCount -= i22;
                    i22 <<= i;
                    Test.instanceCount -= 2;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i19 + i20 + i21 + i22 + i23 + i24;
    }

    public void mainTest(String[] strArr1) {

        double d2=43.69505;
        byte by1=68;
        int i25=-10, i26=237, i27=22802, i28=13892, i29=-13, i30=61, i31=14614, iArr2[]=new int[N];
        long l1=-8388286936891603968L;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, 61982);
        FuzzerUtils.init(bArr, false);

        vMeth(d2);
        by1 -= (byte)i25;
        for (i26 = 2; i26 < 153; ++i26) {
            lArrFld[i26 + 1] = i25;
            if (true) break;
            for (i28 = 5; i28 < 166; ++i28) {
                iArr2[i26] += -2;
            }
            Test.sFld += (short)(((i26 * i26) + i25) - i28);
            i30 = 1;
            do {
                i27 = i25;
                i25 -= i26;
                for (l1 = 1; 1 > l1; l1++) {
                    if (false) {
                        lArrFld[(int)(l1)] = (long)d2;
                        switch (((i31 >>> 1) % 5) + 56) {
                        case 56:
                            Test.instanceCount *= i28;
                            break;
                        case 57:
                            i25 += (int)(l1 * l1);
                            i25 -= (int)d2;
                            Test.fFld += (((l1 * i27) + by1) - i30);
                            i25 += (int)(((l1 * i28) + i27) - Test.instanceCount);
                            break;
                        case 58:
                            Test.sFld <<= (short)i30;
                        case 59:
                            Test.instanceCount *= (long)Test.fFld;
                            switch ((i30 % 1) + 125) {
                            case 125:
                                i27 += (-104 + (l1 * l1));
                                Test.fFld *= l1;
                                break;
                            }
                            Test.sFld += by1;
                            break;
                        case 60:
                            bArr[(int)(l1 + 1)] = b;
                            i29 -= i31;
                        }
                        Test.instanceCount += (long)(-1.39F + (l1 * l1));
                        iArr2[i26 - 1] -= (int)2.721F;
                    } else if (b) {
                        Test.instanceCount *= i30;
                    } else if (b) {
                        i31 >>= Test.sFld;
                    } else {
                        i25 = i25;
                    }
                }
            } while (++i30 < 166);
        }

        FuzzerUtils.out.println("d2 by1 i25 = " + Double.doubleToLongBits(d2) + "," + by1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 l1 = " + i29 + "," + i30 + "," + l1);
        FuzzerUtils.out.println("i31 b iArr2 = " + i31 + "," + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
