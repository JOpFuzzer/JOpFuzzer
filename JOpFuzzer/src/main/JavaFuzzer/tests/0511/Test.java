// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14288L;
    public static volatile int iFld=-240;
    public float fFld=0.793F;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -35);
        FuzzerUtils.init(Test.fArrFld, -2.956F);
        FuzzerUtils.init(Test.lArrFld, -6L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1) {

        byte by1=21;

        by1 += (byte)Test.iFld;
        long meth_res = l1 + by1;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(boolean b) {

        int i3=-13420, i4=-52403, i5=119, i6=4, i7=34025;
        byte by=60;
        double d1=-103.49401;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        i3 = 1;
        do {
            for (i4 = i3; 9 > i4; ++i4) {
                for (i6 = 1; i6 < 1; i6++) {
                    bArr[i6] = (b = b);
                    Test.iFld = (++Test.iFld);
                    Test.iArrFld[i3 + 1] -= Test.iFld;
                    by += (byte)i6;
                    Test.instanceCount -= (((Test.iFld + Test.instanceCount) - (i5 - i3)) >> (long)((d1 * i5) -
                        (Test.iFld + Test.instanceCount)));
                    Test.fArrFld[i4 + 1] += (float)(((-789556281L - (i7 * Test.iFld)) + (++d1)) -
                        iMeth1(4282356963844353098L));
                    switch ((i3 % 4) + 23) {
                    case 23:
                        Test.iArrFld[(i6 >>> 1) % N] = (int)Test.instanceCount;
                        Test.iFld += (i6 * i7);
                        i5 += (((i6 * i3) + Test.iFld) - by);
                        d1 += i6;
                        break;
                    case 24:
                        Test.iArrFld = Test.iArrFld;
                    case 25:
                        Test.iFld += (i6 * by);
                        break;
                    case 26:
                        Test.instanceCount = by;
                        break;
                    }
                }
            }
        } while (++i3 < 179);
        long meth_res = (b ? 1 : 0) + i3 + i4 + i5 + i6 + i7 + by + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l) {

        int i1=-3, i2=-9, i8=-43828, i9=-46629, i10=-49625, i11=24, i12=-36124, i13=-6820;
        boolean b1=true;
        float f=-114.307F;

        for (i1 = 231; i1 > 7; i1--) {
            i2 = iMeth(true);
            for (i8 = 1; i8 < 7; i8++) {
                l = i2;
                i10 = 2;
                while ((i10 -= 3) > 0) {
                    try {
                        Test.iArrFld[i8] = (-1880799648 % i2);
                        i2 = (48151 % i10);
                        i2 = (i8 / -32249);
                    } catch (ArithmeticException a_e) {}
                }
                i9 -= i8;
                if (b1) continue;
                i2 += (((i8 * i1) + i1) - i1);
            }
            i11 = 1;
            do {
                if (b1) {
                    Test.iFld = Test.iFld;
                    for (i12 = 1; i12 > 1; i12--) {
                        l = 851398353685369330L;
                        Test.instanceCount += i9;
                    }
                } else if (b1) {
                    i2 += i11;
                } else if (b1) {
                    i9 += (((i11 * i1) + f) - Test.instanceCount);
                }
            } while (++i11 < 7);
        }
        vMeth_check_sum += l + i1 + i2 + i8 + i9 + i10 + (b1 ? 1 : 0) + i11 + i12 + i13 + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        double d=37.79864;
        int i=-112, i14=-77, i15=-204, i16=-11626, i17=-223, i18=13, i19=2036;
        byte by2=-25;
        boolean b2=true;
        short s=22813;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 26348L);

        Test.iFld = Test.iFld;
        for (d = 7; d < 315; d++) {
            vMeth(Test.instanceCount);
            fFld += (float)d;
            i = i;
            Test.lArrFld[(int)(d + 1)] >>>= by2;
            if (b2) {
                b2 = b2;
                Test.instanceCount = (long)fFld;
                for (i14 = 2; i14 < 82; i14++) {
                    Test.iFld += (((i14 * fFld) + Test.instanceCount) - fFld);
                    for (i16 = i14; i16 < 2; i16++) {
                        by2 += (byte)(i16 * Test.instanceCount);
                        i += 39204;
                        Test.iFld -= (int)Test.instanceCount;
                        if (b2) {
                            s += (short)(i16 * i16);
                            Test.instanceCount >>= i16;
                        } else {
                            lArr[i14 + 1] = 237;
                            if (b2) break;
                            i17 -= (int)d;
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)4);
                        }
                        Test.iArrFld[(int)(d + 1)] = s;
                        Test.iFld += (int)d;
                    }
                    Test.instanceCount += Test.instanceCount;
                    for (i18 = 1; i18 < 2; ++i18) {
                        by2 >>>= (byte)i19;
                        lArr[(int)(d - 1)] = i17;
                        i19 += (i18 + i);
                        Test.instanceCount >>= Test.instanceCount;
                    }
                }
            } else if (b2) {
                i17 += i17;
            } else if (b2) {
                b2 = false;
            }
        }

        FuzzerUtils.out.println("d i by2 = " + Double.doubleToLongBits(d) + "," + i + "," + by2);
        FuzzerUtils.out.println("b2 i14 i15 = " + (b2 ? 1 : 0) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 s = " + i16 + "," + i17 + "," + s);
        FuzzerUtils.out.println("i18 i19 lArr = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld fFld = " + Test.instanceCount + "," + Test.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
