// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1271154650L;
    public static volatile float fFld=2.659F;
    public boolean bFld=false;
    public static volatile byte byFld=-10;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -567677499L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=250, i6=-35928, i7=-138, i8=86;
        double d=-93.90215;
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(byArr, (byte)116);

        for (i5 = 392; i5 > 9; i5 -= 2) {
            i6 = (int)Test.instanceCount;
            Test.instanceCount ^= i5;
            Test.instanceCount = Test.instanceCount;
            for (i7 = 1; i7 < 8; i7++) {
                lArr[i5 + 1] -= i8;
                Test.instanceCount += -10;
            }
            byArr[i5 - 1] = (byte)Test.instanceCount;
            Test.instanceCount = i6;
            d += i7;
            Test.instanceCount = i8;
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(byte by1, long l) {

        int i9=-47419, i10=26, i11=40, i12=-2, i13=-62693, iArr[]=new int[N];
        short s=-7114;

        FuzzerUtils.init(iArr, 37);

        vMeth1();
        i9 = 1;
        while (++i9 < 185) {
            for (i10 = i9; i10 < 9; i10++) {
                i11 = (int)-56126L;
                for (i12 = i10; i12 < 1; ++i12) {
                    i13 |= 32975;
                    Test.fFld += 202;
                    iArr[i12 - 1] *= i12;
                    i13 += i12;
                    Test.instanceCount += -7;
                }
                s = (short)i11;
                l += (i10 * i10);
                l -= i12;
                i13 += (i10 + l);
            }
            i13 *= (int)l;
        }
        long meth_res = by1 + l + i9 + i10 + i11 + i12 + i13 + s + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        byte by=-14;
        int i4=-219;

        by = (byte)(((i4 + i4) + iMeth(by, -3223617588L)) - Test.instanceCount);
        vMeth_check_sum += by + i4;
    }

    public void mainTest(String[] strArr1) {

        int i=-31971, i1=250, i2=88, i3=25975, i14=30094, i15=-200, iArr1[]=new int[N];
        double d1=0.73870;
        short s1=-15551;

        FuzzerUtils.init(iArr1, 19605);

        for (i = 4; 374 > i; i++) {
            switch ((i % 4) * 5) {
            case 8:
            case 2:
                for (i2 = 68; 4 < i2; i2 -= 2) {
                    switch ((i % 10) + 68) {
                    case 68:
                        vMeth();
                        i3 += (i2 * i2);
                        break;
                    case 69:
                        Test.instanceCount *= i2;
                        i3 = (int)Test.instanceCount;
                        Test.instanceCount = Test.instanceCount;
                        iArr1[i + 1] <<= i3;
                        break;
                    case 70:
                        i1 ^= i2;
                    case 71:
                        d1 %= 12;
                        break;
                    case 72:
                        if (bFld) break;
                        iArr1[(i2 >>> 1) % N] *= 6;
                        i1 &= 0;
                        if (true) break;
                        break;
                    case 73:
                        i3 += (i2 * i2);
                        i1 = s1;
                        break;
                    case 74:
                        for (i14 = 1; i14 < 3; ++i14) {
                            i1 += (int)Test.instanceCount;
                            if (true) break;
                            if (bFld) {
                                i3 = i3;
                            } else {
                                i1 += (int)(-83L + (i14 * i14));
                                i3 = (int)Test.instanceCount;
                                Test.fFld += i14;
                            }
                            i3 = Test.byFld;
                            d1 = 9;
                            Test.lArrFld[i + 1] = Test.instanceCount;
                            Test.fFld -= i14;
                        }
                        break;
                    case 75:
                        d1 -= 18819;
                        break;
                    case 76:
                        i1 += (((i2 * Test.instanceCount) + i1) - Test.instanceCount);
                        break;
                    case 77:
                        i3 = i1;
                    }
                }
                break;
            case 14:
                Test.instanceCount += (i * i);
                break;
            case 7:
                Test.instanceCount >>= i15;
            default:
                if (bFld) break;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d1 s1 = " + i3 + "," + Double.doubleToLongBits(d1) + "," + s1);
        FuzzerUtils.out.println("i14 i15 iArr1 = " + i14 + "," + i15 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld Test.lArrFld = " + Test.byFld + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
