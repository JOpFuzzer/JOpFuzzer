// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-148746476L;
    public static int iFld=-7735;
    public static short sFld=-314;
    public static float fFld=0.620F;
    public static byte byFld=61;
    public static double dFld=2.846;
    public static int iFld1=13;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -72);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by) {

        int i6=0, i7=13, i8=131, i9=28459, i10=-14, i11=-1, i12=65324;
        float f1=2.547F;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 116.97244);
        FuzzerUtils.init(lArr, -206L);

        dArr[(-118 >>> 1) % N] += i6;
        for (i7 = 4; i7 < 305; ++i7) {
            i6 += -166;
            Test.fFld = i6;
            f1 = 1;
            while (++f1 < 5) {
                for (i9 = 1; i9 < 1; ++i9) {
                    if (i10 != 0) {
                    }
                    Test.iArrFld[i9 - 1] += i10;
                }
                by *= (byte)i9;
                i10 -= i10;
                Test.instanceCount += i7;
                for (i11 = i7; i11 < 1; ++i11) {
                    Test.instanceCount += (i11 * i11);
                    i12 = by;
                    lArr[i11] = 112L;
                }
            }
        }
        long meth_res = by + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d, long l1) {

        int i4=0, i5=-35309, i13=-154, i14=-62793, i15=-14;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-93);

        for (i4 = 5; 150 > i4; ++i4) {
            Test.iFld = (int)(Math.abs(Test.sFld + i4) + ((i4 - -56036) + iMeth(Test.byFld)));
            i13 = 1;
            while (++i13 < 11) {
                Test.iArrFld = Test.iArrFld;
                Test.iFld += (((i13 * i4) + i4) - Test.iFld);
                Test.iFld *= (int)d;
                l1 >>= l1;
            }
            i5 += (-237 + (i4 * i4));
            i5 *= (int)l1;
            for (i14 = i4; i14 < 11; i14++) {
                d -= i13;
                Test.instanceCount = i5;
                byArr[i4 + 1][i14 + 1] += (byte)i4;
                i5 += i14;
                Test.iArrFld[i4 - 1] -= i4;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l1 + i4 + i5 + i13 + i14 + i15 + FuzzerUtils.checkSum(byArr);
    }

    public long lMeth(float f, long l) {

        long l2=-5476990249290148393L;
        int i16=48, i17=4, i18=-14, i19=-60257, i20=86, i21=3135;
        boolean b=false;

        vMeth(Test.dFld, 52L);
        l2 = 1;
        while (++l2 < 290) {
            for (i16 = 1; 6 > i16; ++i16) {
                if (false) {
                    Test.iFld = i16;
                    for (i18 = 1; i18 < 2; i18++) {
                        i19 |= (int)l2;
                        Test.iArrFld = Test.iArrFld;
                        l += i18;
                        Test.sFld = Test.byFld;
                        f = -3;
                    }
                } else if (b) {
                    for (i20 = 1; i20 < 2; i20++) {
                        Test.iFld = 215;
                        if (false) break;
                    }
                } else {
                    Test.iArrFld[(int)(l2)] *= 32969;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + l + l2 + i16 + i17 + i18 + i19 + i20 + i21 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=1, i1=-146, i2=-34022, i3=-62, i22=215, i23=-123, i25=-64432, i26=6, i27=-177, i28=-7;
        float fArr[]=new float[N], fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr, 51.423F);
        FuzzerUtils.init(fArr1, -1.761F);

        Test.iFld >>= -31051;
        for (i = 2; i < 158; ++i) {
            for (i2 = 1; i2 < 161; i2++) {
                i3 -= (int)lMeth(Test.fFld, Test.instanceCount);
                switch ((i2 % 3) + 65) {
                case 65:
                    for (i22 = 1; i22 < 2; ++i22) {
                        int i24=-3;
                        i24 = (int)Test.instanceCount;
                        i1 = i3;
                        Test.iFld -= i24;
                        i1 += 58547;
                        fArr[i2 + 1] -= i3;
                        fArr1 = fArr1;
                    }
                    Test.iFld1 -= (int)Test.dFld;
                case 66:
                    Test.iArrFld[i2 - 1] = (int)Test.dFld;
                    break;
                case 67:
                    fArr1[i][i] += i22;
                    Test.iArrFld[i2 - 1] *= 3;
                    for (i25 = 1; 2 > i25; ++i25) {
                        Test.iFld = (int)Test.instanceCount;
                        Test.iFld1 = (int)-131L;
                        Test.instanceCount += i25;
                        i23 += i25;
                        Test.instanceCount += (i25 | Test.iFld1);
                        i3 >>= i22;
                        Test.iFld1 += i25;
                    }
                    i3 += (-100 + (i2 * i2));
                default:
                    Test.instanceCount >>= Test.instanceCount;
                    Test.instanceCount += Test.byFld;
                }
                for (i27 = 2; 1 < i27; --i27) {
                    i28 = (int)Test.instanceCount;
                    Test.iFld += (i27 * i27);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i22 i23 = " + i3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 fArr fArr1 = " + i28 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld Test.byFld Test.dFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.byFld + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld1 Test.iArrFld = " + Test.iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
