// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-38L;
    public static float fFld=0.501F;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-126);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5) {

        int i6=130, i7=-22687, i8=8, i9=58485, i10=108, i11=-29286, i12=6, i13=-761, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 44804);

        for (i6 = 7; i6 < 162; i6++) {
            Test.fFld += (i6 + Test.instanceCount);
            iArr1[i6 + 1] += (int)Test.instanceCount;
            if (true) break;
            iArr1[i6 - 1] -= i5;
            i8 = 1;
            while (++i8 < 10) {
                for (i9 = 1; i9 < 1; ++i9) {
                    i4 = i6;
                }
                for (i11 = 1; i11 < 1; i11++) {
                    if (false) {
                        iArr1[i11] *= i8;
                        i7 %= (int)(i7 | 1);
                    } else {
                        Test.instanceCount = i11;
                        i13 *= (int)Test.fFld;
                        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    Test.instanceCount = -170;
                }
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i2=-12, i3=-33966, i14=8, i15=-1, i16=-11227, i17=-7, i18=-1, iArr2[]=new int[N];
        float f=-37.977F;
        boolean b=false;
        short s1=15736;

        FuzzerUtils.init(iArr2, 178);

        for (i2 = 4; i2 < 172; i2++) {
            i3 += (((i2 * Test.instanceCount) + f) - i2);
        }
        try {
            Test.instanceCount = Long.reverseBytes((-i2) * Math.min(i3, i2));
            vMeth2(i3, i3);
            i3 += (int)Test.instanceCount;
            i3 -= -23280;
            for (i14 = 20; i14 < 347; i14++) {
                try {
                    i15 = (-30687 / i14);
                    i15 = (iArr2[i14] % i2);
                    i15 = (iArr2[i14 + 1] / iArr2[i14 + 1]);
                } catch (ArithmeticException a_e) {}
                for (i16 = i14; i16 < 5; i16++) {
                    i18 *= -145;
                    switch (((i16 % 1) * 5) + 7) {
                    case 10:
                        i17 = i2;
                        b = b;
                        i15 *= i14;
                        break;
                    default:
                        s1 -= (short)Test.fFld;
                    }
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i18 = i17;
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + s1 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth() {

        int i19=-182, i20=-8170, i21=45723, i22=-40963, i23=214, i24=-10, iArr3[]=new int[N];
        double d=-94.88246;
        short s2=17254;
        boolean b1=true;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr3, 64);
        FuzzerUtils.init(lArr, 5588599778318278083L);

        vMeth1();
        for (i19 = 6; i19 < 190; i19++) {
            for (i21 = 1; i21 < 9; ++i21) {
                for (d = 2; d > 1; --d) {
                    try {
                        i20 = (i21 / iArr3[(int)(d)]);
                        iArr3[i19] = (-148 / i20);
                        iArr3[i19] = (-54035 % i20);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount += (long)(((d * i23) + Test.fFld) - Test.instanceCount);
                    switch ((int)(((d % 2) * 5) + 5)) {
                    case 12:
                        Test.instanceCount = i24;
                        i23 += i22;
                        s2 += (short)i21;
                    case 9:
                        switch (((i19 % 2) * 5) + 78) {
                        case 81:
                        case 88:
                            b1 = false;
                            i20 += i20;
                            lArr[i21 + 1][i19 - 1] = 8546090634661441798L;
                            i22 += (int)(d * d);
                            break;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i19 + i20 + i21 + i22 + Double.doubleToLongBits(d) + i23 + i24 + s2 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=35320, i1=-47630, i25=-35044, i26=-29354, i27=9, i28=-47746, i29=-3918, i30=-5, i31=-99, i32=113,
            i33=43992, i34=-5421, iArr[]=new int[N];
        short s=-18034;
        double d1=91.118810;
        float f1=-70.628F, f2=-126.769F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 48074);
        FuzzerUtils.init(lArr1, 901129023L);

        for (i = 9; 158 > i; ++i) {
            s += (short)((i + (++iArr[i - 1])) + (i1++));
            vMeth();
        }
        d1 -= Test.instanceCount;
        for (i25 = 1; i25 < 337; ++i25) {
            for (f1 = 4; f1 < 75; ++f1) {
                lArr1[(int)(f1 - 1)] = i1;
                Test.instanceCount -= -31399;
                s += (short)(f1 * Test.instanceCount);
                Test.instanceCount *= i27;
            }
            iArr = iArr;
            for (i28 = 2; i28 < 75; ++i28) {
                Test.fFld -= -9;
                for (i30 = 2; i30 > 1; i30--) {
                    i1 -= i1;
                    s *= (short)i30;
                    Test.instanceCount -= -63966;
                    i31 += (i30 * i30);
                    i27 += i31;
                }
                for (f2 = 1; f2 < 2; f2++) {
                    i31 = (int)Test.instanceCount;
                    Test.instanceCount += i;
                }
                try {
                    iArr[i25 - 1] = (11 / i31);
                    i27 = (54 % i28);
                    i29 = (4836 / i25);
                } catch (ArithmeticException a_e) {}
                for (i33 = 1; i33 < 2; ++i33) {
                    i26 = i1;
                    i1 ^= i33;
                    Test.byArrFld[(i32 >>> 1) % N] = (byte)d1;
                    i27 = i1;
                    Test.instanceCount = 52;
                    i31 += (int)Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("d1 i25 i26 = " + Double.doubleToLongBits(d1) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f1 i27 i28 = " + Float.floatToIntBits(f1) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("f2 i32 i33 = " + Float.floatToIntBits(f2) + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 iArr lArr1 = " + i34 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
