// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1430949731254938164L;
    public static float fFld=2.104F;
    public static byte byFld=-10;
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.lArrFld, 159L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=-26639, i3=-11, i4=-3, i5=-8, i6=-68, i7=-137;
        long l2=2L, lArr[]=new long[N];
        double d2=113.90412;

        FuzzerUtils.init(lArr, 3651434634L);

        i2 = 380;
        while (--i2 > 0) {
            i3 = (int)Test.instanceCount;
            for (i4 = 1; i4 < 4; ++i4) {
                Test.instanceCount += (i4 + l2);
                i3 = i3;
                Test.fFld = Test.instanceCount;
                Test.instanceCount &= i5;
                lArr[i2 - 1] += i3;
                for (i6 = 1; i6 < 2; ++i6) {
                    i7 *= (int)Test.instanceCount;
                    i5 = i5;
                    i5 = (int)Test.fFld;
                    i5 ^= (int)Test.instanceCount;
                    i3 *= i2;
                    d2 = Test.byFld;
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + l2 + i6 + i7 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, long l1, double d1) {

        int i8=-4, i9=-2, i10=3533;
        boolean b=false;
        short s=6670;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 1526912832040865412L);

        vMeth2();
        for (i8 = 21; 370 > i8; i8++) {
            Test.instanceCount += i9;
            l += 14;
            i10 = 1;
            do {
                if (i9 != 0) {
                    vMeth1_check_sum += l + l1 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + (b ? 1 : 0) + s +
                        FuzzerUtils.checkSum(lArr1);
                    return;
                }
                i9 = (int)3L;
                i9 = i8;
                if (b) break;
                i9 >>= i8;
                lArr1 = lArr1;
                i9 &= (int)Test.instanceCount;
                i9 += i10;
                s += s;
            } while (++i10 < 5);
            i9 += (int)(102.108F + (i8 * i8));
        }
        vMeth1_check_sum += l + l1 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + (b ? 1 : 0) + s +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        int i1=-9361, i11=49559, i12=6, i13=-41, i14=-57793, i15=-4, iArr1[]=new int[N];
        double d3=43.34064, dArr[]=new double[N];
        boolean b1=false, b2=true;

        FuzzerUtils.init(iArr1, -2125);
        FuzzerUtils.init(dArr, 124.123252);

        Test.fFld = (-((i1++) - (i1 - Test.instanceCount)));
        vMeth1(-10L, Test.instanceCount, d3);
        for (i11 = 11; i11 < 189; i11++) {
            iArr1[(i12 >>> 1) % N] -= i11;
            Test.instanceCount ^= i12;
            i12 -= (int)8L;
            iArr1[i11] = i12;
            for (i13 = 1; i13 < 9; ++i13) {
                i15 = 1;
                while (++i15 < 2) {
                    i1 = i11;
                    dArr[i13 + 1] -= i14;
                    i1 ^= (int)6810094636646511702L;
                }
                if (b2) {
                    Test.instanceCount += i13;
                    b1 = b1;
                }
            }
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d3) + i11 + i12 + i13 + i14 + i15 + (b1 ? 1 : 0) + (b2 ? 1 : 0)
            + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-42937, i16=38033, i17=-117, i18=-180, i19=-204, i20=-2, i21=23322, iArr[]=new int[N];
        double d=-23.14194, d4=1.21427, d5=-110.118949, d6=-70.85180;
        boolean b3=false;
        short s1=-22511;

        FuzzerUtils.init(iArr, -40);

        iArr[(i >>> 1) % N] += (iArr[(i >>> 1) % N]++);
        d = 1;
        do {
            i += (int)((long)d | i);
            vMeth();
            for (i16 = 11; i16 < 313; ++i16) {
                Test.fFld -= i17;
                i17 -= (int)-71.703F;
            }
            Test.bArrFld[(int)(d + 1)] = b3;
            Test.lArrFld[(int)(d - 1)] -= 64018;
            i17 = (int)Test.instanceCount;
            for (d4 = d; d4 < 313; ++d4) {
                iArr[(int)(d4 + 1)] *= Test.byFld;
                for (d5 = d; d5 < 1; d5++) {
                    i |= i;
                    i17 -= Test.byFld;
                    iArr[(int)(d5 - 1)] -= 6;
                    fArrFld[(int)(d4 + 1)] -= i;
                    i19 |= (int)Test.instanceCount;
                    s1 -= (short)58064;
                    b3 = b3;
                    Test.fFld *= i16;
                }
                i17 += i16;
            }
        } while ((d += 3) < 242);
        i19 %= (int)(i17 | 1);
        i17 = i18;
        d6 = Test.byFld;
        Test.instanceCount *= i;
        for (i20 = 6; i20 < 306; ++i20) {
            if (b3) {
                i19 -= i20;
                Test.instanceCount = Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i d i16 = " + i + "," + Double.doubleToLongBits(d) + "," + i16);
        FuzzerUtils.out.println("i17 b3 d4 = " + i17 + "," + (b3 ? 1 : 0) + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i18 d5 i19 = " + i18 + "," + Double.doubleToLongBits(d5) + "," + i19);
        FuzzerUtils.out.println("s1 d6 i20 = " + s1 + "," + Double.doubleToLongBits(d6) + "," + i20);
        FuzzerUtils.out.println("i21 iArr = " + i21 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.bArrFld Test.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
