// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-175L;
    public static boolean bFld=false;
    public static byte byFld=-122;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d) {

        int i2=28037, i3=6485, i4=-53557, i5=134, i6=57589, iArr1[]=new int[N];
        short s1=-31910;
        long lArr[]=new long[N];
        float fArr[]=new float[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 172L);
        FuzzerUtils.init(iArr1, -10804);
        FuzzerUtils.init(fArr, -1.420F);
        FuzzerUtils.init(dArr, 0.76936);

        lArr[(-51978 >>> 1) % N] += -10376;
        iArr1[(i2 >>> 1) % N] -= i2;
        i2 = i2;
        for (i3 = 2; i3 < 139; ++i3) {
            switch ((i3 % 6) + 36) {
            case 36:
            case 37:
                fArr[i3] = Test.instanceCount;
                i5 = 11;
                while (--i5 > 0) {
                    if (Test.bFld) continue;
                    iArr1[i3 + 1] -= i2;
                    i4 += i5;
                    i6 = i4;
                    i4 -= (int)1.371F;
                    i4 -= i4;
                }
                dArr[i3 + 1] -= -28559;
                i4 += (i3 - i5);
                break;
            case 38:
                Test.byFld <<= (byte)i2;
                break;
            case 39:
                i6 >>= (int)-59259L;
                break;
            case 40:
                s1 += (short)(i3 ^ i3);
                break;
            case 41:
                Test.bFld = Test.bFld;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 + s1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        double d1=-123.52077;

        vMeth1(d1);
        vMeth_check_sum += Double.doubleToLongBits(d1);
    }

    public static int iMeth(long l, long l1) {

        int i=11, i1=-58680, i8=182, i9=-45, iArr[]=new int[N];
        byte by=92;
        short s=19345;
        long l3=-4986289043602221411L;
        double d2=0.130502;

        FuzzerUtils.init(iArr, -47504);

        l += (long)(((0.109243 * (i++)) + -14L) - i);
        l -= (by - (Test.instanceCount++));
        s -= (short)Integer.reverseBytes(iArr[(i >>> 1) % N] * i);
        i1 = 1;
        while (++i1 < 375) {
            vMeth();
            i = -44769;
            l += (i1 | l1);
            iArr[i1 - 1] = i;
            i8 = 1;
            do {
                for (l3 = 1; l3 < 1; ++l3) {
                    by = (byte)i9;
                    i += (int)(l3 + l);
                    d2 = 252;
                    i += i9;
                    i += i1;
                }
            } while (++i8 < 5);
        }
        long meth_res = l + l1 + i + by + s + i1 + i8 + l3 + i9 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {


        Test.instanceCount += iMeth(Test.instanceCount, Test.instanceCount);


        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.byFld = " + Test.instanceCount + "," + (Test.bFld ?
            1 : 0) + "," + Test.byFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
