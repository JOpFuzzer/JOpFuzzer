// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.907F);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {

        boolean b=true;
        int i8=230, i9=4, i10=88, iArr[]=new int[N];
        byte by=9;
        float f=-39.108F;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 6);
        FuzzerUtils.init(sArr, (short)21732);

        i7 = i6;
        b = b;
        iArr[(i5 >>> 1) % N] = 57;
        i6 = (int)Test.instanceCount;
        Test.instanceCount <<= i5;
        i8 = i6;
        for (i9 = 4; 126 > i9; ++i9) {
            i10 %= (int)(by | 1);
        }
        f *= i7;
        sArr = FuzzerUtils.short1array(N, (short)19591);
        i7 -= 14;
        i7 = i10;
        long meth_res = i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 + by + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        short s=7442;
        int i11=-95, i12=192, i13=17797, i14=-174, i15=-60874, i16=3, iArr1[]=new int[N];
        byte by1=15;
        boolean b1=true;

        FuzzerUtils.init(iArr1, -224);

        s %= (short)((iMeth(i11, i11, i11) & i11) | 1);
        i12 = 219;
        while (--i12 > 0) {
            for (i13 = 1; i13 < 7; ++i13) {
                switch ((i12 % 1) + 78) {
                case 78:
                default:
                    i11 = i11;
                    i14 >>= 63049;
                    i14 = (int)Test.instanceCount;
                }
                iArr1[i12] >>= i11;
                for (i15 = 1; i15 < 2; ++i15) {
                    by1 *= (byte)i13;
                    if (b1) {
                        Test.instanceCount = i16;
                        Test.fArrFld[i13] -= i15;
                    } else if (b1) {
                        b1 = b1;
                    } else {
                        i16 <<= (int)-105L;
                    }
                }
            }
        }
        vMeth_check_sum += s + i11 + i12 + i13 + i14 + i15 + i16 + by1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static boolean bMeth() {

        int i17=-4, i18=-55337, i19=-9, i20=30038, i21=157, i22=12, i23=-93, iArr2[]=new int[N];
        boolean b2=true, bArr[]=new boolean[N];
        float f1=-39.691F;

        FuzzerUtils.init(iArr2, -201);
        FuzzerUtils.init(bArr, false);

        vMeth();
        iArr2 = iArr2;
        i17 = -47331;
        i17 = (int)1.114151;
        bArr[(i17 >>> 1) % N] = b2;
        i17 = 62953;
        i17 = i17;
        for (i18 = 19; i18 < 329; ++i18) {
            for (i20 = 5; i20 > i18; i20 -= 3) {
                for (i22 = 1; i22 > 1; --i22) {
                    i17 = 47635;
                    i19 = i23;
                    i21 -= i21;
                    i17 += (i22 - i21);
                    f1 = i21;
                }
            }
        }
        long meth_res = i17 + (b2 ? 1 : 0) + i18 + i19 + i20 + i21 + i22 + i23 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=5, i1=30086, i2=4, i3=-2, i4=-234, i24=-9, i25=-7467, i26=3, i27=-14, i28=-1, i29=-41, i30=-170,
            iArr3[]=new int[N];
        long l=-81L;
        float f2=1.908F;
        byte by2=-24;
        short s1=-16998;

        FuzzerUtils.init(iArr3, -73);

        for (i = 6; i < 290; i += 2) {
            for (l = 9; l < 177; ++l) {
                i1 = i;
                for (i3 = i; i3 < 2; ++i3) {
                    bFld = bMeth();
                    Test.instanceCount -= i2;
                }
                i4 = (int)Test.instanceCount;
                for (i24 = 1; i24 < 2; i24 += 3) {
                    i2 |= i4;
                    f2 *= i24;
                    by2 %= (byte)(i25 | 1);
                    i2 += i24;
                    iArr3[(i4 >>> 1) % N] += i4;
                    Test.instanceCount += -54085;
                }
                for (i27 = 1; i27 < 2; i27++) {
                    Test.instanceCount = -3;
                    f2 = Test.instanceCount;
                    i28 *= i2;
                    Test.instanceCount -= by2;
                    Test.instanceCount = 5378725438332267582L;
                    if (true) break;
                    iArr3[i27] = (int)Test.instanceCount;
                }
                Test.instanceCount = (long)f2;
                i4 -= i27;
                i1 -= i4;
            }
            Test.fArrFld[i - 1] -= -2L;
            i28 += (i * i);
            for (i29 = 177; i29 > 5; --i29) {
                iArr3[i - 1] = i1;
                s1 = (short)-3L;
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i24 i25 f2 = " + i24 + "," + i25 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("by2 i26 i27 = " + by2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("s1 iArr3 = " + s1 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.fArrFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
