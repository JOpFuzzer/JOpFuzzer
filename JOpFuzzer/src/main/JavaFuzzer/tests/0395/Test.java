// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static short sFld=2286;
    public float fFld=0.822F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -18);
        FuzzerUtils.init(Test.lArrFld, -3523823781L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static void vSmallMeth(int i, int i1) {

        long l=37081L;

        i1 = (int)Math.min(l, l--);
        vSmallMeth_check_sum += i + i1 + l;
    }

    public static byte byMeth() {

        int i14=14;

        vSmallMeth(i14, i14);
        long meth_res = i14;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static long lMeth(int i9, int i10, int i11) {

        int i12=13, i13=2, i15=-58322, i16=4;
        byte by=-122;
        float f=-2.96F;

        for (i12 = 19; 310 > i12; i12++) {
            i11 -= (-byMeth());
            switch ((i12 % 3) + 65) {
            case 65:
                Test.iArrFld = Test.iArrFld;
                i13 |= by;
                break;
            case 66:
                i10 = i13;
                f %= (Test.instanceCount | 1);
                break;
            case 67:
                Test.lArrFld[i12 - 1] *= Test.instanceCount;
                i15 = 1;
                while (++i15 < 6) {
                    switch (((i12 >>> 1) % 7) + 58) {
                    case 58:
                    case 59:
                        Test.iArrFld[i15] += (int)f;
                        Test.sFld ^= (short)i11;
                        i16 = 1;
                        while (++i16 < 1) {
                            i9 >>= i15;
                            i10 += (i16 | by);
                        }
                    case 60:
                        i11 = -49749;
                        break;
                    case 61:
                        Test.iArrFld[i15 + 1] = i10;
                        break;
                    case 62:
                        i11 += (i15 - i13);
                    case 63:
                        i10 = by;
                    case 64:
                    default:
                        i10 *= (int)f;
                    }
                }
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + by + Float.floatToIntBits(f) + i15 + i16;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i2=-151, i3=3, i4=39135, i5=-59013, i6=26520, i7=-13, i8=10312, i17=33584, i18=45643;
        short s=15415;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -207622209L);

        for (int smallinvoc=0; smallinvoc<809; smallinvoc++) vSmallMeth(i2, Test.iArrFld[(i2 >>> 1) % N]--);
        for (i3 = 366; i3 > 12; i3 -= 3) {
            Test.instanceCount *= (Math.min(Test.instanceCount -= i4, Math.abs(-253L)) + ((--Test.iArrFld[i3]) + (i4 *=
                (int)Test.instanceCount)));
            i4 *= Math.max(++i4, (int)((i3 * i2) + (Test.instanceCount++)));
            switch ((i3 % 1) + 85) {
            case 85:
                vSmallMeth(i4, (i2++) - Math.max(i2 - i2, i4 = s));
                Test.instanceCount ^= (++Test.instanceCount);
                lArr[i3] <<= (long)(1.554F * (i2++));
                for (i5 = 10; i5 < 212; i5++) {
                    Test.instanceCount += i5;
                    for (i7 = i5; i7 < 2; ++i7) {
                        if (b = b) continue;
                        vSmallMeth((int)((lMeth(i6, i6, i5) - -107) + -176), 14);
                        i2 += (int)(0.306F + (i7 * i7));
                        Test.instanceCount = i3;
                        i2 = (int)97.313F;
                        i2 >>= (int)Test.instanceCount;
                        i8 = i3;
                        Test.instanceCount += Test.instanceCount;
                    }
                    Test.instanceCount -= i7;
                    Test.iArrFld[i3] *= i6;
                    fFld = i5;
                    i8 += -6377;
                    for (i17 = 1; i17 < 2; i17++) {
                        i8 = (int)Test.instanceCount;
                        i18 += (i17 + i3);
                        i18 = (int)fFld;
                        if (b) break;
                        i8 += i6;
                        i8 += (((i17 * fFld) + i6) - Test.instanceCount);
                    }
                }
                break;
            }
        }

        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("s i5 i6 = " + s + "," + i5 + "," + i6);
        FuzzerUtils.out.println("i7 i8 b = " + i7 + "," + i8 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i17 i18 lArr = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld fFld = " + Test.instanceCount + "," + Test.sFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test byMeth lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
