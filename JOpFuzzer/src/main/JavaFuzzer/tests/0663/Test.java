// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=26217L;
    public static float fFld=-73.747F;
    public static short sFld=-24702;
    public double dFld=87.83927;
    public static volatile byte byFld=102;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -49198L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-5, i6=-47344;

        for (i5 = 214; i5 > 13; --i5) {
            Test.lArrFld[i5] -= (long)Test.fFld;
        }
        vMeth1_check_sum += i5 + i6;
    }

    public static long lMeth(int i2, int i3, int i4) {


        vMeth1();
        long meth_res = i2 + i3 + i4;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i1=-3, i7=0, i8=35638, i9=-167, i10=42187, i11=-12166;

        i1 = (int)((lMeth(i1, i1, i1) * 14151) - i1);
        i1 = i1;
        i7 = 1;
        do {
            i1 -= i7;
            Test.fFld += i7;
            for (i8 = 5; i8 > 1; i8 -= 3) {
                i9 -= 250;
                i1 += (i8 ^ i7);
                for (i10 = 1; i10 < 5; i10++) {
                    i9 >>>= (int)-3714485089L;
                    Test.instanceCount = (long)-98.728F;
                    Test.fFld += (((i10 * i1) + i7) - i1);
                    Test.sFld = (short)i11;
                    i9 -= (int)Test.fFld;
                    i9 += (i10 * i10);
                }
            }
        } while (++i7 < 366);
        vMeth_check_sum += i1 + i7 + i8 + i9 + i10 + i11;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i12=10, i13=128, i14=-5773, i15=16464, i16=-1, i17=169, i18=3, iArr[]=new int[N];
        double d=109.234;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -13);
        FuzzerUtils.init(fArr, 1.371F);

        i = 313;
        while (--i > 0) {
            vMeth();
            i12 = 1;
            do {
                i13 -= 53137;
            } while (++i12 < 80);
            switch ((i % 1) + 11) {
            case 11:
                switch ((((i >>> 1) % 7) * 5) + 123) {
                case 150:
                    switch ((i % 5) + 117) {
                    case 117:
                        for (i14 = i; i14 < 80; ++i14) {
                            Test.fFld = (float)dFld;
                        }
                        Test.instanceCount *= (long)-122.182F;
                        i16 = 80;
                        do {
                            i13 = -78;
                            dFld += i16;
                            i15 &= i12;
                            iArr[i16] += i12;
                            Test.instanceCount <<= 14;
                            i13 += (int)Test.instanceCount;
                            d = 1;
                            do {
                                Test.instanceCount = i16;
                            } while (++d < 1);
                        } while (--i16 > 0);
                        for (i17 = i; i17 < 80; i17++) {
                            i15 >>= i12;
                        }
                        break;
                    case 118:
                        i13 = 7527;
                        switch (((i % 1) * 5) + 18) {
                        case 22:
                            Test.instanceCount += (i * i);
                            fArr[i - 1] /= ((long)(dFld) | 1);
                            Test.fFld += (i * i);
                            break;
                        default:
                            Test.instanceCount = -28349;
                        }
                        Test.lArrFld[i + 1] -= Test.instanceCount;
                        break;
                    case 119:
                        i15 -= i17;
                        break;
                    case 120:
                        Test.instanceCount &= -12;
                        break;
                    case 121:
                    }
                    break;
                case 130:
                    Test.instanceCount += (((i * i16) + Test.instanceCount) - i14);
                    break;
                case 134:
                    i15 += (118 + (i * i));
                    break;
                case 158:
                    i15 += (i + Test.fFld);
                    break;
                case 145:
                    Test.instanceCount = Test.byFld;
                    break;
                case 138:
                    Test.lArrFld = Test.lArrFld;
                    break;
                case 152:
                    i15 += i;
                    break;
                }
                break;
            default:
                i18 += (i * Test.instanceCount);
            }
        }

        FuzzerUtils.out.println("i i12 i13 = " + i + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("d i17 i18 = " + Double.doubleToLongBits(d) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("iArr fArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("dFld Test.byFld Test.lArrFld = " + Double.doubleToLongBits(dFld) + "," + Test.byFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
