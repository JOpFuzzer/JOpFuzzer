// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=102L;
    public static byte byFld=-123;
    public static boolean bFld=false;
    public static double dFld=-1.34203;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 43252);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2) {

        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 6220L);

        i2 -= 13;
        lArr[(i2 >>> 1) % N][(i2 >>> 1) % N] -= i2;
        vMeth2_check_sum += i2 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        double d=-2.73663;
        int i1=-183, i3=11, i4=-52906, i5=-79, iArr[]=new int[N];
        boolean b=true;
        short s=27464;

        FuzzerUtils.init(iArr, -1);

        for (d = 20; 344 > d; d++) {
            vMeth2(i1);
            iArr[(int)(d)] >>= i1;
            if (true) break;
            i1 -= i1;
            for (i3 = 5; i3 > 1; --i3) {
                if (b) break;
            }
            Test.byFld += (byte)(-8 + (d * d));
        }
        i4 = (int)-1.334F;
        i5 = 1;
        do {
            i1 += (int)-10.699F;
            iArr[i5 - 1] -= s;
            i1 <<= i1;
            i4 |= Test.byFld;
            i1 = (int)Test.instanceCount;
        } while (++i5 < 395);
        vMeth1_check_sum += Double.doubleToLongBits(d) + i1 + i3 + i4 + (b ? 1 : 0) + i5 + s +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, int i) {

        int i6=-9, i7=-13, i8=3563, i9=-29621, i10=122;
        float f=67.271F;
        double d1=0.48370, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -50.42072);

        vMeth1();
        l *= i;
        Test.iArrFld[(i >>> 1) % N] += i;
        for (i6 = 5; 249 > i6; i6++) {
            f *= i;
            for (i8 = 1; i8 < 7; ++i8) {
                i10 = 1;
                while (++i10 < 2) {
                    f -= i9;
                    Test.iArrFld[(i6 >>> 1) % N] -= i10;
                    i9 = i7;
                    dArr[i6 - 1] *= d1;
                }
                dArr[(-101 >>> 1) % N] = l;
                if (Test.bFld) continue;
            }
            i += (((i6 * i) + i9) - Test.byFld);
            i ^= -116;
        }
        vMeth_check_sum += l + i + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i11=-12939, i12=11, i13=44827, i14=6, i15=25546, i16=-59822, i17=53, i18=-161, i19=3, i20=2, i21=33561;
        double d2=1.18136;
        float f1=-85.303F;
        short s1=-16073;

        vMeth(Test.instanceCount, i11);
        for (i12 = 3; i12 < 188; i12++) {
            for (d2 = i12; d2 < 136; ++d2) {
                i14 = (int)Test.instanceCount;
            }
            Test.instanceCount += i12;
        }
        for (i15 = 7; i15 < 165; ++i15) {
            if (Test.bFld) {
                Test.bFld = Test.bFld;
                for (i17 = 4; 159 > i17; i17 += 3) {
                    f1 += (i17 * i13);
                    Test.iArrFld[i17 - 1] -= (int)d2;
                    i16 = i18;
                    f1 -= -19549;
                    for (i19 = 4; 1 < i19; i19--) {
                        i13 = i20;
                        i16 = 140;
                        Test.iArrFld[i17] += s1;
                        Test.instanceCount = Test.instanceCount;
                        i13 += (i19 - f1);
                        Test.instanceCount <<= i14;
                        Test.instanceCount = Test.byFld;
                        Test.dFld *= i12;
                    }
                }
                Test.iArrFld[i15] = (int)Test.instanceCount;
                i18 -= s1;
            }
            i21 = 1;
            do {
                i18 += (-27270 + (i21 * i21));
                Test.instanceCount = Test.instanceCount;
                i13 = i13;
                Test.instanceCount += i20;
                if (true) break;
            } while (++i21 < 159);
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("d2 i14 i15 = " + Double.doubleToLongBits(d2) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f1 i19 i20 = " + Float.floatToIntBits(f1) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("s1 i21 = " + s1 + "," + i21);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
