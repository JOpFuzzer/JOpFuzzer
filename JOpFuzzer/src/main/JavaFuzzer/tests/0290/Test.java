// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1508842802924556155L;
    public static volatile float fFld=-121.503F;
    public static int iFld=25296;
    public static boolean bFld=true;
    public static double dFld=-2.117282;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 154);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l, int i2) {

        double d1=58.15148;
        int i4=-66, i5=136, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 5);

        for (int i3 : iArr) {
            i3 >>= (int)l;
            d1 = 1;
            while (++d1 < 4) {
                l %= (Test.instanceCount | 1);
                i3 = i2;
                iArr[(int)(d1 + 1)] = (int)Test.fFld;
                for (i4 = 1; i4 > 1; i4--) {
                    i3 += (1 + (i4 * i4));
                    iArr[(int)(d1)] -= (int)d1;
                    i3 = 13;
                    i5 += i5;
                    i3 += (-237 + (i4 * i4));
                    i5 = i3;
                    iArr[i4] += (int)d1;
                    i2 >>= i2;
                }
            }
        }
        long meth_res = l + i2 + Double.doubleToLongBits(d1) + i4 + i5 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i1) {

        double d2=5.47291;
        int i6=-59940, i7=-78, i8=6;
        long l1=-84L, lArr[]=new long[N], lArr1[]=new long[N];

        FuzzerUtils.init(lArr, -1L);
        FuzzerUtils.init(lArr1, 38327L);

        i1 = (int)((i1--) - ((i1 + -56752) * Test.instanceCount));
        lMeth(Test.instanceCount, 187);
        d2 = 1;
        do {
            i1 = 47291;
            lArr[(int)(d2)] -= i1;
            i6 = 1;
            do {
                Test.instanceCount |= i6;
                lArr1[(int)(d2)] += i6;
                Test.instanceCount *= i6;
                Test.fFld += (i6 * i6);
                i1 = (int)Test.instanceCount;
            } while (++i6 < 6);
            i1 -= (int)Test.fFld;
        } while (++d2 < 252);
        for (i7 = 11; i7 < 363; i7 += 2) {
            l1 *= (long)Test.fFld;
            i1 += (i7 - Test.fFld);
        }
        long meth_res = i1 + Double.doubleToLongBits(d2) + i6 + i7 + i8 + l1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i) {

        double d=1.795;
        int i9=33, i10=-36, i11=11433, i12=-21, i13=-152, i14=-11, iArr1[]=new int[N];
        byte by=53;
        boolean b=true, bArr[]=new boolean[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 6250539111780949490L);
        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(bArr, true);

        d *= (iMeth(-5) * i);
        lArr2[(i >>> 1) % N] = Test.instanceCount;
        for (i9 = 8; 345 > i9; i9++) {
            for (i11 = 1; 5 > i11; i11++) {
                Test.instanceCount += i12;
                Test.instanceCount = by;
                Test.instanceCount += (((i11 * i11) + i9) - i);
                i12 += (i11 | Test.iFld);
                for (i13 = 1; i13 < 2; ++i13) {
                    if (b) {
                        i12 += (i13 - Test.instanceCount);
                        i12 = by;
                        iArr1[i9] *= -141;
                    }
                    bArr[i11 + 1] = b;
                    d -= i12;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + by + i13 +
            i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        double d3=-23.127897;
        int i15=11, i16=-84, i17=24687, i18=32283, i19=-13058, i20=2, i21=65, i22=182;
        byte by1=-115;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -71.51F);

        vMeth(Test.fFld, Test.iFld);
        for (d3 = 3; d3 < 383; ++d3) {
            i15 *= (int)-97.51927;
            i15 = 39714;
            if (Test.bFld) {
                i15 += i15;
                Test.iArrFld[(int)(d3 + 1)] -= i15;
                try {
                    i15 = (Test.iFld / 91);
                    Test.iFld = (-19348 / Test.iFld);
                    i15 = (i15 % 8011);
                } catch (ArithmeticException a_e) {}
            }
            for (i16 = 1; i16 < 66; i16++) {
                if (Test.bFld) {
                    i15 *= Test.iFld;
                    fArr[i16 - 1] = Test.instanceCount;
                    Test.iFld >>= by1;
                    Test.dFld += i17;
                } else {
                    for (i18 = 1; i18 < 2; i18++) {
                        i17 += (3864 + (i18 * i18));
                    }
                    Test.instanceCount = -5;
                }
                i20 -= 21539;
                i15 += (i16 * i16);
                if (true) {
                    Test.iArrFld[(int)(d3 - 1)] = (int)1.70158;
                    Test.iFld <<= i16;
                } else if (Test.bFld) {
                    for (i21 = 1; i21 < 2; ++i21) {
                        Test.instanceCount = i19;
                        Test.bFld = Test.bFld;
                    }
                } else if (Test.bFld) {
                    i17 += (-17980 + (i16 * i16));
                    Test.fFld += (((i16 * i19) + i17) - i16);
                } else {
                    Test.instanceCount -= (long)Test.fFld;
                    i15 += (int)(-2.638F + (i16 * i16));
                    i17 = i15;
                }
            }
        }

        FuzzerUtils.out.println("d3 i15 i16 = " + Double.doubleToLongBits(d3) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 by1 i18 = " + i17 + "," + by1 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 fArr = " + i22 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.dFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
