// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=141L;
    public byte byFld=-70;
    public static volatile double dFld=-39.21407;
    public static boolean bFld=false;
    public static int iFld=43227;
    public static volatile float fFld=-1.772F;
    public double dArrFld[]=new double[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by, int i10) {

        int i11=-127, i12=-8175, i13=34847, i14=-4, i15=747, iArr[]=new int[N];
        float f1=-2.784F;

        FuzzerUtils.init(iArr, -58406);

        i10 -= (int)Test.instanceCount;
        i10 = i10;
        for (i11 = 14; i11 < 382; ++i11) {
            for (i13 = 1; i13 < 5; ++i13) {
                Test.instanceCount *= i15;
                iArr[i13 - 1] = i10;
                switch (((i13 % 1) * 5) + 48) {
                case 53:
                    f1 = i14;
                    by += (byte)f1;
                    switch ((((i11 >>> 1) % 1) * 5) + 38) {
                    case 39:
                        Test.instanceCount *= (long)Test.dFld;
                        Test.instanceCount *= (long)f1;
                        Test.bFld = true;
                    }
                    if (i11 != 0) {
                        vMeth2_check_sum += by + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                default:
                    Test.instanceCount = Test.instanceCount;
                }
            }
        }
        vMeth2_check_sum += by + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i8=12, i9=64623;

        for (i8 = 23; 392 > i8; ++i8) {
            i9 += i8;
        }
        vMeth2((byte)(10), i9);
        vMeth1_check_sum += i8 + i9;
    }

    public void vMeth(long l, int i7) {

        int i16=-178, i17=-2, i18=64, i19=1, i20=32292, i21=-12, iArr1[]=new int[N], iArr2[]=new int[N];
        short s=9705;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 24916);
        FuzzerUtils.init(iArr2, 1);
        FuzzerUtils.init(lArr, -483487190L);

        Test.instanceCount &= (i7++);
        vMeth1();
        for (i16 = 11; 378 > i16; ++i16) {
            i17 = Test.iFld;
            for (i18 = 5; i18 > 1; i18--) {
                try {
                    i7 = (55160 % iArr1[i18]);
                    i7 = (iArr1[i16] % -21179);
                    i17 = (i16 % iArr2[i16 - 1]);
                } catch (ArithmeticException a_e) {}
                lArr[i18 + 1] >>= Test.iFld;
                Test.dFld = Test.dFld;
                i19 += i17;
                Test.fFld -= i19;
            }
            Test.fFld -= Test.fFld;
            i7 = (int)Test.dFld;
            for (i20 = 1; i20 < 5; i20++) {
                i19 += (i20 * i20);
            }
            i17 += (((i16 * i19) + s) - i19);
        }
        vMeth_check_sum += l + i7 + i16 + i17 + i18 + i19 + i20 + i21 + s + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=9836, i1=-55, i2=6, i3=-90, i4=-3, i5=4, i6=-7, i22=13, i23=-180, i24=147, i25=28966, i26=27, i28=-62299,
            i29=-251, iArr3[]=new int[N];
        double d=16.122612;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr3, -45855);
        FuzzerUtils.init(lArr1, 12L);

        for (i = 3; 327 > i; ++i) {
            float f=-95.993F;
            i1 *= (((i1--) * (++i1)) - (-Math.min(i, i1)));
            byFld = (byte)i2;
            i2 -= (int)(i - (-(f + Test.instanceCount)));
            for (i3 = 78; i3 > i; i3--) {
                d = (--i1);
            }
        }
        b = (Test.instanceCount > Math.min(i1 * -227, (int)(d + i)));
        if (b) {
            for (i5 = 10; i5 < 245; i5++) {
                vMeth(Test.instanceCount, i6);
                dArrFld[i5] += -1;
                Test.instanceCount -= byFld;
                i6 = -10;
                for (i22 = i5; 107 > i22; ++i22) {
                    iArr3[i22] = i23;
                    i6 = i22;
                    lArr1[i22] = i3;
                    for (i24 = 1; i24 < 1; ++i24) {
                        Test.dFld *= Test.iFld;
                        i2 = (int)d;
                        d = i3;
                        Test.instanceCount &= i1;
                        Test.instanceCount += 3;
                        byFld *= (byte)-1858458519827795047L;
                    }
                    iArr3[i5] = i22;
                }
            }
            i26 = 1;
            while (++i26 < 356) {
                for (i28 = 2; i28 < 71; ++i28) {
                    i23 += (int)Test.instanceCount;
                    Test.bFld = b;
                    i1 *= i26;
                }
            }
        } else {
            Test.instanceCount += i28;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 d = " + i3 + "," + i4 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("b i5 i6 = " + (b ? 1 : 0) + "," + i5 + "," + i6);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i28 = " + i25 + "," + i26 + "," + i28);
        FuzzerUtils.out.println("i29 iArr3 lArr1 = " + i29 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount byFld Test.dFld = " + Test.instanceCount + "," + byFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.iFld Test.fFld = " + (Test.bFld ? 1 : 0) + "," + Test.iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
