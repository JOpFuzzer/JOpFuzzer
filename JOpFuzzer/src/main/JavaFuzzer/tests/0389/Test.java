// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-98L;
    public static short sFld=4948;
    public static float fFld=48.806F;
    public double dFld=0.88740;

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f=-1.39F;

        f *= f;
        vMeth1_check_sum += Float.floatToIntBits(f);
    }

    public static void vMeth(int i7, int i8) {

        int i9=171, i10=-27, i11=12, i12=14, iArr[]=new int[N];
        double d=8.53394;
        byte by=82;
        float f1=0.309F, fArr[]=new float[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, 51);
        FuzzerUtils.init(fArr, 2.867F);

        i9 = 1;
        do {
            vMeth1();
            i8 = i7;
            for (i10 = 1; 5 > i10; ++i10) {
                i8 ^= i8;
                switch ((i10 % 8) + 127) {
                case 127:
                    d += Test.instanceCount;
                    d -= i11;
                    break;
                case 128:
                    by = (byte)i8;
                    iArr[(i7 >>> 1) % N] += (int)Test.instanceCount;
                    by &= (byte)i10;
                    break;
                case 129:
                    fArr[(i8 >>> 1) % N] = i7;
                    for (f1 = 1; f1 < 2; ++f1) {
                        Test.sFld = (short)Test.instanceCount;
                        i7 <<= i8;
                    }
                    break;
                case 130:
                    Test.instanceCount = i7;
                    break;
                case 131:
                    b1 = false;
                case 132:
                    Test.instanceCount >>= i7;
                case 133:
                    i11 = (int)-208L;
                case 134:
                    d -= d;
                    break;
                }
            }
        } while (++i9 < 315);
        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + by + Float.floatToIntBits(f1) + i12
            + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static boolean bMeth(int i5, int i6) {

        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -16252);

        vMeth(i6, i5);
        i5 += (int)Test.fFld;
        iArr1[(i5 >>> 1) % N] -= Test.sFld;
        i5 = (int)Test.instanceCount;
        long meth_res = i5 + i6 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        long l=1692839317L;
        int i=-86, i1=9, i2=46614, i3=-762, i4=-120, i13=-127, iArr2[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr2, 50881);

        for (l = 3; 129 > l; ++l) {
            i += (int)l;
            for (i1 = 2; i1 < 199; i1++) {
                Test.instanceCount += (((i1 * l) + Test.sFld) - i);
                for (i3 = 1; 2 > i3; i3 += 3) {
                    b = (b = (b = bMeth(i4, i3)));
                    try {
                        i4 = (i4 % -81);
                        i = (i3 % 1032115305);
                        iArr2[i3] = (iArr2[i3 + 1] / -758947978);
                    } catch (ArithmeticException a_e) {}
                    i4 += (i3 * i3);
                    i2 -= i3;
                    Test.fFld += i4;
                    switch ((i3 % 5) + 48) {
                    case 48:
                    case 49:
                        Test.instanceCount = (long)Test.fFld;
                        i2 += (i3 | Test.instanceCount);
                    case 50:
                        if (b) continue;
                        i2 ^= i3;
                        i = i1;
                        break;
                    case 51:
                        i += i4;
                        break;
                    case 52:
                        iArr2[i3] += (int)l;
                        Test.instanceCount += (((i3 * Test.sFld) + Test.instanceCount) - Test.fFld);
                        iArr2[i1 - 1] <<= i1;
                        Test.fFld = Test.fFld;
                        break;
                    }
                    i4 *= (int)l;
                    i2 -= i;
                    dFld += i4;
                }
                iArr2[(int)(l - 1)] *= (int)l;
                i2 -= (int)Test.fFld;
            }
            if (b) {
                Test.fFld += ((long)l | (long)i13);
                Test.sFld += (short)(l - i);
            } else {
                if (b) break;
            }
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("b i13 iArr2 = " + (b ? 1 : 0) + "," + i13 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dFld = " + Double.doubleToLongBits(dFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
