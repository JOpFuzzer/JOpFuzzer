// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static short sFld=26871;
    public static double dFld=8.39336;
    public static int iFld=2;
    public boolean bFld=true;
    public byte byFld=104;
    public int iFld1=41633;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i10=-58773, i11=5454, i12=181, i13=11, i14=92;
        double d1=55.42306;
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 73L);
        FuzzerUtils.init(byArr, (byte)-114);

        i10 = 1;
        do {
            lArr[i10 - 1] = -3725;
            i11 += (-121 + (i10 * i10));
            switch (((i10 % 5) * 5) + 123) {
            case 136:
                Test.instanceCount -= i10;
                i11 += i10;
                break;
            case 147:
                i11 += (((i10 * Test.instanceCount) + i10) - i10);
                break;
            case 143:
                for (i12 = 1; i12 < 5; i12++) {
                    i11 += i10;
                    lArr[i12] -= Test.instanceCount;
                    Test.sFld *= (short)d1;
                    i14 = 2;
                    while (--i14 > 0) {
                        byArr[i10 - 1] >>>= (byte)-14;
                        if (false) break;
                        lArr[i10 + 1] = Test.instanceCount;
                    }
                }
            case 140:
            case 128:
                i11 >>= i14;
                break;
            default:
                Test.instanceCount += (i10 * i10);
            }
        } while (++i10 < 372);
        vMeth1_check_sum += i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i8, int i9, long l) {

        int i15=0, i16=39891, i17=-166, i18=7, iArr[]=new int[N];
        float f1=2.603F, fArr[]=new float[N];
        byte by=-34;
        boolean b=false;
        double dArr[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, -65.82656);
        FuzzerUtils.init(iArr, -45);
        FuzzerUtils.init(lArr1, 9L);
        FuzzerUtils.init(fArr, 42.260F);

        i9 *= (i9--);
        vMeth1();
        i15 = 1;
        do {
            i8 += i15;
            i9 ^= (int)Test.instanceCount;
            for (i16 = 1; i16 < 11; i16++) {
                i9 += (i16 ^ i16);
                switch (((i15 % 7) * 5) + 89) {
                case 119:
                    i18 = 2;
                    do {
                        l -= (long)f1;
                        i9 <<= i15;
                        dArr[i18 - 1] += 766638331L;
                        iArr = iArr;
                    } while (--i18 > 0);
                    lArr1[i16] <<= -13909;
                    break;
                case 98:
                    i8 += i9;
                    break;
                case 91:
                    Test.dFld = i8;
                    break;
                case 90:
                    fArr[i16] = i9;
                    break;
                case 99:
                    Test.iFld = (int)Test.instanceCount;
                    break;
                case 110:
                    i9 <<= by;
                    break;
                case 94:
                    Test.iFld += -1;
                    break;
                default:
                    if (b) break;
                }
            }
        } while (++i15 < 145);
        long meth_res = i8 + i9 + l + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1) + by + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i2, int i3, int i4) {

        int i5=50374, i6=-34291, i7=24753, i19=53381;
        float f=-64.368F, f2=0.623F, fArr1[]=new float[N];
        double d=56.69418;
        long l1=124415026648075147L;

        FuzzerUtils.init(fArr1, -1.1020F);

        for (i5 = 13; i5 < 293; i5++) {
            i4 = (int)f;
        }
        i7 = 1;
        while ((i7 += 3) < 333) {
            d = iMeth(i6, i7, 1431972269L);
            i3 %= (int)(l1 | 1);
            bFld = bFld;
            for (f2 = 1; f2 < 14; ++f2) {
                i3 -= i4;
                byFld = (byte)-62L;
            }
            i3 += i7;
            i6 <<= i2;
        }
        for (float f3 : fArr1) {
            i19 -= (int)-1.127373;
            Test.instanceCount += i2;
            i4 += -4;
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + Double.doubleToLongBits(d) + l1 +
            Float.floatToIntBits(f2) + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i1=9, i20=-80, i21=-40, i22=-38, i23=-2, iArr1[]=new int[N];
        float f4=-1.252F;
        double d2=-44.126572;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -1309289625L);
        FuzzerUtils.init(iArr1, 13647);

        for (i = 10; i < 187; i++) {
            vMeth(iFld1, iFld1, 45);
            i1 += (i | i1);
            lArr2[i] = iFld1;
            Test.instanceCount = iFld1;
            Test.iFld += iFld1;
            iArr1[i - 1] = Test.sFld;
            i1 += i;
            iFld1 += i;
        }
        f4 = i;
        i20 = 326;
        while (--i20 > 0) {
            switch ((i20 % 1) + 97) {
            case 97:
                iArr1[i20 + 1] >>= i20;
                Test.iFld = (int)Test.instanceCount;
            default:
                iArr1[i20 + 1] += i1;
                if (false) continue;
                iArr1[i20] = Test.iFld;
                for (d2 = 1; 77 > d2; d2++) {
                    byFld += (byte)i;
                    i1 = (int)Test.instanceCount;
                    i21 += (int)d2;
                    Test.dFld += f4;
                    lArr2[i20] = i21;
                    iArr1[(int)(d2)] >>= -10054;
                    i1 *= iFld1;
                    i1 ^= i21;
                    iArr1[i20 + 1] |= i20;
                }
            }
            for (i22 = i20; i22 < 77; ++i22) {
                i1 *= (int)Test.instanceCount;
                Test.instanceCount = i20;
            }
        }

        FuzzerUtils.out.println("i i1 f4 = " + i + "," + i1 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i20 d2 i21 = " + i20 + "," + Double.doubleToLongBits(d2) + "," + i21);
        FuzzerUtils.out.println("i22 i23 lArr2 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld bFld byFld = " + Test.iFld + "," + (bFld ? 1 : 0) + "," + byFld);
        FuzzerUtils.out.println("iFld1 = " + iFld1);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
