// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static byte byFld=91;
    public static short sFld=11618;
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1761219261L);
        FuzzerUtils.init(Test.iArrFld, 46357);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i11=-249;

        Test.lArrFld[(i11 >>> 1) % N] = i11;
        Test.instanceCount += 0;
        vMeth1_check_sum += i11;
    }

    public static void vMeth(int i9, float f1, long l2) {

        int i10=6272, i12=30717, i13=30116, i14=-168, i15=-8;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 60.796F);

        i10 = 1;
        do {
            i9 = (i9++);
            vMeth1();
            Test.instanceCount -= i10;
            Test.sFld = (short)i9;
            f1 = i10;
            Test.instanceCount = (long)f1;
            fArr1[i10] -= f1;
            l2 = i10;
            i9 += (((i10 * i10) + f1) - i9);
        } while (++i10 < 325);
        i9 -= i9;
        for (i12 = 1; 300 > i12; ++i12) {
            for (i14 = 1; i14 < 6; ++i14) {
                i9 = (int)99.550F;
                i9 += (i14 | (long)f1);
            }
        }
        vMeth_check_sum += i9 + Float.floatToIntBits(f1) + l2 + i10 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static float fMeth(long l, int i2, int i3) {

        int i4=-2, i5=-64650, i6=30923, i7=-24305, i8=-51159;
        long l1=9L;
        double d1=23.51919, d2=29.11954;
        boolean b=false;
        float f=88.845F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.234F);

        i3 = 12;
        for (i4 = 9; i4 < 155; ++i4) {
            switch ((i4 % 7) + 67) {
            case 67:
                Test.instanceCount = (long)(((l + Test.byFld) * i3) + (fArr[i4] - Test.lArrFld[i4 - 1]));
                if (b) {
                    for (l1 = i4; l1 < 11; l1++) {
                        for (d1 = l1; 1 > d1; ++d1) {
                            d2 /= (i7 | 1);
                            Test.iArrFld[(int)(d1 - 1)] <<= (int)Test.instanceCount;
                            Test.byFld += (byte)(d1 * d1);
                            switch (((((int)(Test.instanceCount - i7)) >>> 1) % 3) + 62) {
                            case 62:
                                l += (Math.abs(-(++i5)) * Test.instanceCount);
                                break;
                            case 63:
                                if (i6 != 0) {
                                }
                                break;
                            case 64:
                                Test.lArrFld[(int)(d1 + 1)] -= (Test.iArrFld[(int)(l1 - 1)]--);
                                b = b;
                            default:
                                i5 = (int)((Math.abs(f) * 0.48343) + ((i5 - Test.instanceCount) - Math.min(i6, i7)));
                            }
                        }
                    }
                }
                break;
            case 68:
                i2 = (i8--);
                break;
            case 69:
                vMeth(i6, f, 231L);
                break;
            case 70:
                i6 = -5324;
            case 71:
                i8 = i6;
                break;
            case 72:
                f += (i4 * i4);
                break;
            case 73:
                i8 += (((i4 * i5) + l) - i5);
                break;
            }
        }
        long meth_res = l + i2 + i3 + i4 + i5 + l1 + i6 + Double.doubleToLongBits(d1) + i7 +
            Double.doubleToLongBits(d2) + (b ? 1 : 0) + Float.floatToIntBits(f) + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=1.130147, d3=-1.111586;
        int i=-8, i1=-3, i17=183, i18=161, i19=1, i20=14, i21=53, i22=-6584, i23=11, i24=-60708;
        float f2=-8.14F;

        d = d;
        for (i = 12; i < 383; i++) {
            i1 >>= (int)((i - 0.917F) + fMeth(Test.instanceCount, i1, i1));
            i17 = 1;
            do {
                d += Test.instanceCount;
                i18 = 1;
                do {
                    f2 += i1;
                    d -= i17;
                } while (++i18 < 1);
                i19 = 1;
                while (++i19 < 1) {
                    f2 -= 2883;
                    Test.instanceCount = i18;
                }
                d = -1;
                i1 -= (int)f2;
            } while (++i17 < 68);
            i1 = i17;
            i1 <<= i;
            for (i20 = 68; i20 > 1; --i20) {
                d -= Test.instanceCount;
                try {
                    i21 = (i18 / 3867);
                    i21 = (-84 % i21);
                    i21 = (i20 / 122070245);
                } catch (ArithmeticException a_e) {}
                Test.byFld = (byte)-23331;
                f2 *= i1;
            }
            d3 = 1;
            do {
                i1 += (int)(((d3 * i19) + i) - i1);
                i21 /= (int)(i | 1);
                for (i22 = 1; 1 > i22; i22 += 3) {
                    Test.instanceCount += (-48 + (i22 * i22));
                    Test.instanceCount -= i1;
                    Test.iArrFld = Test.iArrFld;
                    i24 += 14;
                    Test.instanceCount ^= 2054409585L;
                    Test.instanceCount = i18;
                }
            } while (++d3 < 68);
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i17 i18 f2 = " + i17 + "," + i18 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("d3 i22 i23 = " + Double.doubleToLongBits(d3) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
