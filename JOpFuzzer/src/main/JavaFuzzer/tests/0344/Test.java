// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=546810265L;
    public static volatile double dFld=-2.90163;
    public static short sFld=28105;
    public static float fFld=0.232F;
    public boolean bFld=true;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.fArrFld, -82.746F);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l3, float f, boolean b1) {

        int i5=-31273, i6=50072, i7=-22, i8=-196;
        long l4=-43254L, lArr1[]=new long[N];
        byte by=-73;

        FuzzerUtils.init(lArr1, -6L);

        i5 = 1;
        do {
            Test.dFld += i5;
            f -= -1.868F;
            for (i6 = i5; i6 < 7; ++i6) {
                i7 -= i7;
                i7 <<= i5;
                i7 *= Test.sFld;
                try {
                    i7 = (i6 % -53449);
                    i7 = (i7 / -2881);
                    Test.iArrFld[i6 - 1] = (i5 / 2292);
                } catch (ArithmeticException a_e) {}
                switch (((i5 % 5) * 5) + 95) {
                case 118:
                    i8 = 1;
                    do {
                        switch (((i6 % 4) * 5) + 82) {
                        case 102:
                            l4 <<= i6;
                            i7 -= i8;
                            lArr1[i6 - 1] = i8;
                            break;
                        case 101:
                            l3 >>= 33342;
                            break;
                        case 100:
                            f += i8;
                            break;
                        case 93:
                        }
                    } while (++i8 < 1);
                    break;
                case 109:
                    i7 += (((i6 * Test.instanceCount) + by) - i5);
                case 98:
                    i7 += (int)l4;
                case 101:
                    i7 += i6;
                    break;
                case 105:
                    i7 += (((i6 * l3) + i8) - Test.instanceCount);
                    break;
                default:
                    i7 = by;
                }
            }
        } while (++i5 < 228);
        vMeth1_check_sum += l3 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i5 + i6 + i7 + i8 + l4 + by +
            FuzzerUtils.checkSum(lArr1);
    }

    public static float fMeth(int i3, long l2, int i4) {

        boolean b2=true;
        int i9=3371, i10=-5809, i11=4, i12=9, i13=-129, i14=135;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -2295789295L);

        lArr[(-13 >>> 1) % N] *= (i4 - ((l2 * Test.instanceCount) >> (lArr[(i4 >>> 1) % N] = Test.instanceCount)));
        vMeth1(l2, Test.fFld, b2);
        for (i9 = 6; i9 < 126; i9 += 3) {
            i11 = 1;
            do {
                Test.dFld = i9;
                for (i12 = 1; i12 < 1; ++i12) {
                    Test.iArrFld = Test.iArrFld;
                    Test.dFld -= i10;
                    Test.iArrFld[i9] += (int)Test.fFld;
                    switch (((-249 >>> 1) % 9) + 44) {
                    case 44:
                        Test.fFld += i4;
                        i13 -= i3;
                        Test.fFld *= Test.fFld;
                        break;
                    case 45:
                        i13 += i11;
                        Test.fFld *= 98;
                    case 46:
                        i4 *= (int)l2;
                        break;
                    case 47:
                        Test.sFld = (short)l2;
                        break;
                    case 48:
                        Test.dFld = Test.instanceCount;
                        break;
                    case 49:
                        Test.iArrFld[i11] &= (int)l2;
                        break;
                    case 50:
                        i14 <<= i11;
                        break;
                    case 51:
                        Test.sFld += (short)i12;
                        break;
                    case 52:
                        i13 = (int)l2;
                    default:
                        i3 *= i14;
                    }
                }
            } while (++i11 < 38);
        }
        long meth_res = i3 + l2 + i4 + (b2 ? 1 : 0) + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth(long l, double d, long l1) {

        int i=-39401, i1=34282, i2=5251, i15=-13, i16=-221, i17=-4;
        boolean b=false;
        float f1=102.203F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.106029);

        i = (int)((Test.iArrFld[(i >>> 1) % N]++) - d);
        b = b;
        for (i1 = 3; i1 < 201; ++i1) {
            i2 -= (int)(dArr[i1]--);
            Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld)));
            fMeth(i, l, i2);
            Test.instanceCount = 13;
            i += Test.sFld;
        }
        Test.iArrFld[(i1 >>> 1) % N] += i2;
        for (f1 = 5; f1 < 234; f1 += 2) {
            for (i16 = 1; i16 < 14; i16++) {
                Test.fFld = i1;
                if (i != 0) {
                    vMeth_check_sum += l + Double.doubleToLongBits(d) + l1 + i + (b ? 1 : 0) + i1 + i2 +
                        Float.floatToIntBits(f1) + i15 + i16 + i17 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                i17 = (int)-2693039742L;
                Test.fArrFld[i16 + 1] = i17;
            }
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + l1 + i + (b ? 1 : 0) + i1 + i2 + Float.floatToIntBits(f1) +
            i15 + i16 + i17 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i18=-38009, i19=-14118, i20=-64030, i21=-1, i22=14;
        long l5=47L, l6=-2L, lArr2[]=new long[N];
        byte by1=-119;

        FuzzerUtils.init(lArr2, 121903714L);

        vMeth(Test.instanceCount, Test.dFld, -5187155120718377474L);
        i18 = 1;
        do {
            l5 = 1;
            while (++l5 < 101) {
                Test.fFld -= i18;
                i19 = i19;
                i20 += (int)(((l5 * i19) + i18) - l5);
                if (bFld) break;
                if (bFld) break;
                switch ((((-234 >>> 1) % 5) * 5) + 43) {
                case 57:
                    Test.instanceCount = i19;
                    break;
                case 67:
                    l6 = -301;
                    break;
                case 47:
                    Test.instanceCount += (l5 | i19);
                    l6 -= 9;
                case 50:
                    for (i21 = 1; 1 > i21; ++i21) {
                        try {
                            i19 = (i22 / -54019);
                            i20 = (-4148 / i21);
                            Test.iArrFld[i18] = (i20 / -60832);
                        } catch (ArithmeticException a_e) {}
                        switch (((i18 >>> 1) % 5) + 95) {
                        case 95:
                            Test.iArrFld[i21] -= i18;
                            Test.iArrFld[i18 + 1] += i22;
                            break;
                        case 96:
                            i20 >>= (int)2077632873L;
                            break;
                        case 97:
                            i19 *= (int)l6;
                            Test.iArrFld = Test.iArrFld;
                            i20 += i21;
                            break;
                        case 98:
                            lArr2 = lArr2;
                        case 99:
                            i19 += (i21 * i21);
                            if (bFld) {
                                i22 += Test.sFld;
                            }
                        }
                        i22 += (int)Test.dFld;
                        Test.iArrFld[i21 - 1] <<= (int)-31797L;
                        by1 *= (byte)Test.fFld;
                        Test.instanceCount += i21;
                    }
                    break;
                case 59:
                    Test.fArrFld[(int)(l5)] = i18;
                }
            }
        } while (++i18 < 249);

        FuzzerUtils.out.println("i18 l5 i19 = " + i18 + "," + l5 + "," + i19);
        FuzzerUtils.out.println("i20 l6 i21 = " + i20 + "," + l6 + "," + i21);
        FuzzerUtils.out.println("i22 by1 lArr2 = " + i22 + "," + by1 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld bFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 :
            0) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
