// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-190L;
    public static float fFld=93.859F;
    public static boolean bFld=false;
    public static double dFld=-109.111318;
    public static long lFld=-465624117L;
    public static volatile double dFld1=-70.102425;
    public byte byFld=-99;
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.lArrFld, -56522L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-144, i4=14, i5=10, i6=52017, i7=-55459, iArr1[]=new int[N];
        float f1=95.425F, fArr[]=new float[N];
        byte by=11;
        double d=2.78399;
        short s1=14487;

        FuzzerUtils.init(iArr1, 125);
        FuzzerUtils.init(fArr, -86.887F);

        i3 = 1;
        do {
            for (i4 = 5; i4 > 1; --i4) {
                for (f1 = 2; f1 > 1; f1--) {
                    i6 += (int)(((f1 * f1) + i5) - i3);
                    Test.fFld -= Test.instanceCount;
                    if (Test.bFld) {
                        Test.bFld = false;
                        switch (i3 + 41) {
                        case 41:
                            i6 -= (int)Test.instanceCount;
                        case 42:
                            Test.bArrFld = Test.bArrFld;
                            i5 = (int)Test.dFld;
                            i6 = (int)3L;
                        case 43:
                        case 44:
                            i6 = i4;
                            break;
                        case 45:
                            iArr1[(int)(f1 + 1)] = i5;
                            by = (byte)f1;
                            break;
                        case 46:
                            if (Test.bFld) break;
                            break;
                        case 47:
                            iArr1[i4] >>= -193;
                            break;
                        case 48:
                            iArr1[i3 + 1] >>>= i5;
                            break;
                        case 49:
                            Test.instanceCount += (long)(f1 * i5);
                            break;
                        case 50:
                            i5 += (int)((long)f1 | Test.instanceCount);
                            break;
                        case 51:
                            i6 += i6;
                            break;
                        case 52:
                            Test.lArrFld[i3] = Test.instanceCount;
                            break;
                        case 53:
                            iArr1 = iArr1;
                            break;
                        case 54:
                            if (i4 != 0) {
                                vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + by +
                                    Double.doubleToLongBits(d) + s1 + i7 + FuzzerUtils.checkSum(iArr1) +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                                return;
                            }
                            break;
                        case 55:
                            Test.lArrFld[(int)(f1)] = 3797870073018980789L;
                        case 56:
                            Test.lArrFld[(int)(f1 + 1)] = i5;
                        case 57:
                            Test.instanceCount += (long)(((f1 * Test.instanceCount) + Test.instanceCount) - by);
                            break;
                        case 58:
                        case 59:
                            i5 += (23284 + (f1 * f1));
                            break;
                        case 60:
                        case 61:
                            i5 += (-9 + (f1 * f1));
                            break;
                        case 62:
                            Test.fFld += Test.instanceCount;
                            break;
                        case 63:
                            Test.instanceCount -= Test.instanceCount;
                        case 64:
                            i6 += (int)f1;
                            break;
                        case 65:
                            try {
                                i5 = (-94 % iArr1[(int)(f1 - 1)]);
                                i6 = (i5 / i3);
                                i5 = (25416 / iArr1[i4 - 1]);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 66:
                            i5 <<= 28552;
                            break;
                        case 67:
                            i6 *= (int)-2.353F;
                            break;
                        case 68:
                            i5 = i5;
                            break;
                        case 69:
                            i5 += i5;
                            break;
                        case 70:
                            try {
                                i6 = (i5 % i4);
                                i6 = (i3 / i5);
                                i5 = (116767907 % i4);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 71:
                            Test.fFld = Test.instanceCount;
                        case 72:
                            i6 >>= (int)Test.instanceCount;
                            break;
                        case 73:
                            d += f1;
                            break;
                        case 74:
                        case 75:
                        case 76:
                            i5 += (int)(f1 * f1);
                            break;
                        case 77:
                            iArr1[(int)(f1)] -= (int)Test.instanceCount;
                            break;
                        case 78:
                            s1 >>= (short)i5;
                        case 79:
                        case 80:
                        case 81:
                            Test.instanceCount &= Test.instanceCount;
                            break;
                        case 82:
                            by -= (byte)f1;
                            break;
                        case 83:
                            i6 -= (int)-3L;
                            break;
                        case 84:
                            Test.fFld += f1;
                            break;
                        case 85:
                            Test.lArrFld[i3] -= i3;
                        case 86:
                            i5 += (int)Test.instanceCount;
                        case 87:
                            i6 = i3;
                            break;
                        case 88:
                            i6 -= i6;
                            break;
                        case 89:
                            Test.bArrFld = Test.bArrFld;
                            break;
                        case 90:
                            Test.instanceCount ^= i5;
                        case 91:
                        case 92:
                            by <<= (byte)i6;
                            break;
                        case 93:
                            iArr1 = iArr1;
                            break;
                        case 94:
                            Test.dFld = i5;
                            break;
                        case 95:
                            i5 <<= (int)Test.instanceCount;
                            break;
                        case 96:
                            i6 = i6;
                        case 97:
                            d -= i5;
                            break;
                        case 98:
                            i6 += (int)f1;
                        case 99:
                            Test.instanceCount -= i4;
                        case 100:
                            i6 = (int)Test.instanceCount;
                            break;
                        case 101:
                            Test.fFld = 0.269F;
                        case 102:
                        case 103:
                            i6 = (int)f1;
                            break;
                        case 104:
                            i5 *= i5;
                            break;
                        case 105:
                            Test.bFld = Test.bFld;
                        case 106:
                            i5 = i4;
                            break;
                        case 107:
                            iArr1[(int)(f1 - 1)] -= (int)Test.instanceCount;
                            break;
                        case 108:
                            Test.instanceCount >>= i5;
                            break;
                        case 109:
                            fArr[(int)(f1)] = i6;
                        case 110:
                            i6 += i3;
                            break;
                        default:
                            i6 <<= i4;
                        }
                    } else if (Test.bFld) {
                        Test.fFld -= i4;
                    } else if (true) {
                        if (i7 != 0) {
                            vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + by +
                                Double.doubleToLongBits(d) + s1 + i7 + FuzzerUtils.checkSum(iArr1) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                    } else {
                        i7 = s1;
                    }
                }
            }
        } while (++i3 < 316);
        vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + by + Double.doubleToLongBits(d) + s1 + i7 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i2, long l, float f) {


        vMeth1();
        vMeth_check_sum += i2 + l + Float.floatToIntBits(f);
    }

    public static int iMeth(int i1, short s) {

        int i8=11, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -233);

        i1 <<= iArr[(i1 >>> 1) % N];
        vMeth(i1, Test.lFld, Test.fFld);
        Test.lFld -= Test.lFld;
        i8 = 1;
        while (++i8 < 146) {
            i1 *= (int)1.446F;
            Test.lFld += (i8 * i1);
        }
        long meth_res = i1 + s + i8 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=35802, i9=-5, i10=-61, i11=-10546, i12=-60957, i13=44244, i14=-125, i15=-12;
        short s2=-7522;

        i >>= iMeth(i, s2);
        iArrFld[(i >>> 1) % N] *= i;
        Test.dFld += i;
        for (i9 = 10; i9 < 187; i9++) {
            Test.fFld = Test.instanceCount;
            i10 <<= (int)-9361L;
            Test.lArrFld[i9 - 1] = (long)Test.dFld1;
        }
        for (i11 = 5; i11 < 215; ++i11) {
            for (i13 = i11; i13 < 120; i13++) {
                i -= i14;
                i14 += (int)Test.fFld;
                i14 -= i10;
                i15 = 1;
                while (++i15 < 1) {
                    Test.instanceCount += (long)Test.dFld1;
                    Test.fFld += i14;
                    switch ((((i14 >>> 1) % 7) * 5) + 102) {
                    case 112:
                        iArrFld = iArrFld;
                        byFld += (byte)(((i15 * Test.instanceCount) + Test.fFld) - i12);
                    case 113:
                        i10 += (int)Test.fFld;
                        Test.fFld += 1000005085L;
                        break;
                    case 104:
                        Test.bFld = Test.bFld;
                        Test.fFld *= i12;
                        s2 &= (short)Test.lFld;
                        switch ((i13 % 8) + 94) {
                        case 94:
                            Test.instanceCount += i15;
                            break;
                        case 95:
                            iArrFld[i15] += (int)Test.dFld1;
                            i10 -= i15;
                            break;
                        case 96:
                            Test.fFld += i15;
                            i += (int)Test.dFld;
                            iArrFld[i11] = i10;
                            break;
                        case 97:
                            i14 += s2;
                            break;
                        case 98:
                            i10 -= (int)Test.lFld;
                            break;
                        case 99:
                            if (Test.bFld) continue;
                            break;
                        case 100:
                            i = 118;
                            break;
                        case 101:
                            i += (((i15 * i12) + Test.instanceCount) - Test.lFld);
                            break;
                        default:
                            s2 = (short)i9;
                        }
                    case 128:
                        i += i15;
                        break;
                    case 114:
                        Test.bArrFld[i11 - 1] = Test.bFld;
                        break;
                    case 135:
                        try {
                            i14 = (i15 % 4515);
                            iArrFld[i15] = (1712543139 / i11);
                            i14 = (i12 / 71);
                        } catch (ArithmeticException a_e) {}
                    case 107:
                        Test.lFld *= (long)Test.fFld;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i s2 i9 = " + i + "," + s2 + "," + i9);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.lFld Test.dFld1 = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.lFld + "," + Double.doubleToLongBits(Test.dFld1));
        FuzzerUtils.out.println("byFld Test.bArrFld Test.lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.bArrFld)
            + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
