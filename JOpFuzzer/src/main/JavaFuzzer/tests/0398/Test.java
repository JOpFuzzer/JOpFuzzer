// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static int iFld=50490;
    public float fFld=-113.514F;
    public volatile double dFld=1.66963;
    public double dArrFld[]=new double[N];
    public float fArrFld[]=new float[N];
    public short sArrFld[]=new short[N];
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1) {

        int i4=0, i5=6, i6=0, i7=-62745, i8=35886, i9=62842, i10=13, i11=24786, iArr[]=new int[N];
        double d=5.23175, d1=-2.42762;
        long l2=-65230L;
        byte by1=118;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -57.226F);
        FuzzerUtils.init(iArr, 23007);

        for (i4 = 10; i4 < 343; ++i4) {
            for (i6 = i4; i6 < 5; ++i6) {
                fArr[i6] *= i6;
                d = -7570;
                i7 = (int)183L;
                iArr[i4] ^= (int)-190L;
            }
            for (l2 = i4; l2 < 5; ++l2) {
                for (d1 = 1; 1 > d1; d1++) {
                    iArr[(int)(d1)] -= i5;
                    iArr[(int)(l2 - 1)] += by1;
                    i5 -= i8;
                }
                fArr[(int)(l2 - 1)] = i9;
                for (i10 = 1; i10 < 1; i10 += 3) {
                    i9 -= i8;
                    d += i7;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + l2 + i8 +
            Double.doubleToLongBits(d1) + i9 + by1 + i10 + i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(long l1, int i2, int i3) {

        float f2=86.179F;
        int i12=-4335, i13=4, i14=-194, i15=196, i16=-56328, i17=77;
        byte by2=-123;

        dArrFld[(i3 >>> 1) % N] = (iMeth(f2) - i3);
        l1 <<= i3;
        i2 *= i3;
        for (i12 = 5; i12 < 191; ++i12) {
            l1 = i13;
            for (i14 = i12; 9 > i14; ++i14) {
                Test.iFld = i13;
                switch ((i14 % 1) + 60) {
                case 60:
                    for (i16 = 1; i16 < 1; i16++) {
                        Test.instanceCount += (240 + (i16 * i16));
                        by2 += (byte)(7 + (i16 * i16));
                        Test.instanceCount -= -245;
                        i13 = (int)6093352088663449401L;
                        Test.instanceCount -= i16;
                        i17 = i3;
                    }
                    break;
                default:
                    Test.iFld |= i12;
                }
            }
        }
        vMeth1_check_sum += l1 + i2 + i3 + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + i16 + i17 + by2;
    }

    public void vMeth() {

        int i=10, i1=23622, i18=56, i19=-21081, i20=238, iArr1[][]=new int[N][N];
        byte by=-30;
        float f=6.566F;

        FuzzerUtils.init(iArr1, 10);

        for (i = 152; i > 3; i--) {
            short s=23381;
            by = (byte)(((i + i) * f) + ((Test.instanceCount - i1) * (s - i1)));
            f += (-((i + i) + i));
            vMeth1(Test.instanceCount, i1, i);
            for (i18 = 1; i18 < 11; i18++) {
                i1 -= -11;
                fArrFld[i - 1] -= -1;
                switch (((i1 >>> 1) % 2) + 79) {
                case 79:
                    i1 >>>= i1;
                    break;
                case 80:
                    Test.instanceCount += i1;
                    Test.iFld = (int)Test.instanceCount;
                }
                iArr1[i + 1] = iArr1[i18];
                iArr1[i + 1][i18 - 1] = i1;
                i19 += (((i18 * i1) + Test.iFld) - by);
            }
            i20 += (i * by);
        }
        vMeth_check_sum += i + i1 + by + Float.floatToIntBits(f) + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d2=0.9472;
        int i21=-42023, i22=9, i23=164, i24=69, i25=244, i26=36567;
        boolean b=false;
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -1411190736745571290L);
        FuzzerUtils.init(byArr, (byte)-32);

        for (long l : lArr) {
            vMeth();
            Test.iFld <<= Test.iFld;
            fFld = Test.iFld;
            dArrFld[(Test.iFld >>> 1) % N] = l;
            l -= Test.iFld;
        }
        for (d2 = 1; d2 < 257; ++d2) {
            Test.iFld = Test.iFld;
            Test.instanceCount *= i22;
            fFld += (float)d2;
            sArrFld[(int)(d2)] = (short)i21;
            switch ((int)(((d2 % 10) * 5) + 41)) {
            case 67:
                switch ((int)((d2 % 8) + 29)) {
                case 29:
                    i21 = (int)Test.instanceCount;
                    i22 += (int)(d2 + i22);
                    b = b;
                    Test.iFld += (37064 + (d2 * d2));
                    break;
                case 30:
                    i23 = 1;
                    do {
                        i22 -= i21;
                        switch ((int)(((d2 % 3) * 5) + 113)) {
                        case 117:
                            byArr[(int)(d2 - 1)] -= (byte)d2;
                            dFld = 11;
                        case 123:
                            Test.iFld = (int)dFld;
                            for (i24 = 1; i24 < 1; i24 += 2) {
                                switch ((i24 % 2) + 14) {
                                case 14:
                                    i21 += i23;
                                    i25 = i23;
                                    break;
                                case 15:
                                    i22 += i21;
                                    break;
                                default:
                                    if (false) continue;
                                    iArrFld[(int)(d2)] += (int)Test.instanceCount;
                                }
                            }
                            break;
                        case 124:
                            i22 *= (int)d2;
                        }
                    } while (++i23 < 98);
                    break;
                case 31:
                    i26 |= (int)Test.instanceCount;
                    break;
                case 32:
                    i25 += i26;
                    break;
                case 33:
                case 34:
                    fFld += Test.instanceCount;
                    break;
                case 35:
                    Test.instanceCount = -33454;
                    break;
                case 36:
                    fFld %= (i24 | 1);
                    break;
                default:
                    iArrFld[(int)(d2)] += i23;
                }
            case 89:
                if (b) break;
            case 86:
                iArrFld[(int)(d2 + 1)] %= -28799;
                break;
            case 42:
                iArrFld[(int)(d2)] = (int)Test.instanceCount;
                break;
            case 78:
                fFld += (float)d2;
                break;
            case 64:
                Test.instanceCount += (long)(d2 * d2);
                break;
            case 80:
                dArrFld[(int)(d2 + 1)] = fFld;
            case 53:
                byArr[(int)(d2)] += (byte)32675L;
            case 88:
                b = true;
                break;
            case 77:
                fFld += (float)d2;
                break;
            default:
                fArrFld[(int)(d2)] = Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("d2 i21 i22 = " + Double.doubleToLongBits(d2) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b i23 i24 = " + (b ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 lArr = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld fFld = " + Test.instanceCount + "," + Test.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("dFld dArrFld fArrFld = " + Double.doubleToLongBits(dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("sArrFld iArrFld = " + FuzzerUtils.checkSum(sArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
