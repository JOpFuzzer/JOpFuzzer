// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1482523629L;
    public static int iFld=2;
    public static double dFld=0.82697;
    public static boolean bFld=true;
    public static float fFld=0.117F;
    public static long lFld=63158L;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(float f1) {

        int i7=-23526, i8=-10452, i9=-252, i10=-6, i11=-2254, i12=-13, i13=13, iArr[][]=new int[N][N];
        boolean b1=true;
        double d=1.79483;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(lArr1, -2L);

        Test.instanceCount += i7;
        for (i8 = 6; i8 < 379; ++i8) {
            i9 += i9;
            if (b1) break;
            d += -11;
            i9 += i8;
            iArr = FuzzerUtils.int2array(N, (int)243);
        }
        i7 = i9;
        if (true) {
            iArr[(-6 >>> 1) % N] = iArr[(i9 >>> 1) % N];
            i10 = 1;
            do {
                i11 = 1;
                while (++i11 < 5) {
                    for (i12 = 1; i12 > 1; i12--) {
                        lArr1[i11 - 1] = i10;
                    }
                    i9 += i11;
                }
            } while (++i10 < 322);
        } else {
            i7 = i13;
        }
        long meth_res = Float.floatToIntBits(f1) + i7 + i8 + i9 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i10 + i11
            + i12 + i13 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        float f=47.256F;
        int i6=98, i15=-167, i16=-9, i17=-242, iArr1[]=new int[N];
        byte by=6;

        FuzzerUtils.init(iArr1, 11501);

        Test.instanceCount = ((long)(-(f *= i6)) ^ i6);
        lMeth(f);
        for (int i14 : iArr1) {
            switch ((((-90 >>> 1) % 4) * 5) + 101) {
            case 114:
                i15 = 1;
                while (++i15 < 4) {
                    i14 += i15;
                    for (i16 = 1; i16 < 1; ++i16) {
                        try {
                            iArr1[i16 + 1] = (129 / iArr1[i15]);
                            i6 = (11452 / Test.iFld);
                            iArr1[i16] = (-1872886412 % i14);
                        } catch (ArithmeticException a_e) {}
                        Test.dFld += Test.instanceCount;
                        i14 -= 1;
                        iArr1 = iArr1;
                        f += by;
                        Test.iFld += (((i16 * i14) + Test.instanceCount) - i17);
                        i6 += (i16 ^ i6);
                        if (true) break;
                    }
                }
                break;
            case 111:
                Test.bFld = false;
                break;
            case 105:
                iArr1[(Test.iFld >>> 1) % N] += i16;
            case 113:
                i17 = i15;
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + i15 + i16 + i17 + by + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(boolean b, int i3) {

        int i4=-14, i5=-26652, i18=-8, i19=47649, i20=-31905, i21=63056, iArr2[][]=new int[N][N];
        double d1=-1.93418;

        FuzzerUtils.init(iArr2, 49);

        for (i4 = 9; i4 < 359; i4 += 3) {
            vMeth1();
            i5 = (int)12L;
            i5 <<= (int)225211109791330541L;
        }
        for (i18 = 5; 327 > i18; ++i18) {
            iArr2[i18 + 1][i18 - 1] *= i18;
            d1 = 1;
            while (++d1 < 5) {
                i3 += (int)Test.fFld;
                iArr2[i18][i18] <<= (int)-27L;
                for (i20 = 1; 1 < i20; --i20) {
                    if (i20 != 0) {
                        vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + i5 + i18 + i19 + Double.doubleToLongBits(d1) + i20 +
                            i21 + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                }
            }
            i19 += i18;
            Test.iFld += (i18 | i5);
        }
        i21 *= (int)Test.fFld;
        vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + i5 + i18 + i19 + Double.doubleToLongBits(d1) + i20 + i21 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=38605, i1=-12, i2=-3, i22=-17790, i23=43, i24=61894, i25=2;
        byte by1=36, byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -939066577L);
        FuzzerUtils.init(byArr, (byte)-35);

        i = (i--);
        Test.instanceCount = lArr[(6287 >>> 1) % N];
        for (i1 = 4; i1 < 189; ++i1) {
            vMeth(false, i);
            iArrFld[i1 - 1] *= (int)Test.lFld;
            by1 *= (byte)Test.lFld;
            i22 = 1;
            do {
                iArrFld[i22 - 1] <<= Test.iFld;
                for (i23 = 1; i1 < i23; --i23) {
                    short s=-11523;
                    if (Test.bFld) continue;
                    lArr[i23] >>= i;
                    switch (((i2 >>> 1) % 2) + 46) {
                    case 46:
                        i = Test.iFld;
                        Test.dFld += i23;
                        Test.fFld = Test.iFld;
                    case 47:
                        Test.fFld -= -39672;
                        break;
                    default:
                    }
                    Test.fFld -= by1;
                    i24 += (31127 + (i23 * i23));
                    Test.instanceCount += i1;
                    switch (((i >>> 1) % 3) + 5) {
                    case 5:
                        i24 += i23;
                        if (Test.bFld) continue;
                        Test.iFld >>>= s;
                        byArr[i22 - 1] &= (byte)i24;
                        break;
                    case 6:
                        i24 >>= 88;
                        i %= (int)1.445F;
                        i24 *= (int)Test.lFld;
                        break;
                    case 7:
                        Test.fFld = 1396384660L;
                        break;
                    default:
                        i25 = i23;
                        iArrFld = iArrFld;
                    }
                }
            } while (++i22 < 136);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("by1 i22 i23 = " + by1 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 lArr = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.fFld Test.lFld = " + (Test.bFld ? 1 : 0) + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.lFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
