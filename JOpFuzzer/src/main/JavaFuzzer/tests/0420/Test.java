// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5107396987284443082L;
    public static int iFld=-10;
    public static float fFld=2.721F;
    public static short sFld=-8709;
    public static volatile boolean bFld=false;
    public long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-88);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {


        Test.fFld += -11;
        Test.iFld = Test.iFld;
        Test.iFld <<= (int)Test.instanceCount;
        vMeth1_check_sum += 0;
    }

    public static long lMeth(boolean b, long l1) {

        int i3=-9, i4=-5, i5=-31378, i6=55982, iArr[][]=new int[N][N];
        double dArr[][]=new double[N][N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 3382);
        FuzzerUtils.init(dArr, -2.75943);
        FuzzerUtils.init(bArr, false);

        iArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] >>>= (int)(Test.instanceCount - iArr[(182 >>> 1) %
            N][(Test.iFld >>> 1) % N]);
        for (i3 = 8; i3 < 200; ++i3) {
            byte by=-68;
            if (b) {
                l1 /= (((++iArr[i3][i3 - 1]) * Test.iFld) | 1);
                vMeth1();
            } else {
                by += (byte)i3;
                switch (((i3 % 3) * 5) + 52) {
                case 59:
                    Test.iFld += Test.sFld;
                    for (i5 = 1; i5 < 8; ++i5) {
                        dArr[i5] = dArr[i5 - 1];
                        iArr[i3 + 1] = iArr[i5 - 1];
                        Test.fFld += i5;
                        bArr = bArr;
                        i4 = (int)Test.instanceCount;
                    }
                    break;
                case 58:
                    i4 += i6;
                    break;
                case 62:
                    Test.iFld ^= 2;
                    break;
                default:
                    Test.iFld = (int)Test.fFld;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + l1 + i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2, long l) {

        double d=0.14549;
        byte by1=-125;
        int i8=-126, i9=5, i10=-233, iArr1[]=new int[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, 665);
        FuzzerUtils.init(fArr, -83.1012F);

        lMeth(Test.bFld, Test.instanceCount);
        d *= Test.iFld;
        i2 = 60;
        for (int i7 : iArr1) {
            i2 -= i7;
            if (Test.bFld) {
                by1 >>= (byte)i2;
                vMeth_check_sum += i2 + l + Double.doubleToLongBits(d) + by1 + i8 + i9 + i10 +
                    FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            } else if (Test.bFld) {
                fArr[(i2 >>> 1) % N][(-3 >>> 1) % N] -= Test.fFld;
                i8 = 1;
                while ((i8 += 3) < 4) {
                    Test.instanceCount -= Test.sFld;
                }
                for (i9 = 1; 4 > i9; ++i9) {
                    l ^= l;
                }
                l >>= 269;
            } else if (Test.bFld) {
                i10 = (int)l;
                Test.iFld = Test.iFld;
            } else {
                i7 = i2;
            }
        }
        vMeth_check_sum += i2 + l + Double.doubleToLongBits(d) + by1 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=35, i11=48629, i12=2, i13=-61151, i14=5, i15=-2, iArr2[]=new int[N];
        byte by2=-120;
        double d1=0.22325;

        FuzzerUtils.init(iArr2, -241);

        for (i = 3; i < 316; ++i) {
            i1 = (-i);
            vMeth(Test.iFld, Test.instanceCount);
        }
        i1 = i;
        for (i11 = 20; 391 > i11; i11++) {
            i1 = (int)Test.fFld;
            Test.iFld = by2;
            lArrFld[i11] = 46;
            i12 += (14 + (i11 * i11));
            i12 &= i11;
            i13 = 1;
            while (++i13 < 68) {
                i12 += i;
                lArrFld[i11 + 1] = (long)-102.111340;
                for (i14 = 1; i14 < 1; i14++) {
                    Test.iFld <<= i;
                    Test.fFld = 63098;
                    iArr2[i14 + 1] += -33131;
                    i15 = i12;
                    Test.instanceCount += -3;
                    Test.iFld += (int)Test.instanceCount;
                }
                Test.fFld -= Test.fFld;
                i15 += (((i13 * i1) + i11) - i11);
                Test.fFld = Test.iFld;
                i15 -= (int)Test.instanceCount;
            }
            iArr2[i11] += (int)d1;
        }
        i1 = (int)Test.fFld;
        Test.byArrFld[(Test.iFld >>> 1) % N] = (byte)Test.fFld;
        Test.instanceCount = Test.iFld;
        iArr2[(Test.iFld >>> 1) % N] %= 3103;
        Test.instanceCount *= Test.instanceCount;

        FuzzerUtils.out.println("i i1 i11 = " + i + "," + i1 + "," + i11);
        FuzzerUtils.out.println("i12 by2 i13 = " + i12 + "," + by2 + "," + i13);
        FuzzerUtils.out.println("i14 i15 d1 = " + i14 + "," + i15 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld Test.bFld lArrFld = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
