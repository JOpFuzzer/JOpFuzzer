// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=30044L;
    public int iFld=-56171;
    public boolean bFld=false;
    public static volatile double dFld=-121.127113;
    public static long lArrFld[]=new long[N];
    public volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -221L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, double d) {

        int i3=185, i4=-24494, i5=9, i6=2, i7=17178, i8=-128, iArr2[]=new int[N];
        long l2=-1778079343L;
        boolean b=true, bArr[]=new boolean[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, 188);
        FuzzerUtils.init(sArr, (short)-27839);

        for (i3 = 9; 217 > i3; ++i3) {
            for (i5 = 8; i5 > 1; --i5) {
                i6 >>= (int)Test.instanceCount;
                for (i7 = 2; 1 < i7; --i7) {
                    l2 >>= i4;
                    bArr[i7 + 1] = b;
                    iArr2[i3] -= i7;
                    d = -4290513180470776516L;
                    i4 += i7;
                    Test.lArrFld[i7] += i2;
                    iArr2[i3 - 1] = (int)-1628303950L;
                    sArr = sArr;
                    iArr2[i3] -= i2;
                }
                i4 = i7;
                iArr2[i3 + 1] -= -181;
            }
        }
        vMeth2_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i8 + l2 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(long l1, int i1) {

        double d1=-2.98239;
        float f=1.294F;
        boolean b1=false;
        int i9=26828, i10=-3, i11=104, i12=26, iArr3[]=new int[N];
        short s=-10592;

        FuzzerUtils.init(iArr3, 43000);

        vMeth2(i1, d1);
        iArr3[(i1 >>> 1) % N] *= (int)3086738356L;
        l1 = l1;
        d1 = i1;
        i1 = (int)l1;
        Test.instanceCount += (long)f;
        b1 = b1;
        for (i9 = 173; i9 > 1; i9 -= 3) {
            i10 <<= s;
            for (i11 = 1; i11 < 27; i11++) {
                i10 += (i11 * i11);
                i1 = i10;
            }
            s -= (short)i11;
            Test.instanceCount |= 64845;
            i10 += (((i9 * i9) + s) - i12);
        }
        vMeth1_check_sum += l1 + i1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i9 + i10 +
            s + i11 + i12 + FuzzerUtils.checkSum(iArr3);
    }

    public static void vMeth() {

        long l=529191830L;
        int i=-4, iArr1[][]=new int[N][N];
        double d2=0.94313;

        FuzzerUtils.init(iArr1, 201);

        for (l = 5; 366 > l; l++) {
            iArr1[(int)(l - 1)] = (iArr1[(i >>> 1) % N] = iArr1[(int)(l)]);
        }
        vMeth1(Test.instanceCount, i);
        d2 += i;
        i = i;
        i -= i;
        vMeth_check_sum += l + i + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i13=14176, i14=-9348, i15=-144, i16=-10, i17=28695, iArr[]=new int[N], iArr4[][]=new int[N][N];
        float f1=-100.242F, f2=77.108F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -15923);
        FuzzerUtils.init(iArr4, -113);
        FuzzerUtils.init(lArr, 33991L);

        iFld = (iArr[(-295 >>> 1) % N] * (iFld + Math.min(iFld, iFld)));
        vMeth();
        iFld -= iFld;
        iFld >>= iFld;
        fArrFld[(iFld >>> 1) % N] -= Test.instanceCount;
        Test.lArrFld[(iFld >>> 1) % N] >>>= iFld;
        iArr[(iFld >>> 1) % N] -= (int)Test.instanceCount;
        for (i13 = 13; i13 < 253; i13++) {
            Test.instanceCount >>= iFld;
            i14 *= (int)f1;
            i14 = i13;
            for (f2 = 1; f2 < 105; ++f2) {
                i14 = (int)f1;
                i14 *= (int)f1;
                i15 += i14;
                if (bFld) continue;
                Test.instanceCount = iFld;
                iFld >>>= (int)Test.instanceCount;
                i15 = (int)Test.dFld;
                Test.instanceCount = Test.instanceCount;
                bFld = bFld;
            }
        }
        i14 >>= i13;
        iFld |= (int)Test.instanceCount;
        fArrFld[(i13 >>> 1) % N] -= iFld;
        iArr4 = iArr4;
        i14 = (int)Test.instanceCount;
        i14 >>= iFld;
        for (i16 = 3; i16 < 201; i16++) {
            lArr = FuzzerUtils.long2array(N, (long)4001748108L);
            try {
                i15 = (0 % i17);
                i14 = (iArr4[i16 + 1][i16] % i15);
                i15 = (i14 / 71);
            } catch (ArithmeticException a_e) {}
        }

        FuzzerUtils.out.println("i13 i14 f1 = " + i13 + "," + i14 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("f2 i15 i16 = " + Float.floatToIntBits(f2) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 iArr iArr4 = " + i17 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld bFld = " + Test.instanceCount + "," + iFld + "," + (bFld ? 1 :
            0));
        FuzzerUtils.out.println("Test.dFld Test.lArrFld fArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
