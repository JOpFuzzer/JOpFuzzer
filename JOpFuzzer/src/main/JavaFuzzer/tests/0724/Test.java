// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=38233L;
    public static double dFld=32.7042;
    public static byte byFld=-60;
    public static volatile boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 204);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, long l1) {

        int i19=-235;
        float f2=0.80F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 18500L);

        Test.byFld -= (byte)i19;
        f2 = f2;
        lArr2[(i19 >>> 1) % N] *= Test.byFld;
        f2 -= i19;
        i19 = i19;
        i19 -= -152;
        i19 <<= i19;
        i19 += (int)Test.dFld;
        long meth_res = l + l1 + i19 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i12) {

        int i13=-7924, i14=28491, i15=4, i16=35, i17=-31991, i18=6;
        short s=-23849;
        float f3=-1.540F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -2.178F);

        switch ((((((int)(i12 * Test.instanceCount)) >>> 1) % 3) * 5) + 89) {
        case 92:
            i12 += (int)-6620569851226771716L;
            for (i13 = 14; i13 < 378; i13++) {
                for (i15 = 1; i15 < 5; i15++) {
                    s = (short)(-fArr1[i15]);
                    i12 += (i15 * i15);
                    for (i17 = 1; i17 < 2; ++i17) {
                        i12 += (i17 * i17);
                        i16 = (int)((iMeth1(Test.instanceCount, Test.instanceCount) - i17) - Test.instanceCount);
                        i18 += (((i17 * Test.instanceCount) + Test.byFld) - i17);
                        f3 += (i17 - i18);
                        i18 = (int)Test.instanceCount;
                        i18 *= (int)Test.instanceCount;
                        i16 *= Test.byFld;
                    }
                    i18 += i17;
                }
            }
            break;
        case 93:
            i14 = i13;
            break;
        case 99:
            Test.instanceCount = i16;
            break;
        }
        long meth_res = i12 + i13 + i14 + i15 + i16 + s + i17 + i18 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i6=-60, i7=-178, i8=183, i9=12, i10=155, i11=-11692, iArr[]=new int[N];
        float f1=0.10F;
        long lArr[]=new long[N], lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -8);
        FuzzerUtils.init(lArr, 4142888078L);
        FuzzerUtils.init(lArr1, -6870L);

        for (int i5 : iArr) {
            for (i6 = 1; i6 < 4; ++i6) {
                for (i8 = 1; i8 < 2; ++i8) {
                    i7 -= (int)(iArr[i6 + 1] -= (int)((Test.instanceCount + Test.instanceCount) + 214));
                    lArr = lArr1;
                }
                for (i10 = 1; i10 < 2; i10++) {
                    i7 = (int)((++f1) * ((i11--) + (Test.dFld * i6)));
                    iArr[i10 + 1] >>= ((iMeth(i7) << i5) + i11);
                    i5 += (i10 | i11);
                    i11 >>= (int)Test.instanceCount;
                    i5 += (int)Test.instanceCount;
                    f1 %= 2;
                    iArr[i6 - 1] *= i10;
                }
                Test.instanceCount -= 220;
                Test.instanceCount += i6;
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=42727, i2=-46060, i3=55, i4=-15889, i20=-8565, i21=-42, i22=-2, i23=3;
        float f=107.214F, fArr[]=new float[N];
        boolean b=false;
        short s1=-11842;
        long l2=8L, l3=-46L;

        FuzzerUtils.init(fArr, 19.247F);

        for (i = 15; i < 312; i++) {
            i1 -= Math.max(i, (int)(i1 - (++f)));
            for (i2 = 1; i2 < 85; ++i2) {
                i4 = 1;
                do {
                    fArr = (fArr = fArr);
                    i1 = i1;
                    vMeth();
                    i3 += i4;
                    i3 += i;
                    i1 += (((i4 * i4) + i2) - i);
                    f = f;
                } while (++i4 < 2);
                i3 += i;
                i3 &= (int)Test.instanceCount;
            }
            i1 <<= i3;
            fArr[i + 1] -= Test.instanceCount;
            if (b) break;
            i3 = i3;
            Test.iArrFld[i + 1] |= i3;
        }
        i20 = 1;
        while (++i20 < 145) {
            for (i21 = 5; 173 > i21; i21++) {
                s1 += (short)(5098 + (i21 * i21));
                for (l2 = i20; l2 < 2; l2++) {
                    bArrFld[i21] = Test.bFld;
                }
                if (true) continue;
                Test.instanceCount = Test.instanceCount;
                Test.instanceCount = Test.instanceCount;
                i1 += (int)l3;
            }
            fArr[i20 + 1] *= i2;
            Test.iArrFld[i20 - 1] += (int)l2;
            i3 += (((i20 * i3) + i) - i4);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("b i20 i21 = " + (b ? 1 : 0) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 s1 l2 = " + i22 + "," + s1 + "," + l2);
        FuzzerUtils.out.println("i23 l3 fArr = " + i23 + "," + l3 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.bFld Test.iArrFld bArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
