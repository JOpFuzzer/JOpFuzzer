// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=57848L;
    public static int iFld=114;
    public static float fFld=-1.405F;
    public static byte byFld=-94;
    public static double dFld=106.27487;
    public static int iArrFld[][]=new int[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 42123);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        byte by=-11;
        int i8=-236, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 3304);

        Test.iFld -= by;
        Test.iFld = Test.iFld;
        i8 = 1;
        do {
            double d=64.68046;
            iArr1[i8 - 1] -= Test.iFld;
            d = by;
            Test.instanceCount = Test.instanceCount;
        } while (++i8 < 309);
        Test.instanceCount += 14;
        Test.fFld -= Test.instanceCount;
        long meth_res = by + i8 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i9=-4, i10=-63329, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -213);

        iArr[(Test.iFld >>> 1) % N] += (((--Test.iFld) | (Test.iFld - Test.iFld)) & (iMeth1() - Test.iFld));
        Test.iFld -= (int)Test.instanceCount;
        for (i9 = 14; i9 < 266; i9++) {
            iArr = iArr;
            i10 ^= (int)Test.instanceCount;
        }
        long meth_res = i9 + i10 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i2, boolean b) {

        int i3=-23334, i4=25146, i5=153, i6=52, i7=12, i11=42534, i12=33, i13=23033, iArr2[]=new int[N];
        float f=0.940F;
        double d1=0.31146;
        short s=-25955;

        FuzzerUtils.init(iArr2, -122);

        for (i3 = 7; 201 > i3; ++i3) {
            switch (((i3 % 10) * 5) + 125) {
            case 160:
                i5 = 1;
                while (++i5 < 8) {
                    for (i6 = 1; i6 < 1; i6++) {
                        i4 += (i6 | Test.instanceCount);
                        i4 += (i6 * i6);
                    }
                    f -= (Test.instanceCount--);
                    if ((lMeth() * Test.byFld) < i2) continue;
                }
                break;
            case 139:
                i4 *= (int)111.153F;
                i2 += (((i3 * Test.instanceCount) + i3) - i5);
                break;
            case 148:
                for (i11 = 1; i11 < 8; ++i11) {
                    Test.iFld += (i11 - i11);
                    Test.iArrFld = Test.iArrFld;
                    i12 <<= i5;
                    Test.instanceCount = (long)d1;
                }
                break;
            case 152:
                i13 += i11;
                break;
            case 171:
                s = (short)Test.iFld;
                break;
            case 173:
                Test.instanceCount += i3;
                break;
            case 144:
                Test.instanceCount += i3;
                break;
            case 131:
                Test.iFld += i13;
                break;
            case 130:
                i4 += 1609;
                break;
            case 153:
                i4 >>= (int)Test.instanceCount;
                break;
            }
        }
        long meth_res = i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i11 + i12 +
            Double.doubleToLongBits(d1) + i13 + s + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-32437, i15=27239, i16=15240, i17=13, i18=108, i19=4815, i20=6, i21=243, i22=-25916, i23=-103,
            i24=-6;
        boolean b1=true;

        for (i = 7; i < 361; ++i) {
            i1 -= i;
            iMeth(i, b1);
            Test.iArrFld[i][i] -= Test.iFld;
            Test.iFld %= (int)(i | 1);
        }
        Test.iFld -= -47011;
        for (i15 = 361; i15 > 11; --i15) {
            for (i17 = 1; i17 < 72; ++i17) {
                Test.iArrFld[i17 + 1][i17 + 1] = -25;
                Test.instanceCount += (((i17 * i16) + Test.iFld) - i);
                Test.iArrFld[i15][i15 + 1] >>= i;
                Test.iArrFld[i15 + 1][i17 + 1] = i15;
                Test.dFld = Test.instanceCount;
            }
            i16 += (-1 + (i15 * i15));
            Test.fFld = i18;
            Test.iArrFld[i15 - 1] = Test.iArrFld[i15];
            Test.iArrFld[i15] = Test.iArrFld[i15 + 1];
            i19 = 1;
            while (++i19 < 72) {
                Test.fFld += i15;
                Test.iArrFld[i15][i15 + 1] += (int)53.679F;
            }
        }
        Test.iArrFld[(i18 >>> 1) % N][(i >>> 1) % N] >>= (int)Test.instanceCount;
        i20 = 1;
        while (++i20 < 140) {
            for (i21 = 6; i21 < 179; i21++) {
                for (i23 = 1; i23 < 2; ++i23) {
                    i24 = i22;
                }
                Test.iFld = i16;
                lArrFld[i21 + 1] -= i22;
                Test.byFld = Test.byFld;
                i18 += i22;
                i22 += i;
            }
        }

        FuzzerUtils.out.println("i i1 b1 = " + i + "," + i1 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.dFld Test.iArrFld = " + Test.byFld + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
