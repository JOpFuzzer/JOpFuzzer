// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8176473055382443706L;
    public float fFld=-89.833F;
    public static int iFld=243;
    public static volatile float fFld1=0.803F;
    public short sFld=-30159;
    public static volatile long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3L);
        FuzzerUtils.init(Test.dArrFld, 24.21390);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, byte by) {

        int i6=-54963, i7=3, i8=-9, i9=204, i10=5, i11=-46299;
        boolean b=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.522F);

        d += Test.iFld;
        Test.instanceCount |= Test.iFld;
        for (i6 = 5; 134 > i6; i6++) {
            i7 += (46503 + (i6 * i6));
            for (i8 = 1; i8 < 12; ++i8) {
                if (Test.iFld != 0) {
                    vMeth_check_sum += Double.doubleToLongBits(d) + by + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                Test.lArrFld[i6 + 1] = i9;
                if (b) {
                    i7 -= 10;
                } else if (b) {
                    fArr[i8 - 1] -= (float)-1.80215;
                    for (i10 = 2; i10 > 1; i10 -= 2) {
                        Test.iFld = i10;
                        Test.iFld = i7;
                    }
                    Test.fFld1 -= i9;
                    Test.lArrFld[i6] += 11L;
                } else if (b) {
                    if (i9 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d) + by + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 :
                            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                } else {
                    i7 >>= 2;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + by + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static double dMeth() {

        double d1=15.119317;
        byte by1=-127;
        short s=20155;
        int i12=64365;

        vMeth(d1, by1);
        Test.iFld *= (int)Test.fFld1;
        Test.iFld >>>= s;
        Test.iFld |= i12;
        long meth_res = Double.doubleToLongBits(d1) + by1 + s + i12;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(float f, int i2, int i3) {

        int i4=-179, i5=-127, i13=-5, i14=-64, i15=10, i16=-156, i17=-3, i18=-8, i19=7;
        boolean b1=false;

        for (i4 = 10; 222 > i4; ++i4) {
            Test.instanceCount %= ((long)(dMeth()) | 1);
            i2 += i4;
            if (false) {
                for (i13 = 8; 1 < i13; --i13) {
                    double d2=1.14513;
                    d2 += i2;
                    i5 -= -5;
                    d2 -= -113.21459;
                    i5 -= (int)Test.instanceCount;
                    for (i15 = 1; i15 < 2; i15++) {
                        Test.instanceCount = i17;
                        if (b1) break;
                    }
                    for (i18 = 1; 2 > i18; ++i18) {
                        i3 |= i17;
                        i19 += (i18 * Test.instanceCount);
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i13 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0) + i18
            + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-56785, i1=45130, i20=-6, i21=1, i22=15721, i23=40, i24=-53489, i25=-21318, i26=-172, iArr[]=new int[N];
        boolean b2=false, b3=false;

        FuzzerUtils.init(iArr, -6);

        for (i = 185; 5 < i; i--) {
            fFld += (i + Test.instanceCount);
            iMeth(Test.fFld1, Test.iFld, -25334);
            i1 += (i * i);
            for (i20 = 139; i20 > 8; --i20) {
                if (b2) break;
                i21 -= (int)fFld;
                Test.iFld = i;
                Test.iFld <<= i20;
                Test.instanceCount += i22;
                i23 = 1;
                do {
                    i22 -= (int)Test.instanceCount;
                    Test.iFld *= (int)-41822L;
                    i21 = Test.iFld;
                    Test.iFld = i1;
                    i22 += i23;
                    i1 = 28;
                    i21 += (int)-4107860574L;
                    Test.iFld *= i23;
                } while (++i23 < 2);
                i21 = (int)-30004L;
                if (b3) {
                    if (b2) {
                        for (i24 = 2; 1 < i24; --i24) {
                            Test.iFld <<= (int)5L;
                            i1 = Test.iFld;
                            Test.dArrFld = Test.dArrFld;
                            Test.fFld1 += i24;
                            i22 = (int)2871432658686516448L;
                            Test.iFld -= i;
                            i22 *= -62;
                        }
                    } else if (b2) {
                        iArr[i] -= 48;
                    } else {
                        iArr[i] = i26;
                    }
                } else {
                    sFld |= (short)Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 b2 i22 = " + i21 + "," + (b2 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 b3 iArr = " + i26 + "," + (b3 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.fFld1 sFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld1) + "," + sFld + ","
            + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
