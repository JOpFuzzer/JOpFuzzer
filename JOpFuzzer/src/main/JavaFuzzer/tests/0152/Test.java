// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3931019388L;
    public static double dFld=2.90219;
    public static volatile float fFld=22.336F;
    public static volatile int iFld=12;
    public static boolean bFld=false;
    public static short sFld=18951;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3946802150773161915L);
        FuzzerUtils.init(Test.dArrFld, 2.111380);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth2(int i4, int i5, long l1) {

        int i6=-2392, i7=42402, i8=-94, i9=56938, i10=-3;
        long l2=-134L;
        short s=123;

        i5 = i5;
        for (i6 = 17; i6 < 345; ++i6) {
            for (i8 = 5; i8 > i6; i8--) {
                iArrFld[i8 + 1] |= i8;
                Test.dFld = i8;
                i4 -= i6;
                i7 = i8;
                iArrFld[i6 - 1] *= i4;
            }
            for (l2 = i6; l2 < 5; l2++) {
                boolean b=false;
                i7 += i6;
                iArrFld[(int)(l2)] <<= 102;
                if (b) {
                    s *= (short)l2;
                    vMeth2_check_sum += i4 + i5 + l1 + i6 + i7 + i8 + i9 + l2 + i10 + s;
                    return;
                }
                i7 += (int)Test.fFld;
                i7 <<= 1;
            }
        }
        vMeth2_check_sum += i4 + i5 + l1 + i6 + i7 + i8 + i9 + l2 + i10 + s;
    }

    public void vMeth1() {

        int i2=-165, i3=-188, i11=46847;
        boolean b1=true;

        for (i2 = 1; i2 < 167; ++i2) {
            i3 += (i2 * Test.instanceCount);
            Test.instanceCount = i3;
            try {
                iArrFld[i2 + 1] = (-1087159792 / i3);
                iArrFld[i2] = (i3 % i3);
                i3 = (251 / i3);
            } catch (ArithmeticException a_e) {}
        }
        vMeth2(i3, i3, 145L);
        Test.instanceCount &= Test.instanceCount;
        Test.fFld -= Test.fFld;
        i11 = 1;
        do {
            i3 = (int)Test.instanceCount;
            Test.instanceCount |= Test.instanceCount;
            Test.instanceCount += i3;
            Test.lArrFld[i11] = i11;
            b1 = b1;
        } while (++i11 < 391);
        vMeth1_check_sum += i2 + i3 + i11 + (b1 ? 1 : 0);
    }

    public void vMeth(int i, long l, int i1) {

        byte by=83;
        long l3=5768L;
        int i12=-227, i13=9, i14=-7227, i15=-45448, i16=3;
        boolean b2=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth1();
        i1 += by;
        iArrFld[(-43277 >>> 1) % N] -= i1;
        for (l3 = 6; l3 < 130; l3++) {
            for (i13 = 1; i13 < 13; i13++) {
                for (i15 = 1; i15 < 2; ++i15) {
                    bArr[i13 + 1] = b2;
                    switch ((i13 % 8) + 33) {
                    case 33:
                        i1 += (-951 + (i15 * i15));
                        if (Test.iFld != 0) {
                            vMeth_check_sum += i + l + i1 + by + l3 + i12 + i13 + i14 + i15 + i16 + (b2 ? 1 : 0) +
                                FuzzerUtils.checkSum(bArr);
                            return;
                        }
                        Test.dArrFld[(int)(l3 + 1)] = i12;
                        i14 *= (int)Test.instanceCount;
                        break;
                    case 34:
                        i14 += (i15 * i15);
                        break;
                    case 35:
                        by += (byte)i15;
                        break;
                    case 36:
                        l /= (i14 | 1);
                        break;
                    case 37:
                        i -= (int)Test.dFld;
                        break;
                    case 38:
                        Test.dFld = -62.496F;
                        break;
                    case 39:
                        iArrFld[(int)(l3)] = i13;
                        break;
                    case 40:
                        iArrFld[i15 + 1] += (int)Test.dFld;
                        break;
                    default:
                        Test.instanceCount += l;
                    }
                }
            }
        }
        vMeth_check_sum += i + l + i1 + by + l3 + i12 + i13 + i14 + i15 + i16 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=23123, i18=-178, i19=5, i20=35150, i21=-231, i22=-8, iArr[][]=new int[N][N];
        byte by1=-39;

        FuzzerUtils.init(iArr, 0);

        vMeth(Test.iFld, Test.instanceCount, Test.iFld);
        for (i17 = 2; 198 > i17; i17++) {
            for (i19 = 2; i19 < 128; ++i19) {
                Test.dFld += i19;
                iArr = iArr;
                for (i21 = 1; i21 < 2; i21++) {
                    iArr[i21 - 1][i19 - 1] -= (int)Test.dFld;
                    switch ((i21 % 2) + 122) {
                    case 122:
                        switch (((i21 % 5) * 5) + 65) {
                        case 74:
                            i18 += i21;
                            Test.instanceCount = Test.instanceCount;
                            i18 = Test.iFld;
                            break;
                        case 76:
                            iArr[i21 + 1][i17 + 1] *= (int)Test.fFld;
                            break;
                        case 87:
                            Test.instanceCount = i20;
                            Test.dFld *= 6L;
                            break;
                        case 73:
                            Test.iFld = (int)Test.instanceCount;
                            break;
                        case 83:
                            if (Test.bFld) {
                                Test.instanceCount += (-7 + (i21 * i21));
                                if (Test.bFld) {
                                    i20 = i19;
                                    i20 = i17;
                                    Test.instanceCount += (((i21 * Test.instanceCount) + Test.fFld) - i21);
                                    i18 += i21;
                                } else if (Test.bFld) {
                                    if (Test.bFld) continue;
                                    iArr[i17 + 1][i19] -= 219;
                                    Test.iFld *= i17;
                                    Test.instanceCount <<= i22;
                                } else if (false) {
                                    i18 += (((i21 * i19) + Test.iFld) - Test.sFld);
                                }
                                Test.iFld += (i21 - i18);
                                i18 += (i21 * i21);
                            } else if (true) {
                                Test.iFld -= by1;
                            } else if (Test.bFld) {
                                i18 += (((i21 * i21) + i19) - Test.instanceCount);
                            } else {
                                Test.instanceCount *= i17;
                            }
                            break;
                        }
                        break;
                    case 123:
                        i22 = (int)Test.fFld;
                        break;
                    default:
                        Test.instanceCount = 81;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by1 iArr = " + by1 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.bFld Test.sFld = " + Test.iFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.sFld);
        FuzzerUtils.out.println("iArrFld Test.lArrFld Test.dArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
