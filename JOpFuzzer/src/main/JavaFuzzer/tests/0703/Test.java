// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=8252L;
    public static double dFld=-62.20773;
    public static float fFld=0.468F;
    public static byte byFld=9;
    public int iArrFld[]=new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by1, long l1) {

        int i3=12, i4=-19967, i5=-8, i6=26, i7=7935, i8=-19082, i9=94, i10=-14;
        float f2=0.982F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i3 = 9; i3 < 241; i3++) {
            for (i5 = 7; i5 > 1; i5 -= 3) {
                for (i7 = 1; i7 < 4; i7++) {
                    if (i5 != 0) {
                        vMeth1_check_sum += by1 + l1 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i9 +
                            i10 + FuzzerUtils.checkSum(bArr);
                        return;
                    }
                    i6 = (int)Test.instanceCount;
                    Test.instanceCount <<= 16397;
                    i4 += (i7 * i7);
                }
                i4 += (int)f2;
                for (i9 = 4; i5 < i9; i9 -= 2) {
                    Test.dFld *= i8;
                    i8 = i5;
                    i4 += (i9 * i9);
                }
                i8 *= (int)Test.instanceCount;
                bArr[i5 - 1] = false;
            }
            i4 -= i4;
        }
        vMeth1_check_sum += by1 + l1 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(float f, long l, float f1) {

        int i2=240;
        byte by2=102;

        i2 = (int)(i2 * ((Test.instanceCount - i2) - (-(f + Test.dFld))));
        vMeth1(by2, l);
        Test.instanceCount <<= -64206;
        vMeth_check_sum += Float.floatToIntBits(f) + l + Float.floatToIntBits(f1) + i2 + by2;
    }

    public long lMeth(double d, byte by, int i1) {

        int i11=-12207, i12=5, i13=58, i14=-267;
        long l2=34L;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 118.833F);

        vMeth(Test.fFld, Test.instanceCount, Test.fFld);
        for (float f3 : fArr) {
            switch (((i1 >>> 1) % 8) + 44) {
            case 44:
                Test.fFld -= i1;
                i11 = 1;
                while (++i11 < 4) {
                    i1 -= by;
                    for (i12 = 1; i12 < 1; ++i12) {
                        i13 -= i13;
                        iArrFld[i11] -= -4;
                        i1 >>= (int)3L;
                    }
                }
            case 45:
                Test.fFld -= (float)d;
                for (l2 = 1; l2 < 4; ++l2) {
                    i1 = -7;
                    f3 -= i12;
                    Test.instanceCount += i1;
                }
                break;
            case 46:
            case 47:
            case 48:
                Test.instanceCount -= by;
                break;
            case 49:
                Test.dFld -= l2;
                break;
            case 50:
                Test.instanceCount = i1;
            case 51:
                iArrFld[(i13 >>> 1) % N] = -60923;
                break;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + by + i1 + i11 + i12 + i13 + l2 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i15=9264, i16=-11, i17=57251, i18=-158, i19=-6, i20=3, i21=166, i22=-20930, i23=201, i24=-9;
        long l3=-8056887762383227220L, lArr[]=new long[N];
        short s=-5974;

        FuzzerUtils.init(lArr, 2302575393L);

        i = 1;
        do {
            byte by3=-77;
            lMeth(Test.dFld, by3, i);
        } while ((i += 3) < 290);
        for (i15 = 370; i15 > 5; i15 -= 3) {
            i16 += (i15 * i15);
            Test.fFld += -89;
            for (i17 = 7; i17 < 207; ++i17) {
                for (i19 = i15; i19 < 2; i19++) {
                    Test.instanceCount /= (i15 | 1);
                    iArrFld[i15] = i18;
                    Test.instanceCount %= (Test.instanceCount | 1);
                    lArr[i19] = Test.instanceCount;
                    i20 ^= (int)l3;
                    s |= (short)i19;
                    switch ((i19 % 1) * 5) {
                    case 2:
                        i16 = (int)Test.instanceCount;
                        break;
                    }
                    i20 += i19;
                }
                for (i21 = 1; i21 < 2; ++i21) {
                    l3 += i21;
                }
                i22 = (int)-7572804207539362671L;
                for (i23 = 1; i23 < 2; ++i23) {
                    s = (short)i21;
                    Test.fFld = 30339;
                    i20 = i19;
                    i22 = i22;
                    try {
                        i24 = (23706 / i21);
                        i18 = (i17 / -240);
                        i20 = (-60701 % iArrFld[i15]);
                    } catch (ArithmeticException a_e) {}
                    s <<= (short)i23;
                    i16 &= 7;
                    Test.instanceCount &= i;
                    Test.byFld += (byte)(-6 + (i23 * i23));
                }
                i16 |= i20;
            }
        }

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 l3 s = " + i20 + "," + l3 + "," + s);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 lArr = " + i24 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld iArrFld = " + Test.byFld + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
