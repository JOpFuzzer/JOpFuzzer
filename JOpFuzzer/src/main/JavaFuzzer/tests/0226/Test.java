// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7444896455975445269L;
    public static int iFld=59644;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i1, int i2) {

        double d=-36.80840;
        int i3=57627, i4=-33302, i5=-65077, i6=59, i7=8, i8=-6439, i9=5, i10=-16036, iArr[][]=new int[N][N];
        float f=-127.603F;

        FuzzerUtils.init(iArr, 160);

        i2 = (int)l;
        i1 -= (int)d;
        for (i3 = 5; 302 > i3; i3++) {
            for (i5 = 1; i5 < 6; ++i5) {
                i1 &= (int)Test.instanceCount;
                i6 += (((i5 * i3) + i6) - l);
            }
            for (i7 = 1; i7 < 6; i7++) {
                i4 >>= i1;
                for (i9 = i7; i9 < 2; ++i9) {
                    switch ((i3 % 6) + 104) {
                    case 104:
                        iArr[i9] = iArr[i9];
                        iArr[i7 + 1][i3] = i3;
                        i10 += (i9 * i9);
                        i1 %= -7;
                        break;
                    case 105:
                        i8 %= (int)(i2 | 1);
                        break;
                    case 106:
                        iArr[i3][i3 + 1] -= i8;
                        break;
                    case 107:
                        i1 >>= i10;
                    case 108:
                        i10 -= i7;
                        break;
                    case 109:
                        f = i3;
                    default:
                        i1 >>= i7;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i1 + i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        int i11=-13, i12=13117, i13=173, i14=163, i15=-44536, i16=-17246;
        double d1=111.27319;
        float f1=1.554F, f2=53.540F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.528F);

        vMeth1(Test.instanceCount, -54, i);
        i = (int)Test.instanceCount;
        for (i11 = 6; i11 < 265; ++i11) {
            i12 <<= (int)Test.instanceCount;
            d1 = i11;
            for (i13 = 1; i13 < 6; ++i13) {
                i = i11;
                f1 += i13;
                i15 = 1;
                do {
                    i14 += i13;
                    i14 = (int)Test.instanceCount;
                } while (++i15 < 2);
                for (f2 = 2; f2 > 1; f2 -= 3) {
                    i12 += i12;
                    if (i15 != 0) {
                        vMeth_check_sum += i + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
                            Float.floatToIntBits(f1) + i15 + Float.floatToIntBits(f2) + i16 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                    fArr[i11] -= -91;
                }
            }
        }
        vMeth_check_sum += i + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 + Float.floatToIntBits(f1) + i15 +
            Float.floatToIntBits(f2) + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth() {


        vMeth(Test.iFld);
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        double d2=57.107573;
        float f3=0.97F;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -8);

        for (int smallinvoc=0; smallinvoc<254; smallinvoc++) vSmallMeth();
        iArr1[(Test.iFld >>> 1) % N] += Test.iFld;
        Test.instanceCount += Test.iFld;
        Test.instanceCount += (long)d2;
        Test.iFld = (int)f3;
        Test.instanceCount = (long)-120.881F;
        iArr1[(Test.iFld >>> 1) % N] = Test.iFld;

        FuzzerUtils.out.println("d2 f3 iArr1 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f3) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld = " + Test.instanceCount + "," + Test.iFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
