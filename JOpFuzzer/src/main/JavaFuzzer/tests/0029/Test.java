// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3485870421L;
    public static float fFld=2.925F;
    public static byte byFld=69;
    public static short sFld=17267;
    public boolean bArrFld[][]=new boolean[N][N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i9=253;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.888F);

        fArr[(i9 >>> 1) % N] += i9;
        i9 -= i9;
        i9 += (int)Test.fFld;
        long meth_res = i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5, long l1, int i6) {

        int i7=-86, i8=2, i10=-47, i11=41230, iArr[]=new int[N];
        double d2=23.43637;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 25647L);
        FuzzerUtils.init(iArr, -21447);

        for (long l2 : lArr1) {
            if (b) {
                for (i7 = 4; i7 > 1; --i7) {
                    iArr[i7 - 1] = (i5 = iMeth());
                    i8 = i8;
                    i5 += (i7 + l2);
                    for (i10 = 1; i10 < 2; i10++) {
                        Test.fFld -= l2;
                        i6 += (i10 + Test.instanceCount);
                        iArr[i10] %= (int)-106.305F;
                        i5 += (int)l2;
                        i11 += (((i10 * i5) + i5) - Test.fFld);
                        i6 = i8;
                        d2 -= Test.fFld;
                        l1 += (((i10 * i6) + Test.fFld) - i7);
                    }
                }
            } else if (b) {
                l2 = l2;
            } else if (b) {
                l2 *= i6;
            } else {
                l2 += i5;
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i10 + i11 + Double.doubleToLongBits(d2) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d1, int i3, int i4) {

        int i12=216, i13=54912, i14=-39444, i15=4;
        long lArr[]=new long[N];
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(lArr, 2144749220474797725L);
        FuzzerUtils.init(fArr1, -2.839F);

        i3 |= (int)(i3 -= (int)((i4 + 13L) * i4));
        lArr[(i4 >>> 1) % N] += (--i3);
        for (long l : lArr) {
            l = lMeth(i4, l, i3);
            i4 = Test.byFld;
            i3 = (int)Test.fFld;
        }
        for (i12 = 127; 7 < i12; --i12) {
            i13 += (int)Test.fFld;
        }
        Test.fFld = Test.instanceCount;
        Test.instanceCount |= i3;
        i3 += (int)Test.fFld;
        fArr1[(i13 >>> 1) % N][(i3 >>> 1) % N] -= 0L;
        for (i14 = 12; i14 < 227; ++i14) {
            i15 = i12;
            i4 += i14;
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i3 + i4 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=12, i2=232, i16=0, iArr1[]=new int[N];
        double d=-2.98365;
        long l3=-43L;
        boolean b1=true;

        FuzzerUtils.init(iArr1, 10009);

        for (i = 4; 340 > i; i++) {
            for (d = 1; d < 75; d++) {
                vMeth(d, i, i1);
                Test.sFld = Test.sFld;
                iArr1 = iArr1;
                Test.instanceCount += (long)(((d * i) + Test.instanceCount) - Test.instanceCount);
                for (l3 = 1; l3 < 2; l3++) {
                    if (true) {
                        switch ((((i2 >>> 1) % 7) * 5) + 113) {
                        case 148:
                            i16 = (int)Test.instanceCount;
                            i2 >>= i16;
                            break;
                        case 140:
                            i1 = (int)Test.fFld;
                            if (b1) continue;
                            break;
                        case 147:
                            i2 = i2;
                            if (b1) continue;
                            Test.instanceCount -= Test.byFld;
                            Test.instanceCount += i1;
                            break;
                        case 128:
                            i1 = (int)l3;
                            if (b1) break;
                            break;
                        case 116:
                            i16 = Test.sFld;
                            i1 = i;
                            i2 = -22403;
                            i1 = (int)l3;
                            break;
                        case 119:
                            iArr1[(int)(d - 1)] -= -64502;
                            bArrFld[i][i + 1] = b1;
                            switch ((int)((l3 % 9) + 71)) {
                            case 71:
                                if (b1) break;
                            case 72:
                                if (b1) break;
                                i2 ^= i;
                                Test.instanceCount += (((l3 * i16) + i1) - i16);
                            case 73:
                                b1 = b1;
                                break;
                            case 74:
                                Test.instanceCount <<= 125;
                                break;
                            case 75:
                                iArr1[(int)(l3 - 1)] = (int)Test.instanceCount;
                            case 76:
                                Test.instanceCount = i16;
                            case 77:
                                i2 = (int)d;
                                break;
                            case 78:
                                i2 -= (int)-10L;
                                break;
                            case 79:
                                i1 = (int)Test.fFld;
                                break;
                            }
                        case 123:
                            i16 >>= i;
                        default:
                            b1 = b1;
                        }
                    } else {
                        i1 += (int)l3;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 l3 i16 = " + i2 + "," + l3 + "," + i16);
        FuzzerUtils.out.println("b1 iArr1 = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld bArrFld = " + Test.sFld + "," + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
