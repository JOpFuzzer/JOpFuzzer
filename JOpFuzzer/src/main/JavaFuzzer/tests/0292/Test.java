// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static float fFld=1.847F;
    public float fFld1=2.771F;
    public static int iFld=-48;
    public double dFld=-49.51228;
    public static boolean bFld=true;
    public static int iArrFld[][]=new int[N][N];
    public float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -27944);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, short s) {

        int i9=-24097, i10=-12725, i11=10, i12=-53222;
        double d1=-2.34911, d2=1.11352;
        boolean b1=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.72F);

        i8 ^= -21340;
        Test.instanceCount = (long)Test.fFld;
        switch (((i8 >>> 1) % 4) + 46) {
        case 46:
            Test.instanceCount += -233;
            i8 <<= i8;
        case 47:
            fArr[(-171 >>> 1) % N] = -422;
            if (b1) {
                for (i9 = 8; i9 < 164; ++i9) {
                    d1 *= Test.fFld;
                    for (d2 = 1; d2 < 10; d2++) {
                        i12 = 1;
                        while (++i12 < 2) {
                            boolean b=false;
                            if (b) break;
                            Test.instanceCount += (i12 * i12);
                            try {
                                i11 = (-637677416 / i10);
                                i10 = (13191 / i10);
                                i8 = (-63799 % i8);
                            } catch (ArithmeticException a_e) {}
                            Test.fFld = i9;
                        }
                    }
                }
            }
            break;
        case 48:
            Test.instanceCount >>= 241L;
            break;
        case 49:
            Test.instanceCount = i9;
        }
        vMeth1_check_sum += i8 + s + i9 + i10 + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i11 + i12 +
            (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(double d) {

        int i7=0, i13=4, i14=135, i15=-3;
        short s1=-3990;
        byte by=-6;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -19.22410);

        i7 -= (int)Test.instanceCount;
        vMeth1(i7, s1);
        i7 >>= s1;
        try {
            Test.instanceCount = i7;
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test.fFld -= i7;
            dArr[(i7 >>> 1) % N] -= Test.fFld;
            Test.iArrFld[(i7 >>> 1) % N][(-232 >>> 1) % N] -= i7;
        }
        finally {
            Test.instanceCount *= i7;
        }
        for (i13 = 9; 170 > i13; ++i13) {
            i15 = 1;
            while (++i15 < 10) {
                by += (byte)(2.692F + (i15 * i15));
                by -= (byte)Test.instanceCount;
                Test.instanceCount += (i15 * i15);
                Test.iArrFld[i15 - 1] = Test.iArrFld[i13];
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i7 + s1 + i13 + i14 + i15 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public int iMeth(int i6, long l, long l1) {

        double d3=2.113303;
        int i16=-22033, i17=-88, i18=60557, i19=14, i20=-237, i21=3;
        short s2=28999;
        byte by1=-118;

        vMeth(d3);
        for (i16 = 201; i16 > 3; i16 -= 3) {
            for (i18 = 1; i18 < 23; i18++) {
                for (i20 = i16; i20 < 2; ++i20) {
                    fFld1 = -27514;
                    i21 = i18;
                    i21 <<= i16;
                    i17 *= -6;
                    Test.fFld += (((i20 * i21) + i20) - Test.instanceCount);
                    s2 >>>= (short)i6;
                }
                i21 += i16;
                i17 += (i18 - i21);
            }
            by1 <<= (byte)i16;
            i6 += (((i16 * i6) + i18) - i21);
            i17 += i16;
        }
        long meth_res = i6 + l + l1 + Double.doubleToLongBits(d3) + i16 + i17 + i18 + i19 + i20 + i21 + s2 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i1=-21258, i2=-216, i3=7878, i4=13, i5=37971, i22=48321, i23=177, i24=-21291, i25=-16664, i26=18878;
        byte by2=-16;
        long l2=-2479096274L;

        for (i1 = 15; i1 < 343; ++i1) {
            for (i3 = 77; 3 < i3; i3--) {
                i5 = 1;
                while (++i5 < 2) {
                    i4 = iMeth(Test.iFld, Test.instanceCount, -4006303112L);
                    i2 = i5;
                }
                i4 = by2;
                for (l2 = 1; l2 < 2; l2++) {
                    i4 += 3;
                    i2 -= Test.iFld;
                    i4 = Test.iFld;
                    Test.iFld -= i22;
                    Test.instanceCount -= (long)dFld;
                    Test.iFld -= Test.iFld;
                    i22 = i4;
                    Test.instanceCount >>= i2;
                    Test.bFld = Test.bFld;
                    fArrFld[i1][(i1 >>> 1) % N] += i2;
                }
                i22 = Test.iFld;
            }
            switch ((i1 % 2) + 127) {
            case 127:
                i4 >>= by2;
                break;
            case 128:
            }
            for (i23 = 2; i23 < 77; i23++) {
                Test.instanceCount <<= 5;
                for (i25 = i1; i25 < 2; i25++) {
                    Test.instanceCount >>= 116;
                    if (Test.bFld) break;
                    Test.instanceCount += (-4055173168L + (i25 * i25));
                    i2 -= i3;
                    i22 = (int)Test.instanceCount;
                }
                i24 *= i5;
                i4 -= i4;
            }
        }

        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 i5 by2 = " + i4 + "," + i5 + "," + by2);
        FuzzerUtils.out.println("l2 i22 i23 = " + l2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld fFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Float.floatToIntBits(fFld1));
        FuzzerUtils.out.println("Test.iFld dFld Test.bFld = " + Test.iFld + "," + Double.doubleToLongBits(dFld) + "," +
            (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
