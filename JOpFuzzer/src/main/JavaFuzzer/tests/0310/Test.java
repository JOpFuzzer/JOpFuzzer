// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1598995307129031931L;
    public float fFld=0.18F;
    public short sFld=-30648;
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -654319492793520916L);
        FuzzerUtils.init(Test.byArrFld, (byte)-12);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        int i9=-36795, i10=29898, i11=2674, i12=29062, iArr[][]=new int[N][N];
        double d1=0.52036;
        float f1=-87.211F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -43287);
        FuzzerUtils.init(lArr2, -119L);

        i9 = 1;
        while (++i9 < 257) {
            for (d1 = 1; 6 > d1; ++d1) {
                boolean b=true;
                i10 = i7;
                i7 = i9;
                iArr[(int)(d1)][(int)(d1 - 1)] -= i10;
                iArr[(int)(d1 + 1)][(int)(d1)] *= 2;
                for (i11 = 1; i11 < 2; i11++) {
                    Test.instanceCount = -7L;
                }
                Test.instanceCount <<= -78;
                if (i11 != 0) {
                    vMeth1_check_sum += i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 +
                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
                    return;
                }
                if (b) {
                    i7 = i7;
                    i12 += (int)(((d1 * i12) + i8) - i10);
                    i12 = (int)d1;
                } else if (false) {
                    i10 += i7;
                } else if (b) {
                    f1 *= i8;
                    vMeth1_check_sum += i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 +
                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
                    return;
                } else {
                    lArr2[(int)(d1)] = i12;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
    }

    public static long lMeth(int i4, int i5, int i6) {

        int i13=10139, i14=-22673, i15=1825, i16=-4, i17=-106, i18=-47, iArr1[]=new int[N];
        short s=-12871;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -2951818924L);
        FuzzerUtils.init(iArr1, 229);

        lArr1[(0 >>> 1) % N][(i4 >>> 1) % N] >>>= (i5--);
        vMeth1(9, i5);
        i6 = i5;
        for (i13 = 20; i13 < 329; ++i13) {
            switch (((i13 % 1) * 5) + 106) {
            case 107:
                for (i15 = 1; i15 < 5; i15++) {
                    Test.instanceCount += i15;
                }
                iArr1 = iArr1;
                for (i17 = 1; i17 < 5; ++i17) {
                    Test.instanceCount += i17;
                    i6 = i14;
                    iArr1[i17] += i16;
                    i18 += (((i17 * i5) + i13) - i5);
                }
                break;
            }
            i18 += s;
            i16 *= i4;
        }
        long meth_res = i4 + i5 + i6 + i13 + i14 + i15 + i16 + i17 + i18 + s + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f, double d, int i1) {

        int i2=-11, i3=5493, i19=0, i20=21961, iArr2[]=new int[N];
        byte by=118;
        boolean b1=false;
        short s1=1180;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, -52.123371);
        FuzzerUtils.init(iArr2, -6);

        for (i2 = 325; i2 > 5; i2--) {
            dArr[i2][i2 + 1] -= lMeth(3, i1, i2);
            if (b1) {
                by += (byte)Test.instanceCount;
            } else {
                i3 = i1;
                for (i19 = 1; i19 < 5; i19++) {
                    i3 = (int)f;
                    Test.instanceCount += (i19 - i3);
                    i20 = (int)d;
                    Test.instanceCount = Test.instanceCount;
                    try {
                        i1 = (i19 / i2);
                        i20 = (95 % iArr2[i19]);
                        i3 = (i19 / iArr2[i19 - 1]);
                    } catch (ArithmeticException a_e) {}
                }
                Test.lArrFld[i2] = i3;
            }
            Test.instanceCount %= (i19 | 1);
            i3 = s1;
            iArr2[i2 + 1] += i3;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i1 + i2 + i3 + by + (b1 ? 1 : 0) +
            i19 + i20 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=54909, i21=10, i22=-18169, i23=-15, i24=-53, i25=-3, i26=63754, i27=216, i28=9;
        double d2=-1.8059;
        float f2=-74.805F, fArr[]=new float[N], fArr1[]=new float[N];
        byte by1=-98;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6L);
        FuzzerUtils.init(fArr, 3.58F);
        FuzzerUtils.init(fArr1, 104.537F);

        i = (int)((lArr[(i >>> 1) % N] -= (i / -12)) - ((1.807F + fArr[(i >>> 1) % N]) + (i * -107.9F)));
        vMeth(fFld, d2, 6);
        i >>>= i;
        for (i21 = 16; i21 < 266; i21++) {
            fFld += -116;
            Test.instanceCount += Test.instanceCount;
            for (f2 = 1; 101 > f2; f2 += 2) {
                by1 <<= (byte)i24;
                Test.byArrFld[(int)(f2 + 1)] = by1;
                i = i24;
                for (i25 = i21; 3 > i25; ++i25) {
                    i26 += (i25 * i25);
                    i24 = sFld;
                    try {
                        i = (410016542 / i22);
                        i26 = (-41048 / i24);
                        i27 = (-34025 % i26);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount -= i25;
                    switch ((i21 * 5) + 71) {
                    case 231:
                        fFld += i25;
                        break;
                    case 263:
                    case 97:
                        Test.instanceCount += (i25 * i25);
                        i27 = (int)Test.instanceCount;
                        i27 <<= 20319;
                        break;
                    case 100:
                        fFld += i25;
                        break;
                    case 185:
                        fArr[(int)(f2 + 1)] += i21;
                        i23 <<= -158;
                    case 387:
                        i -= (int)fFld;
                        d2 = by1;
                        d2 *= 7;
                        break;
                    case 276:
                        Test.byArrFld[i25] = (byte)d2;
                        d2 = i27;
                    case 219:
                        i23 *= i26;
                        if (b2) continue;
                        break;
                    case 136:
                    case 107:
                        i24 = (int)-3409878014L;
                        break;
                    case 400:
                        i24 *= (int)Test.instanceCount;
                        break;
                    case 361:
                        d2 += -91;
                    case 340:
                        b2 = b2;
                        break;
                    case 301:
                        i26 -= i21;
                    case 115:
                        i27 -= i;
                        break;
                    case 242:
                        i23 += (i25 * i22);
                    case 159:
                        i26 += i25;
                    case 79:
                        i26 += i26;
                        break;
                    case 354:
                    case 158:
                        Test.instanceCount += (-47 + (i25 * i25));
                    case 249:
                        by1 *= (byte)d2;
                        break;
                    case 264:
                        i23 = (int)Test.instanceCount;
                    case 405:
                        fFld += (((i25 * i21) + i) - i22);
                        break;
                    case 190:
                        i27 = (int)Test.instanceCount;
                        break;
                    case 243:
                        i22 += i24;
                    case 176:
                        i -= i23;
                        break;
                    case 108:
                        Test.instanceCount = i23;
                        break;
                    case 192:
                        d2 = 9;
                        break;
                    case 122:
                    case 208:
                        i >>= i25;
                        break;
                    case 210:
                        i28 += (i25 * i25);
                        break;
                    case 228:
                        lArr[i25 + 1] = 5129;
                        break;
                    case 240:
                        by1 = (byte)i27;
                    case 335:
                        i28 >>= (int)Test.instanceCount;
                        break;
                    case 84:
                        Test.instanceCount += i24;
                        break;
                    case 385:
                        i22 -= i23;
                        break;
                    case 130:
                        iArrFld[i21 - 1] = (int)Test.instanceCount;
                        break;
                    case 287:
                        Test.lArrFld[i25] -= by1;
                        break;
                    case 173:
                        i24 += (i25 * i25);
                    case 74:
                        iArrFld[(int)(f2 + 1)] >>= i23;
                        break;
                    case 320:
                        Test.instanceCount += (i25 * i25);
                        break;
                    case 166:
                        fFld = f2;
                        break;
                    case 386:
                        Test.instanceCount = -181;
                        break;
                    case 372:
                        Test.instanceCount += i21;
                    case 397:
                        i28 -= i;
                        break;
                    case 155:
                    case 344:
                        i24 += (((i25 * Test.instanceCount) + Test.instanceCount) - i26);
                        break;
                    case 352:
                        by1 += (byte)(i25 * i22);
                        break;
                    case 399:
                        i22 = i21;
                        break;
                    case 205:
                        iArrFld[i25] = (int)Test.instanceCount;
                    case 260:
                        i24 >>>= (int)Test.instanceCount;
                        break;
                    case 124:
                    case 393:
                        Test.instanceCount += i26;
                        break;
                    case 280:
                        i26 -= i27;
                        break;
                    case 143:
                        iArrFld[(int)(f2 + 1)] = sFld;
                        break;
                    case 415:
                        Test.instanceCount *= i21;
                    case 262:
                        Test.instanceCount -= Test.instanceCount;
                        break;
                    case 148:
                        i27 += (((i25 * i22) + i22) - fFld);
                        break;
                    case 390:
                        b2 = b2;
                        break;
                    case 246:
                        if (b2) continue;
                        break;
                    case 184:
                        fArr1[(int)(f2 - 1)] *= fFld;
                        break;
                    case 235:
                        try {
                            i23 = (i26 % 87);
                            i28 = (119390674 / i26);
                            iArrFld[i21] = (i28 / i24);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 174:
                        iArrFld[i21 - 1] = i27;
                        break;
                    case 315:
                        Test.lArrFld = Test.lArrFld;
                    case 203:
                        by1 += (byte)Test.instanceCount;
                    case 417:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 78:
                        Test.instanceCount = i28;
                        break;
                    case 371:
                    case 409:
                        by1 -= (byte)i21;
                        break;
                    case 255:
                        by1 = (byte)i;
                        break;
                    default:
                        i28 = (int)Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i d2 i21 = " + i + "," + Double.doubleToLongBits(d2) + "," + i21);
        FuzzerUtils.out.println("i22 f2 i23 = " + i22 + "," + Float.floatToIntBits(f2) + "," + i23);
        FuzzerUtils.out.println("by1 i24 i25 = " + by1 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 b2 = " + i26 + "," + i27 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i28 lArr fArr = " + i28 + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount fFld sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + sFld);
        FuzzerUtils.out.println("Test.lArrFld Test.byArrFld iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
