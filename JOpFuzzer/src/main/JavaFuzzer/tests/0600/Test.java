// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2593296303220237926L;
    public static int iFld=-41421;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];
    public static byte byArrFld[]=new byte[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12236);
        FuzzerUtils.init(Test.lArrFld, 951993904866761115L);
        FuzzerUtils.init(Test.byArrFld, (byte)38);
        FuzzerUtils.init(Test.fArrFld, 1.773F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1, int i2, float f1) {

        short s=-20474;
        int i3=-55698, i4=-165, i5=-13, i6=-8, i7=-38575, i8=-132;
        long l3=7489115462782384944L, lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 23120L);
        FuzzerUtils.init(dArr, 31.95875);

        s *= (short)f1;
        i3 = 1;
        while (++i3 < 302) {
            Test.iArrFld[i3 + 1] <<= (int)Test.instanceCount;
        }
        for (l3 = 4; l3 < 216; ++l3) {
            for (i5 = 1; 8 > i5; ++i5) {
                double d=-123.52005;
                s *= s;
                lArr[i5] = i6;
                i4 = i5;
                Test.iArrFld[i5 + 1] += (int)d;
                dArr[(int)(l3)] += -34118L;
            }
            i4 ^= i1;
            i2 += i5;
            for (i7 = 8; i7 > 1; --i7) {
                double d1=-49.104167;
                d1 = Test.instanceCount;
                Test.instanceCount = s;
            }
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f1) + s + i3 + l3 + i4 + i5 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(boolean b, long l1, long l2) {

        float f2=-39.888F;
        int i9=-14954, i10=8382, i11=-4, i12=-121, i14=-5;
        double d2=42.84367;

        vMeth1(Test.iFld, Test.iFld, f2);
        for (i9 = 14; i9 < 298; i9++) {
            long l4=-19918L;
            switch ((i9 % 5) + 18) {
            case 18:
                for (i11 = 1; 6 > i11; ++i11) {
                    i10 += (i11 - i11);
                }
                i14 = 6;
                do {
                    Test.lArrFld = Test.lArrFld;
                    d2 %= (i12 | 1);
                    Test.byArrFld[i14] = (byte)d2;
                    l1 = i12;
                    try {
                        Test.iFld = (i12 % 248);
                        Test.iArrFld[i9 + 1] = (1173392930 / i12);
                        Test.iFld = (Test.iArrFld[i14] % -61);
                    } catch (ArithmeticException a_e) {}
                    l1 -= 25291;
                    Test.iArrFld[i9] = i12;
                    Test.lArrFld[i9][i14] -= i9;
                    d2 = l2;
                } while (--i14 > 0);
                break;
            case 19:
                i10 = i9;
                break;
            case 20:
                l4 &= i12;
                break;
            case 21:
                Test.lArrFld[i9 - 1][i9 + 1] = Test.instanceCount;
                break;
            case 22:
                Test.fArrFld[i9 + 1] -= i14;
                break;
            }
        }
        long meth_res = (b ? 1 : 0) + l1 + l2 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + i14 +
            Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, float f, long l) {

        boolean b1=true;

        Test.instanceCount += Math.min(iMeth(b1, 156L, 160L) * i, i);
        vMeth_check_sum += i + Float.floatToIntBits(f) + l + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f3=7.350F;

        vMeth(-23982, f3, Test.instanceCount);

        FuzzerUtils.out.println("f3 = " + Float.floatToIntBits(f3));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iArrFld = " + Test.instanceCount + "," + Test.iFld +
            "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld Test.byArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + ","
            + FuzzerUtils.checkSum(Test.byArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
