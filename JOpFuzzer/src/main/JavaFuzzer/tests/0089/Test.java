// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public short sFld=22596;
    public static double dFld=-2.18239;
    public static float fFld=-1.936F;
    public static int iFld=-230;
    public static byte byFld=-87;
    public static int iFld1=7;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-11776);
    }

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        long l2=47L;
        int i15=3, i16=-25002, i17=137, i18=-14, i19=-16222, iArr2[]=new int[N];
        byte by1=-6;

        FuzzerUtils.init(iArr2, -11);

        Test.dFld = -2315925382173875174L;
        iArr2[(Test.iFld >>> 1) % N] = Test.iFld;
        for (l2 = 7; l2 < 237; l2++) {
            try {
                Test.iFld = (iArr2[(int)(l2 - 1)] % -105);
                i15 = (i15 / Test.iFld);
                iArr2[(int)(l2 - 1)] = (Test.iFld / 89);
            } catch (ArithmeticException a_e) {}
            for (i16 = 1; i16 < 7; i16++) {
                boolean b1=true;
                Test.instanceCount += (i16 | by1);
                i17 += (((i16 * i15) + l2) - i15);
                Test.instanceCount = i16;
                if (b1) break;
                Test.instanceCount -= i15;
                Test.iFld = i15;
                for (i18 = (int)(l2); i18 < 2; i18++) {
                    Test.instanceCount *= by1;
                    i17 += i18;
                    Test.dFld = Test.fFld;
                }
            }
        }
        vMeth1_check_sum += l2 + i15 + i16 + i17 + by1 + i18 + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(byte by, float f) {

        short s1=29404;
        int i20=-3, i21=-2, iArr1[]=new int[N];
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 42056);
        FuzzerUtils.init(lArr, 4190252211L);

        s1 += (short)Integer.reverseBytes(++Test.iFld);
        iArr1[(Test.iFld >>> 1) % N] += (int)((Test.instanceCount--) + (++Test.iFld));
        Test.iFld = (int)Test.instanceCount;
        vMeth1();
        Test.iFld = (int)Test.instanceCount;
        iArr1[(Test.iFld >>> 1) % N] *= Test.iFld;
        if (b2) {
            iArr1[(Test.iFld >>> 1) % N] <<= Test.iFld;
            for (i20 = 10; i20 < 255; i20 += 2) {
                if (i20 != 0) {
                    vMeth_check_sum += by + Float.floatToIntBits(f) + s1 + i20 + i21 + (b2 ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
                    return;
                }
                try {
                    iArr1[i20] = (Test.iFld % -48584);
                    Test.iFld = (0 / Test.iFld);
                    Test.iFld = (iArr1[i20 - 1] % Test.iFld);
                } catch (ArithmeticException a_e) {}
                lArr[i20] = -4;
                iArr1[i20] *= (int)Test.instanceCount;
                i21 -= Test.iFld;
                iArr1[i20] -= Test.iFld;
            }
        } else if (b2) {
            i21 = Test.iFld;
        } else {
            i21 >>>= (int)Test.instanceCount;
        }
        vMeth_check_sum += by + Float.floatToIntBits(f) + s1 + i20 + i21 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static short sMeth(long l1, int i7, int i8) {

        int i9=1, i10=10, i11=-37962, i12=-54323, i13=-149, i14=-125, iArr3[]=new int[N];
        boolean b=false, b3=false;
        short s=-15241;
        byte by2=87, byArr[]=new byte[N];
        double dArr[]=new double[N], dArr1[][]=new double[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 90.39920);
        FuzzerUtils.init(dArr1, 0.19486);
        FuzzerUtils.init(iArr3, 0);
        FuzzerUtils.init(byArr, (byte)-76);
        FuzzerUtils.init(lArr1, 1968629462L);

        for (i9 = 4; 317 > i9; ++i9) {
            Test.instanceCount += (((i9 * i9) + i8) - i7);
            if ((b = ((Test.dFld + Test.instanceCount) != (Test.instanceCount + i9))) || (!(dArr[(i8 >>> 1) % N] !=
                49401))) break;
            for (i11 = 1; 5 > i11; i11++) {
                switch ((i11 % 6) + 20) {
                case 20:
                    switch ((i11 % 4) + 63) {
                    case 63:
                        Test.fFld *= (float)((i10 - dArr1[i9 + 1][i11]) - ((i7 + s) * (i7--)));
                        switch ((i9 % 4) + 120) {
                        case 120:
                            for (i13 = i11; 2 > i13; i13++) {
                                vMeth(by2, Test.fFld);
                                i10 <<= (int)l1;
                                iArr3[i13] *= i11;
                            }
                            break;
                        case 121:
                            Test.fFld += -22216;
                            if (true) break;
                            byArr[i11 - 1] -= (byte)i12;
                            break;
                        case 122:
                            i7 += i11;
                            break;
                        case 123:
                            if (b3) continue;
                            break;
                        }
                        break;
                    case 64:
                    case 65:
                        lArr1[i11 - 1] = i12;
                        break;
                    case 66:
                        s >>= (short)i9;
                        break;
                    default:
                        i10 += (i11 * i11);
                    }
                    break;
                case 21:
                    i8 *= i11;
                    break;
                case 22:
                    iArr3[i9 - 1] = i13;
                    break;
                case 23:
                    i14 += (18025 + (i11 * i11));
                    break;
                case 24:
                    i12 = i8;
                    break;
                case 25:
                    i12 = -237;
                    break;
                default:
                    i12 = (int)-40146L;
                }
            }
        }
        long meth_res = l1 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + i11 + i12 + s + i13 + i14 + by2 + (b3 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))
            + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-8312833626327548212L, lArr2[]=new long[N];
        int i=-53843, i1=-198, i2=13, i3=73, i4=-35297, i5=-25992, i6=1, i22=27367, i23=11, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -22148);
        FuzzerUtils.init(lArr2, 7L);

        for (l = 21; l < 370; ++l) {
            for (i1 = 1; i1 < 72; i1++) {
                Test.instanceCount += (((i1 * sFld) + sFld) - i);
                for (i3 = 1; i3 < 2; ++i3) {
                    i4 >>= (i1 + i2);
                    i2 += (iArr[i1 + 1][(int)(l - 1)] -= ((i3 + i2) + (i + -1)));
                }
                for (i5 = 1; i5 < 2; i5 += 2) {
                    boolean b4=true;
                    i4 += (int)(((Test.instanceCount - i5) * sMeth(l, 6, Test.iFld)) + l);
                    switch ((int)((l % 2) + 98)) {
                    case 98:
                        Test.sArrFld[i5] = (short)i22;
                        i6 -= i23;
                        Test.iFld = i4;
                        sFld *= (short)i23;
                    case 99:
                        i23 += i5;
                        break;
                    }
                    i2 += (i5 ^ i3);
                    switch ((((-13 >>> 1) % 8) * 5) + 56) {
                    case 93:
                        i2 = i6;
                        switch ((((i >>> 1) % 8) * 5) + 74) {
                        case 99:
                        case 93:
                            b4 = b4;
                            if (b4) {
                                Test.fFld += (-62 + (i5 * i5));
                                Test.instanceCount += i5;
                            } else {
                                i6 = i3;
                                i2 += (((i5 * Test.fFld) + Test.byFld) - Test.instanceCount);
                                i4 += (((i5 * i22) + i22) - l);
                                Test.iFld -= i1;
                            }
                            i23 += (i5 + Test.instanceCount);
                            lArr2[(int)(l - 1)] |= l;
                            break;
                        case 112:
                            iArr[(int)(l - 1)] = iArr[i1];
                            Test.iFld -= 96;
                            break;
                        case 96:
                            Test.instanceCount *= (long)Test.dFld;
                        case 87:
                            Test.instanceCount = l;
                            break;
                        case 78:
                            i6 = i22;
                            break;
                        case 101:
                            iArr = iArr;
                            break;
                        case 80:
                            i -= i;
                            break;
                        default:
                            Test.iFld1 = 13968;
                        }
                    case 96:
                        sFld = (short)9203;
                        break;
                    case 70:
                    case 82:
                        Test.iFld += i5;
                        break;
                    case 76:
                        i23 = (int)Test.fFld;
                        break;
                    case 91:
                        i6 = (int)Test.instanceCount;
                        break;
                    case 81:
                        i22 = (int)Test.instanceCount;
                    case 85:
                        Test.instanceCount *= Test.iFld1;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 i6 i22 = " + i5 + "," + i6 + "," + i22);
        FuzzerUtils.out.println("i23 iArr lArr2 = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount sFld Test.dFld = " + Test.instanceCount + "," + sFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.iFld Test.byFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.iFld
            + "," + Test.byFld);
        FuzzerUtils.out.println("Test.iFld1 Test.sArrFld = " + Test.iFld1 + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
