// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-24928L;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3749L);
        FuzzerUtils.init(Test.sArrFld, (short)-25357);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, int i7, int i8) {

        int i9=220, i10=26998, i11=-25548, i12=-20116, iArr[]=new int[N];
        double d=48.68279;

        FuzzerUtils.init(iArr, 4339);

        i9 = 1;
        do {
            float f1=1.826F;
            i7 = (int)f1;
        } while (++i9 < 168);
        for (i10 = 4; i10 < 146; ++i10) {
            if (Test.bFld) break;
            i8 += i10;
            i7 = (int)Test.instanceCount;
            Test.instanceCount += (i10 * i10);
        }
        i11 -= (int)Test.instanceCount;
        iArr[(i6 >>> 1) % N] = i9;
        d *= i11;
        d += i6;
        i12 = 1;
        while (++i12 < 367) {
            i8 >>= i9;
            i7 += (((i12 * i9) + i9) - i10);
        }
        i8 *= i7;
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, int i3) {

        int i4=-40837, i5=19, i13=-155, i14=54912, iArr1[]=new int[N];
        float f=1.356F, f2=92.422F;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -13);

        for (i4 = 19; i4 < 307; ++i4) {
            i5 = (int)(((f - i4) * (-23 & i4)) - -33493);
            vMeth1(i4, i3, i5);
            i5 += (int)(-57734L + (i4 * i4));
            i3 >>= i5;
            bArr[i4][i4 + 1] = Test.bFld;
            i3 >>= -1;
            f2 = 1;
            do {
                i3 += (int)f2;
            } while (++f2 < 6);
            for (i13 = 1; i13 < 6; i13 += 2) {
                i14 = (int)l;
                i3 >>= i5;
                if (i4 != 0) {
                    vMeth_check_sum += l + i3 + i4 + i5 + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + i13 +
                        i14 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                iArr1[i13 + 1] -= i3;
            }
            i3 *= -12;
        }
        vMeth_check_sum += l + i3 + i4 + i5 + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + i13 + i14 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(int i2) {

        int i15=14, i16=51, i18=10702, i19=172, iArr2[]=new int[N];
        float f3=2.897F;
        short s=9211, sArr[]=new short[N];

        FuzzerUtils.init(iArr2, 13984);
        FuzzerUtils.init(sArr, (short)-2371);

        vMeth(Test.instanceCount, i2);
        for (i15 = 9; i15 < 324; i15++) {
            Test.instanceCount += i16;
        }
        iArr2[(i15 >>> 1) % N] = (int)Test.instanceCount;
        for (int i17 : iArr2) {
            for (i18 = 1; 4 > i18; ++i18) {
                sArr[i18 + 1] = (short)48132L;
                Test.instanceCount -= i19;
                Test.instanceCount *= (long)f3;
                s = (short)i2;
                sArr[i18] = (short)i16;
                Test.instanceCount += (((i18 * f3) + i17) - i17);
                i17 >>= s;
                i17 = -40;
                i19 <<= i17;
            }
        }
        long meth_res = i2 + i15 + i16 + i18 + i19 + Float.floatToIntBits(f3) + s + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=16056, i1=31560, i20=-119, i21=36231, i22=31226, i23=2, iArr3[][]=new int[N][N];
        long l1=4111823198L;
        float f4=-24.558F;
        byte by=86;
        short s1=-31694;

        FuzzerUtils.init(iArr3, 7);

        for (i = 8; i < 215; ++i) {
            i1 = iMeth(83);
            switch (((i % 8) * 5) + 10) {
            case 22:
                i1 += (int)-65L;
                for (i20 = 6; i20 < 121; ++i20) {
                    for (l1 = i20; l1 < 2; ++l1) {
                        i21 += 36;
                        switch ((i % 9) + 18) {
                        case 18:
                            if (false) continue;
                            iArr3[(int)(l1 + 1)][(int)(l1)] += i;
                            iArr3[(int)(l1 + 1)][i20 + 1] = -28018;
                            i23 += (244 + (l1 * l1));
                            break;
                        case 19:
                        case 20:
                            i22 = i21;
                            f4 = i1;
                            break;
                        case 21:
                            i21 = (int)l1;
                            i21 += (int)l1;
                            i23 = (int)Test.instanceCount;
                            Test.instanceCount = i21;
                            break;
                        case 22:
                            i22 = i21;
                            break;
                        case 23:
                            i23 += (int)(((l1 * i20) + l1) - f4);
                            break;
                        case 24:
                        case 25:
                            Test.lArrFld[i] = by;
                            f4 += (((l1 * i1) + i22) - i1);
                            i1 *= (int)-874527160769236005L;
                        case 26:
                            i23 %= (int)(i20 | 1);
                            Test.sArrFld[i + 1] -= (short)i22;
                            Test.instanceCount >>= i20;
                            i23 *= i;
                            break;
                        }
                        i22 = i23;
                        f4 -= Test.instanceCount;
                    }
                }
                Test.instanceCount = Test.instanceCount;
            case 32:
                i21 += by;
                break;
            case 37:
                i22 >>= i22;
                break;
            case 46:
                by &= (byte)i;
                break;
            case 40:
                i22 -= i23;
                break;
            case 34:
                i21 += s1;
            case 43:
                i22 -= i1;
                break;
            case 13:
                i21 = i1;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 l1 i22 = " + i21 + "," + l1 + "," + i22);
        FuzzerUtils.out.println("i23 f4 by = " + i23 + "," + Float.floatToIntBits(f4) + "," + by);
        FuzzerUtils.out.println("s1 iArr3 = " + s1 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.lArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
