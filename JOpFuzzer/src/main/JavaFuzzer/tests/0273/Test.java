// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6102428019682051025L;
    public static int iFld=15;
    public static byte byFld=69;
    public float fFld=1.432F;
    public static volatile boolean bArrFld[][]=new boolean[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i10=-56994, i11=-24547, i12=-201, i13=-6;
        float f=1.245F, fArr[][]=new float[N][N];
        boolean b1=true;
        byte by=122;

        FuzzerUtils.init(fArr, -14.819F);

        i10 = i10;
        i10 *= i10;
        i11 = 1;
        do {
            i10 += (int)f;
            if (b1) break;
            by += (byte)(((i11 * i11) + f) - i10);
            try {
                i10 = (i11 % i10);
                i10 = (i11 / i11);
                Test.iFld = (36589 % Test.iFld);
            } catch (ArithmeticException a_e) {}
            Test.iFld >>>= (int)Test.instanceCount;
            f += (i11 * i11);
            fArr[i11 - 1][i11 - 1] -= Test.iFld;
            i10 = 8;
            fArr[i11][i11 + 1] = by;
            for (i12 = 1; 4 > i12; ++i12) {
                if (b1) break;
                Test.instanceCount -= i10;
            }
        } while (++i11 < 393);
        long meth_res = i10 + i11 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + by + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        float f1=-1.682F, f2=2.963F;
        int i14=-58819, i15=-6, i16=-83, iArr2[]=new int[N];
        boolean b2=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -14);

        iMeth();
        Test.iFld = Test.iFld;
        for (f1 = 382; f1 > 8; f1 -= 2) {
            if (b2) {
                bArr[(int)(f1)] = b2;
                iArr2[(Test.iFld >>> 1) % N] -= (int)7L;
                for (i15 = (int)(f1); 9 > i15; i15++) {
                    i16 = (int)f1;
                    i14 -= 60089;
                    f2 += (12 + (i15 * i15));
                }
            } else if (b2) {
                i14 = i16;
                f2 += (f1 - i16);
            } else {
                i16 *= (int)Test.instanceCount;
                iArr2[(int)(f1 - 1)] = (int)Test.instanceCount;
                Test.instanceCount = Test.instanceCount;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i14 + (b2 ? 1 : 0) + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(boolean b, int i3, long l) {

        int i4=-230, i5=-124, i6=-101, i7=0, i8=-3, i9=-2, iArr1[]=new int[N];
        short s=-1046, sArr[][]=new short[N][N];
        double d1=-41.15374;
        float f3=48.891F;

        FuzzerUtils.init(iArr1, 46302);
        FuzzerUtils.init(sArr, (short)3129);

        for (i4 = 10; i4 < 234; ++i4) {
            for (i6 = 1; 7 > i6; ++i6) {
                try {
                    i7 = (-38 / i3);
                    i5 = (iArr1[i6] % i4);
                    i7 = (i3 / i3);
                } catch (ArithmeticException a_e) {}
                for (i8 = i4; i8 < 2; ++i8) {
                    i9 += (i8 | i4);
                    vMeth1();
                    Test.bArrFld = Test.bArrFld;
                    i7 += (((i8 * i8) + i7) - Test.instanceCount);
                    l += s;
                    d1 = i6;
                    switch (((i8 % 2) * 5) + 12) {
                    case 18:
                        iArr1 = FuzzerUtils.int1array(N, (int)52126);
                        f3 = -43800;
                        break;
                    case 21:
                        sArr[i8 + 1] = sArr[i8 - 1];
                        i5 >>= (int)Test.instanceCount;
                        break;
                    default:
                        i9 = (int)5530058983534955724L;
                    }
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i3 + l + i4 + i5 + i6 + i7 + i8 + i9 + s + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=-29, i2=-51260, i17=248, i18=-997, i19=-14, i20=-191, i21=-25041, i22=163, i23=21, iArr[]=new
            int[N];
        double d=24.111842;
        boolean b3=true;
        long l1=-2949063688L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -61214);
        FuzzerUtils.init(byArr, (byte)-24);

        i += (int)((++i) * ((i - d) + (-i)));
        for (i1 = 1; 171 > i1; i1++) {
            iArr = (iArr = (iArr = iArr));
            vMeth(b3, i2, Test.instanceCount);
            Test.instanceCount = i2;
        }
        for (i17 = 6; i17 < 365; ++i17) {
            for (i19 = i17; i19 < 70; i19++) {
                byArr[i17] = (byte)i1;
                Test.iFld = i;
                Test.byFld *= (byte)d;
                Test.iFld += i18;
                for (i21 = 1; i21 < 1; i21++) {
                    i20 = Test.iFld;
                    Test.instanceCount += i21;
                    iArr[i21 - 1] = i2;
                    fFld += i21;
                    fFld = i;
                    iArr[i17 + 1] -= (int)fFld;
                    Test.instanceCount &= Test.instanceCount;
                }
            }
            i += -7;
            l1 = 70;
            while ((l1 -= 3) > 0) {
                d = -78.54180;
                i2 -= i18;
                i = i17;
                fFld += (l1 * l1);
                i23 <<= (int)1345049079016120923L;
                switch (((i17 % 5) * 5) + 69) {
                case 85:
                case 74:
                    Test.iFld = i2;
                    iArr[i17] *= 11735;
                    Test.instanceCount *= -1885901762048450637L;
                    break;
                case 87:
                    i %= (int)(i18 | 1);
                    break;
                case 93:
                    i22 *= (int)fFld;
                    break;
                case 82:
                    Test.byFld += (byte)l1;
                }
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 b3 i17 = " + i2 + "," + (b3 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 l1 = " + i21 + "," + i22 + "," + l1);
        FuzzerUtils.out.println("i23 iArr byArr = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.byFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("fFld Test.bArrFld = " + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
