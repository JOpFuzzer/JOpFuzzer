// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-563L;
    public static long lFld=-6492500775423101287L;
    public static short sFld=-31136;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i3) {


        i3 -= i3;
        vMeth1_check_sum += (b ? 1 : 0) + i3;
    }

    public static float fMeth(float f1) {

        boolean b1=false;
        int i4=0, i5=-72, i6=-13999, i7=-187, i8=-124, iArr[]=new int[N];
        short s=508;
        byte by=47;

        FuzzerUtils.init(iArr, 40322);

        vMeth1(b1, i4);
        for (i5 = 13; i5 < 272; i5++) {
            i4 *= (int)-1.723F;
            iArr[i5] = i6;
            i4 += (i5 * i5);
            iArr[i5 - 1] <<= i4;
            for (i7 = 1; i7 < 6; ++i7) {
                switch ((i5 % 2) + 51) {
                case 51:
                    if (i7 != 0) {
                    }
                    i8 += (((i7 * Test.instanceCount) + s) - i8);
                    break;
                case 52:
                    i4 &= i4;
                    i4 = by;
                    break;
                }
                i4 += (i7 * i5);
                Test.instanceCount >>= by;
                f1 *= Test.instanceCount;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + s + by +
            FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i, int i1, int i2) {

        float f=0.914F;
        int i9=-56, i10=1657, i11=-62123, i12=-79, i13=-53457;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9181184703654894312L);

        f -= (-fMeth(f));
        for (i9 = 359; i9 > 2; --i9) {
            for (i11 = 5; i11 > 1; i11 -= 3) {
                Test.lFld = -7;
                Test.iArrFld[i9] -= -12616;
                lArr[i9 - 1] *= Test.lFld;
                i10 = 49;
                i13 = 1;
                do {
                    i10 >>= i2;
                    Test.instanceCount *= Test.instanceCount;
                } while (++i13 < 5);
                if (b2) {
                    b2 = false;
                } else {
                    f += i11;
                    f += i11;
                    f += (i11 * i1);
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=11, i15=-7845, i16=-57387, i17=-56408, i18=-9, i19=-11, i20=-10, i21=155, i22=111;
        double d=21.57162;
        long l=27870L;
        boolean b3=true;

        vMeth(i14, i14, i14);
        d *= -72;
        i14 *= (int)-1L;
        for (l = 225; l > 8; --l) {
            i14 += i15;
            for (i16 = 2; i16 < 116; ++i16) {
                i15 += (((i16 * i17) + l) - i15);
            }
            Test.lFld = i15;
            i18 = 1;
            do {
                float f2=-2.887F;
                lArrFld[(int)(l + 1)] = i18;
                lArrFld[(int)(l - 1)] = Test.lFld;
                Test.lFld += (long)f2;
                Test.iArrFld[(int)(l)] = i17;
                i15 -= (int)Test.instanceCount;
                for (i19 = 1; i19 < 1; i19++) {
                    i20 <<= i15;
                    i14 += (i19 ^ (long)f2);
                    i15 += i21;
                    switch ((i18 % 7) + 60) {
                    case 60:
                        if (b3) break;
                        i15 = i22;
                        i20 += i19;
                        i17 += i22;
                        break;
                    case 61:
                        f2 += (i19 * i21);
                        break;
                    case 62:
                        Test.lFld = 99;
                        i21 |= i15;
                        Test.sFld += (short)-17116;
                        break;
                    case 63:
                        i15 += (((i19 * i15) + i15) - Test.lFld);
                        i20 = i16;
                        if (b3) break;
                    case 64:
                        try {
                            i14 = (i15 / i18);
                            i15 = (i16 / i21);
                            i15 = (i19 % i14);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 65:
                        if (b3) break;
                        break;
                    case 66:
                        i20 -= (int)d;
                        break;
                    default:
                        i15 = i15;
                    }
                }
            } while (++i18 < 116);
        }

        FuzzerUtils.out.println("i14 d l = " + i14 + "," + Double.doubleToLongBits(d) + "," + l);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 b3 i22 = " + i21 + "," + (b3 ? 1 : 0) + "," + i22);

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.sFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
