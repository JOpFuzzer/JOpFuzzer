// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public double dFld=0.78918;
    public static volatile short sFld=7887;
    public static float fFld=-83.501F;
    public static byte byFld=-117;
    public static long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];
    public long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -51664L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l1, float f) {

        int i6=13, i8=30023, i9=37124, i10=220, i11=51300, iArr1[]=new int[N];
        boolean b=false;
        float f1=2.250F, fArr[]=new float[N];
        double d=-113.60742;

        FuzzerUtils.init(fArr, 0.426F);
        FuzzerUtils.init(iArr1, 107);

        i6 = 1;
        while ((i6 += 2) < 133) {
            fArr = fArr;
            i8 = 1;
            while (++i8 < 23) {
                Test.lArrFld[i8] += (long)19.44202;
                if (false) continue;
                if (b) break;
            }
            l1 = Test.instanceCount;
            for (f1 = 1; f1 < 23; f1++) {
                i9 = (int)-57.119229;
                i9 += (int)f1;
                l1 += (2934484020L + (f1 * f1));
                for (i10 = 1; i10 < 2; ++i10) {
                    Test.sFld = (short)d;
                    i11 = 39238;
                    Test.instanceCount = Test.sFld;
                }
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + i6 + i8 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i9 + i10 +
            i11 + Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(int i4, int i5) {

        byte by=25;
        int i12=-7603, i13=60, i14=5, iArr2[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr2, -144);

        by = (byte)(i5 - ((~(-lMeth(Test.instanceCount, Test.fFld))) + Test.instanceCount));
        i4 += (int)Test.fFld;
        i4 ^= -1779;
        if (false) {
            i5 += (int)Test.instanceCount;
            i5 >>>= i5;
            for (i12 = 5; i12 < 395; i12++) {
                i14 = 1;
                do {
                    if (i5 != 0) {
                        vMeth_check_sum += i4 + i5 + by + i12 + i13 + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    i5 += (-226 + (i14 * i14));
                    i5 = i13;
                    try {
                        i13 = (i14 % 14022);
                        iArr2[i14 - 1] = (i12 / 31660);
                        i13 = (i5 / 33713);
                    } catch (ArithmeticException a_e) {}
                    if (b1) continue;
                    dArrFld[i14 + 1] *= i5;
                    Test.fFld += -36;
                } while (++i14 < 4);
            }
        } else {
            Test.fFld -= i14;
        }
        vMeth_check_sum += i4 + i5 + by + i12 + i13 + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(int i2) {

        int i3=-38, i15=-13, i16=-13, i17=-162, i18=-25, iArr3[][]=new int[N][N];
        long l3=-1L;

        FuzzerUtils.init(iArr3, 42694);

        i3 = 1;
        do {
            vMeth(i2, i3);
            if (i3 != 0) {
            }
            for (i15 = 1; i15 < 4; ++i15) {
                for (l3 = i3; 2 > l3; ++l3) {
                    boolean b2=true;
                    i17 += (int)(((l3 * Test.instanceCount) + i17) - i17);
                    if (i16 != 0) {
                    }
                    i17 += (int)(((l3 * i17) + i16) - i18);
                    i2 += (int)l3;
                    if (b2) continue;
                    i17 += i15;
                    i18 += -14;
                    i16 += (int)(l3 - Test.byFld);
                    iArr3[i3] = FuzzerUtils.int1array(N, (int)37008);
                    Test.byFld += (byte)i2;
                }
            }
        } while (++i3 < 379);
        long meth_res = i2 + i3 + i15 + i16 + l3 + i17 + i18 + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=223, i1=-65, i19=15831, i20=-2, i21=-48, i22=141, i23=113, i24=38181, i25=14, i26=91, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -2458);
        FuzzerUtils.init(lArr, 51819L);

        Test.instanceCount += iArr[(3 >>> 1) % N];
        i = 1;
        while (++i < 287) {
            Test.instanceCount += (((i * i) + i) - i);
            i1 = 1;
            do {
                switch ((((((int)(dFld * i1)) >>> 1) % 1) * 5) + 39) {
                case 41:
                    dFld = iMeth(i1);
                    i19 += (int)dFld;
                    i19 -= (int)0L;
                default:
                    iArr[i] = 6731;
                }
                for (i20 = i; i20 < 1; i20++) {
                    i19 = i;
                    Test.instanceCount = i20;
                    i19 += (i20 | Test.instanceCount);
                    i19 = (int)Test.fFld;
                }
                i21 += (int)-7L;
                Test.instanceCount += (i1 * i21);
            } while (++i1 < 88);
            i22 = 1;
            while ((i22 += 3) < 88) {
                i19 += i22;
                iArr[i22 + 1] = (int)3119285520412002550L;
                i19 += (int)-106L;
            }
            for (i23 = i; i23 < 88; ++i23) {
                for (i25 = 1; i25 > 1; i25--) {
                    Test.fFld += i21;
                    dFld -= i19;
                    iArr[i23 - 1] >>= i23;
                    dFld -= 6;
                    dFld -= i21;
                    iArr[i25] *= (int)-31.119071;
                    lArrFld1[i25] *= i20;
                    iArr[i + 1] *= (int)Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 iArr lArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld Test.byFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.byFld + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("dArrFld lArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," +
            FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
