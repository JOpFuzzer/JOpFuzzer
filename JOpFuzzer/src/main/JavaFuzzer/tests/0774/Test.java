// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static boolean bFld=true;
    public static float fFld=-9.844F;
    public static byte byFld=52;
    public static int iArrFld[][]=new int[N][N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 51022);
        FuzzerUtils.init(Test.iArrFld1, 208);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-63192, i6=8;
        float f=-53.522F;
        short s=4622;
        boolean bArr[][]=new boolean[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 149L);

        i5 -= (int)Test.instanceCount;
        i5 = i5;
        i6 = 1;
        do {
            f -= Test.instanceCount;
            switch (((i6 % 2) * 5) + 117) {
            case 118:
                Test.instanceCount ^= i5;
                Test.iArrFld[i6 - 1][i6] -= 30076;
                i5 <<= i6;
                break;
            case 126:
                s = (short)Test.instanceCount;
                Test.instanceCount = i6;
                i5 *= (int)Test.instanceCount;
                break;
            default:
                Test.iArrFld[i6 + 1][i6] = i6;
            }
            bArr[i6 + 1][i6 + 1] = Test.bFld;
            Test.bFld = Test.bFld;
            lArr[i6] += i6;
        } while (++i6 < 212);
        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i4) {

        byte by=-127;
        double d=-82.111904;
        int i7=999, i8=-8, i9=11509, i10=3, i11=11, iArr[]=new int[N];
        float f1=1.462F;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(sArr, (short)-6504);

        Test.bFld = ((by++) != i4);
        d = ((i4 * (i4 * i4)) + iArr[(i4 >>> 1) % N]);
        vMeth2();
        for (i7 = 6; i7 < 177; i7 += 2) {
            by = (byte)1;
            for (i9 = 1; 18 > i9; ++i9) {
                sArr[i9] <<= (short)33381;
                switch ((((i4 >>> 1) % 7) * 5) + 38) {
                case 61:
                    i11 = 1;
                    do {
                        i8 += 0;
                        i8 += (int)Test.instanceCount;
                        i4 = (int)Test.instanceCount;
                        Test.instanceCount = i7;
                        f1 = f1;
                        i4 = i7;
                    } while (++i11 < 2);
                    break;
                case 42:
                    i10 = i4;
                case 48:
                case 71:
                    f1 += i9;
                case 67:
                    Test.iArrFld[i7 - 1][i9] += i11;
                    break;
                case 39:
                    Test.instanceCount += (i9 * i9);
                case 58:
                    if (true) continue;
                }
            }
        }
        vMeth1_check_sum += i4 + by + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1)
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i12=-61610, i13=-232, i14=-42, i15=-61481;
        double d1=2.83645;
        short s1=-19952;

        vMeth1(i12);
        i13 = 1;
        do {
            i12 = i13;
            for (i14 = 1; i14 < 17; i14++) {
                i12 -= i13;
                Test.instanceCount = i12;
                if (Test.bFld) break;
                i15 -= i15;
                d1 = s1;
                Test.fFld = i13;
                Test.instanceCount += (i14 - Test.instanceCount);
            }
            Test.iArrFld[i13 - 1][i13] = i14;
            i15 += (i13 * i13);
            d1 += 26455;
        } while ((i13 += 3) < 281);
        i12 += (int)Test.instanceCount;
        vMeth_check_sum += i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) + s1;
    }

    public void mainTest(String[] strArr1) {

        int i=-31, i1=178, i2=2, i3=199, i17=-51688, i18=42, i19=22885, i20=13, i21=143, i22=-12, i23=-6, i24=-58760,
            i25=-6, i26=-5172;
        double d2=1.20460;
        byte by1=-15;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.570F);

        for (i = 2; i < 204; i++) {
            for (i2 = 6; i2 < 124; i2++) {
                i1 += i2;
                vMeth();
                switch ((i % 3) + 7) {
                case 7:
                    Test.instanceCount += i2;
                case 8:
                    fArr[i - 1] = Test.instanceCount;
                    for (i17 = i; i17 < 2; ++i17) {
                        i1 *= i2;
                        i18 >>= i3;
                    }
                    break;
                case 9:
                    i1 = i1;
                    i1 += (int)Test.fFld;
                    break;
                default:
                    Test.byFld <<= (byte)i17;
                }
                Test.instanceCount += (-62 + (i2 * i2));
                for (i19 = 1; i19 < 2; i19++) {
                    Test.fFld -= i18;
                }
            }
            i1 -= i21;
            for (i22 = 4; i22 < 124; ++i22) {
                i21 = i19;
                d2 += i3;
                Test.fFld = Test.fFld;
                i23 += (i22 * i22);
                Test.instanceCount *= i1;
                i23 = (int)Test.fFld;
                if (true) break;
            }
            i23 = i19;
            for (i24 = i; 124 > i24; ++i24) {
                i26 = 1;
                while (++i26 < 1) {
                    Test.iArrFld1[i - 1] &= i22;
                    by1 = Test.byFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i17 i18 = " + i3 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 d2 = " + i22 + "," + i23 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("by1 fArr = " + by1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.iArrFld Test.iArrFld1 = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
