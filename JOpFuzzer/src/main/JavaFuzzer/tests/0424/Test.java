// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1203349684036385121L;
    public static boolean bFld=true;
    public static volatile float fFld=2.966F;
    public volatile int iFld=185;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13684);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(boolean b) {

        float f2=-2.674F, f3=124.848F, fArr[]=new float[N];
        int i9=14091, i10=2, i11=6, i12=42555;
        byte by=126;
        double d=2.44112;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.552F);
        FuzzerUtils.init(lArr, 4L);

        for (f2 = 4; f2 < 284; f2++) {
            for (i10 = 1; 6 > i10; ++i10) {
                f3 *= i11;
                fArr[(int)(f2 + 1)] *= 6847;
                i11 ^= i10;
                i12 = 1;
                while (++i12 < 2) {
                    f3 += i9;
                    Test.iArrFld = Test.iArrFld;
                    f3 -= -37.80F;
                    i9 += i9;
                    by += (byte)i12;
                    lArr[i10] = 56694;
                    d -= 223;
                    i9 += -250;
                    Test.instanceCount >>>= Test.instanceCount;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f2) + i9 + i10 + i11 + Float.floatToIntBits(f3) + i12 + by +
            Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(long l1, int i5) {

        int i6=-17, i7=-3, i8=28, i13=9, i14=-8, iArr1[]=new int[N];
        float f=0.858F, f1=-77.947F, f4=-1.430F;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, 80);
        FuzzerUtils.init(dArr, 0.38552);

        l1 -= -11L;
        for (i6 = 309; i6 > 3; --i6) {
            for (f = i6; f < 5; f++) {
                i5 = (i7 <<= (iArr1[i6 + 1]++));
                f1 += f;
                iArr1[(int)(f)] |= (int)(i5 <<= (int)Test.instanceCount);
                i5 >>= (int)Math.min((long)(110.301F + iArr1[i6]), (long)(-Double.longBitsToDouble(l1)));
                i8 = (int)(lMeth(Test.bFld) + l1);
            }
            if (i5 != 0) {
            }
            i5 = -10;
            i13 = 1;
            while (++i13 < 5) {
                l1 *= i13;
                for (f4 = 1; 1 > f4; ++f4) {
                    Test.instanceCount -= i6;
                    dArr[i13 - 1] *= 242;
                }
            }
        }
        long meth_res = l1 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + Float.floatToIntBits(f1) + i13 +
            Float.floatToIntBits(f4) + i14 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2, long l, int i3) {

        int i4=21, i15=-1, i16=60737, i17=-42068, i18=3, i19=53859;
        short s=-15959;
        double d1=2.5927;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 10555L);

        i4 = 1;
        do {
            iMeth1(l, -160);
            for (i15 = i4; 11 > i15; i15++) {
                for (i17 = i15; i17 < 1; i17++) {
                    Test.instanceCount &= i18;
                    i16 -= (int)l;
                }
                lArr1[i4][i4] <<= i4;
                i19 = 1;
                do {
                    i18 += 139;
                    s = (short)i19;
                    Test.instanceCount = (long)d1;
                    i3 = i17;
                    i3 += (int)Test.instanceCount;
                    l = i3;
                } while (++i19 < 1);
                Test.instanceCount ^= -8652956960406026658L;
            }
        } while (++i4 < 139);
        long meth_res = i2 + l + i3 + i4 + i15 + i16 + i17 + i18 + i19 + s + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-37364, i1=-1, i20=-13467, i21=-22696, i22=15, i23=15964, i24=-15337, i25=9, i26=-61698, i27=7, i28=-92,
            iArr[]=new int[N];
        double d2=87.48348;
        long l2=-2234584549L, lArr2[][]=new long[N][N];
        byte by1=48;

        FuzzerUtils.init(iArr, -4519);
        FuzzerUtils.init(lArr2, -3783068357868710173L);

        iArr = iArr;
        i = 1;
        while (++i < 175) {
            i1 = (iMeth(i, Test.instanceCount, i) * i1);
            for (i20 = 8; i20 < 143; i20++) {
                short s1=-22946;
                Test.instanceCount <<= i21;
                Test.instanceCount = Test.instanceCount;
                iArr = Test.iArrFld;
                switch (((i % 8) * 5) + 28) {
                case 57:
                    for (i22 = i20; 2 > i22; i22++) {
                        Test.bFld = true;
                        Test.iArrFld[i] %= (int)(i21 | 1);
                        lArr2[i22 + 1][i22] *= Test.instanceCount;
                        i23 += (int)d2;
                        iArr[i22] &= i20;
                    }
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test.fFld *= i21;
                        Test.instanceCount = -7937520103495153025L;
                        Test.iArrFld[i20] %= (int)(i25 | 1);
                    }
                    break;
                case 58:
                    for (l2 = 1; l2 < 2; ++l2) {
                        Test.instanceCount += l2;
                        Test.fFld -= i21;
                    }
                    break;
                case 50:
                    switch (((i % 4) * 5) + 102) {
                    case 122:
                        for (i27 = i20; 2 > i27; i27++) {
                            by1 += (byte)i22;
                            lArr2[i20 - 1][i20 + 1] -= -3;
                            i23 <<= i20;
                            i21 += (i27 * i27);
                        }
                        break;
                    case 115:
                        try {
                            i25 = (126 / i20);
                            i21 = (i25 / 1415750188);
                            i28 = (-68 / i28);
                        } catch (ArithmeticException a_e) {}
                        i1 += (-2 + (i20 * i20));
                        i1 <<= (int)l2;
                        break;
                    case 113:
                        Test.fFld += (((i20 * l2) + Test.fFld) - i22);
                        break;
                    case 119:
                        i25 *= (int)l2;
                    default:
                        i25 = 54;
                    }
                    break;
                case 52:
                    s1 >>= (short)2349L;
                    break;
                case 59:
                    Test.instanceCount >>= -3;
                    break;
                case 35:
                    d2 *= Test.instanceCount;
                    break;
                case 55:
                    Test.instanceCount += (9375 + (i20 * i20));
                    break;
                case 46:
                    i1 += (i20 * iFld);
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d2 i24 i25 = " + Double.doubleToLongBits(d2) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("l2 i26 i27 = " + l2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 by1 iArr = " + i28 + "," + by1 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("iFld Test.iArrFld = " + iFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
