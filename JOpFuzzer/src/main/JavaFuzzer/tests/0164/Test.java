// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static double dFld=-24.108583;
    public static int iFld=2;
    public static byte byFld=-65;
    public static float fFld=8.833F;
    public static short sFld=-29313;
    public int iFld1=-45254;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-1, i5=8, i6=5, i7=-42476, i8=79;
        boolean b=false, bArr[]=new boolean[N];
        byte by1=-81;
        long l=1577142479L;
        short s=-23234;

        FuzzerUtils.init(bArr, false);

        for (i4 = 7; i4 < 208; ++i4) {
            for (i6 = 1; i6 < 8; ++i6) {
                i5 += (int)(13L + (i6 * i6));
                i5 *= i7;
                b = b;
                Test.instanceCount += (((i6 * i5) + i4) - i5);
                i8 = 1;
                while (++i8 < 2) {
                    if (false) {
                        Test.iArrFld[(-140 >>> 1) % N] = 31871;
                        bArr[i6 + 1] = b;
                        i7 = by1;
                    } else {
                        if (b) {
                            l = s;
                            if (b) continue;
                            vMeth2_check_sum += i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + by1 + l + s +
                                FuzzerUtils.checkSum(bArr);
                            return;
                        } else if (true) {
                            i5 += (i8 * i7);
                        }
                        vMeth2_check_sum += i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + by1 + l + s +
                            FuzzerUtils.checkSum(bArr);
                        return;
                    }
                }
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + by1 + l + s + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1() {

        boolean b1=true;
        short s1=-23607;
        int i9=2, i10=60805, i11=230, i12=-49943;
        float f=29.662F;

        if (b1) {
            vMeth2();
        }
        s1 *= (short)-111.873F;
        for (i9 = 3; i9 < 252; i9++) {
            Test.dFld = Test.instanceCount;
            i10 = i10;
            f = i10;
            for (i11 = 1; i11 < 7; ++i11) {
                i12 -= (int)1.16F;
                i10 >>= i11;
                if (true) {
                    try {
                        i12 = (i11 / 160);
                        i12 = (Test.iArrFld[i9] / -222);
                        i12 = (i10 % i12);
                    } catch (ArithmeticException a_e) {}
                } else {
                    i12 = (int)f;
                    Test.instanceCount = i9;
                    i10 <<= Test.iFld;
                }
            }
        }
        vMeth1_check_sum += (b1 ? 1 : 0) + s1 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12;
    }

    public static void vMeth(int i1, int i2, int i3) {

        short s2=7480;
        int i13=-49, i14=-128, i15=-51436;
        float f1=6.893F;
        boolean b2=false;
        double d=-1.100919;

        vMeth1();
        i1 = s2;
        i13 = 1;
        do {
            i14 = 8;
            do {
                i3 += (i14 | (long)f1);
                b2 = true;
            } while ((i14 -= 3) > 0);
            Test.iArrFld[i13 + 1] = (int)-2.97F;
            i3 += Test.iFld;
            for (d = 1; 8 > d; d++) {
                i1 -= Test.byFld;
                if (i1 != 0) {
                    vMeth_check_sum += i1 + i2 + i3 + s2 + i13 + i14 + Float.floatToIntBits(f1) + (b2 ? 1 : 0) +
                        Double.doubleToLongBits(d) + i15;
                    return;
                }
                Test.iFld -= i2;
                i1 += (int)(d * i14);
                i15 = (int)Test.instanceCount;
            }
            Test.instanceCount *= 6157;
        } while (++i13 < 195);
        vMeth_check_sum += i1 + i2 + i3 + s2 + i13 + i14 + Float.floatToIntBits(f1) + (b2 ? 1 : 0) +
            Double.doubleToLongBits(d) + i15;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i16=61010, i17=7, i19=-2, i20=-14, i21=9346, i22=49655, i23=-189, i24=-32924, i25=-11, i26=-207;
        boolean b3=false;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)73);
        FuzzerUtils.init(lArr, 69L);

        i = (int)(((i - Test.instanceCount) + (Test.dFld - Test.instanceCount)) * Test.instanceCount);
        for (byte by : byArr) {
            i = (by + -23960);
            vMeth(Test.iFld, i, -55873);
            by = (byte)Test.fFld;
        }
        for (i16 = 386; i16 > 6; i16 -= 3) {
            for (i19 = 199; i19 > 12; i19--) {
                for (i21 = 1; i21 < 2; ++i21) {
                    lArr[i16] = i17;
                    Test.fFld = i16;
                }
                Test.instanceCount = i21;
                i += (-108 + (i19 * i19));
                Test.instanceCount += i19;
                Test.iFld = i20;
                i <<= i21;
                Test.instanceCount |= Test.instanceCount;
                i17 = Test.sFld;
                if (b3) break;
                i22 += i19;
            }
            Test.instanceCount += (((i16 * Test.fFld) + i) - Test.iFld);
            Test.fFld += i16;
            i23 = 1;
            do {
                Test.dFld += i23;
                b3 = b3;
            } while (++i23 < 199);
            Test.instanceCount = -23341L;
        }
        i17 += -11;
        i24 = 1;
        do {
            for (i25 = i24; 184 > i25; ++i25) {
                Test.instanceCount -= Test.sFld;
                iFld1 -= i20;
            }
        } while (++i24 < 136);

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 b3 i23 = " + i22 + "," + (b3 ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("byArr lArr = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.byFld Test.fFld Test.sFld = " + Test.byFld + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("iFld1 Test.iArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
