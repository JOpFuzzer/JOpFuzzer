// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static float fFld=-73.158F;
    public short sFld=-12574;
    public static double dFld=125.2377;
    public long lFld=-13L;
    public boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i7, int i8) {

        int i9=-9, i10=-3;
        byte by=-52;
        short s=10475;
        boolean b=false, bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, -192L);

        for (i9 = 2; i9 < 136; ++i9) {
            i10 = i8;
            i8 = (int)l;
            by = (byte)i7;
        }
        s = (short)-2L;
        bArr[(i8 >>> 1) % N] = b;
        lArr[(i10 >>> 1) % N] *= Test.instanceCount;
        vMeth2_check_sum += l + i7 + i8 + i9 + i10 + by + s + (b ? 1 : 0) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth1(int i3, int i4) {

        int i5=4, i6=21175, i11=-244, i12=62863, i13=-10, i14=0, i15=3, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 35466);

        for (i5 = 1; i5 < 151; i5 += 3) {
            Test.instanceCount = (i4 | ((i5 + i3) + sFld));
            iArr[i5] = i5;
        }
        vMeth2(1504621154L, -2852, i4);
        i4 -= (int)Test.instanceCount;
        Test.instanceCount -= i4;
        i11 = 385;
        while (--i11 > 0) {
            i4 -= i6;
            for (i12 = 1; i12 < 4; i12++) {
                for (i14 = 1; i14 < 2; i14++) {
                    i15 = (int)Test.instanceCount;
                    i15 ^= i13;
                    Test.instanceCount >>= i14;
                    iArr[i14 - 1] |= (int)Test.instanceCount;
                    i6 += (((i14 * i11) + Test.instanceCount) - Test.fFld);
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i1=-53911, i2=122, i16=134, i17=13, i18=1112, i19=2, i20=50365;
        byte by1=-111;
        float f=-11.455F;
        boolean b1=false;

        for (i1 = 7; i1 < 323; i1++) {
            vMeth1(i1, i1);
            i2 -= i2;
            if (true) break;
            i2 += (((i1 * i1) + i16) - i16);
        }
        i17 = 1;
        do {
            for (i18 = 1; 11 > i18; ++i18) {
                by1 = (byte)i18;
                if (true) {
                    Test.fFld += (((i18 * i18) + i1) - i1);
                    f = 1;
                    while (++f < 2) {
                        i19 -= sFld;
                        if (b1) {
                            i16 = 47659;
                            i2 += (int)Test.dFld;
                            vMeth_check_sum += i1 + i2 + i16 + i17 + i18 + i19 + by1 + Float.floatToIntBits(f) + (b1 ?
                                1 : 0) + i20;
                            return;
                        } else if (b1) {
                            try {
                                i2 = (i2 % 64762);
                                i16 = (i17 / -8377);
                                i19 = (-130 / i1);
                            } catch (ArithmeticException a_e) {}
                        } else {
                            Test.instanceCount = (long)f;
                        }
                    }
                } else if (b1) {
                    i20 -= i18;
                } else {
                    i19 += (i18 | i19);
                }
            }
        } while (++i17 < 143);
        vMeth_check_sum += i1 + i2 + i16 + i17 + i18 + i19 + by1 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i20;
    }

    public void mainTest(String[] strArr1) {

        int i=-40590, i21=-27593, i22=6, i23=-3, i24=103, i25=67, iArr1[][]=new int[N][N];
        float f1=-91.696F, fArr[]=new float[N];
        double d=-1.46977;
        long lArr1[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr, -49.931F);
        FuzzerUtils.init(lArr1, 33373L);
        FuzzerUtils.init(iArr1, -110);
        FuzzerUtils.init(sArr, (short)30968);

        i = 358;
        while (--i > 0) {
            Test.fFld += ((-fArr[i - 1]) * ((-i) >> (8 + Integer.reverseBytes(i))));
        }
        fArr[(i >>> 1) % N] = (i - i);
        vMeth();
        Test.instanceCount = i;
        i21 -= i;
        i21 -= (int)Test.fFld;
        i21 = i;
        lFld <<= i;
        for (i22 = 18; i22 < 317; ++i22) {
            for (f1 = i22; f1 < 84; f1++) {
                for (d = 1; d < 1; d++) {
                    switch ((((i21 >>> 1) % 9) * 5) + 88) {
                    case 109:
                        iArr1[(int)(d)][(int)(f1 - 1)] = (int)lFld;
                        lFld = i25;
                        i24 += (int)d;
                        break;
                    case 100:
                        Test.fFld += (float)(((d * lFld) + i21) - i22);
                        i24 = i21;
                        Test.dFld *= -77;
                        break;
                    case 130:
                        fArr[i22 + 1] = 1;
                        Test.fFld *= i23;
                        break;
                    case 131:
                        sFld = (short)i25;
                        iArr1[(int)(d - 1)][(int)(f1 + 1)] = i21;
                        Test.instanceCount = lFld;
                        sArr[i22] = (short)5;
                        break;
                    case 112:
                        iArr1[(int)(f1)][(int)(d)] /= (int)1.135F;
                        break;
                    case 133:
                        iArr1[(int)(d + 1)][(int)(f1 - 1)] *= (int)d;
                        if (bFld) continue;
                        i23 = (int)-6542945015912257263L;
                        break;
                    case 115:
                        i24 <<= i25;
                        break;
                    case 104:
                        i21 = i;
                        break;
                    case 122:
                        i25 += (int)d;
                    default:
                        i21 = i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 f1 i24 = " + i23 + "," + Float.floatToIntBits(f1) + "," + i24);
        FuzzerUtils.out.println("d i25 fArr = " + Double.doubleToLongBits(d) + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("lArr1 iArr1 sArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr1)
            + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + sFld);
        FuzzerUtils.out.println("Test.dFld lFld bFld = " + Double.doubleToLongBits(Test.dFld) + "," + lFld + "," +
            (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
