// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=8204676402944509789L;
    public static float fFld=-58.38F;
    public static byte byFld=38;
    public double dArrFld[]=new double[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8) {

        double d=2.91253;
        int i9=-12717, i10=-48938, i11=-7, i12=-11, i13=-43808, iArr[]=new int[N];
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 58565);
        FuzzerUtils.init(byArr, (byte)93);

        for (d = 16; d < 330; d += 2) {
            i9 += (int)Test.instanceCount;
            Test.instanceCount += i9;
            i9 += (int)(d * d);
            for (i10 = 1; i10 < 10; i10++) {
                iArr[(i9 >>> 1) % N] += (int)d;
                i11 += (int)Test.instanceCount;
                if (b1) continue;
                i9 = i10;
            }
            i8 += (int)(d * d);
            i8 <<= (int)-236L;
        }
        for (i12 = 294; 5 < i12; --i12) {
            Test.fFld = i9;
            byArr[i12 + 1] -= (byte)Test.fFld;
            try {
                i11 = (i11 % i13);
                i8 = (i8 % -65);
                i13 = (iArr[i12] / -182);
            } catch (ArithmeticException a_e) {}
        }
        vMeth1_check_sum += i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + (b1 ? 1 : 0) + i12 + i13 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(boolean b, int i6) {

        long l=-8L, lArr1[]=new long[N];
        int i7=7, i14=-6087, i15=40963, i16=83, i17=-8;
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr1, -16381L);
        FuzzerUtils.init(dArr, -2.17715);

        for (l = 6; 207 > l; ++l) {
            vMeth1(i6);
            lArr1[(int)(l - 1)] *= Test.instanceCount;
            for (i14 = 1; i14 < 8; i14++) {
                short s=-16579;
                Test.byFld += (byte)(((i14 * i6) + i15) - i15);
                i15 += (((i14 * i6) + Test.fFld) - i14);
                i6 += i14;
                dArr[(int)(l + 1)] *= l;
                i15 *= i6;
                i6 += (int)31570L;
                Test.instanceCount = s;
                Test.instanceCount += (i14 | Test.instanceCount);
                for (i16 = i14; i16 < 2; ++i16) {
                    i17 += (((i16 * Test.instanceCount) + i17) - Test.instanceCount);
                    if (true) continue;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i6 + l + i7 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by) {

        int i=-37, i1=6, i2=47967, i3=0, i4=0, i5=-30762, iArr1[]=new int[N];
        boolean b2=false;
        short s1=10262;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 3399929788022230608L);
        FuzzerUtils.init(fArr, -107.354F);
        FuzzerUtils.init(iArr1, 5);

        i = 328;
        while (--i > 0) {
            i1 = i;
            for (i2 = i; i2 < 5; ++i2) {
                Test.instanceCount >>= (--i1);
                lArr[i2 - 1] -= Test.instanceCount;
                for (i4 = 1; i4 < 1; ++i4) {
                    by = (byte)(-(-iMeth(b2, -54078)));
                    Test.instanceCount += (i4 * i4);
                    Test.instanceCount -= Test.byFld;
                    fArr[i + 1] = -211;
                    i1 += i2;
                    try {
                        i1 = (i2 % -48295);
                        i3 = (-894978191 % iArr1[i2 - 1]);
                        i1 = (i2 % i1);
                    } catch (ArithmeticException a_e) {}
                    iArr1[i - 1] += (int)Test.instanceCount;
                    i1 = Test.byFld;
                    s1 += (short)(((i4 * Test.instanceCount) + Test.instanceCount) - i2);
                }
            }
        }
        vMeth_check_sum += by + i + i1 + i2 + i3 + i4 + i5 + (b2 ? 1 : 0) + s1 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=22573, i19=-8, i20=5, i21=-39647, i22=-245, i23=-2, i24=125, i25=9, i26=-38, i27=-13381, i28=6,
            i29=9069, iArr2[][]=new int[N][N];
        boolean b3=false;
        double d1=0.21748;
        float f=2.641F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr2, -230);
        FuzzerUtils.init(lArr2, 157L);

        vMeth(Test.byFld);
        for (i18 = 3; i18 < 320; ++i18) {
            for (i20 = 1; 79 > i20; i20++) {
                iArr2 = FuzzerUtils.int2array(N, (int)82);
            }
            Test.instanceCount = i19;
            if (b3) continue;
        }
        Test.instanceCount = Test.instanceCount;
        for (i22 = 18; i22 < 384; ++i22) {
            i21 = i21;
            b3 = true;
            Test.instanceCount = i19;
            d1 -= i19;
            if (true) {
                for (i24 = 1; i24 < 69; i24++) {
                    i19 += (93 + (i24 * i24));
                    for (i26 = 1; i26 < 2; ++i26) {
                        i19 *= 138;
                        i23 = (int)Test.instanceCount;
                    }
                    lArr2[i24 + 1] = i27;
                    Test.instanceCount <<= i22;
                    i25 = -21231;
                    i21 -= i21;
                }
                iArr2[i22][i22 + 1] = (int)Test.fFld;
            } else if (b3) {
                i21 *= i27;
                d1 += 13;
                for (i28 = 4; i28 < 69; ++i28) {
                    dArrFld[i28] += Test.fFld;
                    if (b3) break;
                    i29 = (int)1L;
                    i19 += (i28 * i28);
                }
            } else if (b3) {
                f = Test.instanceCount;
            } else {
                d1 -= Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 b3 i22 = " + i21 + "," + (b3 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 d1 i24 = " + i23 + "," + Double.doubleToLongBits(d1) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 f = " + i28 + "," + i29 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("iArr2 lArr2 = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
