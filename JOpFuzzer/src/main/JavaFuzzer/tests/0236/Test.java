// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1100855860L;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -55554L);
        FuzzerUtils.init(Test.fArrFld, -1.302F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, byte by, int i5) {

        double d=-39.108494;
        int i7=-71, i8=61423, i9=8, i10=6, iArr[]=new int[N];
        boolean b=true;
        short s=24814;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -4072023313130608836L);
        FuzzerUtils.init(iArr, -61);

        lArr = lArr;
        Test.instanceCount ^= Test.instanceCount;
        d -= i5;
        if (b) {
            Test.instanceCount += 49080L;
            for (int i6 : iArr) {
                Test.instanceCount = 133;
                for (i7 = 1; i7 < 4; ++i7) {
                    switch ((((i4 >>> 1) % 6) * 5) + 11) {
                    case 14:
                        i8 += i6;
                        i4 -= by;
                        switch ((((i8 >>> 1) % 5) * 5) + 122) {
                        case 135:
                            for (i9 = 1; i9 < 2; i9++) {
                                Test.instanceCount += i6;
                                i4 += i9;
                            }
                            break;
                        case 138:
                        case 129:
                            Test.instanceCount = i7;
                            break;
                        case 142:
                            try {
                                i5 = (i9 / i5);
                                i8 = (iArr[i7] / -485839455);
                                i4 = (142 % i7);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 123:
                            i5 += (int)d;
                            break;
                        }
                        break;
                    case 13:
                        if (b) break;
                        break;
                    case 12:
                        i8 >>= i5;
                        break;
                    case 34:
                        b = b;
                    case 40:
                        s += (short)(i7 - by);
                        break;
                    case 37:
                        i6 %= (int)(i6 | 1);
                    }
                }
            }
            vMeth2_check_sum += i4 + by + i5 + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + (b ? 1 : 0) + s +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
            return;
        } else {
            Test.instanceCount = i7;
        }
        vMeth2_check_sum += i4 + by + i5 + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + (b ? 1 : 0) + s +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i3, float f) {

        byte by1=69;
        int i11=-171, i12=-6, i13=191;
        short s1=-3941;
        double d1=1.64147;

        i3 = i3;
        vMeth2(i3, by1, i3);
        for (long l : Test.lArrFld) {
            i3 *= (int)f;
            for (i11 = 1; i11 < 4; i11++) {
                Test.lArrFld[i11] = (long)f;
                s1 += (short)f;
                i3 = (int)l;
            }
            d1 += f;
            i13 = 1;
            while (++i13 < 4) {
                Test.lArrFld[i13 - 1] -= i11;
                i3 = (int)d1;
                d1 += i12;
                f = i3;
            }
            Test.lArrFld[(i13 >>> 1) % N] = i3;
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + by1 + i11 + i12 + s1 + Double.doubleToLongBits(d1) + i13;
    }

    public static void vMeth(int i2) {

        int i14=-235, i15=-29, iArr1[]=new int[N];
        byte by2=18;
        float f2=-123.448F;

        FuzzerUtils.init(iArr1, 13);

        vMeth1(i2, -19.185F);
        for (i14 = 9; 193 > i14; i14++) {
            i15 += i14;
            i15 *= i2;
            if (true) {
                switch (((i14 % 7) * 5) + 21) {
                case 37:
                    i15 = i14;
                    i2 -= i2;
                    i2 = i2;
                    break;
                case 48:
                    i15 *= (int)Test.instanceCount;
                    i15 <<= i14;
                    i2 = (int)Test.instanceCount;
                    i15 <<= (int)Test.instanceCount;
                    break;
                case 56:
                    i15 -= i14;
                    i15 ^= i15;
                    break;
                case 50:
                    i2 -= i15;
                    break;
                case 30:
                    i2 = i2;
                    break;
                case 47:
                    iArr1[i14 + 1] ^= i15;
                    break;
                case 33:
                    i2 -= 58010;
                    break;
                default:
                    by2 ^= (byte)Test.instanceCount;
                }
            } else if (false) {
                f2 = i15;
                vMeth_check_sum += i2 + i14 + i15 + by2 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1);
                return;
            }
        }
        vMeth_check_sum += i2 + i14 + i15 + by2 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-34428, i1=-127, i16=33638, i17=1, i18=-45, i19=55264;
        short s2=26647;
        float f3=0.1019F;
        double d2=-2.18841;
        byte by3=98;
        boolean b1=true;

        for (i = 4; i < 293; ++i) {
            vMeth(i);
            Test.lArrFld[i] = s2;
            Test.instanceCount += (((i * s2) + i1) - i);
            for (i16 = i; i16 < 87; i16++) {
                i17 += (((i16 * i16) + f3) - Test.instanceCount);
                iArrFld[i16 + 1][i + 1] = i16;
                if (b1) {
                    i17 |= (int)Test.instanceCount;
                } else if (b1) {
                    s2 += (short)(((i16 * i16) + Test.instanceCount) - Test.instanceCount);
                    Test.lArrFld[i - 1] &= Test.instanceCount;
                    i17 -= (int)Test.instanceCount;
                } else if (b1) {
                    i1 = (int)1.24256;
                    d2 = -254;
                    by3 += (byte)(((i16 * by3) + i) - Test.instanceCount);
                } else {
                    Test.instanceCount -= i17;
                }
                for (i18 = 1; i18 < 1; i18++) {
                    i19 += (i18 | Test.instanceCount);
                    i19 = i19;
                    Test.instanceCount >>= -3;
                    i19 += i16;
                    Test.instanceCount |= i16;
                    Test.instanceCount += (((i18 * f3) + i16) - i);
                    f3 = Test.instanceCount;
                }
                d2 = i;
                i17 = (int)f3;
                iArrFld[i16][i - 1] >>= (int)Test.instanceCount;
                i19 = (int)f3;
                i19 = (int)6636665177417233895L;
                iArrFld[i16][i16] += (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 s2 = " + i + "," + i1 + "," + s2);
        FuzzerUtils.out.println("i16 i17 f3 = " + i16 + "," + i17 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("d2 by3 b1 = " + Double.doubleToLongBits(d2) + "," + by3 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 = " + i18 + "," + i19);

        FuzzerUtils.out.println("Test.instanceCount Test.lArrFld Test.fArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
