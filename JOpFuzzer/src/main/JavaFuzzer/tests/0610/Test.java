// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=57813L;
    public static byte byFld=31;
    public static short sFld=-26921;
    public boolean bFld=false;
    public float fFld=97.968F;
    public volatile float fFld1=-76.221F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 32870L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i2) {

        byte by=0, byArr[]=new byte[N];
        int i3=48, i4=52918, i5=-9, i6=48660, iArr1[]=new int[N];
        boolean b=false;
        double d1=32.128355;

        FuzzerUtils.init(iArr1, -9);
        FuzzerUtils.init(byArr, (byte)-101);

        iArr1[(i2 >>> 1) % N] -= by;
        i3 = 1;
        while (++i3 < 138) {
            for (i4 = 1; i4 < 11; i4++) {
                i5 = i2;
                Test.instanceCount *= -6;
                if (b) continue;
                i5 += i4;
                Test.instanceCount += Test.instanceCount;
                Test.instanceCount = i3;
                i5 += (int)Test.instanceCount;
                i5 = i2;
                i2 = (int)d1;
            }
            i6 *= i6;
            i5 += (i3 * Test.instanceCount);
            iArr1[i3] -= (int)d1;
        }
        long meth_res = i2 + by + i3 + i4 + i5 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i6 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s) {

        int i7=8, i8=6, i9=-11, i10=0, i11=213;
        float f=0.204F, fArr[]=new float[N];
        double d2=82.66915;

        FuzzerUtils.init(fArr, 2.19F);

        iMeth1(i7);
        i7 = (int)f;
        i8 = 1;
        do {
            i7 += (((i8 * Test.instanceCount) + Test.instanceCount) - f);
            i7 += i8;
            Test.byFld += (byte)Test.instanceCount;
            for (i9 = 1; i9 < 12; ++i9) {
                i7 >>= s;
                i7 >>= i7;
                Test.instanceCount >>= i7;
                for (d2 = 1; d2 < 2; ++d2) {
                    i11 = 132;
                    Test.lArrFld[i8 + 1] = i8;
                    fArr[i8] = i9;
                    Test.instanceCount <<= -105;
                }
            }
        } while ((i8 += 3) < 395);
        vMeth_check_sum += s + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + Double.doubleToLongBits(d2) + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i=-165, i1=-47, i12=19545, i13=221, i14=55072, i15=-5, i16=-12, i17=8, iArr[][]=new int[N][N];
        double d=1.109770;

        FuzzerUtils.init(iArr, -85);

        i *= (int)Float.intBitsToFloat((iArr[(i >>> 1) % N][(i >>> 1) % N]--) - (i + i));
        for (d = 157; d > 4; d -= 3) {
            vMeth(Test.sFld);
            i *= (int)Test.instanceCount;
            i -= (int)Test.instanceCount;
            for (i12 = 1; i12 < 30; ++i12) {
                float f1=-33.669F;
                i += (i12 - f1);
                Test.instanceCount = Test.instanceCount;
                iArr[i12 + 1][(int)(d + 1)] = (int)d;
                Test.lArrFld[i12 + 1] = (long)f1;
            }
            for (i14 = 1; i14 < 30; ++i14) {
                i16 = 1;
                while (++i16 < 2) {
                    i17 = i14;
                    i17 += (74 + (i16 * i16));
                    iArr[(int)(d - 1)] = iArr[i14 + 1];
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d) + i1 + i12 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=17734, i19=14078, i20=60848, i21=-6, i22=241, i23=-128, i24=-243, i25=496, i26=-19, i27=7, iArr2[]=new
            int[N];
        double d3=-2.84122;
        long l=-103L;
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, 1);
        FuzzerUtils.init(fArr1, 1.349F);

        iMeth();
        if (bFld) {
            i18 = i18;
        } else {
            for (i19 = 8; i19 < 290; ++i19) {
                iArr2[i19] += (int)Test.instanceCount;
                d3 %= (Test.instanceCount | 1);
                for (i21 = 3; 89 > i21; ++i21) {
                    for (i23 = 1; 2 > i23; i23++) {
                        Test.byFld = (byte)i19;
                        i20 *= (int)Test.instanceCount;
                        i24 = i20;
                        fFld += (i23 * i23);
                        i22 += (i23 * i23);
                        fFld1 = Test.instanceCount;
                        if (bFld) {
                            if (true) break;
                        }
                        Test.byFld = (byte)Test.instanceCount;
                        i24 += (((i23 * i23) + i24) - i21);
                        i24 += (i23 * i23);
                    }
                    i24 += i18;
                    l += Test.sFld;
                    i20 = i22;
                    d3 *= i19;
                    i25 = 1;
                    do {
                        if (bFld) continue;
                    } while (++i25 < 2);
                    fArr1[i19] -= i24;
                }
                for (i26 = 89; 2 < i26; --i26) {
                    i18 += (int)l;
                    i24 += i26;
                    fFld1 += i26;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d3 i21 i22 = " + Double.doubleToLongBits(d3) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 l = " + i23 + "," + i24 + "," + l);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("iArr2 fArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("bFld fFld fFld1 = " + (bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld) + "," +
            Float.floatToIntBits(fFld1));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
