// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static float fFld=-2.528F;
    public static int iFld=-9;
    public static double dFld=-112.59224;
    public static short sFld=-32502;
    public static byte byFld=19;
    public int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 21.202F);
        FuzzerUtils.init(Test.lArrFld, 127L);
        FuzzerUtils.init(Test.iArrFld1, 126);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i10) {

        int i11=63604, i12=-120, i13=-11, i15=-11, iArr1[]=new int[N];
        short s=-27756;
        boolean b1=false;
        byte by=43;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -7356499753764407102L);
        FuzzerUtils.init(iArr1, 51938);

        if (b1) {
            Test.fFld += -8;
            i11 = 1;
            while (++i11 < 354) {
                int i14=6;
                switch (i11) {
                case 0:
                    Test.iFld = i10;
                    for (i12 = 1; i12 < 5; i12++) {
                        boolean b=true;
                        Test.instanceCount = i13;
                        s += (short)(1.957F + (i12 * i12));
                        i13 >>= i10;
                        switch ((i12 % 6) + 55) {
                        case 55:
                            b = b;
                        case 56:
                        case 57:
                            if (b) break;
                            i10 -= i12;
                            i10 += (int)1354868893L;
                            break;
                        case 58:
                            i13 *= i12;
                            break;
                        case 59:
                            i10 = (int)Test.fFld;
                            break;
                        case 60:
                            i10 += Test.iFld;
                            break;
                        default:
                            Test.fArrFld[i11] = i13;
                        }
                    }
                    break;
                case 1:
                    Test.instanceCount = i11;
                case 2:
                    if (b1) continue;
                    break;
                case 3:
                    i10 = i13;
                    break;
                case 4:
                    Test.instanceCount -= Test.instanceCount;
                    break;
                case 5:
                case 6:
                case 7:
                    i13 += (((i11 * i12) + Test.instanceCount) - Test.instanceCount);
                    break;
                case 8:
                    b1 = b1;
                    break;
                case 9:
                    lArr[i11] <<= Test.iFld;
                case 10:
                    iArr1[i11 - 1] -= Test.iFld;
                    break;
                case 11:
                    i13 += i11;
                    break;
                case 12:
                    Test.instanceCount += -23179;
                    break;
                case 13:
                    i10 -= i12;
                    break;
                case 14:
                    Test.dFld *= i12;
                    break;
                case 15:
                    iArr1[i11] = i12;
                case 16:
                    i10 = i11;
                case 17:
                    if (b1) break;
                    break;
                case 18:
                    i13 ^= i11;
                case 19:
                    Test.fFld = by;
                    break;
                case 20:
                    i10 += i10;
                case 21:
                    Test.iFld += (((i11 * i14) + Test.iFld) - i10);
                    break;
                case 22:
                    iArr1 = iArr1;
                case 23:
                    Test.dFld -= by;
                    break;
                case 24:
                    s <<= (short)i12;
                case 25:
                    i14 *= i14;
                case 26:
                    s <<= (short)i10;
                    break;
                case 27:
                    Test.instanceCount <<= 240;
                case 28:
                    iArr1[i11 - 1] = s;
                    break;
                case 29:
                    by = (byte)-168;
                    break;
                case 30:
                    Test.instanceCount -= i11;
                    break;
                case 31:
                    iArr1[i11] += (int)2.685F;
                    break;
                case 32:
                    i14 = (int)Test.fFld;
                    break;
                case 33:
                    i13 -= i12;
                    break;
                case 34:
                    if (b1) break;
                    break;
                case 35:
                    i14 += i11;
                    break;
                case 36:
                    i14 += Test.iFld;
                    break;
                case 37:
                    Test.fFld = s;
                    break;
                case 38:
                    if (b1) break;
                    break;
                case 39:
                    lArr[i11] <<= -3753L;
                case 40:
                    i14 += (int)Test.fFld;
                    break;
                case 41:
                case 42:
                    Test.instanceCount = (long)Test.dFld;
                    break;
                case 43:
                    i10 += (((i11 * i11) + i12) - i11);
                case 44:
                    Test.dFld *= 72;
                    break;
                case 45:
                    Test.instanceCount += (((i11 * Test.instanceCount) + i10) - i11);
                case 46:
                    Test.iFld >>= i13;
                    break;
                case 47:
                    i10 = (int)129L;
                    break;
                case 48:
                    Test.instanceCount <<= i12;
                    break;
                case 49:
                    i10 = (int)-1929478396530609379L;
                    break;
                case 50:
                    Test.iFld *= Test.iFld;
                    break;
                case 51:
                    Test.instanceCount *= (long)-2.550F;
                case 52:
                    Test.iFld = i14;
                    break;
                case 53:
                    i10 ^= (int)12L;
                    break;
                case 54:
                    i13 += (((i11 * Test.instanceCount) + Test.iFld) - Test.fFld);
                    break;
                case 55:
                    Test.fArrFld[i11] -= Test.fFld;
                    break;
                case 56:
                    Test.fFld = sFld;
                case 57:
                    Test.fFld += (i11 * i12);
                case 58:
                    i13 = 34508;
                    break;
                case 59:
                    if (b1) break;
                    break;
                case 60:
                case 61:
                    i10 += (int)10L;
                    break;
                case 62:
                case 63:
                    Test.iFld += (i11 | i14);
                case 64:
                    Test.iFld = s;
                    break;
                case 65:
                    iArr1[i11 + 1] += (int)Test.fFld;
                    break;
                case 66:
                    if (b1) continue;
                    break;
                case 67:
                    Test.fFld -= -84.993F;
                    break;
                case 68:
                    if (i13 != 0) {
                    }
                    break;
                case 69:
                    if (i15 != 0) {
                    }
                default:
                    i15 += (i11 * i11);
                }
            }
        } else {
            Test.instanceCount += (long)1.129457;
        }
        long meth_res = i10 + i11 + i12 + i13 + s + (b1 ? 1 : 0) + by + i15 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i8) {

        int i9=-12, i16=44039, i17=-202, iArr[][]=new int[N][N];
        byte by1=46;

        FuzzerUtils.init(iArr, 4594);

        Test.fFld += (Test.iFld * Test.fFld);
        i9 = 1;
        do {
            boolean b2=true;
            iArr[i9][i9 + 1] += ((++Test.iFld) + byMeth(-50));
            if (b2) {
                iArr[i9 + 1][i9 + 1] -= i8;
                Test.instanceCount += (i9 + i9);
                Test.fFld += (-74L + (i9 * i9));
            }
            Test.iFld = i8;
            iArr[i9][i9 - 1] = Test.iFld;
            Test.fFld -= Test.iFld;
        } while (++i9 < 344);
        for (i16 = 3; 311 > i16; ++i16) {
            switch ((i16 % 10) + 119) {
            case 119:
                Test.lArrFld[i16 + 1] += 12;
                Test.sFld = (short)35248;
                break;
            case 120:
                if (true) continue;
                break;
            case 121:
                if (Test.iFld != 0) {
                    vMeth_check_sum += i8 + i9 + i16 + i17 + by1 + FuzzerUtils.checkSum(iArr);
                    return;
                }
                break;
            case 122:
                iArr[i16 - 1] = iArr[i16 - 1];
                break;
            case 123:
                iArr[i16 - 1][i16] -= -60323;
                break;
            case 124:
                Test.dFld = -49.424F;
                break;
            case 125:
                by1 = (byte)Test.instanceCount;
                break;
            case 126:
                i17 &= (int)Test.instanceCount;
                break;
            case 127:
                i17 *= (int)Test.fFld;
                break;
            case 128:
                Test.fFld = (float)Test.dFld;
            default:
                Test.iFld <<= Test.iFld;
            }
        }
        vMeth_check_sum += i8 + i9 + i16 + i17 + by1 + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(long l, long l1, int i5) {

        int i6=36771, i7=3535, i18=8968, i19=-11753;

        for (i6 = 21; i6 < 336; i6 += 3) {
            Test.fFld += (((Test.iFld * 26068) + (l = 13L)) + (i7 + (50817 * i5)));
            vMeth(i6);
            i5 >>>= 6;
            switch (((i6 % 3) * 5) + 103) {
            case 104:
                Test.iArrFld1[i6 + 1] *= 23290;
                break;
            case 107:
                Test.iArrFld1[i6] *= i5;
                break;
            case 109:
                Test.iFld /= (int)(i7 | 1);
                l /= (i6 | 1);
                break;
            default:
                for (i18 = i6; 15 > i18; i18++) {
                    i7 = 28;
                    Test.iFld += (i18 | Test.instanceCount);
                    Test.byFld = (byte)30419;
                    Test.iArrFld1 = FuzzerUtils.int1array(N, (int)-129);
                    i19 = (int)Test.dFld;
                }
            }
        }
        long meth_res = l + l1 + i5 + i6 + i7 + i18 + i19;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=5, i2=2, i3=-219, i4=2140, i20=-131, i21=-181, i22=55, i23=246, i24=12, i25=117, i26=221;
        boolean b3=false;

        Test.fFld += Test.iFld;
        for (i = 13; i < 298; ++i) {
            for (i2 = 4; 88 > i2; ++i2) {
                i4 = 1;
                while (++i4 < 2) {
                    iArrFld[i - 1] = i;
                    Test.iFld += (i4 * i4);
                    i3 += (((i4 * Test.fFld) + Test.instanceCount) - i1);
                    i3 = (int)((fMeth(Test.instanceCount, Test.instanceCount, i1) - Test.iFld) - Test.fFld);
                    try {
                        i3 = (-39774 / i1);
                        Test.iFld = (i4 % Test.iFld);
                        i1 = (i2 / iArrFld[i4]);
                    } catch (ArithmeticException a_e) {}
                    i3 -= i;
                }
                for (i20 = 1; 2 > i20; i20 += 3) {
                    Test.iArrFld1[i20 + 1] = i20;
                    Test.instanceCount = i20;
                    i1 = i4;
                    if (b3) break;
                    i1 = i21;
                    i1 += (int)(1924071437L + (i20 * i20));
                    i21 -= i1;
                    iArrFld[i2] = (int)Test.instanceCount;
                }
            }
            for (i22 = i; i22 < 88; ++i22) {
                Test.lArrFld[i] <<= i;
                Test.dFld = i24;
                i21 += (int)Test.instanceCount;
                if (b3) continue;
                i3 += (((i22 * Test.fFld) + Test.fFld) - i21);
            }
        }
        for (i25 = 158; i25 > 8; i25--) {
            Test.sFld += (short)Test.instanceCount;
            i3 += (i25 * i3);
        }
        Test.sFld = (short)Test.fFld;
        Test.fArrFld[(i3 >>> 1) % N] += 11;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i20 = " + i3 + "," + i4 + "," + i20);
        FuzzerUtils.out.println("i21 b3 i22 = " + i21 + "," + (b3 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 = " + i26);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld Test.sFld Test.byFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.sFld + "," + Test.byFld);
        FuzzerUtils.out.println("iArrFld Test.fArrFld Test.lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
