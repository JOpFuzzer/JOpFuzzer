// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static boolean bFld=false;
    public volatile long lArrFld[]=new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f=-101.263F, f1=8.568F;
        int i3=-23053, i4=137, i5=-178;
        boolean b=false, bArr[]=new boolean[N];
        long l=0L;

        FuzzerUtils.init(bArr, true);

        f = -63;
        for (i3 = 6; 148 > i3; ++i3) {
            f1 = Test.instanceCount;
            Test.instanceCount = i3;
            i4 = i3;
            i4 -= (int)Test.instanceCount;
            switch (((i4 >>> 1) % 5) + 93) {
            case 93:
                Test.instanceCount = 11;
                i4 /= (int)(i4 | 1);
                i5 = 11;
                do {
                    bArr[i5 - 1] = b;
                    Test.instanceCount += (((i5 * f1) + i4) - i4);
                    f1 += (i5 + Test.instanceCount);
                    i4 = i3;
                    if (b) continue;
                } while (--i5 > 0);
            case 94:
                i4 = (int)Test.instanceCount;
                break;
            case 95:
                f += (((i3 * Test.instanceCount) + i3) - Test.instanceCount);
                break;
            case 96:
                i4 = (int)l;
                break;
            case 97:
                i4 -= i5;
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i4 + Float.floatToIntBits(f1) + i5 + (b ? 1 : 0) + l +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i1, int i2) {

        short s=-20570;
        byte by=83;
        int i6=-22085, i7=-45741, i8=22342, iArr[]=new int[N];
        double d=0.41828;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 78);
        FuzzerUtils.init(lArr, -40835L);

        iArr[(i1 >>> 1) % N] = (i2 = (i1 + (i2 - s)));
        switch ((((((int)(Test.instanceCount + i1)) >>> 1) % 2) * 5) + 115) {
        case 118:
            by >>>= (byte)(Float.intBitsToFloat(i1) + (iArr[(59982 >>> 1) % N] = (int)(i2 * Test.instanceCount)));
            vMeth1();
            break;
        case 116:
            i2 = (int)Test.instanceCount;
            i2 -= i1;
            for (i6 = 5; i6 < 121; ++i6) {
                i8 = 1;
                while (++i8 < 13) {
                    i7 += i8;
                    d += i6;
                    s += (short)(((i8 * i7) + Test.instanceCount) - i6);
                    switch ((i6 % 8) + 97) {
                    case 97:
                        lArr[i8 + 1] <<= i6;
                        iArr[i8] = i7;
                        Test.instanceCount = i6;
                        break;
                    case 98:
                        d -= Test.instanceCount;
                        break;
                    case 99:
                        Test.instanceCount -= Test.instanceCount;
                        break;
                    case 100:
                        s &= (short)i1;
                        break;
                    case 101:
                        i1 >>= i2;
                    case 102:
                        i2 += (i8 + i6);
                        break;
                    case 103:
                        Test.bFld = Test.bFld;
                        break;
                    case 104:
                        Test.instanceCount = i6;
                    }
                }
            }
            break;
        default:
            Test.instanceCount = s;
        }
        vMeth_check_sum += i1 + i2 + s + by + i6 + i7 + i8 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i9=222, i10=41, i11=-249, i12=14, i13=-44, i14=-127, i15=12, i16=5, i17=-14;
        double d1=2.94655, d2=-58.66522;
        long l1=8L;

        vMeth(i9, -236);
        for (i10 = 2; i10 < 141; ++i10) {
            i11 -= (int)d1;
            i9 += i10;
            for (i12 = i10; i12 < 11; ++i12) {
                for (l1 = 1; l1 > i12; l1 -= 3) {
                    Test.instanceCount = Test.instanceCount;
                }
                i11 &= i11;
                Test.instanceCount -= i9;
                if (i9 != 0) {
                }
            }
            for (i15 = 1; 11 > i15; i15++) {
                i14 = i13;
                for (d2 = 1; 2 > d2; ++d2) {
                    float f2=-119.553F;
                    i13 -= i9;
                    f2 += i15;
                }
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 + l1 + i14 + i15 + i16 +
            Double.doubleToLongBits(d2) + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-211, i18=-25, i19=-1, i20=50871, i21=-56334, i22=4879, i23=-223, i24=-24346, i25=-51, iArr1[]=new int[N];
        float f3=0.452F;
        double d3=-2.13012, d4=-2.45703, dArr[]=new double[N];
        short s1=-20484;
        byte by1=-6;

        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(dArr, 2.73170);

        i += (int)(iMeth() - 2.577F);
        lArrFld[(i >>> 1) % N] = i;
        Test.instanceCount = i;
        iArr1[(i >>> 1) % N] = i;
        i18 = 1;
        do {
            switch (((i18 % 9) * 5) + 101) {
            case 133:
                iArr1[i18] >>= 0;
                i += (i18 * i18);
                break;
            case 143:
                i += (int)Test.instanceCount;
                for (i19 = 2; i19 < 68; i19++) {
                    i20 = (int)Test.instanceCount;
                    for (i21 = 1; i21 < 2; ++i21) {
                        f3 *= i19;
                        f3 = i20;
                        d3 -= s1;
                    }
                }
                Test.instanceCount -= i21;
                i += i18;
                break;
            case 129:
                f3 -= Test.instanceCount;
                break;
            case 138:
                f3 += -4136643473L;
                i -= i20;
                for (d4 = 68; d4 > 3; d4--) {
                    i22 = i19;
                }
            case 146:
                by1 *= (byte)i21;
                break;
            case 118:
                if (true) {
                    i23 &= (int)Test.instanceCount;
                    switch (((i18 % 3) * 5) + 116) {
                    case 130:
                        for (i24 = 3; i24 < 68; ++i24) {
                            f3 = f3;
                            Test.instanceCount += i23;
                            d3 *= i24;
                        }
                        break;
                    case 125:
                    case 126:
                        i = i25;
                        break;
                    default:
                        dArr[i18] -= i22;
                    }
                } else if (Test.bFld) {
                    i20 = i25;
                } else if (Test.bFld) {
                    iArr1[(i >>> 1) % N] <<= 4;
                } else {
                    i25 >>= (int)Test.instanceCount;
                }
                break;
            case 104:
                i23 = i24;
            case 124:
                Test.instanceCount = i18;
                break;
            case 110:
                iArr1[i18 + 1] = by1;
                break;
            default:
                iArr1[i18 - 1] = i24;
            }
        } while (++i18 < 370);

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("f3 d3 s1 = " + Float.floatToIntBits(f3) + "," + Double.doubleToLongBits(d3) + "," +
            s1);
        FuzzerUtils.out.println("d4 i23 by1 = " + Double.doubleToLongBits(d4) + "," + i23 + "," + by1);
        FuzzerUtils.out.println("i24 i25 iArr1 = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld lArrFld = " + Test.instanceCount + "," + (Test.bFld ? 1 :
            0) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
