// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-24277L;
    public int iFld=-11;
    public static float fFld=91.544F;
    public static volatile short sFld=-16366;
    public static boolean bFld=false;
    public static int iFld1=-120;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[][]=new byte[N][N];
    public byte byArrFld1[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -76);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=54150, i7=-248, i8=-6138, i9=-153;
        byte by=-36;
        double d=13.32335;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)17064);

        for (i6 = 9; i6 < 178; i6++) {
            i8 = 1;
            do {
                Test.fFld = -2.173F;
                by += (byte)-439L;
                Test.sFld += (short)Test.fFld;
                i4 <<= i4;
                Test.iArrFld = Test.iArrFld;
                Test.instanceCount = Test.instanceCount;
                i7 -= (int)d;
                i7 -= (int)-8L;
            } while (++i8 < 9);
            i9 = 1;
            do {
                sArr[i9] -= Test.sFld;
                i4 -= (int)Test.fFld;
                i4 += (i9 | i4);
                d = Test.instanceCount;
            } while (++i9 < 9);
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + by + Double.doubleToLongBits(d) + i9 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i10=59128;

        vMeth1(i10, i10);
        vMeth_check_sum += i10;
    }

    public long lMeth(int i) {

        int i1=-219, i2=-26297, i3=-26, i11=-2, i12=-147, i13=-2;

        i1 = 1;
        do {
            for (i2 = 1; i2 < 4; ++i2) {
                vMeth();
                if (Test.bFld) {
                    for (i11 = i1; i11 < 2; i11++) {
                        Test.iArrFld = Test.iArrFld;
                    }
                    i3 ^= i;
                    Test.instanceCount >>= Test.instanceCount;
                } else if (Test.bFld) {
                    switch (((i2 % 9) * 5) + 88) {
                    case 115:
                        Test.instanceCount += i2;
                        break;
                    case 128:
                        i3 |= (int)Test.instanceCount;
                        i12 += (((i2 * i2) + i2) - Test.instanceCount);
                        iFld >>= i11;
                        iFld >>= 52877;
                        break;
                    case 117:
                        i12 += (i2 * i2);
                    case 130:
                        iFld = (int)Test.instanceCount;
                        break;
                    case 94:
                        i3 >>= (int)Test.instanceCount;
                        break;
                    case 112:
                        i = (int)Test.fFld;
                        break;
                    case 108:
                        iFld <<= -5;
                        break;
                    case 109:
                        Test.instanceCount -= i13;
                        break;
                    case 114:
                        Test.instanceCount = 219L;
                    default:
                        Test.sFld += (short)i13;
                    }
                } else {
                    Test.fFld += Test.instanceCount;
                }
            }
        } while (++i1 < 379);
        long meth_res = i + i1 + i2 + i3 + i11 + i12 + i13;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=79, i15=1, i16=22415, i17=3419, i18=1, i19=-155;
        double d1=61.17611, d2=2.112004;
        byte by1=19;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 64.440F);
        FuzzerUtils.init(lArr, -1514075723749041980L);

        fArr[(iFld >>> 1) % N] = (((iFld - Test.instanceCount) << (Test.instanceCount--)) + (lMeth(iFld) +
            Test.instanceCount));
        for (i14 = 11; i14 < 288; i14++) {
            i15 ^= iFld;
            d1 = 91;
            do {
                switch ((i14 % 2) + 38) {
                case 38:
                case 39:
                default:
                    i15 = i14;
                }
                by1 -= (byte)iFld;
                Test.sFld += (short)(911 + (d1 * d1));
                lArr[(int)(d1 - 1)] &= i14;
                iFld += (int)d1;
            } while (--d1 > 0);
            for (i16 = 4; i16 < 91; ++i16) {
                i17 += i16;
                Test.instanceCount *= i16;
                d2 += 12;
                Test.iArrFld[i16] *= (int)-145L;
                i18 = 1;
                while ((i18 += 3) < 2) {
                    by1 += (byte)(((i18 * i16) + Test.instanceCount) - Test.instanceCount);
                    i17 += i18;
                    Test.fFld += (i18 + i14);
                }
                i19 = 1;
                while (++i19 < 2) {
                    Test.instanceCount = Test.iFld1;
                    byArrFld = byArrFld1;
                }
                switch ((i16 % 1) + 8) {
                case 8:
                    switch (((i18 >>> 1) % 2) + 90) {
                    case 90:
                        Test.iArrFld[i14] *= i18;
                        Test.instanceCount += (((i16 * i15) + i16) - by1);
                        iFld -= (int)Test.fFld;
                        Test.iArrFld[i14 - 1] = i16;
                        break;
                    case 91:
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)88);
                        by1 += (byte)(i16 * Test.sFld);
                        break;
                    }
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 d1 = " + i14 + "," + i15 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("by1 i16 i17 = " + by1 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("d2 i18 i19 = " + Double.doubleToLongBits(d2) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("fArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld Test.bFld Test.iFld1 = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.iArrFld byArrFld byArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(byArrFld) + "," + FuzzerUtils.checkSum(byArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
