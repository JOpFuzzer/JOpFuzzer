// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1247889028L;
    public static float fFld=0.730F;
    public static double dFld=-2.9827;
    public long lFld=-414722857878853863L;
    public long lFld1=-10L;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -36080L);
    }

    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i9=1, i10=4664, i11=27300, iArr1[]=new int[N];
        float f=-125.544F, f1=87.292F;
        boolean b=false;
        byte by=-55;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 19887L);
        FuzzerUtils.init(iArr1, -189);

        for (i9 = 385; i9 > 8; --i9) {
            i10 += (((i9 * i10) + i9) - Test.fFld);
            for (f = i9; f < 4; ++f) {
                b = b;
                i10 -= i11;
                b = b;
                i11 = i9;
                lArr[i9 + 1] <<= i9;
                switch (((i9 % 1) * 5) + 127) {
                case 129:
                    switch ((int)(((f % 1) * 5) + 124)) {
                    case 125:
                        i10 -= (int)Test.fFld;
                        i11 += (int)f1;
                        break;
                    }
                default:
                    f1 = 106;
                    iArr1[(int)(f + 1)] -= by;
                    if (i10 != 0) {
                    }
                }
            }
        }
        long meth_res = i9 + i10 + Float.floatToIntBits(f) + i11 + (b ? 1 : 0) + Float.floatToIntBits(f1) + by +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static short sMeth(long l, long l1, int i6) {

        int i7=14, i8=7, i12=-138, i13=2, iArr2[]=new int[N];
        boolean b1=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 103);
        FuzzerUtils.init(fArr, 89.241F);

        i7 = 1;
        do {
            i8 = 7;
            do {
                l1 = lMeth();
                i6 = i8;
                for (i12 = 1; i12 < 1; i12++) {
                    i13 += (((i12 * Test.fFld) + i8) - i13);
                    Test.lArrFld = Test.lArrFld;
                    Test.fFld += i12;
                    i13 += (int)l1;
                    if (b1) {
                        iArr2[i8] = i7;
                        fArr[i12] += i7;
                        if (true) break;
                        i6 = -18418;
                    } else if (b1) {
                        if (false) break;
                    }
                }
            } while (--i8 > 0);
        } while (++i7 < 240);
        long meth_res = l + l1 + i6 + i7 + i8 + i12 + i13 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public int iMeth() {

        int i14=60961, i15=16, i16=14158, i17=129, i18=-18143;

        Test.instanceCount *= (sMeth(4690208288612001893L, Test.instanceCount, i14) * i14);
        for (i15 = 7; i15 < 123; ++i15) {
            Test.dFld += Test.fFld;
            i16 -= 17185;
            i16 += (int)Test.fFld;
        }
        i14 -= (int)Test.dFld;
        Test.lArrFld[(i16 >>> 1) % N] = -5089203717894859124L;
        i16 += 9;
        i16 -= (int)-44064L;
        Test.instanceCount += (long)1.421F;
        Test.instanceCount += -4L;
        for (i17 = 7; i17 < 370; i17++) {
            Test.instanceCount <<= i14;
            i14 = i14;
            lFld += (-11277 + (i17 * i17));
        }
        long meth_res = i14 + i15 + i16 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9242, i1=-89, i2=-45, i3=-38, i4=214, i5=250, i19=145, i20=526, i21=-58601, i22=-250, i23=-13, i24=207,
            i25=11, i26=135, i27=215, iArr[]=new int[N];
        short s=14347;
        double d=0.110840;
        byte by1=11, byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(byArr, (byte)-36);

        for (i = 6; 211 > i; i++) {
            i1 += (i1++);
        }
        i1 = (int)Test.instanceCount;
        for (i2 = 279; 17 < i2; i2 -= 2) {
            for (i4 = 11; i4 < 191; ++i4) {
                i1 += iArr[i2];
                iArr[i4 - 1] -= (int)Float.intBitsToFloat(Math.max((int)(1 + Test.instanceCount), iMeth()));
                lFld1 = Test.instanceCount;
                Test.fFld -= s;
            }
            for (i19 = 5; i19 < 191; ++i19) {
                lFld -= lFld1;
                lFld += (i19 | i1);
                Test.fFld -= 20213;
                Test.instanceCount += (-59989 + (i19 * i19));
                for (i21 = 1; i21 < 2; i21++) {
                    i1 = -75;
                    Test.instanceCount &= Test.instanceCount;
                    lFld = -6796764028776067335L;
                }
                byArr[i19] |= (byte)lFld;
                i1 += (int)Test.dFld;
            }
        }
        for (d = 15; d < 285; d++) {
            iArr[(int)(d - 1)] <<= (int)30204L;
            for (i24 = 3; i24 < 93; i24++) {
                lFld = i2;
                for (i26 = 2; 1 < i26; i26--) {
                    by1 <<= (byte)i23;
                }
                i3 = s;
                i25 += (int)lFld;
                s *= (short)i26;
                i27 += i5;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("s i19 i20 = " + s + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 d = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by1 = " + i26 + "," + i27 + "," + by1);
        FuzzerUtils.out.println("iArr byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("lFld lFld1 Test.lArrFld = " + lFld + "," + lFld1 + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth sMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
