// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=14637L;
    public double dFld=0.115635;
    public static byte byFld=-33;
    public static float fFld=62.691F;
    public long lArrFld[]=new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1) {

        double d2=-2.48342, d3=0.50135;
        int i8=-14, i9=-8, i10=204, i11=-74, i12=-170, iArr2[]=new int[N];
        float f1=2.803F;
        byte by=-19;

        FuzzerUtils.init(iArr2, 14164);

        for (d2 = 2; d2 < 127; d2 += 2) {
            for (i9 = (int)(d2); 25 > i9; i9++) {
                iArr2[(int)(d2)] *= (int)Test.instanceCount;
                for (i11 = i9; 1 > i11; i11++) {
                    i8 &= i9;
                    iArr2[(int)(d2)] *= i9;
                    f1 = Test.instanceCount;
                    i12 += (i11 + i10);
                    i8 -= i10;
                }
                d3 -= -26721;
                l1 += Test.instanceCount;
                i10 += (int)Test.instanceCount;
                f1 *= i10;
            }
            l1 += 191;
        }
        by += (byte)i12;
        long meth_res = l1 + Double.doubleToLongBits(d2) + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d3) + by + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i4=33495, i5=-5, i6=-126, i7=8, i13=156, i14=1, i15=-21, i16=-71, i17=13, iArr1[]=new int[N];
        long l2=2086688911L;
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr1, 166);
        FuzzerUtils.init(bArr, false);

        for (i4 = 7; i4 < 211; i4++) {
            for (i6 = 1; 8 > i6; i6 += 2) {
                i7 = (iArr1[i6] + iMeth1(Test.instanceCount));
                for (l2 = 1; l2 < 3; l2++) {
                    Test.instanceCount += i13;
                }
            }
            for (i14 = 1; 8 > i14; i14++) {
                i7 += (i14 | i5);
                bArr[i14] = b;
                for (i16 = 1; i16 < 2; ++i16) {
                    Test.byFld = (byte)i13;
                    i5 -= i6;
                    i15 += (((i16 * Test.instanceCount) + i6) - Test.fFld);
                    i7 >>= i17;
                    if (b) break;
                    Test.instanceCount = i4;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + l2 + i13 + i14 + i15 + (b ? 1 : 0) + i16 + i17 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i3, double d, double d1) {

        int i18=-219, i19=56869, i20=29136, iArr3[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr3, 0);

        vMeth();
        for (i18 = 5; i18 < 155; i18++) {
            i19 = (int)Test.fFld;
            d = i18;
            i3 = 28255;
            iArr3[i18] = (int)-4096200487260449927L;
            i3 = (int)Test.instanceCount;
            Test.instanceCount *= Test.byFld;
            i19 = -7;
            Test.fFld += i3;
            i20 = 1;
            while (++i20 < 11) {
                i3 = i18;
                i3 += (((i20 * i19) + Test.fFld) - i19);
                if (b1) break;
                if (i3 != 0) {
                }
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i18 + i19 + i20 + (b1 ? 1 : 0)
            + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-125, i2=-199, i21=0, i22=-27580, i23=11967, i24=9, i25=2, i26=-202, i27=38002, i28=12, i29=-7,
            iArr[]=new int[N];
        float f=74.331F;
        long l=42014L;
        boolean b2=true, bArr1[]=new boolean[N];
        short s=19568;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr, 201);
        FuzzerUtils.init(bArr1, false);
        FuzzerUtils.init(byArr, (byte)113);

        i = (int)(lArrFld[(i >>> 1) % N] += (long)(i = (int)f));
        for (int i1 : iArr) {
            for (l = 3; l < 63; ++l) {
                i -= i2;
                dFld = (++i1);
                i -= (int)(Test.instanceCount--);
            }
            iMeth(-9, dFld, dFld);
            bArr1[(i1 >>> 1) % N] = b2;
        }
        for (i21 = 1; 131 > i21; i21++) {
            byArr[i21 - 1][i21] -= (byte)i22;
            for (i23 = 193; i23 > 8; --i23) {
                dFld -= l;
            }
            for (i25 = 10; i25 < 193; ++i25) {
                for (i27 = 1; i27 < 2; ++i27) {
                    Test.instanceCount -= (long)Test.fFld;
                    Test.instanceCount -= i22;
                    dFld -= 46L;
                    i26 += (((i27 * l) + i) - i23);
                    i26 -= i24;
                    i26 -= (int)2945961309L;
                }
                iArr[i21] = (int)l;
                i &= i24;
            }
            i29 = 193;
            do {
                i22 += (i29 * i2);
                Test.instanceCount = 37667;
            } while (--i29 > 0);
            lArrFld[i21] -= 29262;
            s -= (short)-10655;
        }
        i22 = (int)Test.instanceCount;
        lArrFld[(-87 >>> 1) % N] += s;
        i26 += (int)dFld;

        FuzzerUtils.out.println("i f l = " + i + "," + Float.floatToIntBits(f) + "," + l);
        FuzzerUtils.out.println("i2 b2 i21 = " + i2 + "," + (b2 ? 1 : 0) + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 s = " + i28 + "," + i29 + "," + s);
        FuzzerUtils.out.println("iArr bArr1 byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr1)
            + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
