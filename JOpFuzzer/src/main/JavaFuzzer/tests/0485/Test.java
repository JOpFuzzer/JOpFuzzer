// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:52 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-117L;
    public static boolean bFld=false;
    public int iFld=-786;
    public static short sFld=-5472;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        int i3=-17464, i4=-2, i5=-45, i6=-14, i7=64086, i8=200, i9=4, iArr[]=new int[N];
        byte by=82, byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -128);
        FuzzerUtils.init(byArr, (byte)-18);

        i3 = (int)2.773F;
        for (i4 = 12; i4 < 287; ++i4) {
            if (true) {
                for (i6 = 1; i6 < 6; i6 += 3) {
                    short s=-1616;
                    iArr[i4] -= (int)Test.instanceCount;
                    s = (short)i4;
                    i3 += (int)Test.instanceCount;
                    i3 -= i6;
                    i7 <<= by;
                    Test.instanceCount = 193;
                    for (i8 = 6; i8 > 1; i8 -= 2) {
                        int i10=-12;
                        f -= (float)-1.46814;
                        byArr[i8 + 1] = (byte)i10;
                        i7 = i5;
                        i5 += i8;
                    }
                }
            } else {
                i5 *= (int)Test.instanceCount;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + by + i8 + i9 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i, int i1, int i2) {

        float f1=75.367F;
        double d=-2.83827;
        int i11=161, i12=16290, iArr1[][]=new int[N][N];
        short s1=10682;
        byte by1=72;

        FuzzerUtils.init(iArr1, -245);

        vMeth2(f1);
        i = i;
        iArr1 = iArr1;
        f1 = (float)d;
        for (i11 = 266; i11 > 13; i11 -= 2) {
            Test.instanceCount *= (long)d;
            s1 = (short)-8.161F;
            d = i2;
            by1 -= (byte)i1;
            i12 += (i11 * i2);
            switch ((((i >>> 1) % 4) * 5) + 59) {
            case 75:
                Test.bFld = Test.bFld;
                f1 = -2.450F;
                i1 -= i;
                break;
            case 61:
                iArr1[i11][i11] *= i1;
            case 60:
                if (i2 != 0) {
                    vMeth1_check_sum += i + i1 + i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i11 + i12
                        + s1 + by1 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                break;
            case 68:
                i12 += (i11 * i11);
                break;
            default:
                iArr1[i11 + 1][i11] -= (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i + i1 + i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i11 + i12 + s1 + by1
            + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l) {

        int i13=7, i14=-47005, i15=213, i16=-182, i17=-205, i18=40, i19=31, i20=-164;
        float f2=-41.867F;

        vMeth1(i13, i13, i13);
        i13 = i13;
        i13 -= (int)l;
        for (i14 = 14; i14 < 270; i14 += 3) {
            switch (((203 >>> 1) % 3) + 121) {
            case 121:
                i16 = 1;
                while (++i16 < 18) {
                    i15 -= i16;
                }
                f2 -= i13;
                Test.instanceCount >>= i13;
            case 122:
                for (i17 = 18; 1 < i17; --i17) {
                    for (i19 = 1; i19 < 2; i19++) {
                        i15 >>= i15;
                        l -= (long)1.22F;
                        i18 += i19;
                        l = (long)f2;
                    }
                }
                break;
            case 123:
                i20 -= i16;
                break;
            }
        }
        vMeth_check_sum += l + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        long l1=3810057414L;
        float f3=1.330F, fArr[]=new float[N];
        int i21=-22627, i22=37807, i23=5, i24=-14, i25=241, iArr2[]=new int[N];
        double d1=-99.122893;

        FuzzerUtils.init(iArr2, -142);
        FuzzerUtils.init(fArr, -1.232F);

        vMeth(Test.instanceCount);
        Test.instanceCount = iFld;
        iArr2[(iFld >>> 1) % N] = -40654;
        l1 = 1;
        while (++l1 < 140) {
            Test.instanceCount >>= iFld;
        }
        f3 -= l1;
        fArr[(-13 >>> 1) % N] = -48910;
        for (i21 = 4; i21 < 276; ++i21) {
            i22 = iFld;
            for (i23 = 4; i23 < 92; i23++) {
                f3 += Test.instanceCount;
                i24 -= iFld;
                i22 <<= -9318;
                i22 -= -9;
                fArr = fArr;
                try {
                    iArr2[i23] = (-668311495 / iArr2[i23]);
                    iFld = (i23 / i21);
                    iFld = (67 / iArr2[i21]);
                } catch (ArithmeticException a_e) {}
                i24 = (int)d1;
                i24 *= i23;
                switch ((i23 % 2) + 38) {
                case 38:
                    Test.sFld -= (short)f3;
                    if (Test.bFld) {
                        Test.bFld = true;
                        Test.bFld = Test.bFld;
                        switch (((i23 % 2) * 5) + 14) {
                        case 22:
                            Test.instanceCount += (i23 ^ Test.instanceCount);
                        case 20:
                            i24 = -67;
                            try {
                                i22 = (130 / iArr2[i23]);
                                i25 = (134 / i24);
                                iFld = (i23 / i25);
                            } catch (ArithmeticException a_e) {}
                            Test.instanceCount *= i23;
                            break;
                        }
                        if (Test.bFld) continue;
                    } else if (true) {
                        Test.sFld = (short)149;
                    } else if (Test.bFld) {
                        Test.bFld = Test.bFld;
                    } else {
                        fArr[i21 + 1] -= i23;
                    }
                    break;
                case 39:
                    iFld <<= (int)l1;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("l1 f3 i21 = " + l1 + "," + Float.floatToIntBits(f3) + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d1 i25 iArr2 = " + Double.doubleToLongBits(d1) + "," + i25 + "," +
            FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld iFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + iFld);
        FuzzerUtils.out.println("Test.sFld = " + Test.sFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
