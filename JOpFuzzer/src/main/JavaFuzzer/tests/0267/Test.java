// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:47 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=196L;
    public static boolean bFld=true;
    public float fFld=18.617F;
    public static byte byFld=-63;
    public static long lArrFld[][]=new long[N][N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i5, float f) {

        int i6=-8, i7=-2, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 0);

        iArr1[(i5 >>> 1) % N] -= i5;
        for (i6 = 13; 312 > i6; i6++) {
            iArr1 = iArr1;
        }
        long meth_res = i5 + Float.floatToIntBits(f) + i6 + i7 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(byte by, long l3) {

        int i4=239, iArr[]=new int[N];
        float f1=-2.78F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -8870176439708093519L);
        FuzzerUtils.init(iArr, -14);

        lArr[(i4 >>> 1) % N] = Integer.reverseBytes(iArr[(i4 >>> 1) % N]);
        fMeth(-50064, f1);
        vMeth1_check_sum += by + l3 + i4 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, long l1, long l2) {

        int i3=20082, i9=-77, i10=-43284, i11=-48178, i12=146, iArr2[]=new int[N];
        byte by1=-85;
        double d=119.76673, dArr[]=new double[N];
        short s1=10275;

        FuzzerUtils.init(iArr2, -47519);
        FuzzerUtils.init(dArr, 22.116258);

        i3 = 1;
        while (++i3 < 340) {
            vMeth1(by1, l1);
            l1 = 17922;
            try {
                i9 = (i3 / 47150);
                iArr2[i3] = (-26328 % i3);
                i9 = (i9 / i3);
            } catch (ArithmeticException a_e) {}
            d -= i3;
            for (i10 = 1; i10 < 5; ++i10) {
                i9 = i3;
                if (Test.bFld) continue;
                s1 += (short)l;
                Test.bFld = Test.bFld;
                dArr = dArr;
                i12 = -134;
                if (Test.bFld) {
                    i12 ^= i12;
                    i9 += i10;
                }
            }
        }
        vMeth_check_sum += l + l1 + l2 + i3 + by1 + i9 + Double.doubleToLongBits(d) + i10 + i11 + s1 + i12 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-211, i1=1, i2=133, i13=-51141, i14=0, i15=-9, i16=-6, i17=165, i18=-61858, iArr3[]=new int[N],
            iArr4[]=new int[N];
        short s=24990;
        double d1=35.119903;

        FuzzerUtils.init(iArr3, 35478);
        FuzzerUtils.init(iArr4, 4);

        i = s;
        if (false) {
            for (i1 = 17; i1 < 377; i1++) {
                if (Test.bFld) {
                    switch ((((((int)(13 + (Test.instanceCount + i2))) >>> 1) % 2) * 5) + 2) {
                    case 6:
                        vMeth(-8L, Test.instanceCount, Test.instanceCount);
                        for (i13 = 4; i13 < 70; ++i13) {
                            for (i15 = i13; i15 < 2; ++i15) {
                                Test.instanceCount += (((i15 * Test.instanceCount) + i13) - i1);
                                i2 += i2;
                                iArr3[i13 - 1] = (int)d1;
                                try {
                                    iArr3[i15 - 1] = (17943 / iArr3[i1 - 1]);
                                    i16 = (175 % iArr3[i15]);
                                    i = (i15 % i13);
                                } catch (ArithmeticException a_e) {}
                                i16 += (((i15 * i1) + i14) - i1);
                            }
                            i14 = 6;
                            fFld = i15;
                            iArr3[i13 - 1] = (int)Test.instanceCount;
                            try {
                                i14 = (-12553 % iArr3[i1 - 1]);
                                i = (-39703 / iArr3[i13 - 1]);
                                i2 = (58 % iArr4[i13 - 1]);
                            } catch (ArithmeticException a_e) {}
                            if (Test.bFld) {
                                i14 -= i15;
                                if (true) break;
                                for (i17 = 1; i17 < 2; i17++) {
                                    if (Test.bFld) {
                                        fFld += i17;
                                        iArr3[i13 + 1] = 81;
                                        iArr4[i17] *= -79;
                                    } else {
                                        Test.instanceCount += (i17 * i17);
                                        Test.lArrFld[i13][i13] >>>= Test.byFld;
                                    }
                                    dArrFld[i17] = 2.26051;
                                    i18 = (int)-7L;
                                    i14 >>>= i14;
                                }
                            } else {
                                if (Test.bFld) continue;
                            }
                        }
                        break;
                    case 7:
                        Test.instanceCount >>= 19594;
                        break;
                    }
                }
            }
        } else {
            i16 *= i2;
        }

        FuzzerUtils.out.println("i s i1 = " + i + "," + s + "," + i1);
        FuzzerUtils.out.println("i2 i13 i14 = " + i2 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 d1 = " + i15 + "," + i16 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i17 i18 iArr3 = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("iArr4 = " + FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld fFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.byFld Test.lArrFld dArrFld = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
