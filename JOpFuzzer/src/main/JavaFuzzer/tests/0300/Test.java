// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=145L;
    public static double dFld=101.45137;
    public static volatile float fFld=1.941F;
    public static int iFld=23560;
    public static int iFld1=187;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 114);
        FuzzerUtils.init(Test.byArrFld, (byte)45);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, long l1) {

        int i9=5339, i10=-57, i11=9, i12=-1, i13=53820, i14=-10, i15=-10;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, 80L);
        FuzzerUtils.init(fArr, 0.34F);

        for (i9 = 187; i9 > 10; i9--) {
            i10 = i9;
            i10 += (((i9 * i9) + l1) - i11);
            l1 = i9;
            i11 += (int)Test.instanceCount;
            Test.dFld *= i8;
            Test.fFld -= l1;
            i11 += (i9 * i9);
        }
        for (i12 = 19; i12 < 322; ++i12) {
            l1 -= i12;
            for (i14 = 1; i14 < 5; i14++) {
                fArr[i14] += i12;
                l1 += i14;
            }
            i8 = -107;
            Test.iArrFld[i12 + 1] += (int)-3732863388L;
        }
        vMeth2_check_sum += i8 + l1 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(long l, int i3, float f) {

        int i4=130, i5=9845, i6=9, i7=7;
        short s=-25948;

        for (i4 = 6; i4 < 189; i4++) {
            i3 -= ((++i5) + (s += (short)(i5 - -5)));
            Test.iArrFld[i4 - 1] = Math.abs(9);
            for (i6 = 1; i6 < 9; i6++) {
                i7 ^= (int)Test.instanceCount;
                Test.dFld = (i3--);
                vMeth2(-57116, Test.instanceCount);
            }
            Test.instanceCount += i5;
            i5 *= 15051;
            f += (((i4 * i5) + Test.fFld) - i4);
        }
        vMeth1_check_sum += l + i3 + Float.floatToIntBits(f) + i4 + i5 + s + i6 + i7;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i16=209, i17=-18541, i18=-9, i19=-7;
        byte by=-105;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -970243105965379119L);

        lArr[(i >>> 1) % N] = Math.max((int)(lArr[(i >>> 1) % N] + (i << i2)), Test.iArrFld[(i >>> 1) % N]++);
        i2 += (--i);
        vMeth1(Test.instanceCount, i, Test.fFld);
        Test.dFld += i2;
        i16 = 1;
        while (++i16 < 175) {
            i17 = 1;
            do {
                Test.iFld += (i17 | by);
                Test.iFld1 += (int)Test.instanceCount;
                if (i16 != 0) {
                    vMeth_check_sum += i + i1 + i2 + i16 + i17 + by + (b ? 1 : 0) + i18 + i19 +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
                b = false;
                for (i18 = 1; i18 > 1; i18 -= 3) {
                    by = (byte)i1;
                    Test.instanceCount += i16;
                    Test.byArrFld[i16] = (byte)i18;
                    Test.instanceCount += i18;
                }
            } while (++i17 < 9);
        }
        vMeth_check_sum += i + i1 + i2 + i16 + i17 + by + (b ? 1 : 0) + i18 + i19 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i20=-47, i21=23767, i22=108, i23=-5, i24=100, i25=-1, i26=-3;
        short s1=-2604;
        boolean b1=false, bArr[]=new boolean[N];
        byte by1=-104;

        FuzzerUtils.init(bArr, false);

        vMeth(Test.iFld1, 0, Test.iFld);
        Test.iFld1 *= Test.iFld1;
        Test.iFld += (int)Test.fFld;
        for (i20 = 18; 327 > i20; ++i20) {
            for (i22 = 81; i22 > 5; i22 -= 3) {
                Test.fFld /= (Test.iFld1 | 1);
                Test.instanceCount -= i23;
                i23 = 33320;
                Test.iFld1 <<= i20;
                s1 += (short)(((i22 * Test.iFld) + s1) - Test.iFld1);
                i21 += Test.iFld1;
                s1 -= (short)i23;
                try {
                    i21 = (i20 % 47);
                    Test.iArrFld[i20] = (i23 % -9163);
                    Test.iFld = (1004220958 / i23);
                } catch (ArithmeticException a_e) {}
            }
            for (i24 = 3; i24 < 81; ++i24) {
                i21 += (i24 - i22);
                if (b1) break;
                switch (((i20 % 6) * 5) + 122) {
                case 136:
                    s1 <<= (short)Test.instanceCount;
                    Test.iFld += (i24 | Test.instanceCount);
                    i26 = 1;
                    while (++i26 < 2) {
                        Test.iFld1 = i24;
                        switch ((i26 % 1) + 46) {
                        case 46:
                            switch ((i24 % 2) + 60) {
                            case 60:
                                Test.iFld1 *= (int)Test.instanceCount;
                                Test.fFld += i26;
                                Test.iFld = Test.iFld;
                                Test.iArrFld[i20 + 1] >>= i20;
                                break;
                            case 61:
                                Test.iFld += (((i26 * i24) + Test.instanceCount) - i24);
                                bArr[i26 - 1] = b1;
                                Test.iArrFld[i24 - 1] ^= i21;
                                break;
                            }
                            break;
                        }
                    }
                case 134:
                    Test.fFld += (7242426869708851359L + (i24 * i24));
                    break;
                case 148:
                    Test.iFld1 -= Test.iFld;
                    break;
                case 139:
                case 149:
                    if (false) break;
                    break;
                case 137:
                    by1 = by1;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 s1 i24 = " + i23 + "," + s1 + "," + i24);
        FuzzerUtils.out.println("i25 b1 i26 = " + i25 + "," + (b1 ? 1 : 0) + "," + i26);
        FuzzerUtils.out.println("by1 bArr = " + by1 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.iFld1 Test.iArrFld = " + Test.iFld + "," + Test.iFld1 + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
