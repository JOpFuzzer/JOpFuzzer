// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=7503876827988629569L;
    public static float fFld=0.794F;
    public static double dFld=-2.6025;
    public static byte byArrFld[]=new byte[N];
    public static volatile int iArrFld[]=new int[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)75);
        FuzzerUtils.init(Test.iArrFld, 1);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=12, i6=-20705, i7=-14, i8=-8, i9=-9017, iArr2[]=new int[N];
        byte by=-49;
        double d=21.20509;
        float f=1.162F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, 6);
        FuzzerUtils.init(lArr, -240L);

        Test.instanceCount /= (Test.instanceCount | 1);
        iArr2[(i5 >>> 1) % N] -= i5;
        for (i6 = 5; 141 > i6; i6++) {
            by = (byte)i6;
            d += f;
        }
        i7 -= i7;
        f = (float)d;
        i5 -= (int)1214L;
        for (byte by1 : Test.byArrFld) {
            i5 *= i6;
            i5 += i5;
            for (i8 = 1; i8 < 4; i8++) {
                f += Test.instanceCount;
                lArr[i8] <<= Test.instanceCount;
                Test.instanceCount += -42424;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + by + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i8 + i9 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i10=-12085, i11=0, i13=238, i14=-11, i15=214, i16=12;
        byte by2=-35;
        float f1=0.511F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.95531);

        vMeth1();
        for (i10 = 8; i10 < 262; ++i10) {
            i4 *= i10;
        }
        by2 -= (byte)162L;
        Test.iArrFld = FuzzerUtils.int1array(N, (int)-35454);
        for (int i12 : Test.iArrFld) {
            dArr[(i2 >>> 1) % N] += i2;
        }
        Test.instanceCount = i4;
        for (i13 = 11; 283 > i13; i13++) {
            for (i15 = 1; i15 < 6; i15++) {
                try {
                    Test.iArrFld[i13] = (i15 % i10);
                    i16 = (i4 / -188);
                    Test.iArrFld[i13] = (i2 % i16);
                } catch (ArithmeticException a_e) {}
                f1 = i4;
                if (i14 != 0) {
                    vMeth_check_sum += i2 + i3 + i4 + i10 + i11 + by2 + i13 + i14 + i15 + i16 +
                        Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                i14 *= i13;
                f1 += i15;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i10 + i11 + by2 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public int iMeth(long l) {

        int i1=12, i17=-20042, i18=-1, i19=-6, iArr1[]=new int[N];
        float f2=0.780F, fArr[]=new float[N];
        double d1=83.18062;
        short s=-2489;

        FuzzerUtils.init(iArr1, 39091);
        FuzzerUtils.init(fArr, -43.340F);

        switch (((iArr1[(i1 >>> 1) % N] >>> 1) % 2) + 94) {
        case 94:
            vMeth(i1, i1, i1);
            break;
        case 95:
            i1 += i1;
            for (i17 = 2; i17 < 123; i17 += 2) {
                i1 = i17;
                for (f2 = 1; f2 < 26; f2++) {
                    iArr1 = iArr1;
                    lArrFld = lArrFld;
                }
                i1 += i17;
                i18 >>= i19;
                d1 *= f2;
                s += (short)(i17 + Test.instanceCount);
                i19 = (int)Test.instanceCount;
                Test.fFld += i17;
            }
            break;
        default:
            s = (short)i18;
        }
        long meth_res = l + i1 + i17 + i18 + Float.floatToIntBits(f2) + i19 + Double.doubleToLongBits(d1) + s +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i20=39320, i21=0, i22=12, i23=105, i24=149, i25=-4, i26=72, i27=-58423, i28=6, iArr[]=new int[N];
        short s1=-29359;
        boolean b=true;

        FuzzerUtils.init(iArr, 55385);

        iArr[(i >>> 1) % N] <<= iMeth(1219264787882625315L);
        lArrFld[(i >>> 1) % N][(i >>> 1) % N] -= i;
        for (i20 = 5; i20 < 306; ++i20) {
            Test.iArrFld[i20] >>= i;
            i += i20;
            if (false) break;
            i22 += (((i20 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
            Test.iArrFld[i20] += i21;
            iArr[i20 - 1] += (int)Test.dFld;
            Test.instanceCount = -20237;
        }
        Test.iArrFld[(17686 >>> 1) % N] *= i22;
        lArrFld[(-40885 >>> 1) % N][(-116 >>> 1) % N] = i21;
        for (i23 = 4; i23 < 149; i23++) {
            try {
                Test.iArrFld[i23 + 1] = (22778 % i21);
                i21 = (-5580 / i);
                i22 = (45570 % Test.iArrFld[i23 - 1]);
            } catch (ArithmeticException a_e) {}
            i22 += i22;
            i >>= i;
            for (i25 = 9; i25 < 173; i25++) {
                for (i27 = 1; i27 < 2; i27++) {
                    i21 >>= s1;
                    i24 += (12 + (i27 * i27));
                    i28 += -53998;
                    s1 = (short)Test.instanceCount;
                    i26 = -142;
                    iArr[i23 - 1] -= (int)535487269179532351L;
                    i21 += (int)Test.instanceCount;
                    if (true) {
                        Test.instanceCount = i;
                        if (b) continue;
                        i28 *= -97;
                        i24 = (int)Test.dFld;
                    } else {
                        i22 >>>= (int)Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 s1 b = " + i28 + "," + s1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byArrFld Test.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
