// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-81L;
    public static volatile float fFld=2.428F;
    public static double dFld=75.114435;
    public static byte byFld=-87;
    public static boolean bFld=false;
    public static long lFld=2437018881L;
    public static volatile int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -176);
        FuzzerUtils.init(Test.dArrFld, 2.103517);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i10=-34312, i11=-39919;
        short s=-5178;
        byte by=104;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 62.126724);

        for (i10 = 2; i10 < 343; i10++) {
            Test.fFld += -43;
            s <<= (short)-10;
            dArr[i10] += i11;
            by += (byte)i11;
        }
        i11 |= (int)2870659281L;
        Test.fFld -= Test.instanceCount;
        long meth_res = i10 + i11 + s + by + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i7) {

        int i8=31492, i9=-244;

        i7 -= (-i7);
        for (i8 = 1; i8 < 263; i8 += 3) {
            Test.iArrFld[i8 - 1] = iMeth1();
        }
        Test.instanceCount += (long)Test.fFld;
        long meth_res = i7 + i8 + i9;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i5=6, i6=7, i12=11706, i13=-31756, i14=182;

        for (i5 = 2; i5 < 305; i5++) {
            Test.iArrFld[i5 - 1] = Test.iArrFld[i5 + 1];
            Test.instanceCount = ((Test.instanceCount + iMeth(i6)) * Test.instanceCount);
            Test.fFld /= (float)-15.68824;
            Test.instanceCount -= (long)Test.dFld;
            i12 = 1;
            while (++i12 < 5) {
                Test.fFld -= -106.663F;
                i2 += -234;
                for (i13 = 1; i13 < 1; i13++) {
                    Test.instanceCount *= (long)Test.fFld;
                    switch ((i12 % 1) + 59) {
                    case 59:
                        i14 = (int)Test.instanceCount;
                        Test.instanceCount = i13;
                        Test.dArrFld[i12 + 1] = Test.dFld;
                        break;
                    default:
                        Test.fFld = Test.byFld;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i12 + i13 + i14;
    }

    public void mainTest(String[] strArr1) {

        int i=-25216, i1=-13, i15=3, i16=201, i17=-90, i18=7, i19=159, i20=232;
        short s1=-5342, sArr[]=new short[N];
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-47);
        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(sArr, (short)21620);

        for (i = 11; 176 > i; i++) {
            i1 -= (int)(byArr[i] * Math.abs(-i1));
            vMeth(i, 165, i1);
            Test.iArrFld[i - 1] -= (int)Test.instanceCount;
            Test.instanceCount += i;
            lArr[i] = -20892;
            for (i15 = i; 152 > i15; i15++) {
                Test.instanceCount += (24 + (i15 * i15));
                for (i17 = 1; 1 > i17; ++i17) {
                    Test.instanceCount += (i17 - i);
                    i18 >>= i;
                    switch (((i17 % 2) * 5) + 8) {
                    case 17:
                        i16 = i15;
                        i16 -= i17;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += i17;
                        break;
                    case 15:
                    default:
                        Test.instanceCount -= (long)1.755F;
                        if (Test.bFld) break;
                        i18 += (i17 | Test.instanceCount);
                        i16 += Test.byFld;
                    }
                }
                Test.lFld = 28311;
                lArr[i] >>= i;
                i18 += (i15 - Test.instanceCount);
            }
            Test.instanceCount += (long)1.26034;
            sArr[i] -= (short)38204L;
            i16 = i16;
        }
        if (Test.bFld) {
            for (i19 = 18; i19 < 367; i19++) {
                i18 += 14029;
                Test.lFld %= -14;
            }
        } else if (Test.bFld) {
            Test.iArrFld[(i19 >>> 1) % N] += -136;
        } else if (false) {
            s1 /= (short)(i20 | 1);
        }

        FuzzerUtils.out.println("i i1 i15 = " + i + "," + i1 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 s1 = " + i19 + "," + i20 + "," + s1);
        FuzzerUtils.out.println("byArr lArr sArr = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr) +
            "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.bFld Test.lFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
