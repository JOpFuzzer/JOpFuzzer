// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:58 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-32L;
    public static int iFld=-201;
    public static short sFld=-15185;
    public static double dFld=69.66041;
    public static volatile boolean bFld=false;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(byte by1) {

        int i7=58774, i8=44568, i9=65286, i10=-5, i11=22527;
        boolean b=true;
        float f=-117.73F;

        Test.instanceCount *= Test.iFld;
        for (i7 = 3; i7 < 183; i7++) {
            Test.iFld = (int)Test.instanceCount;
            Test.iFld *= i8;
            i8 += by1;
            Test.iFld += (i7 * Test.sFld);
            i8 = i9;
            Test.instanceCount = 238;
            switch ((i7 % 1) + 49) {
            case 49:
                for (i10 = i7; i10 < 9; i10 += 3) {
                    i9 = i8;
                }
                Test.dFld = Test.instanceCount;
                if (i11 != 0) {
                    vMeth_check_sum += by1 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + Float.floatToIntBits(f);
                    return;
                }
                break;
            }
            if (b) continue;
            f += Test.instanceCount;
        }
        vMeth_check_sum += by1 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + Float.floatToIntBits(f);
    }

    public static int iMeth1(int i6, byte by) {

        int i12=-12, i13=57089, i14=38587, i15=-7, i16=10, i17=-2, iArr[]=new int[N];
        float f1=0.745F;
        double dArr[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 120.17536);
        FuzzerUtils.init(iArr, -226);
        FuzzerUtils.init(lArr1, 3055505916L);

        vMeth(by);
        i6 &= (int)2790901818L;
        for (i12 = 138; i12 > 6; i12--) {
            f1 += Test.sFld;
            i6 = i12;
            Test.bFld = Test.bFld;
            for (i14 = 1; i14 < 12; i14++) {
                switch ((i12 % 1) + 77) {
                case 77:
                    Test.iFld = i14;
                    dArr[i14 + 1] -= i13;
                    iArr[i12 - 1] >>= 50589;
                    for (i16 = 2; 1 < i16; i16--) {
                        iArr[i16] >>= i15;
                        i17 = (int)f1;
                        if (Test.bFld) break;
                    }
                    break;
                default:
                    lArr1[i14 - 1] *= -45860;
                }
            }
        }
        long meth_res = i6 + by + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i5=-25788, i18=62514, i19=115, i20=-131, i21=15214, i22=203, i23=-55340, i24=-193, iArr1[][]=new int[N][N];
        byte by2=-56;
        float f2=2.966F;

        FuzzerUtils.init(iArr1, -232);

        i5 = (int)Test.instanceCount;
        Test.instanceCount &= iMeth1(-5, by2);
        for (i18 = 10; i18 < 374; i18++) {
            i20 = 1;
            do {
                if (false) break;
                if (true) continue;
            } while (++i20 < 5);
            Test.iFld += (11 + (i18 * i18));
            for (i21 = i18; 5 > i21; ++i21) {
                if (Test.iFld != 0) {
                }
                f2 += by2;
                for (i23 = 1; i23 < 1; ++i23) {
                    Test.instanceCount += (((i23 * i5) + i20) - Test.instanceCount);
                    i5 -= (int)Test.dFld;
                    i5 += i5;
                    iArr1[i21][i23] = i22;
                }
            }
        }
        long meth_res = i5 + by2 + i18 + i19 + i20 + i21 + i22 + Float.floatToIntBits(f2) + i23 + i24 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6922, i1=64198, i2=4, i3=-221, i4=-13, i25=0, i26=25968, i27=8, i28=-13, i29=-31, i30=-14, i31=2152,
            i32=226, i33=222, iArr2[]=new int[N];
        double d=0.673;
        float f3=46.839F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 46319L);
        FuzzerUtils.init(iArr2, 14);

        for (i = 9; i < 280; i++) {
            for (d = i; d < 93; d++) {
                for (i3 = 1; i3 < 1; ++i3) {
                    lArr[i3 - 1] -= (long)(d - ((i - i1) * (i1 - i1)));
                    Test.instanceCount = -7397106380179604406L;
                    Test.instanceCount = iMeth();
                    iArr2[i - 1] = (int)Test.instanceCount;
                }
                for (i25 = 1; i25 < 1; i25++) {
                    try {
                        i4 = (-39278 / i1);
                        iArr2[i - 1] = (i3 % -844541097);
                        i2 = (i1 % -222984578);
                    } catch (ArithmeticException a_e) {}
                    iArr2[i + 1] = (int)Test.instanceCount;
                    i1 = -126;
                }
                i4 = (int)Test.instanceCount;
                i27 = 1;
                while (++i27 < 1) {
                    lArr[i27 + 1] += i1;
                    Test.iFld = i1;
                    i4 += (int)8235446764543221220L;
                    f3 -= 59816;
                }
                Test.instanceCount += i1;
                Test.iFld = i2;
                lArr[(int)(d + 1)] = i;
            }
            Test.iFld = i3;
        }
        i4 |= i4;
        for (i28 = 16; i28 < 327; ++i28) {
            for (i30 = i28; i30 < 81; i30++) {
                f3 = i31;
                for (i32 = 1; i32 < 1; i32 += 2) {
                    i29 = (int)-2323005825L;
                    i29 += (int)f3;
                    Test.instanceCount += (((i32 * i29) + i4) - i2);
                }
                Test.instanceCount &= i27;
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("f3 i28 i29 = " + Float.floatToIntBits(f3) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 lArr iArr2 = " + i33 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.bFld = " + Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 :
            0));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
