// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:45 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3091600189L;
    public short sFld=-24326;
    public static double dFld=-2.126135;
    public static byte byFld=-25;
    public static volatile double dArrFld[]=new double[N];
    public static byte byArrFld[]=new byte[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.59048);
        FuzzerUtils.init(Test.byArrFld, (byte)118);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i9, int i10) {

        int i11=19574, i12=38558, i13=160, i14=-37, iArr1[]=new int[N];
        float f=-2.158F;
        double d2=-2.6887;
        boolean b1=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 85L);
        FuzzerUtils.init(iArr1, -19410);

        for (i11 = 23; i11 < 372; i11++) {
            f = f;
            for (i13 = 1; i13 < 5; ++i13) {
                d2 = 1;
                do {
                    f = i13;
                    l1 <<= l1;
                    i14 = (int)Test.instanceCount;
                    lArr1 = lArr1;
                    Test.instanceCount >>= i10;
                    i9 += (int)f;
                    iArr1[(int)(d2 - 1)] = i9;
                    i14 <<= i14;
                } while (++d2 < 2);
                i10 -= i10;
                lArr1[i11 - 1] = i9;
                if (b1) continue;
            }
        }
        vMeth_check_sum += l1 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 +
            Double.doubleToLongBits(d2) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth1(long l, double d1, int i8) {

        int i15=-186, i16=-24271, i17=-34841, i18=72, i19=9, i20=-12, iArr2[]=new int[N];
        boolean b2=true, bArr[]=new boolean[N];
        float f1=2.55F;
        short sArr[]=new short[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -123);
        FuzzerUtils.init(sArr, (short)13253);

        vMeth(l, i8, i8);
        i8 = i8;
        for (i15 = 17; i15 < 333; ++i15) {
            i16 += i16;
            l >>= -55977L;
        }
        for (i17 = 4; i17 < 148; ++i17) {
            switch ((i17 % 9) + 30) {
            case 30:
                l += i17;
                for (i19 = 1; i19 < 11; i19++) {
                    long l2=-230L;
                    Test.dArrFld = Test.dArrFld;
                    bArr[i19 - 1] = b2;
                    Test.byArrFld[i17] *= (byte)i20;
                    l >>= l2;
                }
                d1 %= 9;
                d1 = i18;
            case 31:
                i8 = (int)-491216627L;
                break;
            case 32:
                f1 += (i17 - i8);
                break;
            case 33:
                i8 <<= i16;
                break;
            case 34:
                iArr2[i17 - 1] = -5;
                break;
            case 35:
                i20 = i20;
            case 36:
                f1 /= ((long)(d1) | 1);
                break;
            case 37:
                iArr2[i17 + 1] = i16;
                break;
            case 38:
                sArr[i17 - 1] -= (short)i20;
            }
        }
        long meth_res = l + Double.doubleToLongBits(d1) + i8 + i15 + i16 + i17 + i18 + i19 + i20 + (b2 ? 1 : 0) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=-1, i3=22526, i4=35910, i5=-139, i6=-2, i7=-77, iArr[]=new int[N];
        double d=-2.29485;
        byte by=-89;
        boolean b=false;
        float f2=1.907F;
        short s=29684;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 4060L);
        FuzzerUtils.init(iArr, 20);

        i2 = 1;
        while (++i2 < 264) {
            d *= (i3--);
            for (i4 = 1; i4 < 6; ++i4) {
                for (i6 = 1; i6 < 2; ++i6) {
                    i3 += (int)((by - (i3 + i4)) - ((122.999F + (by %= (byte)(i2 | 1))) * i2));
                    d *= -26.165F;
                    lArr[i6][i6 - 1] = Test.instanceCount;
                    lArr[i4 - 1][i4 + 1] <<= (long)(((i7 >>= i5) >> (i3 + i2)) - (--d));
                    b = b;
                    i5 *= (int)((iArr[i2] + i7) - ((6 * Test.instanceCount) + (i6 - i2)));
                    Test.instanceCount += (long)(iMeth1(Test.instanceCount, d, i4) - f2);
                    Test.instanceCount = i5;
                    d = s;
                }
                i3 -= i3;
                i5 = i4;
            }
        }
        long meth_res = i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + by + (b ? 1 : 0) +
            Float.floatToIntBits(f2) + s + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-200, i1=-44437, i21=-18006, i22=8, i23=209, i24=14143, i25=227, i26=11, i27=8, i28=9, i29=-36836;
        boolean b3=false;
        float f3=1.1019F;
        long l3=1795386765L;

        for (i = 20; i < 364; ++i) {
            Test.instanceCount += (iMeth() + 23705L);
            for (i21 = 1; i21 < 73; ++i21) {
                i22 = -14;
                i23 = 1;
                while (++i23 < 2) {
                    if (b3) continue;
                }
                if (true) continue;
                i22 *= -52;
                i1 += (int)Test.instanceCount;
                for (i24 = 1; i24 < 2; ++i24) {
                    if (b3) break;
                }
            }
            for (i26 = 3; i26 < 73; i26++) {
                switch (((i23 >>> 1) % 2) + 67) {
                case 67:
                    f3 += (i26 * i26);
                    i28 = 1;
                    while (++i28 < 2) {
                        i25 ^= 249;
                        Test.instanceCount = i1;
                    }
                    break;
                case 68:
                    b3 = b3;
                    i1 = -18575;
                    i22 += (((i26 * l3) + f3) - i1);
                    break;
                }
                sFld += (short)(i26 * i28);
                iArrFld[i + 1] = (int)1434985400L;
            }
            i29 = 1;
            while (++i29 < 73) {
                if (false) break;
                if (b3) continue;
                Test.dFld = -101;
                i1 += Test.byFld;
                b3 = true;
            }
            i25 += (i * l3);
        }
        i1 >>= i;

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 b3 = " + i22 + "," + i23 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 f3 i28 = " + i27 + "," + Float.floatToIntBits(f3) + "," + i28);
        FuzzerUtils.out.println("l3 i29 = " + l3 + "," + i29);

        FuzzerUtils.out.println("Test.instanceCount sFld Test.dFld = " + Test.instanceCount + "," + sFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.dArrFld Test.byArrFld = " + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
