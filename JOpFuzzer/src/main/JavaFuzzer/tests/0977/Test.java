// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static int iFld=-39163;
    public static float fFld=0.943F;
    public short sFld=-19304;
    public volatile double dFld=101.34761;
    public byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l3, float f1) {


        Test.iFld /= (int)((long)(f1) | 1);
        vMeth2_check_sum += l3 + Float.floatToIntBits(f1);
    }

    public void vMeth1(long l2) {

        double d=6.49748;
        int i2=-4, i3=-10, i4=12, i5=1;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12133L);

        vMeth2(Test.instanceCount, Test.fFld);
        Test.iFld = Test.iFld;
        byArrFld[(Test.iFld >>> 1) % N] = (byte)Test.iFld;
        for (long l4 : lArr) {
            d = 1;
            do {
                Test.iFld += (int)d;
                for (i2 = 1; i2 > 1; --i2) {
                    Test.iFld = i3;
                    Test.iFld = sFld;
                    Test.iFld += (int)(0L + (i2 * i2));
                }
                for (i4 = 1; i4 < 1; ++i4) {
                    byArrFld[i4] -= (byte)i4;
                    i5 = i2;
                    dFld -= 12;
                    i3 += (i4 * i4);
                }
            } while (++d < 4);
        }
        vMeth1_check_sum += l2 + Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l1) {

        byte by=-80;
        int i6=-70, i7=-3524, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -1);

        vMeth1(Test.instanceCount);
        by *= (byte)Test.iFld;
        l1 = l1;
        iArr[(Test.iFld >>> 1) % N] = (int)Test.fFld;
        for (i6 = 17; i6 < 276; ++i6) {
            i7 += i6;
            i7 = Test.iFld;
        }
        Test.fFld *= -79;
        vMeth_check_sum += l1 + by + i6 + i7 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        long l=-19556L, lArr1[]=new long[N];
        int i=-10640, i1=-247, i8=5, i9=-5, i10=20972, i11=-103, i12=224, i13=-41917, iArr1[]=new int[N];
        float f=1.718F, fArr[]=new float[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, -189);
        FuzzerUtils.init(lArr1, -2088669724164055389L);
        FuzzerUtils.init(fArr, -2.286F);

        Test.iFld %= (int)(0 | 1);
        for (l = 282; l > 5; --l) {
            Test.instanceCount += (long)(Test.instanceCount *= (long)((Test.iFld - f) - (Test.instanceCount - 0.344F)));
            i1 = 1;
            while (++i1 < 91) {
                vMeth(l);
                iArr1[(int)(l - 1)] = i;
                b = b;
                for (i8 = 1; i8 < 1; i8++) {
                    Test.iFld >>= i8;
                }
                i += (int)Test.instanceCount;
            }
            i9 -= 3;
            iArr1[(int)(l + 1)] = (int)Test.instanceCount;
            sFld = (short)l;
            if (false) break;
            i = i;
            if (b) continue;
        }
        for (i10 = 178; i10 > 11; i10 -= 3) {
            for (long l5 : lArr1) {
                i *= sFld;
                i9 = i10;
                Test.fFld += (float)dFld;
                iArr1[i10 - 1] += 7;
                switch (((i10 % 10) * 5) + 1) {
                case 9:
                    i9 += (-240 + (i10 * i10));
                    fArr[i10] *= l;
                    break;
                case 28:
                    for (i12 = 1; 2 > i12; i12++) {
                        if (b) {
                            Test.instanceCount = i8;
                            i = (int)f;
                        } else if (true) {
                            Test.instanceCount -= i13;
                        } else {
                            i9 >>= 13;
                        }
                    }
                    break;
                case 43:
                    i = 32105;
                    break;
                case 18:
                    Test.iFld += i10;
                    break;
                case 38:
                    i9 = i12;
                case 13:
                    Test.iFld = (int)l5;
                    break;
                case 4:
                    i11 += (i10 * i13);
                    break;
                case 12:
                    l5 <<= l;
                    break;
                case 35:
                    Test.instanceCount = sFld;
                    break;
                case 45:
                    iArr1[i10] += i;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("l i f = " + l + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 b i8 = " + i1 + "," + (b ? 1 : 0) + "," + i8);
        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 iArr1 = " + i12 + "," + i13 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("lArr1 fArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("sFld dFld byArrFld = " + sFld + "," + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
