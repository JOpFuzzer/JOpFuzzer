// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4859673962224187244L;
    public static volatile double dFld=1.43074;
    public static float fFld=-84.96F;
    public static int iFld=-74;
    public static boolean bFld=false;
    public static int iFld1=-10;
    public static short sFld=-14980;
    public static long lFld=19170L;
    public static byte byFld=-99;
    public static int iFld2=1;
    public static int iFld3=253;
    public static long lArrFld[]=new long[N];
    public static long lArrFld1[][]=new long[N][N];
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -7L);
        FuzzerUtils.init(Test.lArrFld1, -35614L);
        FuzzerUtils.init(Test.dArrFld, 0.97279);
        FuzzerUtils.init(Test.iArrFld, -122);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i=2860, i1=-231, i2=-11, i3=44365, i4=8;
        float f2=0.629F;
        double d=0.53360;
        byte by=-1, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-70);

        Test.instanceCount -= i;
        f2 *= Test.instanceCount;
        for (i1 = 8; i1 < 257; i1++) {
            byArr[i1] <<= (byte)i1;
            switch ((i1 % 6) + 108) {
            case 108:
                Test.instanceCount += (i1 | i2);
                d -= -3;
                Test.instanceCount += (((i1 * f2) + f2) - i);
                break;
            case 109:
                i += i1;
                break;
            case 110:
                for (i3 = 1; i3 < 7; i3++) {
                    i4 = -80;
                    by = (byte)i4;
                    Test.instanceCount = (long)f2;
                }
                by += (byte)(-32288 + (i1 * i1));
                Test.lArrFld[i1 + 1] += (long)f2;
                break;
            case 111:
                Test.instanceCount |= -26245;
                break;
            case 112:
                i2 = i1;
                break;
            case 113:
                i4 <<= (int)Test.instanceCount;
                break;
            }
        }
        vMeth1_check_sum += i + Float.floatToIntBits(f2) + i1 + i2 + Double.doubleToLongBits(d) + i3 + i4 + by +
            FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(float f, float f1) {

        int i5=248, i6=-9, i7=-2, i8=-40, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, 9);

        for (long l : Test.lArrFld) {
            vMeth1();
            Test.instanceCount = 18904;
            Test.dFld += f;
            for (i5 = 1; i5 < 4; i5++) {
                iArr1[i5 + 1] = iArr1[i5 - 1];
                i6 *= i6;
                Test.instanceCount += (-89 + (i5 * i5));
                i6 += i6;
                i6 += (((i5 * i6) + i6) - i6);
                for (i7 = 1; i7 < 2; i7++) {
                    i8 -= i5;
                    i8 ^= (int)l;
                    Test.lArrFld[i7] *= i7;
                    i6 += (((i7 * f) + i8) - i6);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i9=-47, i10=3, i11=-5, i12=-1, iArr[]=new int[N];
        byte byArr1[]=new byte[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -216);
        FuzzerUtils.init(byArr1, (byte)-19);
        FuzzerUtils.init(sArr, (short)6758);

        iArr[(11 >>> 1) % N] <<= (iMeth(Test.fFld, Test.fFld) * 56455);
        if (Test.bFld) {
            Test.iFld /= (int)(Test.iFld | 1);
        } else if (Test.bFld) {
            for (i9 = 164; i9 > 10; i9--) {
                Test.fFld -= Test.instanceCount;
                Test.iFld += (((i9 * Test.iFld) + i10) - Test.iFld);
                Test.instanceCount -= Test.instanceCount;
                for (i11 = 1; 10 > i11; ++i11) {
                    if (i10 != 0) {
                        vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                            FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                        return;
                    }
                    Test.instanceCount ^= -6962194340965713154L;
                    switch (i9 + 115) {
                    case 115:
                        if (Test.bFld) continue;
                        i12 = i9;
                        break;
                    case 116:
                        Test.iFld = i10;
                        byArr1[i9 - 1] *= (byte)Test.iFld;
                    case 117:
                        Test.fFld += Test.iFld1;
                        break;
                    case 118:
                        Test.iFld1 <<= Test.iFld;
                        break;
                    case 119:
                        if (false) continue;
                        break;
                    case 120:
                        Test.sFld = (short)i12;
                        break;
                    case 121:
                        Test.iFld = (int)Test.instanceCount;
                    case 122:
                        Test.iFld += Test.iFld1;
                    case 123:
                        Test.iFld += (i11 + i9);
                        break;
                    case 124:
                        iArr[i9] = -60038;
                        break;
                    case 125:
                        Test.fFld -= i11;
                        break;
                    case 126:
                        Test.iFld = (int)Test.lFld;
                        break;
                    case 127:
                        i12 -= -6;
                    case 128:
                        Test.fFld -= Test.instanceCount;
                        break;
                    case 129:
                        Test.iFld *= (int)Test.instanceCount;
                        break;
                    case 130:
                        byArr1[i9 + 1] = (byte)i11;
                        break;
                    case 131:
                        Test.lArrFld[i9] = Test.instanceCount;
                        break;
                    case 132:
                        Test.fFld = Test.iFld1;
                        break;
                    case 133:
                        iArr[i9 + 1] >>>= i11;
                    case 134:
                        iArr[i11] += i9;
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                        Test.instanceCount *= i9;
                    case 139:
                        Test.iFld <<= (int)Test.instanceCount;
                        break;
                    case 140:
                        i12 += (i11 * i11);
                        break;
                    case 141:
                        Test.iFld1 -= Test.iFld;
                        break;
                    case 142:
                        Test.iFld1 = Test.iFld;
                        break;
                    case 143:
                        i12 -= Test.iFld1;
                    case 144:
                        iArr[i9 + 1] = i9;
                        break;
                    case 145:
                        if (Test.bFld) break;
                        break;
                    case 146:
                        i10 -= (int)25.578F;
                        break;
                    case 147:
                        iArr[i9 - 1] = i11;
                    case 148:
                    case 149:
                        iArr[i9 - 1] = i10;
                        break;
                    case 150:
                        if (Test.bFld) break;
                        break;
                    case 151:
                        i12 += (i11 + Test.iFld);
                        break;
                    case 152:
                        Test.iFld1 += (int)(-4L + (i11 * i11));
                        break;
                    case 153:
                        Test.iFld += (((i11 * Test.iFld) + Test.iFld1) - Test.iFld);
                        break;
                    case 154:
                        sArr = sArr;
                        break;
                    case 155:
                        if (i10 != 0) {
                            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                                FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                            return;
                        }
                    case 156:
                        Test.iFld = i11;
                    case 157:
                        Test.byFld += (byte)(((i11 * i12) + i10) - Test.iFld1);
                        break;
                    case 158:
                        Test.lFld >>= i12;
                        break;
                    case 159:
                        i10 >>>= i11;
                        break;
                    case 160:
                        i12 += (((i11 * Test.iFld2) + i11) - Test.iFld1);
                        break;
                    case 161:
                        if (Test.iFld != 0) {
                            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                                FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                            return;
                        }
                        break;
                    case 162:
                        Test.lArrFld = Test.lArrFld;
                    case 163:
                        i10 += i11;
                        break;
                    case 164:
                        Test.iFld2 += (i11 + Test.iFld);
                        break;
                    case 165:
                        Test.lArrFld1 = Test.lArrFld1;
                        break;
                    case 166:
                        Test.lFld = i10;
                    case 167:
                    case 168:
                        Test.iFld1 *= (int)Test.instanceCount;
                        break;
                    case 169:
                        Test.dFld -= Test.lFld;
                        break;
                    case 170:
                        Test.lFld += i11;
                        break;
                    case 171:
                        Test.fFld += (-12L + (i11 * i11));
                        break;
                    case 172:
                        Test.fFld -= 0;
                        break;
                    case 173:
                        Test.fFld += Test.lFld;
                        break;
                    case 174:
                        Test.lFld <<= Test.iFld2;
                        break;
                    case 175:
                        Test.lArrFld1[i9 - 1] = Test.lArrFld;
                        break;
                    case 176:
                        Test.iFld1 |= Test.byFld;
                    case 177:
                        if (i11 != 0) {
                            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                                FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                            return;
                        }
                    case 178:
                        i12 -= 30078;
                        break;
                    case 179:
                        sArr[i11 - 1] >>= (short)Test.iFld;
                        break;
                    case 180:
                        Test.fFld *= Test.byFld;
                        break;
                    case 181:
                        Test.dArrFld[i11 - 1] += -174L;
                        break;
                    case 182:
                        Test.iFld1 += (i11 * i11);
                        break;
                    case 183:
                        Test.dFld *= i11;
                        break;
                    case 184:
                        if (Test.iFld != 0) {
                            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                                FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                            return;
                        }
                        break;
                    }
                }
            }
            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr1) +
                FuzzerUtils.checkSum(sArr);
            return;
        } else {
            Test.iFld = i10;
            vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr1) +
                FuzzerUtils.checkSum(sArr);
            return;
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr1) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i13=24, i14=0, i15=9, i16=-19526, i17=-4, i18=-215, i19=-14, i20=-85, i21=-30702;
        long l1=3541373021554620315L;
        byte byArr2[]=new byte[N];

        FuzzerUtils.init(byArr2, (byte)12);

        vMeth();
        Test.fFld = -556478485L;
        for (i13 = 279; i13 > 13; i13 -= 3) {
            Test.iFld = -225;
            try {
                i14 = (-53715 / i13);
                Test.iFld1 = (Test.iArrFld[i13] % -3900);
                Test.iArrFld[i13] = (i14 / Test.iFld);
            } catch (ArithmeticException a_e) {}
            Test.iArrFld[i13 - 1] += i14;
        }
        byArr2[(Test.iFld2 >>> 1) % N] += (byte)Test.fFld;
        for (i15 = 5; i15 < 299; ++i15) {
            for (i17 = 2; i17 < 86; i17++) {
                for (i19 = 1; 2 > i19; ++i19) {
                    i14 -= (int)Test.instanceCount;
                    switch (((i19 % 1) * 5) + 90) {
                    case 91:
                        Test.instanceCount += (((i19 * Test.iFld1) + Test.iFld) - Test.iFld);
                        Test.iFld2 -= Test.iFld2;
                        break;
                    }
                    i16 -= (int)Test.lFld;
                    Test.iFld = i19;
                    Test.iFld2 = i13;
                    i20 += (int)Test.dFld;
                    Test.lArrFld[i17] -= Test.lFld;
                }
                switch (((i17 % 2) * 5) + 58) {
                case 61:
                    Test.instanceCount >>>= Test.lFld;
                    Test.iFld2 = i17;
                    for (l1 = 1; l1 < 2; ++l1) {
                        Test.iFld1 += (int)(l1 * i13);
                        Test.iArrFld[i17 + 1] *= Test.iFld3;
                        Test.instanceCount += (10L + (l1 * l1));
                        Test.iFld1 -= 0;
                        if (Test.bFld) continue;
                        Test.iFld1 = i18;
                    }
                    Test.lFld += i21;
                    break;
                case 68:
                    Test.iArrFld[i15 + 1] -= Test.iFld3;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 l1 = " + i19 + "," + i20 + "," + l1);
        FuzzerUtils.out.println("i21 byArr2 = " + i21 + "," + FuzzerUtils.checkSum(byArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.bFld Test.iFld1 = " + Test.iFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.sFld Test.lFld Test.byFld = " + Test.sFld + "," + Test.lFld + "," + Test.byFld);
        FuzzerUtils.out.println("Test.iFld2 Test.iFld3 Test.lArrFld = " + Test.iFld2 + "," + Test.iFld3 + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.lArrFld1 Test.dArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld1) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
