// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=26876L;
    public static byte byFld=-28;
    public static double dFld=-2.56268;
    public static float fFld=0.1000F;
    public static short sFld=363;
    public int iFld=-11196;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -2);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i14) {

        float f=81.29F, f1=-39.116F;
        int i15=-6, i16=9578, i17=-22200, i18=-5, i19=-33995, i20=181;
        boolean b=false;

        f -= i14;
        if (true) {
            for (f1 = 356; f1 > 10; f1--) {
                Test.byFld = (byte)Test.instanceCount;
            }
            i14 *= (int)Test.dFld;
        } else if (b) {
            Test.iArrFld[(i14 >>> 1) % N] >>>= i15;
            i15 = (int)f;
            for (i16 = 8; i16 < 284; ++i16) {
                Test.instanceCount += i16;
                Test.instanceCount = -6L;
                for (i18 = 1; i18 < 6; i18++) {
                    i17 -= i14;
                    i15 = (int)10L;
                    Test.iArrFld[i16] = 37133;
                    i14 += i20;
                }
            }
        }
        long meth_res = i14 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i15 + i16 + i17 + i18 + i19 + i20 +
            (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s1, int i9) {

        int i10=5, i11=0, i12=-39774, i13=28369, i21=-20;
        double d=-111.81256, d1=1.46471;
        boolean b1=true;

        for (i10 = 8; 131 > i10; i10++) {
            if (b1) {
                i11 <<= (--i11);
                for (i12 = 1; i12 < 13; i12++) {
                    d *= (iMeth(i12) + 202L);
                    Test.instanceCount = (long)Test.fFld;
                    for (d1 = 1; d1 < 2; ++d1) {
                        switch (((i11 >>> 1) % 1) + 33) {
                        case 33:
                        default:
                            try {
                                i21 = (i21 / i9);
                                i13 = (i10 % -40);
                                i11 = (i11 / -69);
                            } catch (ArithmeticException a_e) {}
                            d = -32604;
                            Test.instanceCount = i13;
                            switch ((int)((d1 % 5) + 86)) {
                            case 86:
                                i21 += (int)(((d1 * i9) + Test.instanceCount) - i11);
                                Test.instanceCount = i12;
                                s1 += (short)i21;
                                break;
                            case 87:
                                if (b1) continue;
                            case 88:
                                Test.instanceCount += (long)(d1 * d1);
                            case 89:
                                Test.instanceCount += i10;
                                break;
                            case 90:
                                Test.iArrFld = FuzzerUtils.int1array(N, (int)-8585);
                                break;
                            }
                        }
                    }
                }
            } else if (b1) {
                if (b1) continue;
            } else {
                Test.instanceCount += (i10 + Test.instanceCount);
                vMeth_check_sum += s1 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) +
                    Double.doubleToLongBits(d1) + i21 + (b1 ? 1 : 0);
                return;
            }
        }
        vMeth_check_sum += s1 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) +
            i21 + (b1 ? 1 : 0);
    }

    public static float fMeth() {

        int i7=-10, i8=50709, i22=36262, i23=159;

        for (i7 = 3; 297 > i7; i7++) {
            boolean b2=false;
            i8 &= (int)(Test.instanceCount++);
            vMeth(Test.sFld, i7);
            if (true) {
                i8 += i7;
            } else if (b2) {
                Test.fFld %= (Test.byFld | 1);
            } else {
                Test.sFld %= (short)(i7 | 1);
                Test.iArrFld[i7] += i7;
                if (false) break;
                Test.byFld += (byte)(i7 * i7);
            }
            i8 += (i7 + Test.instanceCount);
            for (i22 = 1; 6 > i22; ++i22) {
                Test.fFld -= i7;
                Test.dFld = i8;
                i8 = (int)Test.instanceCount;
            }
        }
        long meth_res = i7 + i8 + i22 + i23;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-60649, i1=-34, i2=-8, i3=4, i4=3, i5=-13, i6=53163, i24=-205, i25=4, i26=31, i27=-33, i28=-27;
        short s=29700;
        long l=6374973155119583203L, lArr[]=new long[N];
        boolean b3=false, bArr[]=new boolean[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, 1.75F);
        FuzzerUtils.init(lArr, -58293L);

        i += i;
        for (i1 = 13; i1 < 240; i1++) {
            for (i3 = 5; i3 < 111; ++i3) {
                switch (((i3 % 1) * 5) + 104) {
                case 106:
                    i4 = (++Test.iArrFld[i3]);
                    i *= i;
                    s >>= (short)(Test.instanceCount--);
                    break;
                default:
                    bArr = (bArr = (bArr = (bArr = bArr)));
                    for (i5 = 2; i5 > 1; i5--) {
                        i2 ^= (int)Test.instanceCount;
                    }
                    i2 >>>= ((--i6) + Test.iArrFld[i1]);
                }
            }
            Test.instanceCount = (long)fMeth();
            Test.fFld -= i3;
        }
        i2 -= -24803;
        i2 -= (int)Test.instanceCount;
        i4 = (int)Test.dFld;
        for (i24 = 9; i24 < 366; i24++) {
            i6 = iFld;
            Test.iArrFld[i24 - 1] -= i4;
            switch ((i24 % 10) + 36) {
            case 36:
                l >>= -174L;
                i4 += (i24 - i2);
                for (i26 = 4; i26 < 71; ++i26) {
                    Test.iArrFld[i24 - 1] >>= i25;
                    i28 = 1;
                    do {
                        b3 = b3;
                        if (b3) continue;
                        Test.iArrFld = Test.iArrFld;
                        Test.iArrFld[i28 - 1] += (int)l;
                        Test.instanceCount *= i3;
                    } while (++i28 < 2);
                }
            case 37:
                i25 >>= 57;
                break;
            case 38:
                Test.fFld -= 166;
                break;
            case 39:
                try {
                    Test.iArrFld[i24 + 1] = (i25 / Test.iArrFld[i24]);
                    i6 = (i25 % i1);
                    Test.iArrFld[i24 + 1] = (i3 / -2046816000);
                } catch (ArithmeticException a_e) {}
            case 40:
                fArr[i24] *= -13;
                break;
            case 41:
                Test.instanceCount -= i25;
                break;
            case 42:
                lArr[i24 - 1] -= (long)1.298F;
                break;
            case 43:
                i25 = -24854;
                break;
            case 44:
                iFld = (int)Test.dFld;
                break;
            case 45:
                Test.fFld += i4;
                break;
            default:
                lArr[i24 - 1] = i;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 s = " + i3 + "," + i4 + "," + s);
        FuzzerUtils.out.println("i5 i6 i24 = " + i5 + "," + i6 + "," + i24);
        FuzzerUtils.out.println("i25 l i26 = " + i25 + "," + l + "," + i26);
        FuzzerUtils.out.println("i27 i28 b3 = " + i27 + "," + i28 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("bArr fArr lArr = " + FuzzerUtils.checkSum(bArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.sFld iFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.sFld + ","
            + iFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
