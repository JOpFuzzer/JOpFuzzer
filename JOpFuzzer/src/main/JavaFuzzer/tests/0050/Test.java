// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5156389846336109978L;
    public static short sFld=-25429;
    public double dFld=0.18293;
    public float fFld=1.49F;
    public static boolean bFld=true;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -1.44456);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1) {

        int i10=31498, i11=12, i12=-2;
        float f1=2.522F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -5607175633887468884L);

        Test.instanceCount += (long)d1;
        i10 /= (int)2.107F;
        for (double d2 : Test.dArrFld) {
            i10 = -32107;
        }
        for (i11 = 16; 271 > i11; ++i11) {
            f1 = i10;
            i10 >>= i12;
            i12 += i11;
            Test.instanceCount -= (long)43.36F;
            i12 *= (int)Test.instanceCount;
            f1 += 105;
            i12 += (i11 * i11);
            f1 -= i11;
            lArr[i11] = lArr[i11 + 1];
            i12 += i10;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l) {

        int i6=-26, i7=240, i8=10, i9=-10;
        float f=-50.639F, fArr[]=new float[N];
        double d=85.80324;
        byte by1=96;
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr, 82.396F);
        FuzzerUtils.init(sArr, (short)1008);

        i6 -= (int)(--f);
        i6 = Math.min(--i6, (int)((i6 - -182) - (i6 - d)));
        i7 = 1;
        while (++i7 < 157) {
            for (i8 = 1; i8 < 10; i8++) {
                Test.sFld = (short)(((++i9) - fArr[i8 + 1]) - (--i6));
                d = Math.abs(Test.dArrFld[i7 + 1]);
                l = Math.abs((long)(-161 + (f * l)));
                l = 3754516929846812147L;
                vMeth1(1.79499);
                i6 = i9;
                switch (((i6 >>> 1) % 9) + 105) {
                case 105:
                    i9 += (i8 * i8);
                    Test.instanceCount += -231L;
                    Test.instanceCount += (-26781 + (i8 * i8));
                    break;
                case 106:
                case 107:
                    i6 >>= (int)l;
                    break;
                case 108:
                    Test.sFld -= by1;
                    break;
                case 109:
                    i6 = i8;
                    break;
                case 110:
                    Test.sFld -= (short)d;
                case 111:
                    sArr[i8 - 1] <<= (short)i9;
                    break;
                case 112:
                    Test.instanceCount -= i7;
                    break;
                case 113:
                    i6 = -3;
                    break;
                }
            }
        }
        long meth_res = l + i6 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i7 + i8 + i9 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=60609, i3=138, i4=-236, i5=-49832, i13=-6;
        byte by=84;
        float f2=-2.126F;
        boolean b=true;

        for (i2 = 7; i2 < 160; i2++) {
            by += (byte)i2;
            i3 += (((i2 * Test.instanceCount) + i1) - i);
            for (i4 = 1; i4 < 10; ++i4) {
                if (b) {
                    i3 = iMeth(Test.instanceCount);
                    by += (byte)i4;
                    f2 = i3;
                } else {
                    i -= (int)Test.instanceCount;
                }
                i1 = (int)Test.instanceCount;
                Test.instanceCount >>= -15435L;
                i1 += (((i4 * i2) + i1) - Test.instanceCount);
                i13 >>= i;
                Test.instanceCount *= i4;
                f2 += Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + by + i4 + i5 + Float.floatToIntBits(f2) + (b ? 1 : 0) + i13;
    }

    public void mainTest(String[] strArr1) {

        int i14=123, i15=-194, i16=29001, i17=117, i18=26518, i19=58450, iArr[]=new int[N];
        long l1=2L, l2=154L, lArr1[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 173);
        FuzzerUtils.init(byArr, (byte)37);
        FuzzerUtils.init(lArr1, 644L);

        vMeth(i14, i14);
        Test.dArrFld[(i14 >>> 1) % N] -= i14;
        iArr[(64 >>> 1) % N] = 39846;
        iArr[(i14 >>> 1) % N] += (int)dFld;
        i14 = (int)Test.instanceCount;
        i14 += i14;
        i15 = 1;
        while (++i15 < 373) {
            l1 += (long)dFld;
            for (i16 = i15; i16 < 68; i16++) {
                dFld *= i16;
                i17 += (i16 - Test.instanceCount);
                byArr[i16 + 1] = (byte)i14;
                fFld = -50736;
            }
            Test.dArrFld[i15 - 1] = i15;
            Test.instanceCount += (i15 * i15);
            i14 = Test.sFld;
            iArr[i15] -= (int)dFld;
            i17 <<= i16;
            for (i18 = 68; i18 > 1; i18 -= 2) {
                l2 = 1;
                do {
                    lArr1[i18 + 1] -= 13;
                    i19 *= i14;
                    iArr[(int)(l2)] *= i14;
                    i19 += (-45175 + (l2 * l2));
                    i17 *= 35936;
                    if (Test.bFld) {
                        if (Test.bFld) break;
                        i17 -= i15;
                    } else {
                        if (Test.bFld) continue;
                        Test.instanceCount = l2;
                    }
                } while ((l2 += 3) < 3);
            }
        }

        FuzzerUtils.out.println("i14 i15 l1 = " + i14 + "," + i15 + "," + l1);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 l2 iArr = " + i19 + "," + l2 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr lArr1 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld dFld = " + Test.instanceCount + "," + Test.sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("fFld Test.bFld Test.dArrFld = " + Float.floatToIntBits(fFld) + "," + (Test.bFld ? 1 :
            0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
