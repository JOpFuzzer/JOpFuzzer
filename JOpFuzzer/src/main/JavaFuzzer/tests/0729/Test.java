// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:57 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3299617918L;
    public static volatile int iFld=-22421;
    public static float fFld=2.576F;
    public static double dFld=1.60134;
    public static short sFld=-16254;
    public static short sArrFld[]=new short[N];
    public static int iArrFld[][]=new int[N][N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-6689);
        FuzzerUtils.init(Test.iArrFld, -109);
        FuzzerUtils.init(Test.lArrFld, -1637736635L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=-233, i4=9, i5=-237, i6=-28034, i7=-3, iArr[]=new int[N];
        float f=-2.311F, f1=-19.898F;
        double d1=0.130584;

        FuzzerUtils.init(iArr, 133);

        for (i3 = 391; i3 > 23; --i3) {
            for (i5 = 1; i5 < 5; i5++) {
                Test.instanceCount = i5;
                for (f = 1; f < 2; ++f) {
                    switch ((int)((f % 5) + 1)) {
                    case 1:
                        i7 -= (int)d1;
                        d1 += -109;
                        Test.iFld = 16864;
                        break;
                    case 2:
                        Test.iFld = i6;
                        i6 >>= i7;
                        try {
                            Test.iFld = (iArr[i3] % 21);
                            i6 = (1443511611 / iArr[(int)(f - 1)]);
                            i6 = (iArr[i5 + 1] / iArr[(int)(f)]);
                        } catch (ArithmeticException a_e) {}
                        Test.iFld += (int)f;
                        break;
                    case 3:
                        f1 += Test.instanceCount;
                        break;
                    case 4:
                        i4 += (int)f;
                        iArr[i5] -= i6;
                    case 5:
                        Test.instanceCount = i6;
                    default:
                        i7 *= (int)Test.instanceCount;
                    }
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2) {

        int i8=-15373, i9=-4;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.112487);

        vMeth2();
        i2 = Test.iFld;
        Test.sArrFld[(41674 >>> 1) % N] >>= (short)Test.instanceCount;
        Test.iArrFld[(i2 >>> 1) % N][(-206 >>> 1) % N] = 5350;
        for (i8 = 14; i8 < 391; ++i8) {
            dArr[i8 - 1] *= Test.instanceCount;
            Test.lArrFld[i8 - 1][i8 - 1] += 35;
            Test.iFld -= (int)Test.instanceCount;
        }
        vMeth1_check_sum += i2 + i8 + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        double d=-109.78828;
        int i=18185, i1=-2272, i10=5480, i11=-44614;
        long l=2478990631L, l1=12L;
        boolean b=true, b1=true;

        if (b1) {
            d -= Test.iFld;
        } else if (true) {
            for (i = 4; i < 140; i++) {
                vMeth1(Test.iFld);
                d = i1;
                for (i10 = 1; 12 > i10; ++i10) {
                    switch ((((i1 >>> 1) % 4) * 5) + 98) {
                    case 112:
                        switch (((i % 1) * 5) + 27) {
                        case 31:
                            Test.iFld = i10;
                            l = 1;
                            while (++l < 2) {
                                short s=16296;
                                i1 += (int)(l * l);
                                if (b) continue;
                                Test.iFld = (int)d;
                                Test.iFld <<= i;
                                s = (short)Test.iFld;
                            }
                        default:
                            Test.instanceCount <<= 237;
                        }
                    case 115:
                        Test.instanceCount += i10;
                        break;
                    case 101:
                        Test.iArrFld[i10 - 1][i] = (int)-12L;
                        break;
                    case 99:
                    }
                }
            }
        } else if (false) {
            Test.instanceCount += -206L;
        } else {
            l1 += i;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i10 + i11 + l + (b ? 1 : 0) + (b1 ? 1 : 0) + l1;
    }

    public void mainTest(String[] strArr1) {

        long l2=1947558908L;
        int i12=-11347, i13=-19269, i14=-4, i15=-44687, i16=-34730, i17=14332, i18=64, i19=53595, i20=170, i21=-19,
            i22=-47, i23=28;
        float f2=32.942F;
        byte by=37, byArr[]=new byte[N];
        boolean b2=false;

        FuzzerUtils.init(byArr, (byte)-37);

        vMeth();
        Test.lArrFld[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] = Test.iFld;
        for (l2 = 11; l2 < 275; ++l2) {
            i12 += (int)l2;
        }
        i12 += (int)Test.fFld;
        Test.iArrFld[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] += i12;
        for (f2 = 3; 229 > f2; f2 += 3) {
            Test.iArrFld[(int)(f2 - 1)] = Test.iArrFld[(int)(f2 + 1)];
            for (i14 = (int)(f2); i14 < 334; ++i14) {
                if (false) continue;
            }
        }
        for (i16 = 198; i16 > 10; i16 -= 3) {
            i13 = (int)Test.dFld;
        }
        if (b2) {
            i17 = i13;
            Test.iArrFld[(i17 >>> 1) % N][(-1231 >>> 1) % N] = -14;
        } else if (false) {
            i12 -= (int)3069781509L;
            for (i18 = 14; 389 > i18; i18++) {
                byArr[i18] -= (byte)Test.instanceCount;
                switch ((i18 % 3) + 46) {
                case 46:
                    if (b2) {
                        for (i20 = i18; i20 < 67; i20++) {
                            for (i22 = i18; i22 < 1; ++i22) {
                                i15 >>= i16;
                                Test.sFld = (short)-16969;
                                switch (((i18 % 2) * 5) + 79) {
                                case 89:
                                    by += (byte)Test.instanceCount;
                                    if (false) break;
                                    break;
                                case 84:
                                    if (true) continue;
                                    i15 = (int)13.89825;
                                    Test.iArrFld[i20 - 1] = FuzzerUtils.int1array(N, (int)-47611);
                                    break;
                                default:
                                    i17 += (int)Test.instanceCount;
                                }
                            }
                        }
                    } else if (b2) {
                        Test.fFld -= Test.instanceCount;
                    } else {
                        Test.dFld -= i14;
                    }
                case 47:
                    Test.instanceCount += i14;
                    break;
                case 48:
                    i21 ^= (int)l2;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("l2 i12 f2 = " + l2 + "," + i12 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 by = " + i22 + "," + i23 + "," + by);
        FuzzerUtils.out.println("b2 byArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.sFld Test.sArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.sFld + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
