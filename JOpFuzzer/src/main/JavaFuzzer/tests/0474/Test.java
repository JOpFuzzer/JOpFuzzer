// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2049636426L;
    public static long lFld=2505331401L;
    public static long lFld1=-10L;
    public static double dFld=1.125913;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 23);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l2, int i4, float f) {

        boolean b=false;
        int i6=-74, i7=14683, i8=-37734, iArr[]=new int[N];
        byte by=54;

        FuzzerUtils.init(iArr, 2);

        for (int i5 : iArr) {
            f *= -237;
            b = b;
            l2 >>= i5;
            for (i6 = 1; i6 < 4; ++i6) {
                switch ((((i6 >>> 1) % 2) * 5) + 54) {
                case 63:
                    i8 = 1;
                    while (++i8 < 2) {
                        i7 += i4;
                        i5 = by;
                        i7 += (((i8 * i5) + Test.instanceCount) - i6);
                        l2 += -88;
                        i4 <<= 59350;
                        i7 = i8;
                        l2 += i8;
                        l2 &= -12;
                    }
                    break;
                case 62:
                    iArr[i6] = i7;
                    break;
                }
            }
        }
        vMeth_check_sum += l2 + i4 + Float.floatToIntBits(f) + (b ? 1 : 0) + i6 + i7 + i8 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, long l1, int i1) {

        int i2=-12840, i3=-77, i9=33509, i10=-4595, i11=0, i12=23885;
        float f1=0.321F;
        double d=69.125558, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -116.104627);

        for (i2 = 1; i2 < 203; i2++) {
            vMeth(Test.lFld, i2, f1);
            try {
                i1 = (-57210 % Test.iArrFld[i2 + 1]);
                i1 = (i2 / i3);
                i3 = (i2 / i3);
            } catch (ArithmeticException a_e) {}
            for (i9 = 1; 8 > i9; i9++) {
                for (i11 = i2; i11 < 2; ++i11) {
                    Test.lFld1 = Test.instanceCount;
                    Test.iArrFld = Test.iArrFld;
                }
                dArr[i9] = d;
            }
        }
        long meth_res = l + l1 + i1 + i2 + i3 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i) {


        i <<= ((i - (i + i)) ^ iMeth(41328L, Test.instanceCount, i));
        vSmallMeth_check_sum += i;
    }

    public void mainTest(String[] strArr1) {

        int i13=40175, i14=-247, i15=-13, i16=-19432, i17=-34, i18=-6, i19=65092, i20=-14, i21=-65;
        float f2=2.490F, f3=2.94F;
        long lArr[]=new long[N];
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(lArr, 51597L);
        FuzzerUtils.init(dArr1, 28.54501);

        for (int smallinvoc=0; smallinvoc<721; smallinvoc++) vSmallMeth(i13);
        Test.instanceCount >>= i13;
        for (i14 = 18; i14 < 375; i14++) {
            i15 -= (int)Test.lFld;
            i16 = 1;
            do {
                Test.iArrFld[i16 - 1] += (int)f2;
                i15 -= i16;
                i13 ^= (int)Test.lFld;
                for (i17 = i16; i17 < 1; i17++) {
                    f2 += i13;
                }
                i18 *= i16;
            } while (++i16 < 71);
            Test.lFld *= i16;
            for (i19 = 2; 71 > i19; i19++) {
                Test.iArrFld[i14] = i20;
                i18 = i13;
                i15 *= i18;
                Test.lFld -= i16;
                Test.lFld1 += i19;
            }
            f2 = f2;
        }
        i13 += i17;
        for (f3 = 2; 135 > f3; ++f3) {
            lArr = lArr;
            Test.instanceCount += i21;
            i13 = 10;
            i13 = (int)181L;
            i20 += (int)Test.lFld1;
            Test.dFld = Test.instanceCount;
            i13 -= (int)f2;
            i18 = i18;
        }
        dArr1[(20801 >>> 1) % N][(i15 >>> 1) % N] *= f3;

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 f2 i17 = " + i16 + "," + Float.floatToIntBits(f2) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("f3 i21 lArr = " + Float.floatToIntBits(f3) + "," + i21 + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.lFld1 = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.lFld1);
        FuzzerUtils.out.println("Test.dFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
