// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:02 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-13L;
    public short sFld=-16543;
    public static float fFld=-118.506F;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)65);
    }

    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;

    public static float fMeth1() {

        int i11=204, i12=-181, i13=-23, i14=16966, i15=131, i16=-4;
        byte by2=115;
        boolean b1=true;

        for (i11 = 2; i11 < 166; ++i11) {
            switch (((i11 % 1) * 5) + 120) {
            case 121:
                i12 &= by2;
                Test.instanceCount *= (long)Test.fFld;
                for (i13 = 1; i13 < 10; i13++) {
                    for (i15 = 2; i15 > 1; --i15) {
                        Test.instanceCount += Test.instanceCount;
                        if (i13 != 0) {
                        }
                        i16 += i16;
                        if (b1) {
                            b1 = b1;
                        }
                        i16 -= 61171;
                        if (false) break;
                    }
                    i16 -= i11;
                    i16 += (i13 | (long)Test.fFld);
                }
                break;
            default:
                Test.fFld *= i12;
            }
        }
        long meth_res = i11 + i12 + by2 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0);
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public static float fMeth(byte by1) {

        int i9=-169, i10=7, i17=23, i18=19941, i19=161, i20=-53920, i21=0;
        double d1=1.7664;
        boolean b2=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 13L);

        for (i9 = 19; 391 > i9; ++i9) {
            i10 += (int)(-42625L + (i9 * i9));
            Test.fFld += fMeth1();
            Test.byArrFld = Test.byArrFld;
            i10 -= -81;
            for (d1 = 1; d1 < 5; d1++) {
                i17 += (int)((long)d1 ^ Test.instanceCount);
                i10 -= i17;
                lArr1 = lArr1;
                for (i18 = i9; i18 < 2; i18++) {
                    i19 &= 927;
                    i17 += (i18 ^ i18);
                }
            }
        }
        for (i20 = 6; 383 > i20; ++i20) {
            b2 = b2;
        }
        b2 = b2;
        long meth_res = by1 + i9 + i10 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 + i21 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public long lMeth(int i2) {

        int i3=23379, i4=12, i5=32884, i6=-9, i7=60518, i8=44548;
        boolean b=false;
        byte by=24;
        float f=-2.979F;
        double d=2.86845;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4945138359518133622L);

        for (i3 = 5; i3 < 173; ++i3) {
            for (i5 = 1; i5 < 9; ++i5) {
                b = (((i6 - 48960) - (i2 + by)) != f);
                i6 = Short.reverseBytes((short)(sFld--));
                i6 *= (i3 * (i2--));
                for (i7 = i3; i7 < 2; ++i7) {
                    switch ((i7 % 2) + 58) {
                    case 58:
                    case 59:
                        d = (i4 * (lArr[i5 - 1]--));
                        i4 = (int)((-(++Test.instanceCount)) - 2482L);
                        sFld = (short)i5;
                        f = fMeth(by);
                        break;
                    default:
                        Test.instanceCount = Test.instanceCount;
                        i6 <<= i6;
                    }
                    i4 += i7;
                    i8 += (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + (b ? 1 : 0) + by + Float.floatToIntBits(f) + i7 + i8 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=11, i22=-205, i23=7868, i24=-89, i25=13, i26=-89, i27=-14218, i28=65, i29=-10, iArr[]=new int[N];
        boolean b3=false;
        double d2=1.79809;
        byte by3=-11;

        FuzzerUtils.init(iArr, -140);

        for (i = 11; i < 302; ++i) {
            i1 -= (i1++);
        }
        i1 >>= (int)(lMeth(i1) % (i1 | 1));
        for (i22 = 173; 2 < i22; i22 -= 3) {
            i23 += i23;
            i23 += (-30 + (i22 * i22));
            Test.instanceCount *= i22;
            i23 >>= i22;
            for (i24 = 1; i24 < 195; i24++) {
                Test.instanceCount = i;
                sFld += (short)i24;
                i25 <<= (int)Test.instanceCount;
                if (b3) continue;
                for (i26 = 1; 3 > i26; i26++) {
                    i27 = (int)d2;
                    iArr[i26] -= (int)Test.instanceCount;
                    iArr[i24] <<= i22;
                    Test.instanceCount = (long)d2;
                    iArr[i22] += -12;
                    iArr[i22] = i26;
                }
                i27 += (((i24 * Test.fFld) + i23) - Test.fFld);
                for (i28 = 1; i28 < 3; i28++) {
                    switch ((((92 >>> 1) % 1) * 5) + 75) {
                    case 76:
                        iArr[i24 - 1] -= i25;
                        d2 = i27;
                        break;
                    }
                    Test.instanceCount += (-8 + (i28 * i28));
                    by3 += (byte)i25;
                    Test.fFld -= i1;
                    i29 = i22;
                    iArr[i22 - 1] >>= i26;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b3 i26 i27 = " + (b3 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d2 i28 i29 = " + Double.doubleToLongBits(d2) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("by3 iArr = " + by3 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount sFld Test.fFld = " + Test.instanceCount + "," + sFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
