// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8913819683059287923L;
    public float fFld=-21.661F;
    public static short sFld=-4983;
    public static float fFld1=-80.332F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 228);
        FuzzerUtils.init(Test.lArrFld, 2632071640043035635L);
        FuzzerUtils.init(Test.fArrFld, -1.913F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i14=-132, i15=105, i16=-156, i17=-72, i18=19420, i19=-54721;
        boolean b=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-27);

        for (i14 = 20; 365 > i14; i14++) {
            Test.instanceCount = 55L;
            for (i16 = 1; i16 < 5; i16++) {
                Test.iArrFld = Test.iArrFld;
                Test.iArrFld = Test.iArrFld;
                byArr = byArr;
                Test.fFld1 += (-29895 + (i16 * i16));
                i15 += (-11 + (i16 * i16));
                Test.instanceCount += (i16 + i14);
            }
            for (i18 = i14; i18 < 5; ++i18) {
                Test.instanceCount = 8897;
            }
            i17 = Test.sFld;
            i15 = i16;
            i15 += (11532 + (i14 * i14));
            b = b;
        }
        vMeth_check_sum += i14 + i15 + i16 + i17 + i18 + i19 + (b ? 1 : 0) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth1(long l2) {

        int i10=151, i11=42901, i12=-53019, i13=-123, i20=7504, i21=28478, i22=25432, i23=-40;
        byte by=-32;
        double d2=-75.10311;

        for (i10 = 4; 135 > i10; i10++) {
            if (i10 != 0) {
            }
            by -= (byte)(--Test.sFld);
        }
        for (i12 = 192; i12 > 12; --i12) {
            vMeth();
            Test.iArrFld[i12 + 1] *= i10;
            i11 = i10;
            for (i20 = 1; i20 < 9; ++i20) {
                for (i22 = 1; i22 < 2; i22++) {
                    Test.instanceCount += (i22 * i22);
                    i13 -= i10;
                    d2 += -19552;
                    i21 += (i22 * i22);
                    i23 -= i20;
                }
                i21 *= i10;
            }
        }
        long meth_res = l2 + i10 + i11 + by + i12 + i13 + i20 + i21 + i22 + i23 + Double.doubleToLongBits(d2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, long l1, float f) {

        int i7=2522, i8=34766, i9=-183, i24=5, i25=-32081;
        double d1=33.111319;
        short s1=-15028;
        byte by1=-4;

        i7 = 1;
        do {
            for (i8 = 5; i8 > 1; i8 -= 3) {
                i9 *= (int)(d1 / ((Test.lArrFld[i7] -= Test.instanceCount) | 1));
                i9 += (int)(((f - i8) + iMeth1(3L)) + i8);
                Test.instanceCount <<= i9;
                for (i24 = 1; i24 < 5; ++i24) {
                    i25 *= i25;
                    s1 += (short)(i24 - by1);
                    Test.lArrFld[i7 - 1] += by1;
                    l1 += (i24 + l);
                    Test.lArrFld[i8] *= (long)d1;
                    i9 -= s1;
                    i25 += i24;
                }
                i9 += (i8 - i8);
                Test.iArrFld[i8] = i24;
            }
        } while (++i7 < 310);
        long meth_res = l + l1 + Float.floatToIntBits(f) + i7 + i8 + i9 + Double.doubleToLongBits(d1) + i24 + i25 + s1
            + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=-3, i2=-50521, i3=19402, i4=143, i5=-104, i6=6327, i26=97, i27=-42720, i28=1, i29=81, i30=-13894;
        short s=26185;
        double d=-2.120510;
        float f1=-2.388F;
        boolean b1=false;

        for (i = 12; i < 348; i++) {
            i1 += (((i * fFld) + i) - s);
            i1 += ((++i1) - ((i + i1) - i));
        }
        for (i2 = 5; i2 < 197; i2++) {
            i3 += (int)((fFld--) - (-Math.abs(i2)));
            for (i4 = i2; i4 < 131; ++i4) {
                if (i5 != (-100 - (i4 - (-89 - i)))) continue;
                d = ((i5 = (i5 + 121)) - i1);
                Test.iArrFld[i4] <<= (int)(--Test.instanceCount);
                Test.instanceCount += (i4 * i4);
                Test.instanceCount -= (++i6);
                Test.iArrFld[i4] >>= iMeth(Test.instanceCount, Test.instanceCount, Test.fFld1);
                i3 -= (int)Test.fFld1;
            }
            Test.iArrFld[i2] = 52732;
            for (f1 = 3; f1 < 131; f1++) {
                i26 -= i26;
                Test.instanceCount = Test.instanceCount;
                i5 <<= i26;
                Test.instanceCount = i5;
            }
            Test.fArrFld[i2 - 1] += -61285;
        }
        for (i27 = 21; i27 < 398; ++i27) {
            i26 = i4;
            if (b1) continue;
            i5 = i4;
            i1 = i27;
            for (i29 = 1; i29 < 67; i29++) {
                Test.fFld1 = (float)d;
                s += (short)(11 + (i29 * i29));
                Test.fArrFld[i29] += fFld;
            }
            Test.fFld1 = -38.988F;
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 d i6 = " + i5 + "," + Double.doubleToLongBits(d) + "," + i6);
        FuzzerUtils.out.println("f1 i26 i27 = " + Float.floatToIntBits(f1) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 b1 i29 = " + i28 + "," + (b1 ? 1 : 0) + "," + i29);
        FuzzerUtils.out.println("i30 = " + i30);

        FuzzerUtils.out.println("Test.instanceCount fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld1 Test.iArrFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld1) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
