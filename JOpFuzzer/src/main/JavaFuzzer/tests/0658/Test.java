// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=145L;
    public float fFld=2.297F;
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i4) {

        int i5=4223, i6=111, i7=-2, i8=-9779, i9=-11, i10=1;
        float f1=-96.395F, fArr[]=new float[N];
        double d=-63.75042;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 45.1009F);
        FuzzerUtils.init(byArr, (byte)40);

        for (i5 = 6; i5 < 242; i5++) {
            i4 += (i5 + i4);
            byArr[i5] -= (byte)f1;
            i4 += i5;
            i7 = 1;
            do {
                i4 = -14;
            } while (++i7 < 7);
            i6 = i4;
            i6 += i5;
        }
        i6 -= (int)l1;
        i8 = 1;
        do {
            i4 += (i8 * i8);
        } while (++i8 < 260);
        for (i9 = 10; i9 < 163; i9++) {
            boolean b=false;
            d = i5;
            i10 = 10;
            if (b) break;
        }
        vMeth2_check_sum += l1 + i4 + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 +
            Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1() {

        int i2=-4, i3=20010;
        double d1=-51.54867;
        byte by=5;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6882985690935600411L);

        for (i2 = 13; i2 < 214; ++i2) {
            vMeth2(-2460362699L, i3);
            d1 -= Test.instanceCount;
            i3 -= i2;
        }
        Test.instanceCount -= Test.instanceCount;
        Test.instanceCount *= Test.instanceCount;
        for (long l2 : lArr) {
            l2 *= i3;
            Test.instanceCount += l2;
            Test.iArrFld1[(i2 >>> 1) % N] = i2;
        }
        by -= (byte)i2;
        vMeth1_check_sum += i2 + i3 + Double.doubleToLongBits(d1) + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, long l) {

        int i11=3, i12=248, i13=-92, i14=-164, i15=6, i16=55152, i17=13, i18=-14, i19=-61;
        short s=-8958;
        double dArr[][]=new double[N][N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(dArr, -89.19565);
        FuzzerUtils.init(lArr1, -10L);

        vMeth1();
        i1 *= i1;
        dArr[(i1 >>> 1) % N][(i11 >>> 1) % N] = -1.65844;
        for (i12 = 316; i12 > 3; i12 -= 3) {
            if (true) continue;
            for (i14 = 1; 15 > i14; ++i14) {
                lArr1[i14][i14 - 1] = l;
                for (i16 = 2; i16 > 1; i16--) {
                    i11 *= i11;
                }
            }
            s = (short)i11;
        }
        i15 -= (int)Test.instanceCount;
        i11 = i13;
        for (i18 = 3; i18 < 153; i18 += 3) {
            lArr1[i18 - 1][i18] += -4L;
            i17 -= i1;
        }
        vMeth_check_sum += i1 + l + i11 + i12 + i13 + i14 + i15 + i16 + i17 + s + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr3) {

        int i20=-135, i22=23139, i23=-80, i24=92, i25=-213, i26=11297, i27=242;
        long l3=225L, lArr2[]=new long[N];
        boolean b1=true;
        short s1=-21462;
        double d2=0.93169;
        byte by1=-64;

        FuzzerUtils.init(lArr2, 1493960061549400999L);

        vMeth(i20, Test.instanceCount);
        Test.iArrFld1[(i20 >>> 1) % N] >>>= 9;
        for (int i21 : Test.iArrFld1) {
            for (l3 = 1; l3 < 63; l3++) {
                if (b1) continue;
                switch ((int)(((l3 % 4) * 5) + 41)) {
                case 49:
                    for (i23 = (int)(l3); i23 < 2; i23++) {
                        i22 += (i23 | (long)fFld);
                        i20 -= s1;
                        i24 >>= (int)Test.instanceCount;
                        Test.instanceCount = 240;
                        i20 -= (int)Test.instanceCount;
                        if (b1) break;
                        i22 += (((i23 * i20) + i22) - i21);
                        fFld -= -31350;
                    }
                    try {
                        i22 = (i24 % i22);
                        i24 = (Test.iArrFld1[(int)(l3)] / 195);
                        Test.iArrFld1[(int)(l3 - 1)] = (i23 % -24339);
                    } catch (ArithmeticException a_e) {}
                    i24 += 19190;
                    for (i25 = (int)(l3); 2 > i25; i25++) {
                        i21 += (((i25 * i23) + i23) - i20);
                        switch ((int)((l3 % 1) + 49)) {
                        case 49:
                        }
                    }
                    break;
                case 42:
                    d2 = 1;
                    do {
                        double d3=-103.111434;
                        d3 = fFld;
                        by1 = (byte)i27;
                        lArr2[(int)(l3 + 1)] -= (long)fFld;
                        Test.iArrFld1[(int)(l3)] <<= (int)-4097086466771824991L;
                        i22 *= (int)Test.instanceCount;
                        i24 >>>= i26;
                    } while (++d2 < 2);
                    i20 -= -184;
                    break;
                case 45:
                    i21 *= i23;
                    fFld += i24;
                    break;
                case 56:
                    i24 -= 120;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i20 l3 i22 = " + i20 + "," + l3 + "," + i22);
        FuzzerUtils.out.println("b1 i23 i24 = " + (b1 ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("s1 i25 i26 = " + s1 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d2 by1 i27 = " + Double.doubleToLongBits(d2) + "," + by1 + "," + i27);
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.iArrFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
