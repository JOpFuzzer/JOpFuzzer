// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-34889277L;
    public static float fFld=2.507F;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 15632);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5) {


        Test.iArrFld[(i5 >>> 1) % N] >>= (int)Test.instanceCount;
        long meth_res = i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, int i4, double d1) {

        int i6=39555, i7=42013, i8=-132;
        short s=-2702;
        float f1=-6.837F;
        double d2=-1.34647;

        i4 >>>= (int)((i4 - (Test.instanceCount - i3)) * iMeth(i6));
        s += (short)f1;
        i6 = (int)1.18062;
        d2 = 166;
        do {
            for (i7 = 1; i7 < 19; i7++) {
                i4 <<= i7;
                i8 <<= (int)Test.instanceCount;
                i6 >>= (int)-1L;
                if (i3 != 0) {
                    vMeth_check_sum += i3 + i4 + Double.doubleToLongBits(d1) + i6 + s + Float.floatToIntBits(f1) +
                        Double.doubleToLongBits(d2) + i7 + i8;
                    return;
                }
                if (false) {
                    i4 = i7;
                    i4 = i6;
                }
                i6 = i3;
            }
            i8 -= i3;
            Test.iArrFld[(int)(d2)] -= i7;
        } while ((d2 -= 2) > 0);
        vMeth_check_sum += i3 + i4 + Double.doubleToLongBits(d1) + i6 + s + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d2) + i7 + i8;
    }

    public static void vSmallMeth(int i1, double d, int i2) {


        vMeth(i2, i2, d);
        Test.fFld = i1;
        vSmallMeth_check_sum += i1 + Double.doubleToLongBits(d) + i2;
    }

    public void mainTest(String[] strArr1) {

        int i=-209, iArr[]=new int[N];
        float f=-60.538F;
        double d3=12.105431;
        short s1=24696;

        FuzzerUtils.init(iArr, -48162);

        iArr[(i >>> 1) % N] = (int)((iArr[(i >>> 1) % N] * Test.instanceCount) - (-5 * Math.abs(Test.instanceCount)));
        f = i;
        for (int smallinvoc=0; smallinvoc<783; smallinvoc++) vSmallMeth(i, d3, i);
        i = -76;
        i >>>= s1;
        i += i;
        i = i;
        i <<= i;
        i >>= (int)Test.instanceCount;

        FuzzerUtils.out.println("i f d3 = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("s1 iArr = " + s1 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
