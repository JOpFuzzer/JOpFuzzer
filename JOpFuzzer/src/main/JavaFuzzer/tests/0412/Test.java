// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:50 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=228L;
    public int iFld=27255;
    public static volatile byte byFld=-109;
    public static int iFld1=-24;
    public static boolean bFld=true;
    public long lArrFld[]=new long[N];
    public static volatile boolean bArrFld[]=new boolean[N];
    public long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i13, int i14, int i15) {


        i14 &= i15;
        long meth_res = i13 + i14 + i15;
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i7, int i8, long l) {

        int i9=60887, i10=-5157, i11=-36508, i12=6, i16=-26473, i17=7, i18=-82, i19=7, i20=6, i21=-1, iArr1[]=new
            int[N];
        float f3=66.266F, fArr[]=new float[N];
        short s=-3358;

        FuzzerUtils.init(iArr1, 3);
        FuzzerUtils.init(fArr, 126.670F);

        for (i9 = 7; i9 < 251; i9 += 2) {
            for (i11 = 1; i11 < 13; i11++) {
                double d=2.83899;
                float f2=88.179F;
                d = iMeth2(i12, i11, i9);
                f2 += (0.194F + (i11 * i11));
                i16 += i11;
                iArr1[i9] = i7;
            }
            if (i7 != 0) {
            }
            fArr[i9] = i12;
            switch ((i9 % 1) + 40) {
            case 40:
                i16 = i12;
                for (i17 = 1; i17 < 13; ++i17) {
                    iArr1[i17] *= (int)1.893F;
                }
                for (i19 = 1; i19 < 13; i19++) {
                    byte by1=112;
                    by1 += (byte)i19;
                    i7 += i21;
                }
            default:
                l += (((i9 * i11) + f3) - s);
            }
        }
        long meth_res = i7 + i8 + l + i9 + i10 + i11 + i12 + i16 + i17 + i18 + i19 + i20 + i21 +
            Float.floatToIntBits(f3) + s + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4, int i5) {

        boolean b=true;
        float f1=0.579F, f4=1.656F;
        int iArr[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(sArr, (short)2670);

        for (int i6 : iArr) {
            if (b ^ (true | ((i5 >= f1) & (b = b)))) break;
            i5 = iMeth1(13924, i4, -51L);
            f4 = 1;
            do {
                f1 += (f4 * f4);
                i6 = (int)Test.instanceCount;
                i6 = i6;
                Test.instanceCount += (long)((long)f4 ^ Test.byFld);
                Test.byFld += (byte)i4;
                i6 *= i4;
            } while (++f4 < 4);
            i5 *= (int)f4;
            switch ((((5 >>> 1) % 1) * 5) + 21) {
            case 26:
                Test.instanceCount = (long)88.734F;
                sArr[(i4 >>> 1) % N] >>= (short)i4;
                iArr[(i5 >>> 1) % N] += i5;
                break;
            }
        }
        long meth_res = i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f1) + Float.floatToIntBits(f4) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-60;
        int i=107, i1=12, i2=1, i3=23213, i22=-16555, i23=102, i24=-163, i25=51562, i26=-53223, iArr2[]=new int[N];
        float f=-1.788F;
        double d1=55.17764;

        FuzzerUtils.init(iArr2, -201);

        lArrFld[(iFld >>> 1) % N] += (iFld * ((Test.instanceCount - by) * (Test.instanceCount--)));
        lArrFld[(iFld >>> 1) % N] *= iFld;
        for (i = 359; i > 12; i--) {
            for (i2 = 73; i2 > 4; i2--) {
                boolean b1=true;
                f += (float)(iMeth(i1, 7) * 2.52135);
                d1 *= Test.instanceCount;
                i1 += (((i2 * by) + i1) - Test.iFld1);
                iArr2[i2 + 1] -= (int)Test.instanceCount;
                Test.iFld1 += (int)Test.instanceCount;
                b1 = b1;
                i22 = 1;
                while (++i22 < 2) {
                    Test.instanceCount -= -23189;
                }
                Test.iFld1 += (int)-50408L;
                Test.bArrFld[i] = true;
            }
            iArr2[i - 1] <<= iFld;
            for (i23 = 2; 73 > i23; ++i23) {
                long l1=-116L;
                for (i25 = 1; i25 < 2; ++i25) {
                    i26 += i23;
                    Test.bFld = true;
                }
                iArr2[i23] -= i25;
                i26 += (((i23 * i3) + Test.instanceCount) - Test.instanceCount);
                switch ((i % 5) + 10) {
                case 10:
                    i3 <<= i22;
                    d1 = Test.instanceCount;
                    Test.bFld = Test.bFld;
                    break;
                case 11:
                    iArr2[i] += -146;
                    break;
                case 12:
                    Test.instanceCount -= i22;
                    if (Test.bFld) {
                        lArrFld[i23 + 1] <<= i22;
                    } else if (Test.bFld) {
                        lArrFld1[i - 1] = i23;
                    } else {
                        iArr2[i23] >>= -12;
                    }
                case 13:
                    iFld >>>= -5;
                    break;
                case 14:
                    l1 = -56350;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("by i i1 = " + by + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 f = " + i2 + "," + i3 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d1 i22 i23 = " + Double.doubleToLongBits(d1) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.byFld = " + Test.instanceCount + "," + iFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.iFld1 Test.bFld lArrFld = " + Test.iFld1 + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.bArrFld lArrFld1 = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
