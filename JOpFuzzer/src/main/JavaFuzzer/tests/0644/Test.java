// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-8228245741200292011L;
    public static double dFld=1.84478;
    public static int iFld=11;
    public long lFld=-34350L;
    public boolean bFld=true;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 103.126F);
        FuzzerUtils.init(Test.lArrFld, 16313L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, int i5) {

        double d=-28.65635;
        float f1=-2.94F, fArr[]=new float[N];
        int i6=13, i7=62809, i8=61692, i9=-6, i10=7, iArr[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(fArr, 1.225F);
        FuzzerUtils.init(iArr, -779);

        i5 = i5;
        i5 = i5;
        i5 = (int)d;
        fArr[(i5 >>> 1) % N] = f1;
        i6 = 143;
        while (--i6 > 0) {
            for (i7 = 1; 11 > i7; ++i7) {
                switch (((i6 % 1) * 5) + 106) {
                case 108:
                    if (b1) {
                        for (i9 = 1; i9 < 2; i9 += 2) {
                            if (true) break;
                            iArr[i9] >>= (int)Test.instanceCount;
                            if (b1) break;
                            i10 = i6;
                            try {
                                i10 = (50 % i9);
                                i8 = (iArr[i9 - 1] / iArr[i9]);
                                i5 = (i8 / -48285);
                            } catch (ArithmeticException a_e) {}
                            i10 -= -21086;
                        }
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += l1 + i5 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i10 +
            (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i3, long l, int i4) {

        float f=0.377F;
        byte by=117;
        int i11=-201, i12=-8169, i13=10984, iArr1[]=new int[N];
        long l2=167L, lArr[][]=new long[N][N];
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr, 1541797236638489339L);
        FuzzerUtils.init(sArr, (short)-3542);
        FuzzerUtils.init(iArr1, 13);

        l *= Math.min((int)((f + i4) + (i3 + 233)), Math.max(i4, -i3));
        l += (i3--);
        vMeth1(Test.instanceCount, i4);
        Test.instanceCount &= i3;
        l -= i4;
        lArr[(i4 >>> 1) % N][(i4 >>> 1) % N] += (long)Test.dFld;
        f += i3;
        sArr[(i4 >>> 1) % N] = by;
        i11 = 1;
        do {
            Test.fArrFld[i11] *= i4;
            for (i12 = 1; i12 < 17; i12 += 3) {
                l2 += i12;
                i3 = -4295;
                i4 += (i12 - i12);
                iArr1[i12] <<= i3;
            }
        } while ((i11 += 3) < 267);
        long meth_res = i3 + l + i4 + Float.floatToIntBits(f) + by + i11 + i12 + i13 + l2 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(short s, int i) {

        boolean b=false;
        int i1=221, i2=2, i14=-12, i15=1, iArr2[]=new int[N];
        float f2=-4.368F;
        long l3=7611783153021839856L;
        byte by1=-9;

        FuzzerUtils.init(iArr2, -215);

        b = b;
        for (i1 = 6; i1 < 271; i1++) {
            i >>>= (int)(Test.instanceCount--);
            Test.instanceCount += (i1 | i1);
            if (((-iMeth(i14, -64140L, i2)) - -2996) >= f2) break;
        }
        i15 = 1;
        do {
            if (true) {
                i *= (int)l3;
                Test.lArrFld[i15] = i;
                i2 *= (int)-2L;
            } else {
                f2 += (i15 + i14);
                iArr2[i15] *= (int)f2;
                i14 += (i15 + l3);
                i14 = i;
            }
        } while (++i15 < 281);
        i <<= by1;
        vMeth_check_sum += s + i + (b ? 1 : 0) + i1 + i2 + i14 + Float.floatToIntBits(f2) + i15 + l3 + by1 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i17=10, i18=64273, i19=64247, i20=12874, iArr3[]=new int[N];
        float f3=-1.356F;
        long l4=6760727435755390320L;
        short s1=8704;
        byte by2=-13;

        FuzzerUtils.init(iArr3, -158);

        vMeth((short)(-17069), Test.iFld);
        Test.iFld = (int)Test.instanceCount;
        switch (((Test.iFld >>> 1) % 1) + 12) {
        case 12:
            lFld = lFld;
            break;
        default:
            Test.iFld = Test.iFld;
        }
        for (int i16 : iArr3) {
            lFld += i16;
            Test.iFld = (int)Test.instanceCount;
        }
        i17 = 1;
        do {
            Test.instanceCount += (i17 * i17);
            for (i18 = 6; i18 < 196; ++i18) {
                f3 += (((i18 * i19) + Test.iFld) - f3);
                for (l4 = 2; l4 > 1; --l4) {
                    iArr3[i17 + 1] *= i20;
                    Test.iFld = i18;
                    Test.iFld <<= (int)lFld;
                    if (bFld) {
                        i20 -= (int)-5988229185642843256L;
                        Test.iFld += (int)(((l4 * i19) + Test.instanceCount) - i20);
                        i19 = i20;
                        lFld = i19;
                    }
                }
                switch ((i17 % 7) + 120) {
                case 120:
                    i20 -= i18;
                    Test.iFld -= (int)f3;
                    Test.iFld = (int)f3;
                    i19 += s1;
                case 121:
                    f3 = i17;
                    lFld -= lFld;
                    break;
                case 122:
                    Test.iFld *= Test.iFld;
                    f3 -= (float)Test.dFld;
                    break;
                case 123:
                    Test.iFld >>= (int)lFld;
                    break;
                case 124:
                    Test.dFld *= Test.iFld;
                    break;
                case 125:
                    by2 *= (byte)i20;
                    break;
                case 126:
                    i20 += i18;
                default:
                    i19 -= i19;
                }
            }
        } while (++i17 < 128);

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f3 l4 i20 = " + Float.floatToIntBits(f3) + "," + l4 + "," + i20);
        FuzzerUtils.out.println("s1 by2 iArr3 = " + s1 + "," + by2 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("lFld bFld Test.fArrFld = " + lFld + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
