// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public static double dFld=-2.97309;
    public static short sFld=13073;
    public static double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 62.55658);
        FuzzerUtils.init(Test.lArrFld, -1369103391L);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, long l1, int i5) {

        int i6=-55697, i7=4229, i8=21777, i9=195, i10=12, i11=-12607, iArr[][]=new int[N][N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-24066);
        FuzzerUtils.init(iArr, 246);

        sArr[(i4 >>> 1) % N] = (short)Test.instanceCount;
        i5 -= i4;
        Test.dFld = i4;
        l1 = i5;
        for (i6 = 7; i6 < 132; i6++) {
            iArr[i6 - 1][i6] <<= i6;
        }
        for (i8 = 10; i8 < 305; i8++) {
            float f1=0.917F;
            f1 += (i8 + i5);
            for (i10 = 6; i10 > 1; --i10) {
                Test.dArrFld[i8 + 1] += i6;
                iArr[i10][i10 + 1] = (int)Test.instanceCount;
                Test.instanceCount += i10;
                i4 += (i10 - f1);
                i7 <<= i11;
            }
            i11 = i10;
        }
        long meth_res = i4 + l1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(int i1) {

        int i2=-48096, i3=54767, i12=45897, i13=245, i14=-95, iArr1[]=new int[N];
        float f=0.517F;
        long l2=8265120959466880581L, lArr[]=new long[N];
        byte by=-107;
        boolean b=false;

        FuzzerUtils.init(lArr, -97867449L);
        FuzzerUtils.init(iArr1, 12);

        for (i2 = 1; i2 < 380; i2++) {
            f *= (((lArr[i2 - 1] %= (i2 | 1)) - Test.instanceCount) * (iMeth(36591, Test.instanceCount, -8) + 164));
            i3 += i3;
            iArr1[i2 + 1] += (int)Test.instanceCount;
            i1 += (((i2 * Test.instanceCount) + Test.instanceCount) - i2);
            i3 = i3;
        }
        for (l2 = 352; 6 < l2; l2 -= 2) {
            for (i13 = 1; i13 < 9; ++i13) {
                i12 = i12;
                Test.instanceCount = Test.sFld;
                by = (byte)i1;
                Test.dFld = 12;
                if (b) break;
                i12 += (((i13 * i13) + i3) - i13);
                if (b) continue;
            }
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f) + l2 + i12 + i13 + i14 + by + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i, long l) {

        float f2=-119.1003F, fArr[]=new float[N];
        int i15=-66, i16=49763, i17=-4969, i18=47646, i19=14, iArr2[]=new int[N];
        byte by1=-65;

        FuzzerUtils.init(iArr2, 1);
        FuzzerUtils.init(fArr, 115.128F);

        i = (int)fMeth(14);
        Test.lArrFld[(i >>> 1) % N] += (long)f2;
        for (i15 = 2; i15 < 389; i15++) {
            by1 += (byte)(i15 + i);
            switch (((-40353 >>> 1) % 1) + 59) {
            case 59:
                for (i17 = 4; i17 > 1; --i17) {
                    iArr2[i17 - 1] = i;
                    l >>= l;
                    fArr[(i18 >>> 1) % N] *= i18;
                }
                i19 = 1;
                do {
                    iArr2[i15 - 1] = i19;
                    iArr2[i19 - 1] = i16;
                    l -= (long)Test.dFld;
                    by1 <<= (byte)i15;
                    Test.instanceCount >>= i19;
                } while (++i19 < 4);
                break;
            }
        }
        vMeth_check_sum += i + l + Float.floatToIntBits(f2) + i15 + i16 + by1 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i20=54629;

        vMeth(i20, Test.instanceCount);
        i20 = i20;

        FuzzerUtils.out.println("i20 = " + i20);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
