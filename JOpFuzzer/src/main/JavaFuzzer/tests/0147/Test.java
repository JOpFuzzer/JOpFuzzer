// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1072842699L;
    public volatile int iFld=-1;
    public static float fFld=-1.151F;
    public static byte byFld=-115;
    public boolean bFld=false;
    public static long lFld=56144L;
    public static long lArrFld[][]=new long[N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -29508L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, short s) {

        int i6=-35, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 2);

        iArr1[(-9 >>> 1) % N] *= i6;
        vMeth2_check_sum += l + s + i6 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(boolean b) {

        int i4=24400, i5=147, i7=5, i8=12, i9=-54445, iArr2[][]=new int[N][N];
        short s1=1087;
        byte by1=-126;

        FuzzerUtils.init(iArr2, -102);

        for (i4 = 136; i4 > 2; i4--) {
            vMeth2(Test.instanceCount, s1);
            iArr2[i4 + 1] = FuzzerUtils.int1array(N, (int)-10);
            for (i7 = 1; i7 < 12; i7++) {
                Test.fFld += i7;
                Test.lArrFld[i4][(i4 >>> 1) % N] >>= i7;
                if (i8 != 0) {
                    vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + s1 + i7 + i8 + i9 + by1 + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                i9 = 1;
                while (++i9 < 2) {
                    long l1=13L;
                    i8 = i8;
                    Test.instanceCount <<= Test.instanceCount;
                    by1 = (byte)i9;
                    l1 = l1;
                    if (b) {
                        i5 &= i7;
                        s1 += (short)(-11 + (i9 * i9));
                    } else {
                        Test.instanceCount -= -2;
                    }
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + s1 + i7 + i8 + i9 + by1 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i1) {

        int i2=0, i3=-244, i10=19438, iArr3[]=new int[N];
        float f=-30.551F, fArr[][]=new float[N][N];
        byte by=-28;
        double d=0.87157;

        FuzzerUtils.init(fArr, -5.194F);
        FuzzerUtils.init(iArr3, 238);

        for (i2 = 5; i2 < 125; i2++) {
            boolean b1=false;
            i3 += (-8 + (i2 * i2));
            f += (Math.abs((long)(i1 * f)) + (-56 - (Test.instanceCount + Test.instanceCount)));
            Test.instanceCount = (--i1);
            i3 = (int)(((by++) - i2) + (226 - (i1 <<= (int)-63592L)));
            i3 *= -50728;
            d += d;
            i3 -= (i1 -= i3);
            vMeth1(b1);
            Test.instanceCount = i2;
        }
        try {
            Test.lArrFld[(i3 >>> 1) % N] = Test.lArrFld[(i1 >>> 1) % N];
            i10 = 1;
            while (++i10 < 357) {
                fArr[i10][i10 - 1] = Test.instanceCount;
                Test.instanceCount ^= by;
            }
        }
        catch (UserDefinedExceptionTest exc2) {
            iArr3[(45525 >>> 1) % N] = (int)Test.fFld;
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            iArr3[(i1 >>> 1) % N] -= i3;
        }
        vMeth_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-22232, i11=131, i12=-31742, i13=-233, i14=-63, i15=18, i16=-47, i17=-250, i18=16, iArr[]=new int[N];
        double d1=-2.115115, d2=30.44983;
        short s2=-6283;
        boolean b2=true;

        FuzzerUtils.init(iArr, -2);

        i = 1;
        while (++i < 243) {
            iFld <<= iArr[i];
            vMeth(11478);
            Test.byFld = (byte)i;
            for (i11 = i; i11 < 103; ++i11) {
                for (d1 = 1; d1 < 1; ++d1) {
                    fArrFld[i - 1] -= iFld;
                    bFld = false;
                    Test.fFld -= 43137;
                    i12 &= i;
                    Test.lFld >>= Test.byFld;
                    i12 *= i;
                    i12 = i11;
                }
                iFld = i11;
                Test.fFld = Test.fFld;
                i13 += i13;
                i14 += i11;
                iArr[i - 1] = s2;
            }
            if (bFld) continue;
        }
        i14 += i11;
        Test.fFld = Test.lFld;
        for (i15 = 3; i15 < 195; i15++) {
            i16 = (int)-195L;
            d2 += -62535;
            for (i17 = 3; i17 < 131; ++i17) {
                bFld = b2;
                iArr[i15] <<= i;
                Test.instanceCount = i18;
                if (false) break;
                Test.lArrFld[i15 - 1][i17] *= i13;
            }
        }

        FuzzerUtils.out.println("i i11 i12 = " + i + "," + i11 + "," + i12);
        FuzzerUtils.out.println("d1 i13 i14 = " + Double.doubleToLongBits(d1) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("s2 i15 i16 = " + s2 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("d2 i17 i18 = " + Double.doubleToLongBits(d2) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("b2 iArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld bFld Test.lFld = " + Test.byFld + "," + (bFld ? 1 : 0) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
