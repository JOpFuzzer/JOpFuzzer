// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-64L;
    public static boolean bFld=false;
    public static short sFld=30907;
    public static byte byFld=-117;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -41.517F);
        FuzzerUtils.init(Test.lArrFld, -1139320502L);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i11, int i12, long l1) {

        int i13=-2, i14=-61186, i15=-37865, i16=-57363, i17=-13, iArr1[]=new int[N];
        float f2=-2.849F;
        byte by=-61;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 122L);
        FuzzerUtils.init(iArr1, 3);

        l1 = (long)-2.952F;
        i11 -= (int)l1;
        lArr[(i12 >>> 1) % N] = i12;
        iArr1[(i11 >>> 1) % N] *= 3421;
        i12 -= i11;
        for (i13 = 14; i13 < 254; i13++) {
            i12 += (i13 * i13);
            f2 -= -89;
            for (i15 = 1; i15 < 7; ++i15) {
                i17 = 2;
                do {
                    iArr1[i15] >>= -73;
                    i16 = i13;
                    Test.sFld >>= (short)i12;
                    by += (byte)i17;
                    if (Test.bFld) break;
                } while (--i17 > 0);
            }
        }
        vMeth_check_sum += i11 + i12 + l1 + i13 + i14 + Float.floatToIntBits(f2) + i15 + i16 + i17 + by +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i5) {

        int i6=-9, i7=9, i8=4, i9=-35793, i10=46, i18=-5, i19=10, iArr[]=new int[N];
        float f1=-33.352F, f3=-56.394F, fArr[]=new float[N];
        long l2=-253L;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 199);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, 2.51F);

        for (i6 = 137; i6 > 6; i6 -= 3) {
            for (i8 = 35; i8 > i6; --i8) {
                iArr = (iArr = iArr);
                Test.instanceCount <<= (i10 | (--iArr[i8 - 1]));
                bArr = bArr;
            }
            f1 = 1;
            while (++f1 < 35) {
                i7 = (int)(119.1002F - (++i7));
            }
            vMeth(61836, 55995, 177L);
            fArr[(i6 >>> 1) % N] += i7;
            for (i18 = 1; i18 < 35; i18++) {
                i5 += i18;
                l2 = 1;
                do {
                    iArr[i18] >>>= i7;
                    f3 /= -6217;
                    f3 += (l2 * f3);
                } while (++l2 < 2);
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i18 + i19 + l2 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i2, long l) {

        int i3=-43232, i4=-192, i20=-57, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -12);

        i3 = 337;
        do {
            i4 = 1;
            while (++i4 < 9) {
                i2 += (i4 | i4);
                i2 += (i4 - i4);
                i2 *= iMeth(i4);
                iArr2[i3 + 1] = (int)-9.962F;
                i20 = 1;
                while (++i20 < 1) {
                    byte by1=55;
                    iArr2[i20] += i3;
                    i2 += (int)-4.28083;
                    iArr2[i3] = i2;
                    i2 += by1;
                    iArr2[i3] += 7;
                    Test.instanceCount += (((i20 * Test.sFld) + l) - i3);
                    i2 &= 3;
                }
                iArr2[i4 - 1] += i20;
            }
        } while ((i3 -= 2) > 0);
        long meth_res = i2 + l + i3 + i4 + i20 + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=46080, i1=132, i21=-58720, i22=6, i23=-107, i24=-26043, i25=196, i26=48616, i27=49114, i28=-196,
            i29=8148, i30=-52965, i31=13, i32=10;
        float f=-48.421F, f4=-36.682F;
        double d=-1.122376;
        short sArr[]=new short[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(sArr, (short)-15612);
        FuzzerUtils.init(byArr, (byte)23);

        Test.bFld = (Math.min(5, i) == (Test.sFld + (61 - (i - i))));
        for (f = 322; f > 13; f--) {
            sArr[(int)(f + 1)] >>= (short)((dMeth(i21, -1605015338735560779L) + 0.27738) - 217);
        }
        for (i22 = 269; i22 > 4; i22--) {
            Test.fArrFld[i22 + 1] -= -196;
            byArr[i22 + 1] = (byte)f;
            Test.instanceCount += 127;
        }
        for (i24 = 2; i24 < 170; ++i24) {
            Test.lArrFld[i24 + 1] *= 33993;
            Test.lArrFld[i24] += i1;
            Test.sFld -= (short)i23;
            i21 += i21;
            Test.fArrFld[i24 + 1] = f;
            Test.iArrFld = Test.iArrFld;
        }
        for (i26 = 5; 241 > i26; ++i26) {
            Test.iArrFld[i26 - 1] = i;
            i21 += i26;
            for (i28 = 2; i28 < 106; ++i28) {
                i27 |= i26;
                i29 %= -9;
                i += (int)Test.instanceCount;
                d = Test.instanceCount;
                for (i30 = 2; i30 > 1; i30--) {
                    d = d;
                    i21 -= (int)f;
                    Test.byFld &= (byte)i32;
                    if (Test.bFld) {
                        i -= i23;
                    }
                    f4 = i21;
                }
                dArrFld[i26] += 159;
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("d i30 i31 = " + Double.doubleToLongBits(d) + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 f4 sArr = " + i32 + "," + Float.floatToIntBits(f4) + "," +
            FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.byFld Test.fArrFld Test.lArrFld = " + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
