// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:42 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4627226146903329022L;
    public static short sFld=19872;
    public static boolean bFld=false;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i11, int i12) {

        float f2=2.397F;
        int i13=-37107, i14=-12, i15=-53892, i16=235, i17=0, i18=10248, i19=3, i20=-129;
        byte by=-18;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-15820);

        f2 *= 55649;
        for (i13 = 9; i13 < 165; i13++) {
            sArr = sArr;
        }
        Test.instanceCount -= i11;
        for (i15 = 9; i15 < 173; i15++) {
            Test.instanceCount = (long)f2;
            Test.sFld += (short)(i15 * i15);
            Test.instanceCount <<= -15710;
            f2 += (((i15 * i15) + by) - Test.instanceCount);
            i11 = i15;
        }
        i16 -= i13;
        for (i17 = 164; 10 < i17; --i17) {
            for (i19 = 1; i19 < 10; i19++) {
                i20 -= i12;
                i18 = i14;
            }
        }
        vMeth2_check_sum += i11 + i12 + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + by + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(int i5, int i6) {

        float f1=-2.22F, fArr[]=new float[N];
        int i7=248, i8=147, i9=-27366, i10=0, i21=-51, i22=9, iArr1[]=new int[N];
        byte by1=-116;
        long lArr1[][]=new long[N][N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(lArr1, 1796473013L);
        FuzzerUtils.init(iArr1, -251);
        FuzzerUtils.init(dArr, -1.68290);
        FuzzerUtils.init(fArr, 2.476F);

        f1 *= Math.abs(Math.min(i5, i6 + -179));
        for (i7 = 6; i7 < 205; i7++) {
            for (i9 = 1; i9 < 8; i9++) {
                i6 = (int)lArr1[i9 + 1][i7 + 1];
                if (i6 != 0) {
                    vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i21 + i22 + by1 +
                        FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                vMeth2(i6, i5);
                iArr1 = iArr1;
                switch ((i7 % 7) + 47) {
                case 47:
                    f1 = i9;
                    if (Test.bFld) continue;
                    for (i21 = i7; 2 > i21; ++i21) {
                        dArr[i7][i21 - 1] -= i22;
                        i22 = i5;
                        iArr1[i9] = i5;
                        i5 += (i21 * i5);
                    }
                case 48:
                    if (Test.bFld) continue;
                    break;
                case 49:
                    fArr[i9 + 1] = i8;
                    break;
                case 50:
                    Test.instanceCount += by1;
                    break;
                case 51:
                case 52:
                    i6 += i9;
                    break;
                case 53:
                    i10 = i9;
                default:
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i21 + i22 + by1 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i=-23542, i1=183, i2=9, i3=-20378, i4=-14, iArr[]=new int[N];
        boolean b=false;
        long l=-785610378L, lArr[][]=new long[N][N];
        double d=77.7471;

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, 7981285889477767793L);

        for (i = 13; i < 352; i++) {
            float f=35.957F;
            f -= i1;
            for (i2 = 1; 5 > i2; i2++) {
                b = (((l - i) / ((--i3) | 1)) > (Test.instanceCount = i3));
                Test.instanceCount <<= (l--);
                f += (float)((-i1) * (Test.instanceCount + (d++)));
                i3 = (i1--);
                Test.instanceCount = i1;
                iArr[i2] += (int)((~(i3 - i2)) * ((++Test.instanceCount) + (--d)));
            }
        }
        i1 *= (int)(-((i2 - i1) + (-2 - (--d))));
        i4 = 1;
        do {
            i3 += i4;
            i3 = (int)(--lArr[i4 + 1][i4 - 1]);
            vMeth1(-13, i3);
            i1 += (int)-13507L;
        } while (++i4 < 184);
        vMeth_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + l + Double.doubleToLongBits(d) + i4 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        float f3=77.264F;
        byte by2=94;
        double d1=0.75010, dArr1[]=new double[N];
        int i23=-24, i24=-5, i25=-39, i26=-188, i27=13, i28=15443, i29=4, i30=18732, i31=-14, i32=4, iArr2[]=new int[N];
        short s=-2226, sArr1[]=new short[N];

        FuzzerUtils.init(iArr2, 9562);
        FuzzerUtils.init(dArr1, -118.119131);
        FuzzerUtils.init(sArr1, (short)-24919);

        vMeth();
        f3 += by2;
        Test.instanceCount = (long)d1;
        for (i23 = 273; 4 < i23; --i23) {
            for (i25 = 1; i25 < 93; ++i25) {
                i24 &= i26;
                s += (short)(((i25 * i25) + f3) - i26);
                iArr2[i23 - 1] += -32243;
                i26 >>= i25;
                d1 = i23;
                i24 = 19;
                iArr2[i25] >>= (int)Test.instanceCount;
            }
            dArr1[i23 - 1] += i27;
            for (i28 = 4; i28 < 93; i28++) {
                f3 = i27;
                i27 <<= i28;
                i27 >>>= i27;
                if (true) break;
                i29 = i25;
                Test.instanceCount >>= -57412;
                switch (((i28 % 8) * 5) + 98) {
                case 128:
                    i26 -= i27;
                    break;
                case 120:
                    i24 -= (int)d1;
                    break;
                case 121:
                case 127:
                    for (i30 = 1; i30 < 2; i30++) {
                        iArr2[i23] <<= 18672;
                        i24 <<= i24;
                        d1 -= Test.sFld;
                        sArr1[i30 - 1] = (short)12;
                        try {
                            i32 = (i29 / i31);
                            iArr2[i23 - 1] = (1870378075 / i27);
                            i32 = (-32833 / i28);
                        } catch (ArithmeticException a_e) {}
                        i26 += (int)(0.422F + (i30 * i30));
                    }
                    break;
                case 132:
                    lArrFld[i23] = i24;
                    break;
                case 111:
                    i29 += (int)(-8019318561965502869L + (i28 * i28));
                    break;
                case 100:
                    Test.instanceCount = Test.instanceCount;
                case 135:
                    iArr2[i23 + 1] *= (int)100L;
                    break;
                default:
                    Test.instanceCount -= 5455;
                }
            }
        }

        FuzzerUtils.out.println("f3 by2 d1 = " + Float.floatToIntBits(f3) + "," + by2 + "," +
            Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 s i27 = " + i26 + "," + s + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 iArr2 = " + i31 + "," + i32 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("dArr1 sArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
            FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
