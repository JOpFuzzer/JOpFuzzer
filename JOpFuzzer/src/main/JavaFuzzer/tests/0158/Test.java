// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2249934992L;
    public static volatile int iFld=8;
    public static float fFld=2.81F;
    public double dFld=-59.45226;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -17.41784);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i8) {

        int i9=-7, i10=186, i11=-10, i12=-13, iArr2[]=new int[N];
        float f2=-60.116F, fArr[][]=new float[N][N];
        long lArr[][]=new long[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 619165660218730722L);
        FuzzerUtils.init(iArr2, -9);
        FuzzerUtils.init(dArr, 0.81925);
        FuzzerUtils.init(fArr, -64.799F);

        Test.iFld <<= (int)l;
        l >>= 2;
        for (i9 = 8; i9 < 212; i9++) {
            i11 = 1;
            while (++i11 < 8) {
                i10 ^= -20905;
                i12 = 1;
                while (++i12 < 1) {
                    lArr[i12 - 1][i9 + 1] = l;
                    iArr2[i11] -= Test.iFld;
                    f2 = Test.instanceCount;
                    i8 += (7 + (i12 * i12));
                    i8 = i8;
                    switch (((51022 >>> 1) % 6) + 31) {
                    case 31:
                        i8 |= i9;
                        iArr2 = iArr2;
                        dArr = dArr;
                    case 32:
                        iArr2[i11 + 1] = (int)Test.instanceCount;
                        break;
                    case 33:
                        iArr2[i9] ^= i8;
                        break;
                    case 34:
                        l >>= l;
                    case 35:
                        iArr2[i9] *= i12;
                        break;
                    case 36:
                        fArr[i9 + 1][i12 + 1] += Test.iFld;
                        break;
                    }
                }
            }
        }
        vMeth2_check_sum += l + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i4, int i5) {

        int i6=-4821, i7=-26, iArr1[]=new int[N];
        double d=47.47018;
        byte by=-98;

        FuzzerUtils.init(iArr1, 1);

        i5 = (i4--);
        for (i6 = 3; i6 < 249; ++i6) {
            float f1=-87.695F;
            d += (130 + ((i4 - i4) + (i4 - Test.instanceCount)));
            iArr1[i6 - 1] = (int)(--Test.instanceCount);
            by -= (byte)i6;
            f1 -= (-8114199123361894833L - ((iArr1[i6 - 1]--) - (++f1)));
            vMeth2(Test.instanceCount, i6);
        }
        Test.dArrFld[(i7 >>> 1) % N] += Test.fFld;
        vMeth1_check_sum += i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + by + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        float f=4.645F;
        int i=1, i1=5, i2=17147, i3=-13916, i13=14, i14=1, i15=-18579, iArr[]=new int[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(byArr, (byte)52);

        Test.iFld -= (int)f;
        for (i = 12; 295 > i; ++i) {
            Test.iFld = (int)(Test.instanceCount--);
            Test.iFld = (int)(Test.instanceCount *= (iArr[(i >>> 1) % N] = (int)(3L + (Test.instanceCount *
                Test.iFld))));
        }
        for (i2 = 4; 343 > i2; ++i2) {
            vMeth1(-32671, i2);
            i3 += i2;
            i3 >>= i3;
            i13 = 1;
            while (++i13 < 5) {
                for (i14 = 1; i14 < 1; ++i14) {
                    i15 <<= (int)Test.instanceCount;
                    i15 += i14;
                    Test.instanceCount = i3;
                    i15 += Test.iFld;
                    byArr[i13 - 1] = (byte)i3;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i3 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=-187, i17=2561, i18=7, i19=-5047, i20=-13, i21=5, i22=63229, iArr3[][]=new int[N][N];
        short s=950, sArr[][]=new short[N][N];
        boolean b=true;
        byte by1=123;
        float f3=-24.832F, fArr1[][]=new float[N][N];
        long l1=23150L, lArr1[]=new long[N];
        double d1=125.6717;

        FuzzerUtils.init(fArr1, 1.755F);
        FuzzerUtils.init(iArr3, -157);
        FuzzerUtils.init(lArr1, 14L);
        FuzzerUtils.init(sArr, (short)-8349);

        Test.iFld -= (int)Test.instanceCount;
        vMeth();
        for (i16 = 18; i16 < 327; ++i16) {
            for (i18 = 2; 81 > i18; i18++) {
                for (i20 = 1; i20 < 2; i20++) {
                    int i23=-14;
                    s |= (short)-59400L;
                    i21 += (i20 * i20);
                    if (b) {
                        Test.instanceCount += (i20 - i21);
                        switch ((((i20 >>> 1) % 8) * 5) + 110) {
                        case 146:
                            b = b;
                            fArr1[i16 - 1] = fArr1[i18 - 1];
                            break;
                        case 149:
                            i17 ^= i16;
                            break;
                        case 117:
                            Test.instanceCount <<= 53;
                            i19 = i19;
                            dFld *= Test.fFld;
                        case 150:
                            i21 = (int)Test.instanceCount;
                            switch ((i18 * 5) + 46) {
                            case 363:
                                i21 = 1254;
                            case 131:
                                Test.fFld = by1;
                            case 371:
                                Test.fFld += i20;
                                try {
                                    i17 = (iArr3[i16 + 1][i20 + 1] / -1044384545);
                                    Test.iFld = (i19 / i16);
                                    i19 = (i19 % i21);
                                } catch (ArithmeticException a_e) {}
                                Test.instanceCount -= i17;
                                i19 -= i20;
                                break;
                            case 99:
                                Test.instanceCount += i16;
                                break;
                            case 263:
                                Test.iFld *= i16;
                                break;
                            case 210:
                                Test.instanceCount += i20;
                                i17 /= (int)(Test.iFld | 1);
                                break;
                            case 69:
                                i21 += i20;
                                break;
                            case 104:
                                i17 *= i18;
                                break;
                            case 335:
                                i21 = Test.iFld;
                                break;
                            case 214:
                                i17 = 124;
                                break;
                            case 219:
                                i21 -= 56724;
                                break;
                            case 187:
                                dFld += Test.instanceCount;
                            case 177:
                                dFld += i16;
                                break;
                            case 115:
                                Test.iFld *= 5;
                                break;
                            case 300:
                                dFld = Test.fFld;
                                break;
                            case 315:
                                i17 >>= 168;
                                break;
                            case 204:
                                f3 = Test.fFld;
                                break;
                            case 232:
                                i19 -= i20;
                                break;
                            case 271:
                                Test.instanceCount |= 153;
                            case 98:
                                Test.instanceCount = -3817;
                                break;
                            case 254:
                                s += (short)(i20 | i21);
                                break;
                            case 146:
                                i17 += 11;
                                break;
                            case 182:
                                iArr3[i16 + 1][i18 + 1] >>>= (int)Test.instanceCount;
                            case 251:
                                Test.iFld += Test.iFld;
                                break;
                            case 305:
                                i19 = (int)Test.fFld;
                                break;
                            case 74:
                                i17 *= s;
                            case 308:
                                dFld -= f3;
                                break;
                            case 125:
                                Test.fFld += i20;
                                break;
                            case 141:
                                Test.fFld += (i20 * i20);
                                break;
                            case 368:
                                i17 >>= (int)145L;
                                break;
                            case 193:
                                i19 = i22;
                                break;
                            case 60:
                                s = (short)Test.instanceCount;
                                break;
                            case 167:
                                Test.instanceCount = i20;
                                break;
                            case 369:
                                i19 += (int)dFld;
                            case 269:
                                i19 = i16;
                                break;
                            case 171:
                            case 188:
                                if (b) continue;
                                break;
                            case 372:
                                f3 = Test.iFld;
                                break;
                            case 179:
                                try {
                                    Test.iFld = (i16 / i21);
                                    iArr3[i16 + 1][i20 - 1] = (i20 / i21);
                                    iArr3[i20][i16 - 1] = (i17 % 78);
                                } catch (ArithmeticException a_e) {}
                            case 301:
                            case 235:
                                i21 = (int)Test.instanceCount;
                                break;
                            case 388:
                                Test.instanceCount = Test.iFld;
                                break;
                            case 192:
                                Test.instanceCount += (long)dFld;
                                break;
                            case 198:
                                lArr1[i16 - 1] = Test.instanceCount;
                            case 222:
                            case 54:
                                i17 = i20;
                                break;
                            case 159:
                                f3 += l1;
                                break;
                            case 230:
                                iArr3[i16][i16 + 1] -= (int)-3668275404L;
                                break;
                            case 352:
                                d1 += i22;
                            case 344:
                                i17 = (int)l1;
                                break;
                            case 103:
                                d1 = Test.fFld;
                                break;
                            case 161:
                                i21 |= i17;
                                break;
                            case 261:
                                sArr[i18 - 1][i18 - 1] -= (short)Test.iFld;
                                break;
                            case 206:
                                l1 <<= i19;
                            case 387:
                                l1 += (((i20 * i17) + i22) - i23);
                                break;
                            case 216:
                                if (b) break;
                            case 255:
                                i23 *= i22;
                                break;
                            case 248:
                                lArr1[i20 - 1] = i18;
                                break;
                            case 223:
                                dFld = f3;
                            case 323:
                                try {
                                    i22 = (i19 % i21);
                                    i19 = (Test.iFld / -195);
                                    iArr3[i20 - 1][i16 - 1] = (i20 / Test.iFld);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 147:
                                i22 = i16;
                                break;
                            case 341:
                                l1 = Test.iFld;
                                break;
                            case 135:
                                l1 = i18;
                                break;
                            case 124:
                                i17 += (-11 + (i20 * i20));
                                break;
                            case 208:
                                s += (short)i20;
                                break;
                            case 361:
                                b = true;
                            case 234:
                                Test.iFld += 21618;
                                break;
                            case 205:
                                d1 -= l1;
                                break;
                            case 282:
                                d1 -= -63011;
                            case 184:
                                i17 -= (int)Test.fFld;
                                break;
                            default:
                                Test.iFld = i16;
                            }
                        case 118:
                            i19 += i20;
                        case 132:
                            Test.fFld -= s;
                        case 142:
                            d1 -= i16;
                            break;
                        case 111:
                            Test.instanceCount *= i21;
                            break;
                        default:
                            Test.instanceCount <<= i16;
                        }
                    } else {
                        by1 += (byte)i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s b by1 = " + s + "," + (b ? 1 : 0) + "," + by1);
        FuzzerUtils.out.println("f3 i22 l1 = " + Float.floatToIntBits(f3) + "," + i22 + "," + l1);
        FuzzerUtils.out.println("d1 fArr1 iArr3 = " + Double.doubleToLongBits(d1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("lArr1 sArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dFld Test.dArrFld = " + Double.doubleToLongBits(dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
