// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7L;
    public int iFld=-113;
    public double dFld=-1.87626;
    public static boolean bFld=false;
    public static volatile float fFld=94.761F;
    public static volatile int iFld1=-58837;
    public static double dFld1=0.79415;
    public static volatile short sFld=12873;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -61553);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3, int i4) {

        int i5=30064, i6=0, i7=-2, i8=30290, i9=0;
        long l=994221380L, lArr1[]=new long[N];
        byte by=-1;
        double d1=-15.40880;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.715F);
        FuzzerUtils.init(lArr1, 112L);

        for (i5 = 8; i5 < 290; i5 += 3) {
            for (l = 1; l < 16; l++) {
                for (i8 = 1; 2 > i8; i8 += 2) {
                    short s=-31147;
                    if (Test.bFld) break;
                    switch (((i5 % 7) * 5) + 96) {
                    case 110:
                    case 116:
                        i6 += (i8 ^ (long)Test.fFld);
                        i3 = by;
                        d1 *= Test.fFld;
                        i3 = i3;
                        break;
                    case 102:
                        i6 = 243;
                        s += (short)(i8 ^ i3);
                        i4 += 221;
                        i3 = s;
                        break;
                    case 98:
                        i7 += (i8 * i8);
                        i3 += i8;
                    case 122:
                        fArr[i8] -= l;
                    case 129:
                        Test.fFld = i8;
                        break;
                    case 128:
                        lArr1 = lArr1;
                        break;
                    default:
                        lArr1[i8] -= -11;
                    }
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + l + i7 + i8 + i9 + by + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i2) {

        int i10=-22065, i11=53711, i12=0, i13=20332, i14=52357, i15=35;
        short s1=7657, sArr[][]=new short[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 74.110776);
        FuzzerUtils.init(sArr, (short)4055);

        vMeth(i2, 63382);
        for (i10 = 5; i10 < 147; i10++) {
            Test.instanceCount <<= -4;
            i2 += i10;
            dArr[i10 - 1] += Test.instanceCount;
            i2 += s1;
            Test.fFld += i2;
        }
        sArr[(i2 >>> 1) % N] = sArr[(i2 >>> 1) % N];
        Test.iArrFld[(-10329 >>> 1) % N] = Test.iFld1;
        Test.dFld1 -= Test.instanceCount;
        Test.iArrFld[(i11 >>> 1) % N] >>>= Test.iFld1;
        for (i12 = 4; i12 < 124; ++i12) {
            for (i14 = 1; 13 > i14; i14++) {
                if (Test.bFld) break;
                i13 = i11;
            }
        }
        long meth_res = i2 + i10 + i11 + s1 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i=41596, i1=5, i16=128, i17=22160;
        double d=125.23609, d2=0.19470;

        for (i = 8; i < 242; ++i) {
            i1 = (int)(-Test.instanceCount);
            d = iMeth(4343);
            for (i16 = 1; 7 > i16; ++i16) {
                Test.iArrFld[i] = i1;
                Test.dFld1 = Test.instanceCount;
                if (i != 0) {
                }
                i1 -= i1;
                d2 = 1;
                while (++d2 < 2) {
                    Test.iArrFld = Test.iArrFld;
                    i1 -= (int)Test.instanceCount;
                    Test.instanceCount *= i16;
                    Test.instanceCount = i;
                }
                i17 += (i16 + i1);
                Test.instanceCount *= (long)d;
            }
        }
        long meth_res = i + i1 + Double.doubleToLongBits(d) + i16 + i17 + Double.doubleToLongBits(d2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=7, i19=5, i20=-27087, i21=-1;
        byte by1=11;
        long lArr[]=new long[N];
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(lArr, 1546367434L);
        FuzzerUtils.init(dArr1, -18.61920);

        lArr[(iFld >>> 1) % N] += (long)((--dFld) - lMeth());
        for (i18 = 10; 183 > i18; i18++) {
            Test.iFld1 = (int)Test.instanceCount;
            if (Test.bFld) {
                Test.instanceCount <<= i19;
                by1 += (byte)(((i18 * Test.iFld1) + Test.instanceCount) - Test.iFld1);
            } else {
                Test.iArrFld[i18 + 1] = i18;
                iFld += (((i18 * Test.instanceCount) + i19) - i19);
            }
            iFld = i19;
            i19 += -159;
            i19 += (i18 | i19);
            i19 |= iFld;
            for (i20 = 3; i20 < 145; ++i20) {
                switch ((i18 % 10) + 74) {
                case 74:
                    if (Test.bFld) continue;
                    Test.iArrFld[i18 + 1] = 10397;
                    break;
                case 75:
                    switch (((i19 >>> 1) % 10) + 75) {
                    case 75:
                        Test.iFld1 = Test.iFld1;
                        i21 -= i20;
                        switch ((i18 % 2) + 52) {
                        case 52:
                            dArr1[i18][i20 + 1] += Test.fFld;
                            Test.fFld += i20;
                            break;
                        case 53:
                            iFld |= -52726;
                            i21 -= 1930;
                            switch (((i20 % 2) * 5) + 74) {
                            case 82:
                                i21 = -177;
                                i21 = -8;
                                break;
                            case 79:
                                Test.fFld += Test.fFld;
                                Test.iFld1 += (i20 ^ Test.iFld1);
                                Test.iArrFld[i20 + 1] *= iFld;
                            default:
                                i19 = i21;
                            }
                            break;
                        }
                    case 76:
                        iFld += (int)Test.instanceCount;
                        break;
                    case 77:
                        iFld = (int)-5L;
                        break;
                    case 78:
                    case 79:
                        i19 += (i20 | (long)Test.fFld);
                        break;
                    case 80:
                        Test.instanceCount = i21;
                        break;
                    case 81:
                        Test.iFld1 = i21;
                        break;
                    case 82:
                        iFld *= iFld;
                        break;
                    case 83:
                        iFld += by1;
                    case 84:
                        i21 = iFld;
                        break;
                    default:
                        Test.iArrFld[i18 - 1] = (int)Test.instanceCount;
                    }
                    break;
                case 76:
                case 77:
                    Test.instanceCount = i20;
                    break;
                case 78:
                    Test.iFld1 = i18;
                    break;
                case 79:
                    Test.iFld1 = Test.iFld1;
                case 80:
                    Test.sFld = (short)Test.iFld1;
                    break;
                case 81:
                    Test.fFld = 169;
                    break;
                case 82:
                    i19 %= (int)(i20 | 1);
                    break;
                case 83:
                    lArr = lArr;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 by1 = " + i18 + "," + i19 + "," + by1);
        FuzzerUtils.out.println("i20 i21 lArr = " + i20 + "," + i21 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount iFld dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.bFld Test.fFld Test.iFld1 = " + (Test.bFld ? 1 : 0) + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld1);
        FuzzerUtils.out.println("Test.dFld1 Test.sFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld1) + "," +
            Test.sFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
