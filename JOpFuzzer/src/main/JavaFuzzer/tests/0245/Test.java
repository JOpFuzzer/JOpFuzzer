// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=235L;
    public static short sFld=-6301;
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 266369422L);
        FuzzerUtils.init(Test.byArrFld, (byte)-96);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static void vMeth1() {

        int i4=54801;
        float f=1.354F;

        i4 += (int)((i4++) + (--f));
        vMeth1_check_sum += i4 + Float.floatToIntBits(f);
    }

    public static double dMeth(int i8) {

        int i9=45846, i10=-7, i11=13, i12=10831, i13=-6, i14=114, i15=-5, iArr1[]=new int[N];
        float f1=35.769F;
        boolean b=false;

        FuzzerUtils.init(iArr1, -61736);

        for (i9 = 4; i9 < 201; i9++) {
            f1 += (-10 + (i9 * i9));
            f1 += i10;
            i10 -= -22288;
            b = b;
            Test.sFld += (short)(((i9 * i8) + i9) - i11);
            Test.lArrFld[i9 - 1] >>= i11;
            i10 += i9;
        }
        i11 = i10;
        for (i12 = 8; i12 < 150; ++i12) {
            i13 ^= i8;
            iArr1[i12] = (int)f1;
            for (i14 = 1; i14 < 11; ++i14) {
                i13 = (int)Test.instanceCount;
                i11 = i13;
            }
        }
        long meth_res = i8 + i9 + i10 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth2(int i5) {

        int i6=-49, i7=7, i16=-2, i17=10, i18=-11, iArr2[]=new int[N];
        double d1=2.37257;
        float f2=0.878F;

        FuzzerUtils.init(iArr2, 193);

        for (i6 = 178; i6 > 7; i6 -= 3) {
            i7 += (i6 ^ i6);
            i5 += (int)dMeth(i6);
            i16 = 1;
            do {
                Test.instanceCount += 3L;
                for (i17 = 1; 1 > i17; i17++) {
                    boolean b1=false;
                    i5 = (int)Test.instanceCount;
                    Test.byArrFld[i16 + 1] *= (byte)i17;
                    if (b1) {
                        iArr2[i6] += i17;
                        d1 -= i17;
                        iArr2[i16 - 1] >>= i18;
                    } else if (b1) {
                        f2 += i16;
                    }
                    i5 -= -227;
                }
                i7 >>= 38244;
            } while (++i16 < 27);
        }
        vMeth2_check_sum += i5 + i6 + i7 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l, long l1, double d) {

        int i=42047, i1=-168, i2=-6, i3=-4, i19=-125, i20=69, iArr[]=new int[N];
        byte by=104;

        FuzzerUtils.init(iArr, 11);

        for (i = 3; i < 128; ++i) {
            iArr[i] >>>= (int)((Test.sFld--) * ((++l1) + Test.lArrFld[i]));
            for (i2 = 1; i2 < 13; i2 += 3) {
                vMeth1();
            }
            Test.byArrFld[i] *= (byte)(i1--);
            by += (byte)i;
            vMeth1();
        }
        i3 <<= (int)1846297102526950148L;
        vMeth2(i1);
        i19 = 1;
        do {
            i20 = 1;
            do {
                if (i3 != 0) {
                    vMeth_check_sum += l + l1 + Double.doubleToLongBits(d) + i + i1 + i2 + i3 + by + i19 + i20 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                i1 += i20;
                i3 += i19;
                try {
                    i1 = (i20 % iArr[(14 >>> 1) % N]);
                    i3 = (i19 / -17796);
                    i3 = (251 % i1);
                } catch (ArithmeticException a_e) {}
            } while (++i20 < 7);
        } while (++i19 < 246);
        vMeth_check_sum += l + l1 + Double.doubleToLongBits(d) + i + i1 + i2 + i3 + by + i19 + i20 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d2=-49.99289, d3=-1.121816;
        int i21=48, i22=-78, i23=37144, i24=123, i25=-5, i26=122;
        float f3=-112.55F;
        boolean b3=false;

        vMeth(Test.instanceCount, Test.instanceCount, d2);
        i21 += (int)Test.instanceCount;
        d2 = d2;
        i21 = i21;
        d2 -= Test.instanceCount;
        i21 %= (int)(i21 | 1);
        d2 = -2.408F;
        for (i22 = 15; i22 < 354; i22++) {
            Test.instanceCount = i22;
            i21 += 51679;
            i21 *= -91;
            Test.instanceCount &= i22;
            Test.instanceCount = i23;
        }
        if (b3) {
            d3 = 1;
            do {
                boolean b2=false;
                i23 >>>= i22;
                Test.sFld += (short)127;
                if (b2) continue;
                f3 += (float)(d3 - i21);
                if (true) break;
                for (i24 = 9; i24 < 153; ++i24) {
                    i21 <<= -13983;
                    iArrFld[i24 - 1] = i23;
                    i21 -= i22;
                    i26 = 1;
                    while (++i26 < 2) {
                        i25 += i26;
                        i23 += i26;
                        i25 += i21;
                        Test.instanceCount -= i21;
                        i23 += (((i26 * i23) + i21) - i22);
                    }
                }
            } while (++d3 < 164);
        }

        FuzzerUtils.out.println("d2 i21 i22 = " + Double.doubleToLongBits(d2) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d3 f3 = " + i23 + "," + Double.doubleToLongBits(d3) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b3 = " + (b3 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.lArrFld = " + Test.instanceCount + "," + Test.sFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.byArrFld iArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth2 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
