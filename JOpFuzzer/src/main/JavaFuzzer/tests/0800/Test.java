// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-19105L;
    public static short sFld=-6579;
    public static byte byArrFld[]=new byte[N];
    public static volatile int iArrFld[][]=new int[N][N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)114);
        FuzzerUtils.init(Test.iArrFld, -15945);
        FuzzerUtils.init(Test.lArrFld, 12L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(float f1) {

        int i5=-217, i6=-71, i7=14, i8=-60717;
        short s=3168;
        double d2=25.130378;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 116.714F);

        Test.instanceCount -= -76;
        i5 = 1;
        while ((i5 += 2) < 364) {
            for (i6 = 1; i6 < 9; i6++) {
                switch ((i5 % 3) + 104) {
                case 104:
                    f1 = i7;
                    break;
                case 105:
                case 106:
                default:
                    Test.byArrFld = Test.byArrFld;
                    Test.iArrFld[i5 - 1][i5 - 1] += (int)Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                    s <<= (short)i7;
                }
            }
            fArr = fArr;
            i7 = (int)Test.instanceCount;
            for (d2 = 9; d2 > 1; d2 -= 2) {
                Test.iArrFld[i5 - 1][(int)(d2 - 1)] = i7;
                i8 -= i7;
            }
            i7 += (((i5 * i6) + i8) - i5);
        }
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + s + Double.doubleToLongBits(d2) + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i3, long l) {

        int i4=-11, i9=0, i10=-71, i11=-51;
        float f=-51.154F;
        byte by=90;
        double d3=-1.53845;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 4176906885718692696L);

        i4 = 1;
        while (++i4 < 360) {
            f -= by;
            l = ((i3 - (i3--)) % (((-(i3++)) + lArr[i4]) | 1));
            iMeth2(18.215F);
            i3 -= (int)f;
            d3 = i3;
            switch ((((i4 >>> 1) % 6) * 5) + 95) {
            case 108:
                by -= (byte)i4;
                break;
            case 97:
                i3 += (i4 | i4);
            case 125:
                b = b;
            case 115:
                for (i9 = 5; i9 > 1; --i9) {
                    i3 += (int)f;
                    i11 = 1;
                    do {
                        try {
                            i10 = (Test.iArrFld[i9 + 1][i9] / 124);
                            Test.iArrFld[i4][(i11 >>> 1) % N] = (54679 % i11);
                            i10 = (i10 % 56586);
                        } catch (ArithmeticException a_e) {}
                        i3 = (int)Test.instanceCount;
                    } while (++i11 < 2);
                }
                break;
            case 118:
                Test.sFld += (short)(i4 - i3);
                break;
            case 119:
                f /= ((long)(d3) | 1);
                break;
            default:
                i10 = i10;
            }
        }
        long meth_res = i3 + l + i4 + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d3) + (b ? 1 : 0) + i9 +
            i10 + i11 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1) {

        double d1=0.25592, d4=5.78731;
        int i2=233, i12=215, i13=6410, i14=-42316, i15=1;
        float f2=38.903F;
        boolean b1=true;

        for (d1 = 7; d1 < 379; ++d1) {
            i1 = iMeth1(i1, Test.instanceCount);
            switch ((int)((d1 % 8) + 121)) {
            case 121:
                f2 = f2;
                for (i12 = 1; i12 < 5; ++i12) {
                    Test.instanceCount *= i13;
                    switch ((((i13 >>> 1) % 2) * 5) + 57) {
                    case 67:
                        for (i14 = 1; i14 < 2; i14++) {
                            i2 -= i12;
                            i15 += (int)Test.instanceCount;
                            i13 -= Test.sFld;
                            i13 = (int)f2;
                            Test.iArrFld[i12][i12 + 1] += (int)Test.instanceCount;
                            i15 += (((i14 * f2) + i12) - i1);
                        }
                        Test.lArrFld[(int)(d1)] -= i12;
                    case 61:
                        Test.iArrFld[(int)(d1 + 1)][(int)(d1 - 1)] = i1;
                    default:
                        i1 += -201;
                    }
                }
                break;
            case 122:
                b1 = true;
            case 123:
                Test.iArrFld[(int)(d1)][(int)(d1)] *= (int)Test.instanceCount;
                break;
            case 124:
                Test.sFld += (short)(d1 + i14);
                break;
            case 125:
                i15 -= i1;
            case 126:
                d4 = 79;
                break;
            case 127:
                Test.lArrFld[(int)(d1 - 1)] &= i15;
                break;
            case 128:
                i1 = i1;
                break;
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d1) + i2 + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + (b1
            ? 1 : 0) + Double.doubleToLongBits(d4);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i16=-28, i17=7, i18=-51699, i19=-28762, i20=-3, i21=-3, i22=5802, i23=-6, i24=23557, i25=-14,
            i26=-23153;
        double d=52.55063;
        byte by2=62;
        boolean b2=true, bArr[][]=new boolean[N][N];
        float f3=-92.567F;

        FuzzerUtils.init(bArr, true);

        i = (int)((i - (i >>> i)) - Test.instanceCount);
        d = iMeth(i);
        for (i16 = 4; i16 < 216; i16 += 2) {
            i18 = 1;
            do {
                byte by1=-111;
                i17 += (1 + (i18 * i18));
                Test.instanceCount += i17;
                i17 |= 16252;
                by1 += (byte)2;
            } while (++i18 < 236);
            Test.lArrFld[i16 + 1] >>>= i18;
        }
        for (i19 = 8; 186 > i19; ++i19) {
            bArr = bArr;
            i17 += (i19 + Test.instanceCount);
            Test.instanceCount *= i;
            for (i21 = 2; 141 > i21; ++i21) {
                d *= i18;
            }
            i17 += (int)7L;
            i = i18;
            switch (((i19 % 3) * 5) + 76) {
            case 88:
                i17 += (int)Test.instanceCount;
                if (b2) {
                    i22 += (-11597 + (i19 * i19));
                    i17 += (((i19 * Test.sFld) + i21) - i22);
                    for (i23 = i19; i23 < 141; i23++) {
                        for (i25 = 1; i25 > 1; --i25) {
                            switch (((i18 >>> 1) % 1) + 119) {
                            case 119:
                                i24 <<= (int)3241458810L;
                                Test.instanceCount += (((i25 * i23) + Test.instanceCount) - Test.instanceCount);
                                i22 += (i25 | by2);
                                Test.instanceCount *= Test.instanceCount;
                                break;
                            }
                        }
                        i = (int)d;
                    }
                } else if (false) {
                    if (b2) continue;
                } else {
                    i24 -= i16;
                }
                break;
            case 87:
                i26 += (int)f3;
                break;
            case 81:
                Test.lArrFld[i19] *= Test.instanceCount;
                break;
            }
        }

        FuzzerUtils.out.println("i d i16 = " + i + "," + Double.doubleToLongBits(d) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 by2 b2 = " + i26 + "," + by2 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("f3 bArr = " + Float.floatToIntBits(f3) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byArrFld = " + Test.instanceCount + "," + Test.sFld
            + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
