// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static float fFld=2.966F;
    public static short sFld=-21021;
    public static boolean bFld=true;
    public static double dFld=101.98353;
    public int iFld=-68;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 34277);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i4, int i5) {

        double d=-2.118110;

        Test.iArrFld[(i5 >>> 1) % N] = i4;
        d -= Test.instanceCount;
        i4 %= (int)(i4 | 1);
        i5 <<= (int)-57882L;
        vMeth2_check_sum += Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d);
    }

    public static void vMeth1(int i3) {

        double d1=0.24880, d2=0.118402;
        int i6=8, i7=0, i8=10, i9=-9, i10=4;
        boolean b=false;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 244L);

        vMeth2(Test.fFld, i3, i3);
        for (d1 = 7; d1 < 226; ++d1) {
            Test.iArrFld[(int)(d1 + 1)] += 57966;
            i6 >>= i3;
            if (b) {
                i3 *= (int)d2;
                for (i7 = (int)(d1); i7 < 7; i7++) {
                    for (i9 = 1; i9 > 1; --i9) {
                        Test.instanceCount = i10;
                        i3 *= i6;
                        i6 *= Test.sFld;
                        lArr[i7 - 1][(int)(d1)] &= -203L;
                        Test.instanceCount += (i9 + i9);
                        Test.instanceCount += (1821728989L + (i9 * i9));
                        Test.instanceCount -= (long)d1;
                    }
                }
            } else {
                i10 = i6;
            }
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d1) + i6 + Double.doubleToLongBits(d2) + i7 + i8 + i9 + i10 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l) {

        int i1=18217, i2=-1, i11=-7, i12=213, i13=7, i14=59400;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -104.278F);

        for (i1 = 9; 321 > i1; i1++) {
            vMeth1(i1);
        }
        for (i11 = 8; i11 < 312; i11 += 3) {
            i2 -= i11;
            Test.instanceCount += (((i11 * i1) + Test.instanceCount) - Test.fFld);
            if (i1 != 0) {
                vMeth_check_sum += l + i1 + i2 + i11 + i12 + i13 + i14 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i12 += (i11 * i11);
            i13 = 1;
            do {
                i12 += i13;
                Test.iArrFld[i13] = i1;
                i14 = 1;
                do {
                    i2 &= 6097;
                    fArr[i13] = Test.instanceCount;
                    i2 = i2;
                    l = Test.instanceCount;
                } while (++i14 < 1);
            } while (++i13 < 15);
        }
        vMeth_check_sum += l + i1 + i2 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=37835, i15=-152, i16=4, i17=17116, i18=-94, i19=9415, i20=172, i21=182, i22=-22;
        float f1=-9.706F;
        long lArr1[][]=new long[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr1, 2L);
        FuzzerUtils.init(dArr, 20.7451);

        i = 1;
        while (++i < 217) {
            long l1=-211L;
            vMeth(l1);
            for (i15 = 1; 116 > i15; i15++) {
                i16 = (int)l1;
                i16 = i;
            }
            if (Test.bFld) continue;
            Test.bFld = Test.bFld;
            i16 += (int)(-1896137939L + (i * i));
            lArr1[i] = FuzzerUtils.long1array(N, (long)-68L);
        }
        Test.iArrFld[(i >>> 1) % N] >>= i;
        for (f1 = 2; f1 < 320; ++f1) {
            i17 += (int)(f1 * i16);
            i17 = (int)Test.dFld;
            for (i18 = 79; i18 > 2; i18 -= 3) {
                i17 += i18;
                for (i20 = 1; i20 < 4; ++i20) {
                    i21 += (i20 | i);
                    Test.iArrFld[i20 - 1] -= i15;
                    dArr[i20 + 1] -= 5L;
                    i19 = (int)f1;
                    i19 += (i20 ^ i16);
                }
                i22 = 1;
                do {
                    Test.fFld = Test.instanceCount;
                    i19 ^= 8750;
                    Test.instanceCount = i20;
                    Test.fFld += (61 + (i22 * i22));
                    Test.sFld -= (short)i15;
                    i16 = (int)Test.instanceCount;
                    Test.instanceCount += (((i22 * i18) + f1) - i);
                } while (++i22 < 4);
                i19 += (i18 | (long)Test.fFld);
            }
        }

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("f1 i17 i18 = " + Float.floatToIntBits(f1) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 lArr1 dArr = " + i22 + "," + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.bFld Test.dFld iFld = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
