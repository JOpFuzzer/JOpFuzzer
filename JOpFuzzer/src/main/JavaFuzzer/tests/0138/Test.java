// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3909839784601388052L;
    public static byte byFld=-103;
    public static short sFld=-11213;
    public static int iFld=91;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -6L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, int i8) {

        int i9=-31672, i10=91, i11=-60796, i12=-44051, i13=138, i14=22197;
        boolean b=true;
        double d1=86.104721;
        float f1=1.15F;
        byte byArr[]=new byte[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(byArr, (byte)-40);
        FuzzerUtils.init(sArr, (short)-24018);

        Test.byFld += (byte)-9L;
        i8 = i8;
        byArr[(i8 >>> 1) % N] >>= (byte)83;
        sArr[(i7 >>> 1) % N] = (short)Test.instanceCount;
        for (i9 = 8; i9 < 278; ++i9) {
            switch ((((i10 >>> 1) % 5) * 5) + 75) {
            case 97:
                if (b) break;
                i11 = 1;
                do {
                    i7 += (i11 | i9);
                } while (++i11 < 6);
                i7 += i9;
                break;
            case 83:
                for (i12 = 1; i12 < 6; ++i12) {
                    i14 >>= i8;
                    i13 -= i11;
                    i10 -= i8;
                    d1 = 1.110282;
                }
                break;
            case 79:
                Test.instanceCount += Test.instanceCount;
                break;
            case 81:
                i13 += (int)d1;
                break;
            case 100:
                i8 = (int)f1;
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + (b ? 1 : 0) + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(byte by1, int i6, long l) {

        double d2=-38.55069;

        vMeth2(i6, i6);
        Test.sFld -= (short)i6;
        i6 += (int)d2;
        i6 *= i6;
        l = -15848;
        vMeth1_check_sum += by1 + i6 + l + Double.doubleToLongBits(d2);
    }

    public static void vMeth() {

        int i=-27618, i1=-10, i2=-185, i3=9, i4=33022, i5=128, iArr[]=new int[N];
        float f=73.445F;
        double d=0.107656;
        byte by=100;

        FuzzerUtils.init(iArr, 137);

        for (i = 2; 297 > i; ++i) {
            i1 += (int)(Test.instanceCount - ((59377L + (f + f)) - (i * i1)));
            iArr[i] = (int)((--i1) + ((--i1) + (++d)));
            for (i2 = 1; i2 < 6; i2++) {
                i1 <<= (by++);
                Test.instanceCount >>= 204;
                if (i1 != 0) {
                    vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i2 + i3 + by +
                        i4 + i5 + FuzzerUtils.checkSum(iArr);
                    return;
                }
                i1 = (int)(Math.min(++i3, i1 * i1) + ((2 - i1) - (Test.instanceCount * i3)));
                switch ((i2 % 1) + 26) {
                case 26:
                    i3 /= (int)(i2 | 1);
                    for (i4 = 2; 1 < i4; i4 -= 2) {
                        i5 += (i4 ^ i4);
                        Test.instanceCount = ((~Math.min(i2, i2)) * Math.abs(Test.lArrFld[i]));
                        vMeth1(Test.byFld, i1, Test.instanceCount);
                    }
                    i5 = i;
                    break;
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i2 + i3 + by + i4 + i5 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        long l1=-2883240646548085728L;
        double d3=-72.15096;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 185);

        vMeth();
        Test.iFld -= (int)Test.instanceCount;
        l1 = 1;
        do {
            iArr1[(int)(l1)] = Test.iFld;
            Test.iFld += (int)(l1 * l1);
            d3 = Test.iFld;
        } while (++l1 < 190);
        iArr1 = iArr1;

        FuzzerUtils.out.println("l1 d3 iArr1 = " + l1 + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld Test.lArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
