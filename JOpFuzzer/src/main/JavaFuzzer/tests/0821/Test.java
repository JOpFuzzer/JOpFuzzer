// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:59 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-761082863L;
    public static double dFld=-1.102732;
    public short sFld=-14119;
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 204);
        FuzzerUtils.init(Test.fArrFld, 1.519F);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i8, long l, long l1) {

        int i9=153, i10=-63639, i11=-245, i12=-11, i13=14, i14=26981, i15=-23342, i16=-20, i17=-39181, i18=-117,
            iArr[]=new int[N];
        double d=1.59641;
        float f1=-49.250F;
        boolean b=false;

        FuzzerUtils.init(iArr, -46741);

        if (b) {
            for (i9 = 2; i9 < 180; i9++) {
                for (i11 = i9; i11 < 9; i11++) {
                    try {
                        i10 = (i9 / iArr[i9 - 1]);
                        i12 = (-198 / i8);
                        i12 = (i12 / iArr[i9 + 1]);
                    } catch (ArithmeticException a_e) {}
                }
                for (i13 = i9; i13 < 9; i13++) {
                    for (i15 = 1; 1 < i15; i15--) {
                        l1 *= l;
                    }
                    Test.instanceCount += (-10 + (i13 * i13));
                    d += i13;
                    i12 += (i13 ^ l);
                    l = i16;
                    l1 >>= i16;
                    for (i17 = 1; i17 < 1; ++i17) {
                        f1 *= i12;
                        f1 -= -55233;
                    }
                }
            }
        } else {
            i8 -= i14;
        }
        vMeth_check_sum += i8 + l + l1 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d) +
            i17 + i18 + Float.floatToIntBits(f1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i5) {

        int i6=-10, i7=85, i19=-32400, i21=11, i22=-1, iArr1[]=new int[N];
        boolean b1=true;
        float f2=48.675F, f3=-124.914F;
        short s=-23130;

        FuzzerUtils.init(iArr1, -12);

        for (i6 = 205; i6 > 4; i6--) {
            vMeth(i6, Test.instanceCount, -1395490123L);
            b1 = false;
            if (b1) continue;
        }
        i5 = (int)Test.instanceCount;
        iArr1[(i5 >>> 1) % N] >>= i5;
        for (f2 = 8; f2 < 305; f2++) {
            Test.instanceCount = i7;
            Test.instanceCount = i6;
            for (i21 = 1; i21 < 6; i21++) {
                i22 = s;
                f3 %= (i7 | 1);
                i7 = i19;
            }
            i22 *= i19;
            i5 += (int)(((f2 * Test.instanceCount) + f3) - i7);
        }
        long meth_res = i5 + i6 + i7 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) + i19 + i21 + i22 + s +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f) {

        int i4=-15, i23=-14, i24=-120, i25=-224, i26=-63;
        double d1=-2.122064;

        i4 += (int)lMeth(i4);
        i4 = -222;
        for (i23 = 22; i23 < 376; i23++) {
            i24 &= (int)Test.instanceCount;
        }
        for (i25 = 123; i25 > 6; --i25) {
            f = i26;
            switch ((i25 % 2) + 85) {
            case 85:
                i24 = i23;
                i4 += (i25 ^ Test.instanceCount);
                f += i26;
                break;
            case 86:
            default:
                f = (float)d1;
            }
            i24 += (((i25 * i24) + f) - f);
            Test.instanceCount *= -56;
            i26 += (((i25 * f) + Test.instanceCount) - Test.instanceCount);
            if (i4 != 0) {
            }
        }
        long meth_res = Float.floatToIntBits(f) + i4 + i23 + i24 + i25 + i26 + Double.doubleToLongBits(d1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7, i1=-234, i2=-118, i3=-90, i27=-21, i28=6, i29=-104, i30=-9823, i31=8;
        float f4=2.911F;
        double d2=-38.125154;
        byte by=63;

        i = 1;
        do {
            i1 = (int)Test.instanceCount;
            for (i2 = i; i2 < 144; i2++) {
                i3 = (int)(Math.max(14 - iMeth(f4), 34042L) * i3);
                i3 -= i2;
                i27 = 1;
                while ((i27 -= 2) > 0) {
                    i3 /= (int)(i2 | 1);
                    Test.dFld -= i2;
                    i1 += (((i27 * sFld) + i2) - i3);
                    Test.instanceCount = i1;
                }
                i1 >>>= (int)Test.instanceCount;
                lArrFld[i - 1] <<= Test.instanceCount;
                for (i28 = 1; i28 < 1; ++i28) {
                    Test.iArrFld[i28 + 1] = 6;
                    Test.instanceCount >>= i27;
                }
                i30 = 1;
                do {
                    Test.dFld /= ((long)(Test.dFld) | 1);
                    f4 = i27;
                    Test.instanceCount += i29;
                    Test.fArrFld[i] -= -93L;
                    i1 += -3440;
                    Test.instanceCount >>= i28;
                    lArrFld[i30 - 1] += (long)f4;
                    i29 = (int)Test.instanceCount;
                    Test.fArrFld[i2 + 1] = Test.instanceCount;
                } while (++i30 < 1);
            }
            for (d2 = i; d2 < 144; ++d2) {
                f4 += (float)d2;
                i31 -= i3;
                Test.iArrFld[(int)(d2 - 1)] -= by;
                i1 *= (int)Test.instanceCount;
            }
        } while (++i < 174);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f4 i27 = " + i3 + "," + Float.floatToIntBits(f4) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("d2 i31 by = " + Double.doubleToLongBits(d2) + "," + i31 + "," + by);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + sFld);
        FuzzerUtils.out.println("lArrFld Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
