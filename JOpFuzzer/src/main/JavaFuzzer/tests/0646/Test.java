// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:55 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-12L;
    public static volatile double dFld=110.45047;
    public static boolean bFld=true;
    public static float fFld=-2.320F;

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i6, int i7, int i8) {


        i6 += i8;
        long meth_res = i6 + i7 + i8;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static long lMeth(long l, double d) {

        int i5=-1, i9=-29610, i10=-215, i11=227, i12=-39883, i13=30, iArr1[]=new int[N];
        float f=0.705F;

        FuzzerUtils.init(iArr1, 8376);

        i5 = 1;
        do {
            iArr1[i5 - 1] = byMeth(i5, i5, i5);
        } while (++i5 < 292);
        i9 += i5;
        i9 = (int)-214L;
        for (i10 = 14; i10 < 253; ++i10) {
            for (i12 = 1; 7 > i12; i12++) {
                d *= l;
                f += (((i12 * i11) + i12) - i5);
                Test.instanceCount -= i11;
                l &= l;
                i9 = i11;
                iArr1[i10 - 1] -= i11;
            }
            i9 += i10;
            i11 += i10;
            i9 &= i13;
        }
        long meth_res = l + Double.doubleToLongBits(d) + i5 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i1=-11, i3=61680, i4=-56904, i14=2, i15=-122, iArr[]=new int[N];
        byte by=42;
        float f1=5.305F;

        FuzzerUtils.init(iArr, 126);

        i1 *= (int)(82L - (6 - i1));
        i1 -= Math.max(Math.abs(i1), i1);
        for (int i2 : iArr) {
            for (i3 = 1; i3 < 4; i3++) {
                i2 = (int)lMeth(Test.instanceCount, Test.dFld);
                by += (byte)(i3 * i3);
                i4 += (int)Test.instanceCount;
                for (i14 = 1; i14 < 2; ++i14) {
                    if (Test.bFld) continue;
                    i2 += (((i14 * i4) + Test.instanceCount) - Test.instanceCount);
                    if (Test.bFld) {
                        f1 = -88;
                        i1 = i4;
                    }
                    i1 += (i14 ^ i14);
                    Test.dFld += Test.instanceCount;
                }
            }
        }
        long meth_res = i1 + i3 + i4 + by + i14 + i15 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6903, i16=56657, i17=17, i18=132, i19=-199, i20=-39698, i21=14455, i22=-180, i23=-52095, i24=-43646,
            iArr2[]=new int[N];
        long l1=2470007366586764222L, l2=12L, lArr[]=new long[N];
        double d1=0.77361;

        FuzzerUtils.init(lArr, 4075615386794826692L);
        FuzzerUtils.init(iArr2, -19967);

        Test.instanceCount >>= 45007;
        i = (iMeth() - i);
        for (l1 = 2; l1 < 325; l1++) {
            Test.dFld = i16;
        }
        for (d1 = 2; d1 < 151; ++d1) {
            i16 = i17;
            for (i18 = 5; 168 > i18; i18 += 2) {
                Test.instanceCount = Test.instanceCount;
            }
            i17 <<= -53428;
            i20 = 1;
            while (++i20 < 168) {
                Test.fFld = i19;
                for (i21 = 1; i21 < 1; i21++) {
                    lArr[(int)(d1)] &= i16;
                    Test.fFld += i;
                }
                Test.instanceCount = Test.instanceCount;
                i22 -= 101;
                i19 += i20;
            }
        }
        i23 = 1;
        do {
            i19 &= (int)Test.instanceCount;
            i19 %= 36024;
            Test.instanceCount >>>= i22;
            iArr2[i23] = (int)Test.instanceCount;
            i24 = 1;
            do {
                Test.instanceCount *= l1;
                l2 = 1;
                while (++l2 < 1) {
                    Test.instanceCount &= 8963337206092144968L;
                    i17 += -6;
                    if (Test.bFld) {
                        i17 = (int)l2;
                        iArr2[i23] = (int)Test.instanceCount;
                    } else if (false) {
                        i -= 9;
                    } else {
                        i16 = i21;
                    }
                }
            } while (++i24 < 78);
        } while (++i23 < 324);

        FuzzerUtils.out.println("i l1 i16 = " + i + "," + l1 + "," + i16);
        FuzzerUtils.out.println("d1 i17 i18 = " + Double.doubleToLongBits(d1) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("l2 lArr iArr2 = " + l2 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld = " + Float.floatToIntBits(Test.fFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
