// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=127L;
    public static float fFld=2.529F;
    public double dFld=-2.36636;
    public static byte byFld=-37;
    public long lArrFld[]=new long[N];
    public static long lArrFld1[]=new long[N];
    public static volatile short sArrFld[][]=new short[N][N];
    public int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld1, -13L);
        FuzzerUtils.init(Test.sArrFld, (short)26979);
        FuzzerUtils.init(Test.dArrFld, 2.98602);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static int iMeth(int i2, long l, int i3) {

        float f=0.347F;

        i3 += (int)(((57506 + (-(f -= i2))) - (177 + (i3--))) - ((i2++) + (l - Test.instanceCount)));
        long meth_res = i2 + l + i3 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth2(long l1, long l2, float f2) {

        int i9=-181, i10=58261, i11=8, i12=-84, i13=-43319;
        byte by=-52;

        for (i9 = 12; i9 < 196; i9++) {
            f2 += (i9 * i9);
            for (i11 = 1; i11 < 9; i11++) {
                l2 ^= by;
                Test.instanceCount += (i11 + f2);
                f2 -= -6;
                Test.lArrFld1 = Test.lArrFld1;
                i10 <<= i10;
                by += (byte)(i11 + i11);
                i13 = 1;
                do {
                    i10 &= i13;
                    i10 += (i13 - f2);
                    Test.sArrFld[i13][i13] -= (short)Test.instanceCount;
                    i12 += i9;
                    i10 += (15702 + (i13 * i13));
                } while (++i13 < 2);
            }
        }
        vMeth2_check_sum += l1 + l2 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + by + i13;
    }

    public static void vMeth1(int i8) {

        float f3=88.506F;
        int i14=-50264, i15=6, i16=254, i17=28602, i18=242, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, -164);

        vMeth2(Test.instanceCount, -6688111305652112235L, f3);
        Test.instanceCount >>>= i8;
        i14 = 1;
        do {
            short s=-2153;
            i8 += (((i14 * i8) + i14) - s);
            for (i15 = 1; i15 < 7; ++i15) {
                s += (short)(((i15 * i14) + i15) - f3);
                try {
                    i8 = (i16 / i14);
                    i16 = (-20100 % i14);
                    i16 = (i8 % i14);
                } catch (ArithmeticException a_e) {}
                i8 += i14;
                Test.instanceCount = i15;
                if (b) break;
                Test.instanceCount = -1599849073L;
                switch (((i14 >>> 1) % 5) + 71) {
                case 71:
                    for (i17 = 1; 2 > i17; ++i17) {
                        Test.instanceCount *= i8;
                        i18 += (((i17 * Test.instanceCount) + i18) - f3);
                    }
                case 72:
                case 73:
                    Test.instanceCount = 48555;
                    break;
                case 74:
                    iArr[i14 - 1] = 81;
                case 75:
                    iArr[i14 - 1] -= i15;
                default:
                    i18 <<= i18;
                }
            }
        } while (++i14 < 225);
        vMeth1_check_sum += i8 + Float.floatToIntBits(f3) + i14 + i15 + i16 + (b ? 1 : 0) + i17 + i18 +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(float f1) {

        int i4=-22, i5=34361, i6=-32695, i7=-19796, i19=-65, i20=27728;
        byte by1=72, byArr[]=new byte[N];
        double d=2.74482;

        FuzzerUtils.init(byArr, (byte)-48);

        Test.instanceCount = (long)(f1 + ((i4 + Test.instanceCount) + (65003 - (i4 += i4))));
        i5 = 1;
        while (++i5 < 161) {
            Test.instanceCount += (i5 * i5);
            for (i6 = 10; i6 > 1; i6--) {
                vMeth1(i4);
                i4 += i7;
                i4 -= by1;
                i7 += (int)d;
                for (i19 = 1; i19 < 2; i19++) {
                    i4 = i20;
                    i7 -= i20;
                    i4 = (int)f1;
                    i4 >>>= i4;
                    byArr[i5 + 1] = (byte)-8;
                    i20 -= i6;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + by1 + Double.doubleToLongBits(d) + i19 + i20
            + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=5, i1=-186, i21=6, i22=14, i23=-10, i24=-234;
        long l3=7935417982898949165L;

        for (i = 17; i < 366; i += 3) {
            i1 = (i1 = i1);
        }
        iMeth(i, ++lArrFld[(i >>> 1) % N], (int)((i1 = (int)(-111L - (Test.instanceCount + Test.instanceCount))) +
            (Long.reverseBytes(Test.instanceCount) * (i1 * Test.instanceCount))));
        vMeth(Test.fFld);
        i21 = 1;
        while (++i21 < 196) {
            for (i22 = 6; 128 > i22; i22++) {
                for (l3 = 1; l3 < 2; ++l3) {
                    switch ((int)((l3 % 2) + 34)) {
                    case 34:
                        switch (((i21 % 2) * 5) + 74) {
                        case 81:
                            i23 = i21;
                            i23 += (int)(l3 * l3);
                            i23 *= (int)Test.instanceCount;
                            break;
                        case 78:
                            switch (((i21 % 2) * 5) + 49) {
                            case 56:
                            case 54:
                                Test.lArrFld1[i21] = i23;
                                iArrFld = iArrFld;
                                i1 -= i21;
                                i24 += (int)(((l3 * i) + i21) - l3);
                                break;
                            }
                            iArrFld = FuzzerUtils.int1array(N, (int)76);
                            iArrFld[i21] -= i23;
                            lArrFld[i22 + 1] >>= i24;
                            break;
                        }
                        break;
                    case 35:
                        Test.fFld -= (float)dFld;
                        Test.fFld *= -2235;
                    default:
                        Test.instanceCount += (l3 + Test.instanceCount);
                        Test.instanceCount += 25;
                    }
                    i24 = 60739;
                    iArrFld = iArrFld;
                    Test.byFld >>= (byte)i21;
                    dFld += i1;
                    i1 = i23;
                    Test.dArrFld[(int)(l3)] -= Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 l3 = " + i22 + "," + i23 + "," + l3);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.byFld lArrFld Test.lArrFld1 = " + Test.byFld + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld1));
        FuzzerUtils.out.println("Test.sArrFld iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
