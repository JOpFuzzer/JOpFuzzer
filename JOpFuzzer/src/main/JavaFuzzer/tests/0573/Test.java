// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2780658244253352801L;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.68F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i7=-139, i8=15615, i9=14, i10=1, i11=-3, i12=-18, i13=100, iArr1[][]=new int[N][N], iArr2[][]=new int[N][N];
        float f2=-33.1001F, f3=9.949F;
        double d=0.7150;
        long l1=-10L, lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)38);
        FuzzerUtils.init(iArr1, 11);
        FuzzerUtils.init(iArr2, 12);
        FuzzerUtils.init(lArr, 10L);

        for (i7 = 10; i7 < 279; i7++) {
            if (false) continue;
        }
        f2 += i8;
        byArr[(i9 >>> 1) % N] = (byte)l;
        l *= 15070L;
        iArr1 = iArr2;
        for (i10 = 16; i10 < 359; ++i10) {
            for (i12 = i10; i12 < 5; ++i12) {
                f3 = 1;
                do {
                    i11 %= (int)(i13 | 1);
                    i11 = i10;
                    i11 -= (int)d;
                    Test.instanceCount <<= i10;
                    l1 <<= 93;
                } while (++f3 < 1);
                lArr[i12 + 1] -= i9;
            }
        }
        vMeth1_check_sum += l + i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + i13 +
            Float.floatToIntBits(f3) + Double.doubleToLongBits(d) + l1 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i4, int i5, int i6) {

        boolean b=true;
        int i14=-1226, i15=3, i16=-33, i17=20392, iArr[]=new int[N];
        float f4=-42.344F, fArr[]=new float[N];
        double d1=-2.9270;
        long l2=1554044232L;

        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(fArr, 98.670F);

        iArr[(i4 >>> 1) % N] >>= (--i5);
        for (float f1 : fArr) {
            vMeth1(2830662621L);
            if (b) continue;
            for (i14 = 1; i14 < 4; i14++) {
                i5 = 4;
                iArr[i14 - 1] -= (int)f1;
            }
            i16 = 4;
            while (--i16 > 0) {
                for (f4 = i16; f4 < 1; ++f4) {
                    i4 &= i6;
                    f1 -= (float)d1;
                    Test.instanceCount += (long)(((f4 * l2) + i15) - Test.instanceCount);
                    i5 += (int)(((f4 * i14) + i16) - i16);
                    i15 -= i16;
                    i5 += i16;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + (b ? 1 : 0) + i14 + i15 + i16 + Float.floatToIntBits(f4) + i17 +
            Double.doubleToLongBits(d1) + l2 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i18=7, i19=-48112, i20=-1530, i21=-105, i22=190, i23=215, i24=-7, iArr3[]=new int[N];
        float f5=1.576F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr3, 53457);
        FuzzerUtils.init(lArr1, 49293L);

        vMeth(i18, -16376, i18);
        for (i19 = 300; i19 > 5; --i19) {
            if (i18 != 0) {
            }
            iArr3[i19] = i19;
        }
        switch (((i20 >>> 1) % 2) + 92) {
        case 92:
            for (i21 = 330; 9 < i21; --i21) {
                i18 = i21;
                iArr3[i21 - 1] = i22;
                for (i23 = 5; i23 > 1; i23 -= 2) {
                    i18 += (i23 + i21);
                    i18 += (i23 * i23);
                    Test.fArrFld[i21 - 1] += i20;
                    i22 -= (int)f5;
                    i18 = i23;
                    iArr3 = FuzzerUtils.int1array(N, (int)-6);
                }
            }
            break;
        case 93:
            lArr1[(i21 >>> 1) % N] *= i18;
            break;
        }
        long meth_res = i18 + i19 + i20 + i21 + i22 + i23 + i24 + Float.floatToIntBits(f5) +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=-11, i2=-5276, i3=20184;
        float f=-54.821F;
        short s=25947;

        for (i = 11; i < 279; i++) {
            for (i2 = i; i2 < 94; ++i2) {
                f = (iMeth() - s);
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f s = " + i3 + "," + Float.floatToIntBits(f) + "," + s);

        FuzzerUtils.out.println("Test.instanceCount Test.fArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
