// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=340000734L;
    public static short sFld=31933;
    public static byte byFld=125;
    public static boolean bFld=false;
    public int iFld=-21164;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -243);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        int i5=22554, i6=32, i7=-5, i8=-49378, i9=12, i10=-11168;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        Test.instanceCount += 23545;
        for (i5 = 6; i5 < 166; ++i5) {
            i7 = 1;
            while (++i7 < 10) {
                i6 += i6;
                Test.iArrFld[i7] &= (int)-5776676672827083334L;
                Test.bFld = Test.bFld;
                i8 = 1;
                do {
                    i4 -= i7;
                    i4 = i8;
                    bArr[i8] = true;
                    i6 += (i8 | i5);
                } while (++i8 < 1);
            }
            for (i9 = 1; 10 > i9; ++i9) {
                Test.sFld += (short)i6;
                Test.byFld += (byte)i9;
            }
            i10 -= (int)Test.instanceCount;
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i2, int i3, long l1) {

        double d=54.3663;
        int i11=-13, i12=-2010;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -73.923F);

        Test.sFld = (short)((i3--) * ((-(Test.byFld * i3)) + Test.iArrFld[(i2 >>> 1) % N]));
        vMeth1(i2);
        Test.iArrFld[(i2 >>> 1) % N] += (int)d;
        i2 = (int)-22664L;
        i2 *= (int)l1;
        for (i11 = 383; i11 > 16; i11--) {
            l1 += Test.sFld;
        }
        Test.instanceCount /= (i12 | 1);
        fArr[(i12 >>> 1) % N] -= 39036;
        long meth_res = i2 + i3 + l1 + Double.doubleToLongBits(d) + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-6, i1=241, i13=41790, i14=14;
        long lArr[]=new long[N];
        boolean bArr1[][]=new boolean[N][N];

        FuzzerUtils.init(lArr, -51336L);
        FuzzerUtils.init(bArr1, false);

        for (long l : lArr) {
            for (i = 1; i < 4; ++i) {
                i1 -= iMeth(26792, i1, l);
                i1 += i13;
                i1 = (int)Test.instanceCount;
                lArr[(i1 >>> 1) % N] = -68;
                i14 = 1;
                do {
                    i1 += -2133;
                } while (++i14 < 2);
                i13 = (int)l;
                bArr1[i - 1][i] = false;
                i13 = i1;
                i1 += i;
                Test.bFld = Test.bFld;
            }
            i1 += i14;
            i13 -= (int)Test.instanceCount;
        }
        vMeth_check_sum += i + i1 + i13 + i14 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr1);
    }

    public void mainTest(String[] strArr1) {

        long l2=20534L, lArr1[]=new long[N];
        int i15=-11752, i16=43127, i17=20, i18=-961, i19=-7;
        double d1=1.29745;

        FuzzerUtils.init(lArr1, 933L);

        vMeth();
        l2 = 1;
        do {
            switch ((int)((l2 % 5) + 32)) {
            case 32:
                iFld = (int)Test.instanceCount;
                iFld |= iFld;
                break;
            case 33:
                i15 = 1;
                while (++i15 < 74) {
                    iFld |= i15;
                    iFld = Test.byFld;
                    iFld = (int)Test.instanceCount;
                    iFld -= iFld;
                    iFld = (int)l2;
                }
                break;
            case 34:
                Test.sFld = (short)i15;
            case 35:
                iFld += 22;
                lArr1[(int)(l2 - 1)] = 33042;
                Test.iArrFld[(int)(l2 + 1)] ^= (int)Test.instanceCount;
                try {
                    iFld = (1762437312 % i15);
                    iFld = (iFld % iFld);
                    iFld = (-209 / Test.iArrFld[(int)(l2 - 1)]);
                } catch (ArithmeticException a_e) {}
            case 36:
                Test.sFld += (short)(l2 - Test.byFld);
                Test.byFld = (byte)Test.sFld;
            }
            Test.iArrFld[(int)(l2 - 1)] *= (int)d1;
            for (i16 = 1; i16 < 74; ++i16) {
                iFld &= 148;
                iFld = i15;
                d1 -= Test.instanceCount;
                Test.instanceCount = i16;
                iFld += (i16 | l2);
                for (i18 = (int)(l2); 2 > i18; ++i18) {
                    i19 <<= i16;
                    lArr1[i16 + 1] = i19;
                    Test.iArrFld[i18 - 1] >>= -28609;
                    try {
                        i19 = (i19 % 47502);
                        Test.iArrFld[i16 + 1] = (-192 / i19);
                        iFld = (-178743429 % Test.iArrFld[i18 + 1]);
                    } catch (ArithmeticException a_e) {}
                }
            }
        } while (++l2 < 340);

        FuzzerUtils.out.println("l2 i15 d1 = " + l2 + "," + i15 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 lArr1 = " + i19 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.bFld iFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," + iFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
