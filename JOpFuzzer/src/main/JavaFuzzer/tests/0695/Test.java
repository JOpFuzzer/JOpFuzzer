// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=55822L;
    public static float fFld=-2.172F;
    public static long lFld=6L;
    public static short sFld=-19503;
    public static boolean bFld=true;
    public static int iFld=4576;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -22L);
        FuzzerUtils.init(Test.iArrFld1, 242);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i5=6, i6=-93, i7=-198, i8=53, i9=30, iArr1[]=new int[N];
        float f=-1.161F;

        FuzzerUtils.init(iArr1, -9);

        for (i5 = 297; 14 < i5; i5 -= 2) {
            for (f = 1; f < 11; f++) {
                for (i8 = 1; i8 < 2; i8++) {
                    boolean b=false;
                    i7 = i6;
                    switch ((int)((f % 2) + 22)) {
                    case 22:
                        i9 -= (int)Test.instanceCount;
                        Test.lArrFld[i8] = i7;
                        switch ((int)(((f % 10) * 5) + 96)) {
                        case 98:
                        case 120:
                            if (b) {
                                Test.instanceCount += i6;
                                Test.lArrFld[i5 + 1] -= Test.instanceCount;
                            } else {
                                i9 <<= i7;
                                Test.instanceCount = 57;
                            }
                            break;
                        case 104:
                            i6 >>>= 34;
                            iArr1[(int)(f - 1)] >>= -8;
                            break;
                        case 131:
                            Test.fFld = i9;
                            break;
                        case 116:
                            i6 *= i9;
                            break;
                        case 108:
                            b = b;
                            break;
                        case 128:
                            Test.instanceCount >>>= i5;
                            break;
                        case 139:
                            i7 += (i8 - i7);
                            break;
                        case 129:
                            Test.sFld += (short)67.487F;
                        case 140:
                            i9 *= i6;
                            break;
                        }
                        break;
                    case 23:
                        i9 += i5;
                        break;
                    }
                }
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        double d=0.41770;
        int i2=-14, i3=6, i4=-52, i10=-2, i11=3190, i12=47141, i13=2257, i14=0, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9206923019354861491L);
        FuzzerUtils.init(iArr, 2783);

        d += i2;
        for (i3 = 15; i3 < 320; i3++) {
            lArr[i3 + 1] += Test.lFld;
            i4 <<= iArr[i3];
            iArr[(i4 >>> 1) % N] = iMeth1();
        }
        for (i10 = 8; i10 < 178; i10++) {
            Test.lArrFld[i10] = Test.lFld;
            i4 >>= i2;
            for (i12 = 9; 1 < i12; i12--) {
                i14 = 2;
                do {
                    i4 -= i2;
                    if (i2 != 0) {
                    }
                    if (false) continue;
                    iArr[i12] = (int)Test.lFld;
                    Test.instanceCount = i3;
                } while (--i14 > 0);
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + i3 + i4 + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, short s1, int i1) {

        int i15=-62200, i17=14856, i18=3, i19=-6, i20=16;

        Test.fFld = (iMeth() - i1);
        i15 = 1;
        do {
            l -= Test.instanceCount;
            if (Test.bFld) {
                i17 = 1;
                do {
                    double d1=-68.53477;
                    Test.instanceCount ^= i1;
                    d1 += i1;
                    i18 = 1;
                    do {
                        d1 *= i18;
                    } while (++i18 < 1);
                    i1 += (int)(-190L + (i17 * i17));
                    l += (long)d1;
                    for (i19 = 1; i19 > 1; i19--) {
                        Test.iArrFld1[i15] <<= i18;
                        i20 |= (int)Test.instanceCount;
                        if (Test.bFld) continue;
                    }
                } while (++i17 < 5);
            } else if (false) {
                i1 -= i19;
            } else {
                Test.fFld -= (float)0.123742;
            }
        } while (++i15 < 361);
        long meth_res = l + s1 + i1 + i15 + i17 + i18 + i19 + i20;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=45486, i21=-19721, i22=-26104, i23=-4, i24=6, i25=15, i26=2, i27=-47832;
        short s=17763;
        double d2=2.111200;
        long l1=-9L;
        byte by=19;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.332F);

        iArrFld[(i >>> 1) % N] -= (int)(((i - Test.fFld) * (--s)) + ((14 + (-(13 - lMeth(Test.lFld, Test.sFld, i)))) +
            Test.fFld));
        for (i21 = 20; i21 < 355; ++i21) {
            Test.iArrFld1[i21 + 1] <<= i21;
            i22 &= i22;
            i22 += i21;
            fArr[i21] *= (float)49.31802;
            i22 += i21;
        }
        for (float f1 : fArr) {
            d2 -= Test.fFld;
            for (l1 = 3; l1 < 63; ++l1) {
                switch ((int)((l1 % 6) + 52)) {
                case 52:
                    Test.iArrFld1[(int)(l1)] += Test.sFld;
                    fArr[(int)(l1 - 1)] += l1;
                    break;
                case 53:
                    switch (((-54940 >>> 1) % 2) + 108) {
                    case 108:
                        i23 >>= by;
                        Test.lFld -= 22935;
                        try {
                            i = (-1601311100 / i);
                            iArrFld[(int)(l1 - 1)] = (i21 / Test.iArrFld1[(int)(l1 + 1)]);
                            i22 = (i22 % Test.iFld);
                        } catch (ArithmeticException a_e) {}
                    case 109:
                        i24 = 1;
                        do {
                            f1 -= Test.iFld;
                            by = by;
                            Test.instanceCount += Test.lFld;
                            iArrFld[(int)(l1)] += i23;
                            Test.lFld += (((i24 * i24) + i24) - Test.instanceCount);
                            i22 += (i24 + Test.fFld);
                        } while (++i24 < 2);
                        i -= i24;
                        i23 += i23;
                        break;
                    }
                case 54:
                    Test.instanceCount *= (long)f1;
                    for (i25 = (int)(l1); i25 < 2; i25++) {
                        i23 |= -252;
                        i26 -= i23;
                    }
                    break;
                case 55:
                    i22 = i22;
                    break;
                case 56:
                    i27 += (int)(((l1 * Test.instanceCount) + Test.instanceCount) - i26);
                    break;
                case 57:
                    i26 = (int)Test.lFld;
                    break;
                default:
                    i26 = (int)l1;
                }
            }
        }

        FuzzerUtils.out.println("i s i21 = " + i + "," + s + "," + i21);
        FuzzerUtils.out.println("i22 d2 l1 = " + i22 + "," + Double.doubleToLongBits(d2) + "," + l1);
        FuzzerUtils.out.println("i23 by i24 = " + i23 + "," + by + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.lFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.sFld Test.bFld Test.iFld = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.iFld);
        FuzzerUtils.out.println("iArrFld Test.lArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
