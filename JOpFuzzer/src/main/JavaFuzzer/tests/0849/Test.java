// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4022202295L;
    public static volatile short sFld=-4396;
    public static int iFld=-41831;
    public static boolean bFld=true;
    public float fFld=1.969F;
    public int iFld1=41049;
    public static byte byFld=-54;
    public static float fArrFld[]=new float[N];
    public int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];
    public int iArrFld1[]=new int[N];
    public static int iArrFld2[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -112.315F);
        FuzzerUtils.init(Test.lArrFld, -3675381880L);
        FuzzerUtils.init(Test.iArrFld2, -22762);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10, float f1) {

        int i11=-8, i12=-45992, i13=-38464, i14=-5, iArr[]=new int[N];
        long l=-61769L, lArr[]=new long[N];
        byte by=2;
        double d=49.54390;

        FuzzerUtils.init(iArr, 233);
        FuzzerUtils.init(lArr, -185L);

        f1 = i10;
        for (i11 = 2; i11 < 203; i11++) {
            Test.instanceCount = i10;
        }
        l = 1;
        while (++l < 307) {
            i12 += (int)(((l * by) + f1) - i12);
            by -= (byte)l;
            for (i13 = 1; i13 < 5; i13++) {
                f1 += 4132L;
                switch ((int)((l % 9) + 126)) {
                case 126:
                    iArr[(int)(l + 1)] = i14;
                    break;
                case 127:
                    switch ((((i12 >>> 1) % 6) * 5) + 18) {
                    case 30:
                        i10 = by;
                        i14 += (i13 * Test.sFld);
                        Test.fArrFld[(int)(l + 1)] = -243L;
                        i10 -= i14;
                    case 26:
                        f1 = i11;
                        break;
                    case 48:
                        lArr = FuzzerUtils.long1array(N, (long)2455465226867829318L);
                    case 31:
                        i12 += i13;
                        break;
                    case 25:
                        i14 -= i10;
                    case 43:
                        i14 = (int)l;
                        break;
                    default:
                        i10 = (int)-7265155904435214627L;
                    }
                    break;
                case 128:
                case 129:
                    Test.sFld += (short)(((i13 * i14) + Test.instanceCount) - i12);
                case 130:
                    by += (byte)(i13 | i11);
                    break;
                case 131:
                    d = 102;
                    break;
                case 132:
                    f1 *= f1;
                    break;
                case 133:
                    i10 += i11;
                    break;
                case 134:
                    Test.iFld += (i13 + i11);
                    break;
                default:
                    try {
                        i10 = (i12 % -134);
                        i12 = (i10 / Test.iFld);
                        i14 = (i14 / i11);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth2_check_sum += i10 + Float.floatToIntBits(f1) + i11 + i12 + l + by + i13 + i14 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i3) {

        int i4=151, i5=-3, i6=-19912, i7=-9, i8=-9, i9=216, i15=-14;
        float f2=0.564F;
        long l1=-1L;
        byte by1=127;

        for (i4 = 328; 5 < i4; i4--) {
            for (i6 = 5; i6 > i4; i6 -= 2) {
                for (i8 = 1; i8 < 1; i8++) {
                    vMeth2(86, f2);
                    Test.iFld -= 1;
                }
                f2 *= -59590;
                for (l1 = 1; l1 < 1; l1++) {
                    Test.iFld = by1;
                    i9 += (int)l1;
                    Test.iFld += (int)64.52475;
                    f2 *= l1;
                    Test.iFld *= i5;
                    Test.instanceCount = Test.sFld;
                }
                Test.iFld += (i6 * i6);
                Test.instanceCount += (i6 * i6);
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f2) + l1 + i15 + by1;
    }

    public static void vMeth(int i1, float f, int i2) {

        double d1=53.22930, d2=63.9992;
        int i16=10040, i17=-15105, i18=-14, i19=-5;
        byte by2=-33;

        if (Test.bFld) {
            vMeth1(Test.iFld);
            i1 *= (int)-2.70035;
        }
        for (d1 = 14; d1 < 309; d1++) {
            i17 = 6;
            while ((i17 -= 3) > 0) {
                i1 = i17;
                Test.instanceCount = 167L;
                for (i18 = 3; i18 > 1; i18 -= 3) {
                    f += (((i18 * f) + i18) - i17);
                    Test.iFld -= (int)Test.instanceCount;
                    if (Test.bFld) continue;
                    i2 = Test.iFld;
                    d2 = i17;
                    Test.instanceCount *= i2;
                    by2 += (byte)(8069 + (i18 * i18));
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d1) + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(d2) + by2;
    }

    public void mainTest(String[] strArr1) {

        int i=-125, i20=30810, i21=7, i22=2, i23=156;

        i = 1;
        do {
            Test.sFld += (short)(5L + (i * i));
            vMeth(4, fFld, Test.iFld);
            iArrFld[i][i] = i;
        } while (++i < 294);
        fFld -= fFld;
        for (i20 = 1; i20 < 187; i20++) {
            Test.iFld = -22273;
            Test.lArrFld[i20] = Test.iFld;
            for (i22 = 5; i22 < 135; i22++) {
                i23 = Test.sFld;
                iArrFld[i22 - 1][(i22 >>> 1) % N] |= i22;
                Test.lArrFld[i20 - 1] *= Test.iFld;
                i21 -= i;
                if (Test.bFld) {
                    iArrFld[i22 + 1][i22 + 1] -= (int)Test.instanceCount;
                } else if (Test.bFld) {
                    Test.instanceCount = Test.instanceCount;
                    Test.lArrFld[i20 - 1] = i20;
                    Test.iFld -= i21;
                } else if (Test.bFld) {
                    Test.iFld += i;
                    switch ((i20 % 2) + 57) {
                    case 57:
                        iArrFld1[i20 - 1] = (int)Test.instanceCount;
                        Test.instanceCount -= (long)-116.9248;
                    case 58:
                        Test.instanceCount *= i22;
                        iFld1 = -165;
                        Test.instanceCount >>= i20;
                        break;
                    default:
                        iArrFld1 = iArrFld[i20];
                        Test.iFld = i20;
                        Test.byFld = (byte)2757993060089850847L;
                        iFld1 >>>= iFld1;
                    }
                    Test.iArrFld2[i22] = i20;
                } else {
                    if (Test.bFld) break;
                }
            }
        }

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 = " + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.iFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld fFld iFld1 = " + (Test.bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld) +
            "," + iFld1);
        FuzzerUtils.out.println("Test.byFld Test.fArrFld iArrFld = " + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.lArrFld iArrFld1 Test.iArrFld2 = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld1) + "," + FuzzerUtils.checkSum(Test.iArrFld2));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
