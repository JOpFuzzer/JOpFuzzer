// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=6874069797527439641L;
    public static volatile byte byFld=-49;
    public static volatile double dFld=1.8402;
    public short sFld=-881;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -20894);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, long l, long l1) {

        int i6=249, i7=-19, i8=29, i9=-210, i10=122, i11=12, i12=6, i13=-12, iArr[]=new int[N];
        double d=2.46475;
        boolean b=true;

        FuzzerUtils.init(iArr, -186);

        for (i6 = 302; i6 > 10; --i6) {
            l1 += (((i6 * Test.byFld) + i5) - i6);
            for (i8 = i6; 6 > i8; ++i8) {
                Test.byFld += (byte)d;
                i9 += (int)d;
                for (i10 = 1; i10 < 1; i10++) {
                    iArr[i10] *= i8;
                    i11 = -47628;
                    d = l1;
                }
                for (i12 = i8; i12 < 1; ++i12) {
                    i11 += i12;
                    Test.byFld += (byte)(i12 + i9);
                    Test.instanceCount += i12;
                    if (b) continue;
                    i5 = (int)l;
                }
            }
        }
        long meth_res = i5 + l + l1 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i14=-4, i15=-7, i16=-4, i17=4, i18=-109, iArr1[]=new int[N];
        double d1=86.78206;
        boolean b1=false, bArr[]=new boolean[N];
        short s=-25818;
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 132);
        FuzzerUtils.init(lArr, -2276675215L);

        iMeth(i14, 196L, Test.instanceCount);
        d1 = d1;
        bArr[(i14 >>> 1) % N] = b1;
        d1 = i14;
        i14 ^= i14;
        i14 -= (int)d1;
        iArr1[(i14 >>> 1) % N] = i14;
        for (i15 = 6; i15 < 248; i15++) {
            i16 >>>= 4;
            Test.byFld <<= (byte)Test.instanceCount;
        }
        for (i17 = 255; 11 < i17; --i17) {
            Test.instanceCount -= Test.instanceCount;
            lArr[i17] *= -12;
            s >>>= (short)i14;
            Test.instanceCount = Test.byFld;
        }
        long meth_res = i14 + Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 + s +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=-41247, i4=7, i19=-27680, i20=64120, i21=-16834, i22=-44959, i23=-25517;
        float f=0.474F;
        boolean b2=false;

        for (i3 = 11; 325 > i3; i3++) {
            if ((Test.instanceCount - Integer.reverseBytes((int)(-Test.instanceCount))) >= lMeth()) break;
            f *= 10;
            Test.byFld *= (byte)i4;
            if (b2) break;
            Test.instanceCount += Test.instanceCount;
        }
        Test.iArrFld[(i >>> 1) % N] *= i4;
        for (i19 = 9; i19 < 247; i19++) {
            for (i21 = i19; 7 > i21; i21++) {
                i23 = 1;
                do {
                    f -= i;
                    f = 11;
                    if (i3 != 0) {
                        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + (b2 ? 1 : 0) + i19 + i20 +
                            i21 + i22 + i23;
                        return;
                    }
                    i = 2047;
                    i4 = i3;
                } while ((i23 -= 3) > 0);
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + (b2 ? 1 : 0) + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i24=1, i25=33, i26=-217, i27=8, i28=1621, i29=-33790, i30=-149;
        long l3=-9141595854883801789L, lArr1[]=new long[N];
        float f2=1.160F, fArr[]=new float[N];

        FuzzerUtils.init(lArr1, -291964575883643110L);
        FuzzerUtils.init(fArr, -2.254F);

        vMeth(i24, i24, i24);
        for (i25 = 2; 147 > i25; i25++) {
            Test.instanceCount = i24;
            i24 += i25;
            i26 -= (int)Test.instanceCount;
            Test.dFld = 229;
            for (i27 = 173; i27 > 8; i27--) {
                for (l3 = i25; l3 < 2; ++l3) {
                    float f1=0.842F;
                    i24 %= (int)37L;
                    Test.iArrFld[i25 - 1] &= i24;
                    fArr[i27] = i27;
                    i24 += i27;
                    Test.instanceCount = 180;
                    i28 += (int)(l3 * l3);
                    i26 ^= i25;
                    i29 -= 14;
                    f1 = i28;
                    i24 = -13;
                }
            }
            lArr1[i25 + 1] = i25;
            i28 = (int)Test.instanceCount;
            Test.instanceCount = 53896;
            i28 -= 164;
            Test.iArrFld[i25] = i29;
        }
        if (bFld) {
            i30 = 1;
            while (++i30 < 130) {
                i26 = -21530;
                i29 += (((i30 * i28) + f2) - sFld);
                lArr1[i30 + 1] = i30;
                i24 <<= i25;
                Test.byFld += (byte)(-1 + (i30 * i30));
            }
        }

        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 l3 = " + i27 + "," + i28 + "," + l3);
        FuzzerUtils.out.println("i29 i30 f2 = " + i29 + "," + i30 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("lArr1 fArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("sFld bFld Test.iArrFld = " + sFld + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
