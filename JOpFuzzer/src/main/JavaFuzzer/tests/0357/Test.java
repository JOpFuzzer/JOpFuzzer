// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:49 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-58302L;
    public static int iFld=4;
    public static float fFld=0.787F;
    public static byte byFld=20;
    public static boolean bFld=false;
    public static int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 120);
        FuzzerUtils.init(Test.fArrFld, -76.313F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1) {

        int i3=1, i4=56437, i5=101, i6=13, i7=-47, i8=13, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, -13);

        switch ((((Test.iFld >>> 1) % 1) * 5) + 84) {
        case 85:
            Test.iFld = (int)Test.instanceCount;
            for (i3 = 10; 310 > i3; ++i3) {
                i5 = 6;
                while (--i5 > 0) {
                    for (i6 = 1; i6 < 1; i6++) {
                        i7 <<= 11;
                        i4 = i5;
                        if (b) continue;
                        if (Test.iFld != 0) {
                            vMeth1_check_sum += l + l1 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        Test.iFld = (int)l;
                        Test.iFld >>= (int)Test.instanceCount;
                        Test.instanceCount <<= i4;
                        try {
                            i7 = (i6 % -59100);
                            i4 = (iArr[i6 + 1] % -204);
                            i8 = (1246824458 % i4);
                        } catch (ArithmeticException a_e) {}
                        i7 += (int)l;
                    }
                    if (b) break;
                }
            }
            break;
        }
        vMeth1_check_sum += l + l1 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d1) {

        int i9=0, i10=-209, i11=56544, i12=11, iArr1[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 153);
        FuzzerUtils.init(sArr, (short)-12071);

        vMeth1(Test.instanceCount, Test.instanceCount);
        for (i9 = 19; i9 < 381; ++i9) {
            i10 = i10;
            i10 += (((i9 * i10) + Test.instanceCount) - i10);
            Test.fFld %= (i10 | 1);
            i11 *= i9;
            Test.fFld = i10;
            Test.iFld -= i9;
            iArr1 = FuzzerUtils.int1array(N, (int)-1);
            i12 = 1;
            while (++i12 < 5) {
                sArr[i12] *= (short)603531619L;
                Test.instanceCount *= -892196551L;
                Test.instanceCount += (i12 * Test.fFld);
                iArr1 = iArr1;
            }
        }
        Test.byFld += (byte)42227;
        vMeth_check_sum += Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth() {

        int i14=-8, i15=-12297, i16=-65299;
        double d2=1.23087;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);

        vMeth(-39.94081);
        lArr = lArr;
        Test.iFld &= Test.iFld;
        i14 = 1;
        while (++i14 < 350) {
            Test.iFld += i14;
            Test.instanceCount += Test.iFld;
            for (i15 = 1; i15 < 5; ++i15) {
                Test.iFld *= (int)Test.fFld;
                if (Test.bFld) continue;
                i16 = i15;
                i16 += (i15 * i16);
                try {
                    Test.iArrFld[i14 + 1][i15 - 1] = (i16 % i15);
                    Test.iFld = (i16 % 1151326472);
                    Test.iFld = (251 % i14);
                } catch (ArithmeticException a_e) {}
            }
        }
        d2 = 1;
        while (++d2 < 233) {
            Test.iArrFld[(int)(d2 + 1)][(int)(d2 - 1)] = -10;
        }
        Test.instanceCount = 156;
        long meth_res = i14 + i15 + i16 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=53878, i1=3379, i2=-9, i17=-135, i18=-9, i19=-48224, i20=-221, i21=-30248, i22=-36113;
        double d=2.25163;
        long l2=188L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)89);

        i = (int)(((i - i) * (++i)) * (Test.instanceCount &= (long)(i - d)));
        for (i1 = 17; i1 < 380; i1++) {
            Test.iFld += (((i1 * i2) + i) - i);
            Test.iFld *= iMeth();
            Test.iFld += Test.iFld;
            Test.iFld ^= i;
            Test.fArrFld[i1 + 1] += (float)d;
            l2 = 1;
            do {
                Test.fFld = (float)d;
                Test.fFld += (((l2 * i) + i) - Test.instanceCount);
                for (i17 = 1; i17 < 1; ++i17) {
                    i = i;
                    byArr[i1] >>= (byte)i1;
                    i = (int)l2;
                    Test.fFld *= Test.iFld;
                    Test.fFld += (-9 + (i17 * i17));
                    Test.iFld &= i17;
                    Test.instanceCount += (((i17 * Test.instanceCount) + i) - i2);
                    i18 = i;
                    lArrFld[i17 + 1] += i1;
                }
            } while (++l2 < 69);
        }
        Test.fFld += 3330257836L;
        for (i19 = 2; i19 < 164; i19++) {
            i = i18;
            for (i21 = i19; i21 < 155; i21++) {
                i22 += (((i21 * i1) + i21) - i2);
                i18 += (int)-60.542F;
                i2 = (int)l2;
                Test.instanceCount += i;
                try {
                    i = (i20 % 64925);
                    i22 = (i22 / i1);
                    Test.iArrFld[i19 - 1][i21 - 1] = (i18 / 232);
                } catch (ArithmeticException a_e) {}
                i = (int)2896077388L;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 l2 i17 = " + i2 + "," + l2 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 byArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.bFld Test.iArrFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))
            + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
