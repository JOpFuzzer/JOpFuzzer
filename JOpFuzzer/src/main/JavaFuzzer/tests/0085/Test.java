// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3741471109L;
    public static int iFld=246;
    public static volatile double dFld=-2.53869;
    public boolean bFld=false;
    public int iFld1=32330;
    public static int iFld2=-61242;
    public float fArrFld[]=new float[N];

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9, int i10) {

        double d1=1.97520;

        i10 = i10;
        i10 -= (int)d1;
        vMeth_check_sum += i9 + i10 + Double.doubleToLongBits(d1);
    }

    public static int iMeth(double d, long l) {

        int i11=5, i12=-209, i13=-14, i14=8, i15=13245, i16=-182, i17=-106, i18=17183, iArr[]=new int[N];
        float f1=-72.420F, f2=-83.679F;
        boolean b=false;
        byte by=-29;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 242L);
        FuzzerUtils.init(iArr, -44312);

        vMeth(i11, i11);
        for (i12 = 1; i12 < 247; i12++) {
            for (i14 = i12; i14 < 7; i14++) {
                for (i16 = 1; i16 < 1; i16++) {
                    if (true) break;
                    i15 = (int)-34.126F;
                }
            }
            f1 = Test.iFld;
            for (f2 = 1; f2 < 7; ++f2) {
                f1 %= ((long)(f1) | 1);
                f1 = 13104;
                lArr = lArr;
                iArr[i12] >>>= i17;
                if (b) break;
                b = b;
                by = (byte)152;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + l + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i18 + (b ? 1 : 0) + by + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i2=-25466, i3=14447, i4=16201, i5=-12, i6=-3, i7=-16842, i8=-11;
        float f=-2.562F, fArr[][]=new float[N][N];
        double d2=89.5939, dArr[]=new double[N];
        byte by1=43;
        boolean b1=false;
        short s=-9120;

        FuzzerUtils.init(dArr, 33.15673);
        FuzzerUtils.init(fArr, 2.423F);

        i2 = (int)Math.sqrt((-7 * (46746 - (-122L * (++i2)))) - Math.abs(i2));
        i2 >>= (int)((++f) + ((-(i2--)) & i2));
        Test.instanceCount = (++i2);
        for (i3 = 3; i3 < 289; i3 += 3) {
            for (i5 = 1; 16 > i5; i5++) {
                for (i7 = 1; i7 < 2; ++i7) {
                    Test.instanceCount -= (-(--i2));
                    dArr[(i5 >>> 1) % N] *= (i6++);
                    fArr[i5][i3] = (((i3 - i6) - i5) - iMeth(d2, Test.instanceCount));
                    Test.instanceCount = by1;
                    d2 -= Test.instanceCount;
                    i6 += (i7 + i2);
                    b1 = b1;
                    Test.instanceCount -= i4;
                    s += (short)(((i7 * Test.instanceCount) + i6) - Test.instanceCount);
                }
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d2) + by1
            + (b1 ? 1 : 0) + s + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-25503, i1=62795, i19=10202, i20=-225, i21=-58315, i22=8, i23=239, i24=11, i25=4, i26=-2, i27=240, i28=1,
            iArr1[]=new int[N];
        byte by2=0;
        float f3=-1.269F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -48);
        FuzzerUtils.init(lArr1, 0L);

        for (i = 8; i < 291; i += 2) {
            if (bFld) {
                i1 += (int)(i1 - (lMeth() - Test.iFld));
                switch (((i % 5) * 5) + 7) {
                case 9:
                    try {
                        iArr1[i + 1] = (-51170 / iArr1[i + 1]);
                        i1 = (i % iArr1[i - 1]);
                        i1 = (i1 / Test.iFld);
                    } catch (ArithmeticException a_e) {}
                    Test.dFld *= by2;
                    if (bFld) break;
                case 13:
                case 15:
                    Test.iFld += (((i * Test.iFld) + i1) - iFld1);
                    Test.iFld2 += (int)f3;
                case 30:
                    try {
                        iArr1[i + 1] = (i % -65343);
                        i1 = (i % 178);
                        Test.iFld2 = (-62457 % i1);
                    } catch (ArithmeticException a_e) {}
                case 29:
                    for (i19 = 8; i19 < 178; ++i19) {
                        for (i21 = 2; i21 > 1; i21 -= 2) {
                            Test.iFld += (int)148L;
                            f3 -= i1;
                        }
                        for (i23 = 1; i23 < 2; ++i23) {
                            iArr1[i + 1] = Test.iFld2;
                        }
                        for (i25 = 1; 2 > i25; i25++) {
                            iArr1[i19 + 1] = Test.iFld2;
                            iArr1[i19 + 1] = i20;
                            i1 += (i25 * i25);
                            i26 = (int)Test.instanceCount;
                            Test.iFld = 80;
                        }
                        iFld1 |= (int)Test.instanceCount;
                        Test.instanceCount += i19;
                        i22 *= i1;
                        iFld1 = (int)Test.instanceCount;
                        iFld1 -= i25;
                        for (i27 = 1; i27 < 2; i27++) {
                            f3 = i23;
                            if (bFld) continue;
                        }
                    }
                    break;
                default:
                    fArrFld[i] += 0;
                }
            }
        }

        FuzzerUtils.out.println("i i1 by2 = " + i + "," + i1 + "," + by2);
        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr1 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("bFld iFld1 Test.iFld2 = " + (bFld ? 1 : 0) + "," + iFld1 + "," + Test.iFld2);
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
