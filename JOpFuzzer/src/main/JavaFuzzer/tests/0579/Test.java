// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3598479134205268057L;
    public static int iFld=-29571;
    public short sFld=22241;
    public double dFld=2.89588;
    public volatile float fFld=-1.676F;

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i7, int i8) {

        double d=-90.78308;
        float f1=-1.903F, f2=0.481F;
        int i9=-3, i10=145, i11=8, i12=251;
        byte by=103;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -12L);

        switch (((i7 >>> 1) % 2) + 77) {
        case 77:
            lArr[(i7 >>> 1) % N] += i7;
            Test.instanceCount -= 9731;
            i7 = 11;
            i7 = i7;
        case 78:
            i7 >>>= (int)Test.instanceCount;
            switch ((((i7 >>> 1) % 6) * 5) + 122) {
            case 152:
                d = i7;
                f1 = 1;
                do {
                    i7 -= (int)f1;
                } while (++f1 < 388);
                break;
            case 150:
                for (i9 = 9; i9 < 239; ++i9) {
                    for (i11 = i9; i11 < 7; ++i11) {
                        Test.instanceCount += i11;
                        lArr[i11 - 1] -= i11;
                        Test.iFld += i11;
                    }
                }
                break;
            case 125:
                Test.instanceCount += i9;
            case 123:
                i12 <<= i12;
                break;
            case 131:
                f2 += by;
            case 137:
                lArr[(-42874 >>> 1) % N] <<= -111;
                break;
            }
            break;
        }
        long meth_res = i7 + i8 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 +
            Float.floatToIntBits(f2) + by + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i3, float f, int i4) {

        int i5=-118, i13=8, i14=7395, i15=69, iArr1[]=new int[N];
        byte by1=127;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(lArr1, -61500L);

        i5 = 213;
        while ((i5 -= 2) > 0) {
            int i6=-91;
            Test.instanceCount += ((Math.min(i3, i6) + (-lMeth1(i4, Test.iFld))) + i5);
            i6 = by1;
            i13 = 1;
            while (++i13 < 15) {
                Test.instanceCount += (long)-13.82F;
                try {
                    i4 = (50872 % i3);
                    i4 = (iArr1[i5] % i13);
                    i4 = (i3 / 21);
                } catch (ArithmeticException a_e) {}
                if (b) break;
                for (i14 = 1; i14 < 1; ++i14) {
                    Test.instanceCount = i14;
                    i4 += (i14 + Test.instanceCount);
                    f += (-229 + (i14 * i14));
                    f -= i6;
                    f += 0;
                    Test.iFld += (i14 ^ Test.iFld);
                }
                lArr1[i5 + 1] = i14;
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f) + i4 + i5 + by1 + i13 + (b ? 1 : 0) + i14 + i15 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i1=10, i2=-5100, i16=20714, i17=-5, i18=65, i19=23798, iArr2[]=new int[N];
        long l1=162L;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)27767);
        FuzzerUtils.init(iArr2, -2);

        for (i1 = 1; i1 < 290; i1++) {
            sArr[i1] -= (short)lMeth(i2, -56.109F, 25608);
            for (i16 = 1; 6 > i16; ++i16) {
                Test.instanceCount = -17454;
                Test.iFld <<= (int)l1;
                for (i18 = 1; i18 < 2; i18++) {
                    i2 = Test.iFld;
                    Test.instanceCount -= sFld;
                    iArr2[i1] <<= 0;
                    iArr2[i1 - 1] -= -13867;
                    i2 = i16;
                    i2 += i17;
                    Test.iFld *= sFld;
                }
                i17 += (int)(0.1016F + (i16 * i16));
                dFld = -12;
            }
        }
        vMeth_check_sum += i1 + i2 + i16 + i17 + l1 + i18 + i19 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        long l=2005258655L, lArr2[]=new long[N];
        int i=156, i20=-196, i21=19731, i22=29325, i23=2335, i24=-11, iArr[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr, 57);
        FuzzerUtils.init(lArr2, -13L);

        iArr[(80 >>> 1) % N] *= (int)Test.instanceCount;
        for (l = 145; l > 7; --l) {
            Test.instanceCount ^= (--i);
            i += (int)(((i + i) + (i + -12129)) + (Math.min(i, i) * (i % (Test.instanceCount | 1))));
            if (b1) {
                vMeth();
                i -= Test.iFld;
                fFld = i;
                Test.instanceCount = 4014153743L;
            } else {
                dFld -= i;
            }
            iArr[(int)(l - 1)] *= i;
            lArr2[(int)(l - 1)] += i;
            for (i20 = 182; i20 > 2; --i20) {
                i22 = 1;
                do {
                    b1 = b1;
                    Test.iFld *= (int)fFld;
                    Test.instanceCount -= i;
                    i21 += 190;
                } while (++i22 < 2);
                dFld += i22;
                i *= (int)-3L;
                for (i23 = 2; i23 > l; i23--) {
                    i24 ^= i24;
                    fFld += Test.instanceCount;
                    i = i20;
                    Test.iFld -= 45439;
                    if (b1) {
                        Test.instanceCount = i22;
                        if (b1) break;
                        fFld = 18696;
                    }
                    i24 -= (int)l;
                }
            }
        }

        FuzzerUtils.out.println("l i b1 = " + l + "," + i + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld sFld = " + Test.instanceCount + "," + Test.iFld + "," +
            sFld);
        FuzzerUtils.out.println("dFld fFld = " + Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
