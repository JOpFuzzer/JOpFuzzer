// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-25912L;
    public short sFld=-32711;
    public volatile boolean bFld=true;
    public static double dFld=94.89623;

    public static long bMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, float f1, int i6) {

        int i7=-6, i8=27042, i9=-65186;
        byte by=-61;
        short s1=17213;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 0.690F);
        FuzzerUtils.init(lArr, 10L);

        i7 = 1;
        while (++i7 < 331) {
            boolean b=true;
            i6 -= i7;
            i6 -= -3560;
            by <<= (byte)i6;
            s1 >>>= (short)i7;
            Test.instanceCount += (((i7 * f1) + i6) - i5);
            fArr[i7] -= Test.instanceCount;
            if (b) break;
        }
        i6 = (int)Test.instanceCount;
        i5 += (int)9.513F;
        for (i8 = 6; i8 < 154; i8++) {
            lArr[i8 - 1] -= i8;
            i5 = i5;
        }
        Test.instanceCount *= i9;
        f1 -= by;
        long meth_res = i5 + Float.floatToIntBits(f1) + i6 + i7 + by + s1 + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i3, int i4, double d1) {

        float f2=-63.67F;
        int i10=-96, i11=-41222, i12=-56301, i13=-6, i14=-12, i15=0, i16=-147, iArr[]=new int[N];
        boolean b1=false;
        long l=665158355L;

        FuzzerUtils.init(iArr, -8);

        i4 = (-iMeth(i3, f2, i4));
        i3 -= i4;
        for (i10 = 5; i10 < 358; ++i10) {
            i11 -= i10;
            for (i12 = 1; i12 < 5; ++i12) {
                i13 >>= i10;
                i14 = 2;
                do {
                    iArr[i12] = (int)Test.instanceCount;
                    if (b1) break;
                    Test.instanceCount = i10;
                    i11 = i14;
                    if (b1) continue;
                } while (--i14 > 0);
                for (i15 = 1; i15 < 2; ++i15) {
                    iArr[i12 + 1] <<= i12;
                    l += i16;
                }
            }
        }
        long meth_res = i3 + i4 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + i14
            + (b1 ? 1 : 0) + i15 + i16 + l + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static boolean bMeth(short s, float f) {

        int i2=0, i17=5, i18=150, i19=43967, i20=149, i21=-148, iArr1[]=new int[N];
        long l1=15899L, lArr1[]=new long[N];
        byte by1=-33;
        boolean b2=false;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, -70.12815);
        FuzzerUtils.init(iArr1, -6);
        FuzzerUtils.init(lArr1, 21238L);

        i2 = 322;
        while (--i2 > 0) {
            double d2=-1.91099;
            dArr[i2 + 1][i2] += dMeth(i2, i2, d2);
            for (i17 = 1; i17 < 5; i17++) {
                l1 = (long)d2;
                for (i19 = 2; 1 < i19; --i19) {
                    by1 = (byte)i19;
                    if (b2) continue;
                    iArr1[i19 + 1] -= 3;
                    i18 += i19;
                    d2 += i19;
                    i18 = i20;
                    switch ((((i18 >>> 1) % 10) * 5) + 98) {
                    case 147:
                        f = -55938;
                        l1 = 13;
                        f -= -11005;
                    case 132:
                        i20 *= (int)Test.instanceCount;
                        break;
                    case 109:
                    case 112:
                        iArr1[i19 - 1] = i17;
                        break;
                    case 114:
                        Test.instanceCount = (long)2.77120;
                        break;
                    case 146:
                        try {
                            i20 = (i18 / -62495);
                            iArr1[i19 + 1] = (85 / i18);
                            iArr1[i19 - 1] = (iArr1[i2 - 1] / 27);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 115:
                        i18 = 203;
                    case 103:
                        f = i19;
                        break;
                    case 137:
                        i18 = i17;
                        break;
                    case 110:
                    default:
                        lArr1[i19 - 1] *= i21;
                    }
                }
            }
        }
        long meth_res = s + Float.floatToIntBits(f) + i2 + i17 + i18 + l1 + i19 + i20 + by1 + (b2 ? 1 : 0) + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=13, i1=4, i22=6, i23=-18, i24=-14, iArr2[]=new int[N];
        double d=2.10833;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr2, 506);
        FuzzerUtils.init(sArr, (short)-12997);

        i = 1;
        do {
            for (d = 64; 3 < d; d -= 3) {
                float f3=-45.513F;
                if (bMeth(sFld, 67.749F) || bFld) continue;
                i1 *= i;
                switch ((int)(((d % 6) * 5) + 44)) {
                case 71:
                    i1 = (int)Test.instanceCount;
                    break;
                case 74:
                    f3 += i;
                    break;
                case 69:
                    i1 = i;
                    i1 += (int)(d - Test.instanceCount);
                    Test.instanceCount -= i;
                case 63:
                    Test.instanceCount += (25668L + (d * d));
                    sFld -= (short)i;
                case 46:
                    Test.instanceCount += -17227;
                    Test.instanceCount -= -188;
                    break;
                case 45:
                    i1 += (int)((long)d | Test.instanceCount);
                    i1 = i1;
                    for (i22 = 1; i22 < 4; i22++) {
                        byte by2=-94;
                        i23 += (int)(0.588F + (i22 * i22));
                        switch ((int)((d % 2) + 20)) {
                        case 20:
                            i23 -= (int)1963045009L;
                        case 21:
                            switch ((i % 7) + 6) {
                            case 6:
                                i1 = by2;
                                break;
                            case 7:
                                iArr2[i22 + 1] += 52973;
                                Test.dFld += 111L;
                                break;
                            case 8:
                                i23 = i1;
                                i1 = i23;
                                i23 += (i22 ^ Test.instanceCount);
                                break;
                            case 9:
                                i23 += (int)Test.instanceCount;
                                break;
                            case 10:
                                i23 -= (int)d;
                                Test.instanceCount = i;
                                break;
                            case 11:
                                sArr = sArr;
                            case 12:
                                i24 = (int)f3;
                                break;
                            default:
                                i23 &= i;
                            }
                            break;
                        }
                    }
                default:
                    i1 -= i;
                }
            }
        } while (++i < 394);

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr2 sArr = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount sFld bFld = " + Test.instanceCount + "," + sFld + "," + (bFld ? 1 :
            0));
        FuzzerUtils.out.println("Test.dFld = " + Double.doubleToLongBits(Test.dFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  dMeth ->  dMeth bMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
