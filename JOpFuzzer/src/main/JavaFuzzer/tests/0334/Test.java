// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8850250918552823768L;
    public static int iFld=10;
    public static double dFld=0.64011;
    public static float fFld=1.497F;
    public byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth(long l, int i, int i1) {

        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -461136681L);

        i *= (int)(lArr[(i >>> 1) % N]++);
        vMeth_check_sum += l + i + i1 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth2(int i5, int i6) {

        int i7=9, i8=23157, i9=-21770, i10=13, i11=32049, i12=-22715, i13=100;
        boolean b=true;

        for (i7 = 17; 281 > i7; i7++) {
            if (false) break;
            Test.dFld = i6;
            b = b;
            Test.instanceCount >>= Test.iFld;
            for (i9 = 1; i9 < 6; i9++) {
                Test.fFld *= (float)Test.dFld;
                if (true) break;
                for (i11 = 1; 2 > i11; ++i11) {
                    switch ((i11 % 3) + 68) {
                    case 68:
                        if (i6 != 0) {
                            vMeth2_check_sum += i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + i11 + i12 + i13;
                            return;
                        }
                        i8 += (i11 + Test.instanceCount);
                        i5 %= (int)((long)(Test.fFld) | 1);
                        i12 = i13;
                    case 69:
                        i13 >>>= (int)Test.instanceCount;
                    case 70:
                        Test.dFld *= Test.fFld;
                        break;
                    }
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + i11 + i12 + i13;
    }

    public static void vMeth1(int i3, long l1, int i4) {


        vMeth2(i4, i3);
        vMeth1_check_sum += i3 + l1 + i4;
    }

    public static int iMeth(int i2) {

        int i14=153, i15=5, i16=-5, i17=-1;
        float f=0.98F;
        short s=-9762;
        double d=1.113667;

        vMeth1(Test.iFld, Test.instanceCount, -6);
        Test.iFld += Test.iFld;
        for (i14 = 5; i14 < 152; i14++) {
            for (f = 1; 11 > f; ++f) {
                i16 += (int)(((f * s) + Test.iFld) - Test.instanceCount);
                for (d = f; d < 2; d++) {
                    s += (short)(d + i15);
                    i17 = (int)f;
                    if (false) {
                        i2 -= i17;
                    } else {
                        if (i2 != 0) {
                        }
                    }
                    i17 = i17;
                }
                i15 += (int)(7130451227357029308L + (f * f));
                i2 *= (int)-114L;
                Test.instanceCount *= i14;
            }
        }
        long meth_res = i2 + i14 + i15 + Float.floatToIntBits(f) + i16 + s + Double.doubleToLongBits(d) + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=56714, i19=-24214, i20=9, i21=-10481, i22=-46453, i23=4, i24=47677, i25=-37460, i26=54443, i27=4;
        short s1=26448;
        byte by=-26;
        boolean b1=false;
        float fArr[]=new float[N];
        double dArr[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 50.112F);
        FuzzerUtils.init(dArr, -1.99500);
        FuzzerUtils.init(lArr1, -2565880233877447831L);

        vMeth((long)(-(++fArr[(Test.iFld >>> 1) % N])), iMeth(Test.iFld), Test.iFld);
        for (i18 = 278; i18 > 6; i18--) {
            for (i20 = 5; i20 < 92; ++i20) {
                if (true) continue;
                Test.instanceCount -= i21;
                Test.dFld = i18;
                for (i22 = 1; i22 < 2; i22++) {
                    Test.fFld = i19;
                    Test.iFld += (i22 - s1);
                    Test.instanceCount *= i18;
                    Test.instanceCount |= Test.instanceCount;
                    dArr[i20 + 1] = i19;
                    Test.instanceCount = i23;
                    Test.iFld = -14596;
                }
                i23 >>= i20;
                i23 = i22;
            }
            Test.instanceCount += (long)Test.fFld;
            Test.iFld -= by;
            s1 += (short)(i18 * i18);
            Test.iFld *= i19;
            Test.instanceCount = i19;
            if (true) continue;
            Test.instanceCount = i23;
            for (i24 = 3; i24 < 92; ++i24) {
                for (i26 = 2; 1 < i26; i26 -= 3) {
                    by |= (byte)Test.instanceCount;
                    Test.instanceCount = i18;
                    b1 = b1;
                    byArrFld[i18 + 1] = (byte)i25;
                    lArr1 = lArr1;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("s1 by i24 = " + s1 + "," + by + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b1 fArr dArr = " + (b1 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld byArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
