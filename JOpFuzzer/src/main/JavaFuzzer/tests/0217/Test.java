// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:46 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1612024085993685975L;
    public int iFld=35589;
    public static volatile byte byFld=72;
    public static volatile boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, int i4, int i5) {

        double d=-1.37133, d1=-2.52965;
        int i6=-30649, i7=3961, i8=4, i9=-221, i10=40, i11=-14;

        for (d = 3; 295 > d; ++d) {
            i4 = (int)f1;
            i4 = (int)Test.instanceCount;
            f1 += 7L;
        }
        for (i7 = 12; i7 < 380; i7++) {
            for (d1 = i7; d1 < 5; d1 += 3) {
                i5 -= i4;
                Test.instanceCount -= i4;
                i8 *= i5;
                for (i10 = 1; i10 > 1; i10--) {
                    Test.iArrFld[(i7 >>> 1) % N] = (int)d1;
                    i6 -= (int)d;
                    i4 = i9;
                    i9 = i9;
                    i6 += -222;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 +
            Double.doubleToLongBits(d1) + i9 + i10 + i11;
    }

    public static void vMeth() {

        float f=0.174F, fArr[]=new float[N];
        int i1=-13, i2=59304, i3=926, i12=7;
        short s=31586;
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)84);
        FuzzerUtils.init(fArr, 55.500F);

        f = (++i1);
        Test.instanceCount -= i1;
        for (i2 = 9; i2 < 225; ++i2) {
            vMeth1(f, i1, i2);
            i1 <<= i2;
            Test.bArrFld[i2 + 1] = true;
            switch (((i3 >>> 1) % 10) + 113) {
            case 113:
                i1 <<= s;
                switch (((i2 % 3) * 5) + 74) {
                case 78:
                    i12 = 1;
                    while (++i12 < 7) {
                        i3 = (int)Test.instanceCount;
                    }
                    i3 += i2;
                    i3 += i2;
                    Test.iArrFld[i2 + 1] = i2;
                case 75:
                    i3 >>>= (int)Test.instanceCount;
                    break;
                case 87:
                    Test.instanceCount += (i2 - Test.instanceCount);
                    break;
                default:
                    Test.instanceCount += (long)f;
                }
            case 114:
                i3 = i12;
                break;
            case 115:
                Test.iArrFld[i2 - 1] -= i1;
            case 116:
                f = Test.instanceCount;
                break;
            case 117:
                i1 -= -27;
            case 118:
                if (b) continue;
                break;
            case 119:
                i3 <<= i3;
            case 120:
                byArr[i2 - 1] -= (byte)i2;
            case 121:
                Test.byFld *= (byte)f;
                break;
            case 122:
                fArr[i2 - 1] *= i12;
                break;
            default:
                i3 = (int)-104.270F;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + s + i12 + (b ? 1 : 0) + FuzzerUtils.checkSum(byArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth() {

        int i=7, i13=13, i14=-10, i15=9, i16=60, i17=13, i18=57;
        float f2=-107.218F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4L);

        i -= (i++);
        vMeth();
        Test.instanceCount = i;
        for (i13 = 7; i13 < 195; ++i13) {
            Test.iArrFld[i13 - 1] *= (int)f2;
            for (i15 = i13; i15 < 8; ++i15) {
                Test.bFld = true;
                for (i17 = i15; i17 < 1; ++i17) {
                    double d2=2.59040;
                    switch ((i15 % 10) + 53) {
                    case 53:
                        if (Test.bFld) continue;
                        i18 += (((i17 * i15) + Test.instanceCount) - i18);
                        i18 = i15;
                    case 54:
                        i16 += (i17 * i17);
                        Test.iArrFld[i17 + 1] >>= (int)Test.instanceCount;
                        Test.iArrFld[i15] = i13;
                        break;
                    case 55:
                        i18 >>= i15;
                    case 56:
                        Test.iArrFld[i17 + 1] += (int)3190856618027397824L;
                        break;
                    case 57:
                    case 58:
                        Test.instanceCount = i14;
                    case 59:
                        lArr[i17 + 1] -= i;
                        break;
                    case 60:
                        d2 -= Test.instanceCount;
                        break;
                    case 61:
                        i16 &= i13;
                        break;
                    case 62:
                        i14 >>= Test.byFld;
                        break;
                    }
                }
            }
        }
        long meth_res = i + i13 + i14 + Float.floatToIntBits(f2) + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=50.405F, f4=57.66F;
        int i19=0, i20=-62, i21=165, i22=37952, i23=8127;
        double d3=120.17938;
        short s1=-6709;

        Test.instanceCount %= (((long)((Float.intBitsToFloat(iFld) * Test.instanceCount) + (fMeth() - 11L))) | 1);
        iFld >>= 14;
        for (f3 = 5; f3 < 187; f3++) {
            i20 = 1;
            while ((i20 += 2) < 138) {
                i21 = 1;
                while (++i21 < 2) {
                    f4 = f3;
                    d3 *= -45302;
                    i19 = i21;
                }
                for (i22 = 1; i22 < 2; ++i22) {
                    iFld *= (int)2.826F;
                    switch ((((i20 >>> 1) % 6) * 5) + 3) {
                    case 12:
                        switch (((i22 >>> 1) % 3) + 68) {
                        case 68:
                            Test.bArrFld[i20 - 1] = Test.bFld;
                            i23 *= (int)124.697F;
                            f4 += Test.instanceCount;
                            break;
                        case 69:
                            s1 >>= s1;
                        case 70:
                            i19 = (int)Test.instanceCount;
                            Test.bArrFld[(int)(f3)] = Test.bFld;
                        }
                        i23 += (i22 * i22);
                        Test.instanceCount += (long)d3;
                        break;
                    case 19:
                        Test.bFld = Test.bFld;
                        break;
                    case 8:
                    case 11:
                    case 13:
                        iFld += i22;
                        Test.iArrFld[i22 - 1] = i19;
                        i23 = -191;
                        iFld = -43992;
                        break;
                    case 16:
                        Test.instanceCount ^= Test.instanceCount;
                        f4 = Test.instanceCount;
                        break;
                    default:
                        iFld &= (int)Test.instanceCount;
                        Test.instanceCount ^= i21;
                        Test.instanceCount += Test.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f4 d3 = " + i21 + "," + Float.floatToIntBits(f4) + "," +
            Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i22 i23 s1 = " + i22 + "," + i23 + "," + s1);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.byFld = " + Test.instanceCount + "," + iFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.bFld Test.iArrFld Test.bArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
