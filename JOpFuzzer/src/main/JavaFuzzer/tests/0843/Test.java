// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public int iFld=-48995;
    public float fFld=0.34F;
    public static boolean bFld=false;
    public int iFld1=167;
    public byte byArrFld[]=new byte[N];
    public volatile boolean bArrFld[]=new boolean[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by1) {

        int i5=-25801, i6=248, i7=-8, i8=-1627, i9=116, i10=-48, i11=188, iArr1[]=new int[N];
        float f1=-1.41F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -189);
        FuzzerUtils.init(lArr1, 223L);

        iArr1[(i5 >>> 1) % N] -= i5;
        Test.instanceCount = i5;
        i5 = (int)Test.instanceCount;
        for (long l1 : lArr1) {
            i5 >>= i5;
        }
        for (i6 = 6; i6 < 253; ++i6) {
            i7 += (((i6 * i6) + Test.instanceCount) - Test.instanceCount);
            for (i8 = 7; i8 > 1; i8--) {
                if (i9 != 0) {
                    vMeth1_check_sum += by1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
                    return;
                }
                Test.instanceCount += (((i8 * i5) + i7) - i5);
                i9 += (i8 * i7);
                for (i10 = i8; 2 > i10; i10++) {
                    f1 = 0.7F;
                    i7 += (i10 - i7);
                    f1 *= by1;
                }
            }
        }
        vMeth1_check_sum += by1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(int i4, float f) {

        short s=-6314;
        boolean b=true;
        int i12=7, i13=-61704, i14=214, i15=-37059;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 9016138448372896098L);

        i4 |= i4;
        for (byte by : byArrFld) {
            vMeth1(by);
            f -= s;
            if (b) {
                f += s;
                iFld -= (int)f;
            } else {
                for (i12 = 1; i12 < 4; ++i12) {
                    i4 += i12;
                    for (i14 = 1; i14 < 2; ++i14) {
                        double d1=0.12940;
                        by = (byte)i14;
                        switch ((((i4 >>> 1) % 5) * 5) + 47) {
                        case 48:
                            by += (byte)f;
                            lArr2[i12 + 1] = iFld;
                            break;
                        case 68:
                            Test.instanceCount = i4;
                            break;
                        case 62:
                            f += i13;
                            break;
                        case 59:
                            b = b;
                            break;
                        case 67:
                            d1 %= (i4 | 1);
                            break;
                        default:
                            bArrFld[i12] = b;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f) + s + (b ? 1 : 0) + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(lArr2);
    }

    public long lMeth(long l) {

        int iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -20901);

        iArr[(-6540 >>> 1) % N][(iFld >>> 1) % N] *= (--iFld);
        vMeth(-29241, fFld);
        iFld += iFld;
        bArrFld[(40087 >>> 1) % N] = Test.bFld;
        long meth_res = l + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=-51256, i2=-98, i3=16, i16=-36176, i17=6, i18=5361, i19=150;
        double d=1.112866;
        short s1=-20150;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3913438651L);

        for (i = 1; i < 249; ++i) {
            for (i2 = 6; 101 > i2; ++i2) {
                long l2=-19942L;
                switch ((((i3--) >>> 1) % 6) + 31) {
                case 31:
                    i3 += (int)Test.instanceCount;
                    lArr[i - 1] |= (long)(-((d % 12L) - lMeth(2L)));
                    break;
                case 32:
                    i3 += (i2 - Test.instanceCount);
                    break;
                case 33:
                case 34:
                    fFld = iFld;
                    iFld -= (int)fFld;
                    l2 += (i2 * i3);
                    break;
                case 35:
                    for (i16 = 1; i16 < 2; i16++) {
                        i1 -= i2;
                        iFld >>= i1;
                        lArr[i2 + 1] &= iFld;
                        s1 *= (short)l2;
                    }
                    i3 = -2;
                    iFld += (((i2 * i17) + i3) - i);
                    if (false) break;
                    break;
                case 36:
                }
                lArr = lArr;
                iFld1 += (i2 * i1);
                fFld += Test.instanceCount;
                iFld += (int)fFld;
                iFld >>>= 34;
                i3 >>= (int)Test.instanceCount;
                fFld -= s1;
                lArr[i2 + 1] = s1;
                for (i18 = 2; 1 < i18; i18 -= 2) {
                    Test.instanceCount += (i18 * i18);
                    l2 &= i18;
                    l2 += l2;
                    i1 %= (int)1.989F;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d i16 = " + i3 + "," + Double.doubleToLongBits(d) + "," + i16);
        FuzzerUtils.out.println("i17 s1 i18 = " + i17 + "," + s1 + "," + i18);
        FuzzerUtils.out.println("i19 lArr = " + i19 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.bFld iFld1 byArrFld = " + (Test.bFld ? 1 : 0) + "," + iFld1 + "," +
            FuzzerUtils.checkSum(byArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
