// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static float fFld=2.442F;
    public static double dFld=-84.94467;
    public static byte byFld=-74;
    public static short sFld=-26265;
    public static int iArrFld[]=new int[N];
    public static volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 40932);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4) {

        int i5=9, i6=5731, i7=208, i8=-57927, i9=5, i10=65252;

        for (i5 = 9; 323 > i5; i5++) {
            Test.instanceCount -= (long)Test.fFld;
            i4 += (((i5 * i4) + i3) - Test.instanceCount);
            i6 -= (int)Test.fFld;
            i6 *= i4;
            for (i7 = 1; i7 < 5; i7++) {
                Test.dFld = i7;
                for (i9 = 1; i9 < 2; i9 += 2) {
                    int i11=127;
                    Test.iArrFld[i9 + 1] = 23918;
                    i10 = (int)Test.fFld;
                    Test.byFld = (byte)i3;
                    i4 += i11;
                    i10 /= (int)8538328046105590475L;
                    Test.instanceCount *= i4;
                    Test.iArrFld[i7 - 1] = i4;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i2) {

        int i12=14, i13=8, i14=-7, i15=5;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2056862841L);

        Test.fFld += iMeth(i2, i2);
        for (i12 = 6; 330 > i12; ++i12) {
            i2 = -72;
            Test.instanceCount <<= i2;
            Test.iArrFld[i12] = i12;
            Test.instanceCount += (((i12 * Test.instanceCount) + i2) - i13);
        }
        for (long l1 : lArr) {
            Test.iArrFld[(15755 >>> 1) % N] ^= (int)l1;
            Test.instanceCount *= i13;
            if (true) {
                for (i14 = 1; i14 < 4; i14++) {
                    Test.bArrFld = Test.bArrFld;
                    Test.iArrFld[i14 + 1] = (int)Test.instanceCount;
                    Test.fFld -= i2;
                    l1 = i13;
                }
            }
        }
        vMeth_check_sum += i2 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
    }

    public long lMeth(short s, long l, int i1) {

        int i16=-186, i17=14335, i18=-63136;

        vMeth(59);
        i16 = 345;
        while (--i16 > 0) {
            i1 = i16;
        }
        i1 ^= (int)l;
        l = Test.instanceCount;
        for (i17 = 9; i17 < 279; i17++) {
            Test.byFld ^= (byte)i1;
            i18 += i17;
            Test.instanceCount = i18;
        }
        long meth_res = s + l + i1 + i16 + i17 + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=0.81614;
        int i=167, i19=-48807, i20=2, i21=-179, i22=-62752, i23=7, i24=-9, i25=12, i26=-88, i27=-33720, i28=-57971;
        float f=-2.313F;

        for (d = 4; 126 > d; d++) {
            i = (int)((lMeth(Test.sFld, -9034304227871092848L, i) * i) - i);
            i *= (int)d;
        }
        Test.byFld = (byte)i;
        i -= (int)d;
        Test.instanceCount = (long)Test.fFld;
        for (i19 = 3; i19 < 259; i19++) {
            i -= (int)1.266F;
            for (i21 = 5; 98 > i21; ++i21) {
                i22 += i21;
            }
            Test.sFld += (short)(i19 + i22);
            i = (int)1.58484;
            i23 += i19;
            for (i24 = 3; i24 < 98; i24++) {
                for (i26 = 1; i26 < 2; ++i26) {
                    Test.instanceCount -= i;
                    Test.instanceCount -= i24;
                    Test.instanceCount += (long)(0.80F + (i26 * i26));
                    Test.instanceCount += Test.instanceCount;
                }
                i25 += (i24 * i24);
                Test.fFld += Test.instanceCount;
                Test.dFld -= i;
                i20 = (int)-1577935788505067403L;
                Test.iArrFld[(157 >>> 1) % N] = i27;
                for (f = 1; 2 > f; ++f) {
                    i23 = (int)Test.instanceCount;
                    Test.instanceCount += (long)f;
                    Test.fFld += i;
                    i28 = 26;
                    Test.iArrFld[(int)(f)] = -124;
                }
            }
        }

        FuzzerUtils.out.println("d i i19 = " + Double.doubleToLongBits(d) + "," + i + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 f = " + i26 + "," + i27 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i28 = " + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.sFld Test.iArrFld = " + Test.byFld + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
