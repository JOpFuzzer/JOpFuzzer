// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:01 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5776817701998314419L;
    public static double dFld=0.59867;
    public static float fFld=3.364F;
    public static short sFld=2178;
    public static volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2867407136995375201L);
        FuzzerUtils.init(Test.iArrFld, 42485);
        FuzzerUtils.init(Test.dArrFld, -2.6526);
        FuzzerUtils.init(Test.byArrFld, (byte)109);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9) {

        float f=-1.797F;
        int i10=-153, i11=37021;

        switch (((i9 >>> 1) % 4) + 27) {
        case 27:
            Test.dFld *= 3237;
            i9 = (int)Test.fFld;
            Test.instanceCount += (long)Test.fFld;
            break;
        case 28:
            Test.iArrFld[(i9 >>> 1) % N] >>>= i9;
            for (f = 262; f > 5; --f) {
                Test.instanceCount += (long)f;
                i11 = 1;
                do {
                    Test.sFld <<= (short)Test.instanceCount;
                    Test.bFld = Test.bFld;
                    Test.iArrFld[(int)(f - 1)] >>= i9;
                    i9 %= (int)(Test.instanceCount | 1);
                    Test.iArrFld[i11] = (int)Test.instanceCount;
                    Test.dArrFld[(int)(f)] -= i10;
                    Test.fFld += Test.instanceCount;
                } while (++i11 < 6);
            }
            break;
        case 29:
        case 30:
            i10 ^= i11;
        }
        vMeth1_check_sum += i9 + Float.floatToIntBits(f) + i10 + i11;
    }

    public static int iMeth(int i7) {

        int i8=4, i12=-9, i13=-154, i14=35778, i15=2;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.964F);

        i8 = 242;
        while ((i8 -= 2) > 0) {
            vMeth1(i7);
            for (i12 = 1; 13 > i12; i12++) {
                i7 += (((i12 * i8) + Test.fFld) - Test.instanceCount);
                i13 += (int)22076L;
                Test.fFld -= i13;
                for (i14 = 1; i14 < 2; ++i14) {
                    if (Test.bFld) break;
                    fArr[i8 + 1][i14 + 1] = i15;
                    Test.sFld = (short)i7;
                    Test.sFld = (short)Test.instanceCount;
                    Test.instanceCount = 50194;
                    i13 = i15;
                    Test.instanceCount += i14;
                }
                Test.instanceCount += i12;
            }
        }
        long meth_res = i7 + i8 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=59580, i3=-36353, i4=-6, i5=11, i6=6, i16=31519, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 154);

        for (i2 = 332; i2 > 16; i2 -= 2) {
            for (i4 = 1; i4 < 10; i4++) {
                i6 = 2;
                do {
                    i3 += (i1++);
                    Test.dFld = i6;
                    i5 ^= (int)((Math.sqrt(0.41371) - (iArr[i4]--)) + ((-(Test.instanceCount - i3)) + i4));
                    i1 = (int)(-((--Test.instanceCount) * (i1 * i2)));
                    i5 *= (i1--);
                } while ((i6 -= 3) > 0);
                Test.fFld -= 12094;
                i = (int)(++Test.lArrFld[i4]);
                i = (int)((i3 - Test.fFld) - (i = i5));
                Test.instanceCount = 0;
                i3 = (int)(-(iMeth(i16) + Test.fFld));
            }
            Test.instanceCount |= i16;
            i16 += (i2 * Test.instanceCount);
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i6 + i16 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-237, i18=-13, i19=15778, i20=3, i21=-188, i22=-10, i23=-7, i24=34;
        long l=6242L;
        byte by=5;

        vMeth(3, i17);
        i17 += (int)Test.instanceCount;
        i17 += i17;
        for (i18 = 338; i18 > 19; i18--) {
            Test.dFld -= 28;
            i19 += i19;
            for (i20 = 4; i20 < 79; ++i20) {
                i21 += (i20 + i18);
                for (l = 1; l < 2; l++) {
                    if (Test.bFld) {
                        Test.instanceCount <<= i19;
                    } else {
                        i21 -= i19;
                        Test.byArrFld[i20 + 1] += (byte)i21;
                    }
                    i22 += i21;
                    Test.instanceCount = Test.instanceCount;
                    i19 += (int)(l * l);
                }
                switch (((1 >>> 1) % 1) + 74) {
                case 74:
                    switch (((i20 >>> 1) % 2) + 127) {
                    case 127:
                        i22 += (((i20 * i18) + i19) - i22);
                        Test.iArrFld[i20 + 1] -= (int)3619799832L;
                        Test.iArrFld[i20 - 1] -= (int)96.94459;
                        Test.instanceCount *= i21;
                        break;
                    case 128:
                        i22 = i22;
                        break;
                    }
                    i21 += (int)(112.947F + (i20 * i20));
                    break;
                default:
                    i17 += (((i20 * i18) + i17) - Test.fFld);
                    for (i23 = 1; i23 < 2; ++i23) {
                        i19 += 1;
                        Test.instanceCount = i22;
                        Test.fFld *= i19;
                        by = by;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 l = " + i20 + "," + i21 + "," + l);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("by = " + by);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld Test.bFld Test.lArrFld = " + Test.sFld + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld Test.byArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
