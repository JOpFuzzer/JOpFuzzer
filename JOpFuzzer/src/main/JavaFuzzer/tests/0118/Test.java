// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-133L;
    public static short sFld=-20729;
    public static float fFld=2.310F;
    public static boolean bFld=false;
    public volatile int iFld=-243;
    public int iFld1=3708;
    public float fFld1=14.747F;
    public byte byFld=-58;
    public int iFld2=-64973;
    public static volatile long lArrFld[]=new long[N];
    public volatile int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -9L);
        FuzzerUtils.init(Test.byArrFld, (byte)22);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(double d) {

        int i8=-12604, i9=58997, i10=-11, i11=-93, i12=-6, i13=198, iArr2[]=new int[N];
        float f2=2.417F;
        byte by=122;

        FuzzerUtils.init(iArr2, 56);

        for (i8 = 2; i8 < 365; i8++) {
            for (i10 = 1; i10 < 5; i10++) {
                i9 <<= Test.sFld;
                for (i12 = 1; 2 > i12; ++i12) {
                    switch ((i8 % 8) + 50) {
                    case 50:
                        i9 >>>= i8;
                        break;
                    case 51:
                        i13 *= i10;
                        Test.instanceCount += (10598 + (i12 * i12));
                        iArr2[i12] += i13;
                        i11 >>= -5;
                        break;
                    case 52:
                        Test.instanceCount = i13;
                    case 53:
                        i13 <<= i13;
                        f2 = -57581;
                        break;
                    case 54:
                        by = (byte)i8;
                        Test.lArrFld[i8 + 1] -= 12;
                        break;
                    case 55:
                        f2 = Test.sFld;
                        break;
                    case 56:
                        d += Test.instanceCount;
                        break;
                    case 57:
                    default:
                        i9 += (((i12 * Test.instanceCount) + i12) - i13);
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) + by +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i7=7, i14=215, iArr1[]=new int[N];
        double d1=1.125778;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(sArr, (short)-4192);

        i7 *= (int)(iArr1[(i7 >>> 1) % N] = (int)((Test.instanceCount + i7) - 101L));
        i7 = (iMeth(d1) >> i7);
        Test.instanceCount = i7;
        if (true) {
            i7 += (int)1451934311L;
            Test.instanceCount -= i7;
            for (short s : sArr) {
                Test.lArrFld[(i7 >>> 1) % N] = 8;
                Test.instanceCount = 0;
                i7 = (int)Test.fFld;
                Test.lArrFld[(i7 >>> 1) % N] = i7;
                i14 = 1;
                do {
                    iArr1 = FuzzerUtils.int1array(N, (int)-14);
                    i7 += i14;
                } while (++i14 < 4);
                i7 += 7;
            }
        } else if (Test.bFld) {
            i7 = (int)d1;
        }
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i5=-57291, i6=-75, i15=-6, i16=-55335, i17=63, i18=-2, i19=8, iArr[]=new int[N];
        float f1=42.805F;
        double d2=1.16919;

        FuzzerUtils.init(iArr, 1);

        for (i5 = 7; i5 < 179; i5++) {
            f1 %= ((-iArr[i5]) | 1);
            vMeth1();
            d2 += -24588;
            Test.fFld += (((i5 * i5) + i2) - i3);
            for (i15 = 1; i15 < 9; ++i15) {
                i17 = 2;
                do {
                    Test.instanceCount = i16;
                    d2 /= (i16 | 1);
                    i6 >>= i18;
                    switch (((-61283 >>> 1) % 6) + 6) {
                    case 6:
                        Test.instanceCount += i5;
                        Test.instanceCount += (((i17 * Test.fFld) + i3) - i19);
                        i3 = i2;
                        break;
                    case 7:
                        Test.fFld = i19;
                    case 8:
                        Test.lArrFld[i17] -= i2;
                        break;
                    case 9:
                        i3 += (i17 | i18);
                        break;
                    case 10:
                        i19 <<= (int)2L;
                        break;
                    case 11:
                        Test.instanceCount = i19;
                        break;
                    default:
                        Test.lArrFld[i5] = i19;
                    }
                } while (--i17 > 0);
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i15 + i16
            + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-199, i1=251, i20=-6, i21=-30150, i22=-30564, i23=-9648, i24=144, i25=33392, i26=58, i27=229;
        float f=2.171F, fArr[]=new float[N];
        double d3=101.55334, dArr[]=new double[N];
        long l=193L;
        short sArr1[][]=new short[N][N];

        FuzzerUtils.init(fArr, 58.832F);
        FuzzerUtils.init(sArr1, (short)-21961);
        FuzzerUtils.init(dArr, 52.61134);

        for (i = 21; i < 338; ++i) {
            i1 -= (int)(i1 + ((Test.instanceCount - i1) - (i1 * f)));
            vMeth(i1, i, 3);
            switch ((i % 5) + 48) {
            case 48:
                for (i20 = 3; i20 < 79; ++i20) {
                    d3 *= i;
                    i1 = (int)l;
                    fArr[i + 1] -= Test.sFld;
                    Test.fFld += i20;
                    i1 += i20;
                    for (i22 = 1; i22 < 2; ++i22) {
                        f -= l;
                        switch ((i20 * 5) + 95) {
                        case 351:
                            switch ((i20 % 9) + 124) {
                            case 124:
                                Test.instanceCount += (i22 + i22);
                                i23 -= (int)44.5F;
                                break;
                            case 125:
                                i21 *= i21;
                                Test.bFld = false;
                                i21 = (int)-116L;
                                i21 -= (int)d3;
                                break;
                            case 126:
                                Test.instanceCount = -4289636532L;
                                iArrFld = iArrFld;
                                break;
                            case 127:
                                i1 &= (int)Test.instanceCount;
                                break;
                            case 128:
                                switch (((i20 % 7) * 5) + 90) {
                                case 91:
                                case 110:
                                    i1 >>= i21;
                                    break;
                                case 101:
                                    iArrFld[i22] = i20;
                                case 117:
                                    l -= Test.sFld;
                                    Test.lArrFld[i20] >>= 94;
                                    f += (((i22 * i22) + f) - Test.fFld);
                                    i23 += i;
                                    break;
                                case 103:
                                    i21 += (i22 * i22);
                                    break;
                                case 94:
                                    i23 += i22;
                                    break;
                                case 92:
                                    i1 = (int)l;
                                    break;
                                default:
                                    i24 -= i;
                                }
                                break;
                            case 129:
                                f += i24;
                                break;
                            case 130:
                                i1 = iFld;
                                break;
                            case 131:
                                Test.instanceCount *= i22;
                                break;
                            case 132:
                                i1 -= (int)d3;
                                break;
                            default:
                                i23 = iFld1;
                            }
                        case 124:
                            Test.fFld = i1;
                            break;
                        case 316:
                            iFld = i21;
                        case 386:
                            i24 -= (int)fFld1;
                            break;
                        case 255:
                            i23 += (i22 | i1);
                        case 383:
                            try {
                                iFld1 = (-147 % i22);
                                iArrFld[i22 - 1] = (i1 / -177);
                                iArrFld[i22 + 1] = (i25 % 184);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 189:
                            Test.sFld = (short)1.370F;
                            break;
                        case 153:
                            if (Test.bFld) continue;
                            break;
                        case 106:
                            iFld = (int)Test.instanceCount;
                            break;
                        case 380:
                            i23 = i20;
                        case 174:
                            sArr1 = sArr1;
                            break;
                        case 188:
                            l -= (long)Test.fFld;
                            break;
                        case 142:
                            iFld = i23;
                            break;
                        case 197:
                        case 226:
                            i25 = (int)3095505561L;
                            break;
                        case 415:
                            Test.bFld = true;
                            break;
                        case 323:
                            Test.sFld += (short)(i22 * i);
                            break;
                        case 145:
                            Test.byArrFld[i22] += (byte)i24;
                            break;
                        case 221:
                            iArrFld[i22 - 1] = byFld;
                            break;
                        case 404:
                            i21 |= i21;
                            break;
                        case 220:
                        case 185:
                            i26 -= i25;
                            break;
                        case 378:
                            i21 ^= i25;
                        case 366:
                            iFld *= (int)l;
                            break;
                        case 369:
                            iFld *= i22;
                            break;
                        case 212:
                            i27 += (i22 ^ i24);
                            break;
                        case 397:
                        case 362:
                            l += (i22 * i22);
                            break;
                        case 307:
                            byFld *= (byte)d3;
                        case 178:
                            i25 += (int)f;
                            break;
                        case 183:
                            iFld1 -= (int)1.709F;
                            break;
                        case 352:
                            l = iFld;
                        case 169:
                        case 120:
                            fFld1 += -13;
                            break;
                        case 231:
                            l = i26;
                            break;
                        case 439:
                            Test.bFld = Test.bFld;
                        case 419:
                            i23 = (int)Test.instanceCount;
                            break;
                        case 263:
                            f *= i22;
                            break;
                        case 320:
                            i27 += i21;
                            break;
                        case 128:
                        case 110:
                            f -= Test.sFld;
                        case 295:
                            Test.fFld -= i22;
                        case 326:
                            i23 += i22;
                        case 347:
                            i26 = i;
                        case 379:
                            iArrFld = iArrFld;
                            break;
                        case 422:
                            iArrFld[i22] <<= -19023;
                            break;
                        case 164:
                            fFld1 -= Test.fFld;
                            break;
                        case 389:
                            dArr[i + 1] *= iFld2;
                            break;
                        case 283:
                            iFld1 += (((i22 * i21) + iFld1) - i1);
                            break;
                        case 180:
                            iFld1 += i26;
                        case 345:
                            Test.instanceCount = l;
                            break;
                        case 237:
                        case 246:
                            i23 = i20;
                        case 107:
                            l = -49933L;
                        case 313:
                            Test.instanceCount &= -74;
                            break;
                        case 382:
                            iArrFld = iArrFld;
                        case 284:
                            d3 += i26;
                            break;
                        case 154:
                            i25 -= (int)Test.instanceCount;
                        case 195:
                            l += i26;
                            break;
                        case 399:
                            f *= Test.instanceCount;
                        case 393:
                            i25 *= Test.sFld;
                            break;
                        case 163:
                            i25 = (int)l;
                            break;
                        case 156:
                            fArr[i20 - 1] = i25;
                            break;
                        case 225:
                            Test.lArrFld[i22] &= i22;
                            break;
                        case 285:
                            dArr[i22 + 1] += fFld1;
                            break;
                        case 157:
                            iFld1 += (i22 ^ l);
                            break;
                        case 420:
                            Test.lArrFld[i + 1] = iFld;
                            break;
                        case 299:
                            l *= l;
                            break;
                        case 179:
                            i24 = (int)Test.instanceCount;
                        case 159:
                            iFld2 = i26;
                        }
                    }
                }
                break;
            case 49:
                Test.sFld = (short)iFld1;
                break;
            case 50:
                byFld >>= (byte)i27;
                break;
            case 51:
                if (Test.bFld) continue;
                break;
            case 52:
                fFld1 += (i + i24);
                break;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i20 i21 d3 = " + i20 + "," + i21 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("l i22 i23 = " + l + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 fArr sArr1 = " + i27 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(sArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld iFld iFld1 = " + (Test.bFld ? 1 : 0) + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("fFld1 byFld iFld2 = " + Float.floatToIntBits(fFld1) + "," + byFld + "," + iFld2);
        FuzzerUtils.out.println("Test.lArrFld iArrFld Test.byArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
