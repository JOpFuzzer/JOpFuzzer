// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public short sFld=18964;
    public static byte byFld=-3;
    public static float fFld=101.972F;
    public static int iFld=24363;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i3, int i4, long l1) {

        double d=-101.61425, d1=11.88687;
        int i5=-233, i6=36887, i7=5, i8=1975;
        short s1=5603;

        for (d = 1; d < 212; d++) {
            i5 >>= -55385;
            i6 = 1;
            do {
                i4 *= i5;
                i3 >>= (int)l1;
                d1 *= Test.instanceCount;
                i5 += (i6 * i6);
            } while (++i6 < 8);
            l1 = i5;
            for (i7 = (int)(d); i7 < 8; i7++) {
                s1 *= (short)i3;
                l1 -= i6;
                Test.byFld += (byte)(i7 * i7);
                Test.instanceCount += (long)Test.fFld;
                Test.fFld += i7;
                Test.byFld += (byte)i7;
            }
        }
        long meth_res = i3 + i4 + l1 + Double.doubleToLongBits(d) + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 +
            s1;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth1(int i1, int i2) {

        short s=5878;
        int i9=141, i10=-82, i11=48, i12=251;
        double d2=-102.61911, d3=1.47123, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 70.52296);

        i1 -= ((++i1) * ((s * i2) + sMeth(i1, 53727, Test.instanceCount)));
        for (i9 = 8; i9 < 134; ++i9) {
            d2 = -5309;
            d3 = 12;
            while (--d3 > 0) {
                i1 *= (int)d2;
                i10 = s;
                Test.iFld -= (int)-116.880F;
                for (i11 = 1; i11 > 1; --i11) {
                    i2 = 102;
                    dArr = dArr;
                    Test.instanceCount = 0;
                    i1 += (i11 * i11);
                    d2 *= i11;
                    i1 -= (int)Test.instanceCount;
                    Test.instanceCount <<= s;
                }
            }
        }
        long meth_res = i1 + i2 + s + i9 + i10 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(d3) + i11 + i12
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        float f=1.61F;
        int i13=-20428, i14=0, i15=-2, i16=9361, i17=34306, i18=4, iArr1[]=new int[N];
        double d4=2.109448;

        FuzzerUtils.init(iArr1, -165);

        iArr1[(-101 >>> 1) % N] *= (int)((f + iMeth1(Test.iFld, Test.iFld)) - l);
        for (i13 = 7; 184 > i13; i13++) {
            for (i15 = 1; i15 < 9; i15++) {
                Test.iFld <<= i15;
                f = 39406;
                iArr1[i13 + 1] >>>= i15;
                i16 -= i16;
                Test.iFld += i15;
            }
            Test.fFld *= i16;
            iArr1[i13] = 47053;
            i14 *= i16;
            for (i17 = 1; i17 < 9; i17++) {
                l += (-32 + (i17 * i17));
                Test.instanceCount = i15;
                d4 = Test.fFld;
            }
        }
        long meth_res = l + Float.floatToIntBits(f) + i13 + i14 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d4) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-22;
        int i=-4, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -31713);

        by <<= (byte)iArr[(i >>> 1) % N];
        sFld <<= (short)38901;
        i <<= iMeth(Test.instanceCount);

        FuzzerUtils.out.println("by i iArr = " + by + "," + i + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount sFld Test.byFld = " + Test.instanceCount + "," + sFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.iFld = " + Float.floatToIntBits(Test.fFld) + "," + Test.iFld);

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
