// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:48 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=130L;
    public double dFld=-1.118612;
    public static float fFld=-56.173F;
    public boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i6=11;

        i6 += i6;
        vMeth1_check_sum += l + i6;
    }

    public static float fMeth(int i4) {

        int i5=-30224, i7=250, i8=-11, i9=12, iArr2[]=new int[N];
        byte by1=120;

        FuzzerUtils.init(iArr2, 115);

        i5 = 1;
        while (++i5 < 124) {
            i4 += (((i5 * i5) + i4) - i5);
            vMeth1(Test.instanceCount);
            iArr2[i5] <<= i4;
            for (i7 = 1; 13 > i7; i7++) {
                Test.instanceCount += i8;
                i8 <<= (int)Test.instanceCount;
            }
            i8 = i7;
            i9 = 1;
            while (++i9 < 13) {
                i8 += (i9 - by1);
            }
            iArr2[i5 - 1] -= i8;
            i8 -= i5;
            i8 <<= (int)Test.instanceCount;
            i4 <<= (int)Test.instanceCount;
        }
        i4 >>= -13;
        long meth_res = i4 + i5 + i7 + i8 + i9 + by1 + FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        float f=-24.525F;
        int i10=-215, i11=25858, iArr1[]=new int[N];
        double d1=-15.10085;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -13);
        FuzzerUtils.init(sArr, (short)2376);

        for (int i3 : iArr1) {
            i1 = (~(59547 - (i3 += -56)));
            i3 = Integer.reverseBytes(i2);
            f *= fMeth(i3);
            for (i10 = 1; i10 < 4; ++i10) {
                i3 = (int)Test.instanceCount;
                iArr1 = iArr1;
                i2 >>= (int)Test.instanceCount;
            }
            if (true) break;
            Test.instanceCount -= 0;
            sArr[(i2 >>> 1) % N] -= (short)i3;
            i1 >>= (int)Test.instanceCount;
        }
        Test.instanceCount = Test.instanceCount;
        Test.instanceCount = -185;
        i2 = (int)d1;
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + i10 + i11 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        double d=0.15070, dArr[]=new double[N];
        int i=57025, i12=-151, i13=17, i14=-32151, i15=-107, i16=2, i17=-12, i18=4, iArr[]=new int[N];
        short s=-22211;
        byte by=33;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.539F);
        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(dArr, 4.77483);
        FuzzerUtils.init(lArr, -1L);

        for (d = 6; 381 > d; d++) {
            dFld -= Test.instanceCount;
            i += (int)(d * d);
            i = (int)fArr[(int)(d)];
            if (s != ((i * (-by)) - (Test.instanceCount--))) continue;
            iArr[(int)(d - 1)] -= (int)((-i) + dArr[(int)(d - 1)]);
            dFld = (iArr[(int)(d)]--);
            Test.fFld -= (--i);
            vMeth(i, i);
        }
        i12 = 289;
        do {
            i += (i12 | i12);
            Test.instanceCount &= i;
            i *= (int)Test.fFld;
            for (i13 = 5; i13 < 87; ++i13) {
                dFld += i13;
                s *= (short)i15;
                if (bFld) {
                    i15 -= (int)Test.instanceCount;
                    i16 += (i13 ^ i);
                    i15 -= i;
                    i14 *= i12;
                } else if (bFld) {
                    for (i17 = i12; i17 < 2; ++i17) {
                        by = (byte)i14;
                        Test.instanceCount -= -13;
                        lArr[i17 + 1] = Test.instanceCount;
                        bFld = bFld;
                        i18 = (int)dFld;
                        s += by;
                        i18 -= i12;
                        Test.instanceCount += i17;
                    }
                } else if (bFld) {
                    i15 >>= i15;
                } else {
                    i = i18;
                }
            }
        } while (--i12 > 0);

        FuzzerUtils.out.println("d i s = " + Double.doubleToLongBits(d) + "," + i + "," + s);
        FuzzerUtils.out.println("by i12 i13 = " + by + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 fArr = " + i17 + "," + i18 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr dArr lArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("bFld = " + (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
