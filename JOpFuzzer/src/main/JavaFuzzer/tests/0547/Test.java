// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:53 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=116L;
    public int iFld=22577;
    public static float fFld=-54.5F;
    public static byte byFld=9;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6780);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8) {

        double d=-80.91663;
        int i9=30440, i10=7137, i11=-31888, i12=-10, i13=108, i14=5, i15=-210, iArr1[]=new int[N];
        byte by=73;
        boolean b=true;
        short s=23128;

        FuzzerUtils.init(iArr1, -52);

        d = i8;
        i9 = 1;
        while (++i9 < 172) {
            for (i10 = 1; i10 < 9; i10++) {
                i8 += (i10 | i8);
                Test.fFld = i11;
            }
            i8 -= by;
            for (i12 = i9; 9 > i12; i12++) {
                if (b) break;
                i11 >>= i11;
                for (i14 = 1; 1 > i14; ++i14) {
                    try {
                        iArr1[i9 + 1] = (17029 / i13);
                        i11 = (-231 / i14);
                        i15 = (-8802 / i14);
                    } catch (ArithmeticException a_e) {}
                    iArr1[i9 + 1] = (int)-241L;
                    Test.instanceCount = s;
                    i15 <<= i15;
                    iArr1[i12 - 1] >>>= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + by + i12 + i13 + (b ? 1 : 0) + i14 + i15
            + s + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i4=-57976, i5=-30859, i6=-3287, i7=14, i16=7628, i17=-110, i18=7438, i19=205;
        double d1=0.116782;
        float f1=2.602F;

        for (i4 = 312; i4 > 9; i4 -= 3) {
            for (i6 = 15; i6 > i4; --i6) {
                vMeth1(i5);
                i7 >>= -55;
                i5 = (int)d1;
                i7 *= (int)f1;
                for (i16 = 1; i16 < 1; ++i16) {
                    Test.fFld = 169;
                }
                Test.fFld -= Test.byFld;
                for (i18 = 1; i18 < 1; i18++) {
                    if (i6 != 0) {
                        vMeth_check_sum += i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) +
                            i16 + i17 + i18 + i19;
                        return;
                    }
                }
            }
            Test.iArrFld[i4] = (int)-4796127908876528806L;
        }
        i17 -= i4;
        Test.instanceCount += Test.instanceCount;
        i5 = (int)1.78884;
        vMeth_check_sum += i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i16 + i17 + i18
            + i19;
    }

    public static int iMeth() {

        int i=-14, i1=-120, i2=10, i3=-6335, i21=-14, iArr[]=new int[N];
        float f=-1.634F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -7413);
        FuzzerUtils.init(lArr, 5958271492281587322L);

        for (i = 8; i < 270; ++i) {
            i1 += (i ^ i1);
            iArr[i - 1] += (int)(f = (i1 * 0.953F));
            for (i2 = 1; i2 < 6; i2++) {
                vMeth();
                i3 += (((i2 * i) + i) - i1);
                try {
                    i3 = (i1 / 195);
                    i3 = (i % Test.iArrFld[i]);
                    i3 = (i1 % -241);
                } catch (ArithmeticException a_e) {}
                i1 += (i2 * i2);
                Test.instanceCount &= i2;
                i1 += i2;
            }
        }
        i21 = 321;
        while (--i21 > 0) {
            if (i2 != 0) {
            }
            if (i1 != 0) {
            }
        }
        Test.instanceCount *= Test.instanceCount;
        lArr[(-2 >>> 1) % N] = i2;
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + i3 + i21 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i22=-5;

        iFld = (int)Test.instanceCount;
        iMeth();
        i22 += i22;

        FuzzerUtils.out.println("i22 = " + i22);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.iArrFld = " + Test.byFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
