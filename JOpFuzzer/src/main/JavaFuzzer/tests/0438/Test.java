// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:51 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-137L;
    public double dFld=1.78834;
    public static int iFld=49;
    public static int iFld1=0;
    public static volatile float fFld=1.984F;
    public static boolean bFld=false;
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2448696892L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(float f1) {

        double d1=-2.35829;
        int i10=22, i11=9, i12=-6, i13=-13, i14=9, i15=-137, i16=-11996, iArr1[]=new int[N];
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-12161);
        FuzzerUtils.init(iArr1, 7447);

        if (b) {
            sArr[(Test.iFld >>> 1) % N] -= (short)Test.iFld;
            d1 /= (Test.instanceCount | 1);
            Test.iFld -= i10;
            for (i11 = 1; i11 < 377; ++i11) {
                Test.iFld += i10;
                i10 -= i10;
                for (i13 = 1; i13 < 4; i13++) {
                    if (b) continue;
                    for (i15 = 1; 2 > i15; ++i15) {
                        i14 += -79;
                        i14 <<= Test.iFld;
                        iArr1[i13 - 1] = (int)Test.instanceCount;
                        i16 = i13;
                        Test.instanceCount <<= 1463916527L;
                    }
                }
            }
        } else {
            Test.lArrFld[(i13 >>> 1) % N][(i11 >>> 1) % N] &= -22723;
        }
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + (b ? 1 :
            0) + i15 + i16 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i3, float f) {

        int i4=150, i5=10, i6=197, i7=10, i8=9, i9=-60061, iArr2[][]=new int[N][N];
        byte by=-43;
        double d=-123.188;
        boolean b1=false;

        FuzzerUtils.init(iArr2, 12);

        i3 ^= (++i3);
        for (i4 = 6; i4 < 206; i4++) {
            Test.instanceCount = (-(++Test.instanceCount));
            for (i6 = 1; i6 < 8; ++i6) {
                Test.instanceCount += (((i6 * i5) + i3) - f);
                for (i8 = 2; i8 > 1; i8 -= 2) {
                    i5 = (int)((by >>= (byte)(i8 * d)) + fMeth(f));
                    i9 += (i8 | i8);
                    iArr2[i6 + 1][i8] *= (int)d;
                    Test.instanceCount <<= Test.instanceCount;
                    b1 = false;
                    if (b1) {
                        f += -122;
                        if (i5 != 0) {
                            vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9 + by +
                                Double.doubleToLongBits(d) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9 + by +
                            Double.doubleToLongBits(d) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    i3 += (i8 - by);
                }
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9 + by +
            Double.doubleToLongBits(d) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i2, long l, long l1) {

        double d2=-2.59961, d3=-26.92370;
        float f2=2.161F;
        int i17=0, i18=-137, iArr3[][]=new int[N][N];
        short s=2394;
        boolean b2=false;

        FuzzerUtils.init(iArr3, 6);

        vMeth1(i2, 0.865F);
        d2 -= f2;
        for (i17 = 14; i17 < 269; i17++) {
            i2 -= (int)412789215065671117L;
            d2 -= l;
            switch ((((Test.iFld >>> 1) % 3) * 5) + 57) {
            case 63:
                if (b2) {
                    l >>>= i17;
                    s *= (short)l;
                    i18 *= Test.iFld;
                } else {
                    d3 = 1;
                    while (++d3 < 6) {
                        iArr3[i17 + 1][i17 - 1] -= (int)l1;
                    }
                    i2 *= 8;
                    l1 += i17;
                    f2 -= i17;
                    vMeth_check_sum += i2 + l + l1 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i17 + i18
                        + s + (b2 ? 1 : 0) + Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr3);
                    return;
                }
                break;
            case 67:
                i2 *= Test.iFld;
                break;
            case 59:
                i18 -= (int)f2;
                break;
            default:
                l1 += l;
            }
        }
        vMeth_check_sum += i2 + l + l1 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i17 + i18 + s + (b2 ?
            1 : 0) + Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i1=4, i19=-13, i20=-2, i21=-10, i22=-25490, i23=-59919, i24=-122, i25=0, iArr[]=new int[N];
        float f3=0.850F, f4=1.949F;
        byte by1=57;

        FuzzerUtils.init(iArr, 12201);

        for (i = 13; i < 323; i++) {
            iArr[i + 1] <<= (int)(--Test.lArrFld[i + 1][i + 1]);
            dFld = (Test.instanceCount--);
            vMeth(Test.iFld1, Test.instanceCount, Test.instanceCount);
            try {
                Test.iFld1 = (-249 % Test.iFld1);
                Test.iFld = (13408 % i1);
                i1 = (-1439087220 % i);
            } catch (ArithmeticException a_e) {}
            iArr[i - 1] >>= Test.iFld;
            for (i19 = 2; 81 > i19; ++i19) {
                Test.iFld1 *= i20;
            }
            Test.iFld >>= 100;
            if (Test.bFld) {
                f3 -= Test.iFld1;
                Test.iFld = i19;
            } else if (Test.bFld) {
                f4 = 1;
                do {
                    short s1=-9551;
                    if (Test.bFld) {
                        Test.iFld += (int)(((f4 * i19) + Test.fFld) - Test.instanceCount);
                        i1 += (int)(((f4 * Test.instanceCount) + Test.iFld) - i20);
                        Test.instanceCount >>= i;
                    } else {
                        s1 ^= (short)i1;
                    }
                } while (++f4 < 81);
                for (i21 = 81; 2 < i21; --i21) {
                    for (i23 = 2; 1 < i23; i23--) {
                        i20 -= Test.iFld1;
                        i24 -= (int)Test.instanceCount;
                        iArr[i] = 69;
                        iArr[i] -= i23;
                        i24 += Test.iFld1;
                        Test.instanceCount -= i21;
                        i25 <<= -5;
                    }
                    dFld = i20;
                    Test.instanceCount += (i21 + Test.instanceCount);
                }
                Test.iFld1 = i25;
            } else {
                Test.instanceCount = by1;
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 f3 f4 = " + i20 + "," + Float.floatToIntBits(f3) + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 by1 = " + i24 + "," + i25 + "," + by1);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iFld1 Test.fFld Test.bFld = " + Test.iFld1 + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
