// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:03 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static volatile byte byFld=59;
    public boolean bFld=false;
    public volatile int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)10);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        float f=72.93F;
        int i9=-9, i10=22953, i11=-39351, i12=-3, i13=-31350, i14=-175, i15=7;
        short s=-30912;
        double d=-2.34143;

        f -= i7;
        f = i7;
        for (i9 = 4; i9 < 136; i9++) {
            i8 += (((i9 * Test.byFld) + i9) - s);
        }
        Test.instanceCount += i9;
        i7 -= i9;
        f += Test.instanceCount;
        for (i11 = 7; i11 < 217; i11++) {
            for (i13 = 8; 1 < i13; i13 -= 2) {
                i15 = 1;
                do {
                    Test.instanceCount <<= i8;
                    switch ((i13 % 1) + 13) {
                    case 13:
                        i10 -= (int)d;
                        i14 = i14;
                    default:
                        f += i14;
                    }
                } while (++i15 < 3);
            }
        }
        vMeth1_check_sum += i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + s + i11 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(d);
    }

    public static double dMeth(int i5) {

        int i6=-17578, i16=59, i17=-95, i18=-83, i19=-131, i20=1685, iArr[]=new int[N];
        boolean b=true;
        float f1=-1.879F;
        double d1=-1.49260;
        short s1=6037;

        FuzzerUtils.init(iArr, 0);

        i6 = 375;
        while (--i6 > 0) {
            try {
                i5 = (-169 % i5);
                iArr[i6 - 1] = (i6 % 239);
                i5 = (i6 % i6);
            } catch (ArithmeticException a_e) {}
            switch (((i6 % 2) * 5) + 98) {
            case 99:
                vMeth1(i6, -22);
                Test.instanceCount <<= i16;
                b = false;
                break;
            case 105:
            }
            i16 -= (int)f1;
            for (i17 = 1; i17 < 5; i17++) {
                d1 -= i6;
                for (i19 = 2; i19 > 1; --i19) {
                    Test.instanceCount = s1;
                    iArr[i6] = (int)Test.instanceCount;
                    Test.instanceCount -= (long)d1;
                    f1 += i19;
                    d1 -= i18;
                }
            }
        }
        long meth_res = i5 + i6 + i16 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i17 + i18 +
            Double.doubleToLongBits(d1) + i19 + i20 + s1 + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, long l1) {

        int i2=-114, i3=-5, i4=232, i21=235, i22=-160, i23=26187, i24=-178, iArr1[][]=new int[N][N];
        short s2=8306;
        double d2=108.21105;

        FuzzerUtils.init(iArr1, 41684);

        for (i2 = 5; 132 > i2; ++i2) {
            i4 = 1;
            do {
                i3 += (int)(dMeth(i4) + -1377485531848890935L);
                for (i21 = 1; i21 < 1; ++i21) {
                    i3 += (i21 + i4);
                    i22 ^= i4;
                    i22 -= (int)l1;
                    switch (((i21 >>> 1) % 1) + 16) {
                    case 16:
                        iArr1[i4 + 1][i21 + 1] ^= i21;
                        l = s2;
                        break;
                    }
                }
                d2 += i2;
                i3 = i4;
                for (i23 = 1; i23 < 1; ++i23) {
                    iArr1[i2 - 1][i23 + 1] -= i21;
                    i22 += (int)Test.instanceCount;
                }
            } while (++i4 < 12);
        }
        vMeth_check_sum += l + l1 + i2 + i3 + i4 + i21 + i22 + s2 + Double.doubleToLongBits(d2) + i23 + i24 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-208, i1=7973, i25=35366, i26=5, i27=213, i28=64898, i29=-24, i30=194;
        float f2=1.696F, fArr[]=new float[N];
        double d3=0.31332;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(fArr, 87.924F);
        FuzzerUtils.init(lArr, -1847555831L);
        FuzzerUtils.init(bArr, false);

        for (i = 225; 5 < i; --i) {
            vMeth(Test.instanceCount, Test.instanceCount);
            Test.instanceCount *= 55927;
        }
        for (i25 = 3; i25 < 263; ++i25) {
            Test.byFld *= (byte)i;
            if (bFld) continue;
            i26 >>= i1;
            for (i27 = i25; 97 > i27; i27++) {
                f2 += (((i27 * i1) + i26) - Test.instanceCount);
                Test.instanceCount -= (long)79.45845;
                for (i29 = 1; 1 > i29; ++i29) {
                    fArr = fArr;
                    Test.instanceCount = i26;
                    iArrFld[i27 - 1] &= i26;
                    Test.byArrFld[i25 - 1] = (byte)-218;
                    switch ((i27 % 4) + 87) {
                    case 87:
                        d3 += i29;
                        Test.instanceCount >>= i29;
                        lArr[i29 + 1] *= Test.byFld;
                        lArr[i29 + 1] = Test.instanceCount;
                        break;
                    case 88:
                        i30 <<= i30;
                    case 89:
                        i30 -= (int)f2;
                        Test.instanceCount += (long)-81.414F;
                        bArr[i27] = true;
                        i28 >>>= i28;
                        break;
                    case 90:
                        f2 += i27;
                        bArr[i29] = bFld;
                        i1 -= i;
                        break;
                    default:
                        iArrFld[(i1 >>> 1) % N] += i27;
                        f2 -= i29;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i25 = " + i + "," + i1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("f2 i29 i30 = " + Float.floatToIntBits(f2) + "," + i29 + "," + i30);
        FuzzerUtils.out.println("d3 fArr lArr = " + Double.doubleToLongBits(d3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld bFld = " + Test.instanceCount + "," + Test.byFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("iArrFld Test.byArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
