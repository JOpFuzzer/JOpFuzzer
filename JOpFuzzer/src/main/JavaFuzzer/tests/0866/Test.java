// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=50664L;
    public static short sFld=-8648;
    public static double dArrFld[]=new double[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -51.124352);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3) {

        int i4=-1, i5=-24833, i6=218, i7=13, i8=-42687, i9=11269, iArr[]=new int[N];
        float f=0.763F, fArr[]=new float[N];
        byte by=-99;
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, 0.154F);
        FuzzerUtils.init(iArr, -44246);
        FuzzerUtils.init(dArr, -87.109169);

        for (i4 = 11; i4 < 317; i4++) {
            for (i6 = 1; i6 < 5; i6++) {
                fArr[i6 + 1] = f;
                i5 = (int)-9L;
                i7 += (i6 + i4);
                Test.instanceCount >>= i4;
                iArr[i6 + 1] -= (int)185L;
                Test.sFld ^= (short)i6;
            }
            i7 += (i4 | i5);
            i3 = i4;
            for (i8 = 1; 5 > i8; i8++) {
                Test.instanceCount = i6;
                dArr[i8] += by;
                i7 += (i8 * i8);
            }
            by = (byte)i8;
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth() {

        int i2=9;

        i2 += (int)(((i2 - Test.instanceCount) + (i2 * i2)) - -5722);
        Test.instanceCount += (i2 * lMeth(i2));
        Test.dArrFld[(i2 >>> 1) % N] *= -1374711996L;
        long meth_res = i2;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth(int i1) {

        int i10=-189, i11=248, i12=-46441;
        double d=2.63333, d1=1.77308;
        byte by1=103;
        float f1=0.810F;

        Test.instanceCount >>= -156;
        i1 = (int)fMeth();
        i1 = i10;
        d = 1;
        while ((d += 3) < 253) {
            if (true) {
                by1 *= by1;
                i1 += (int)d;
            }
            f1 = i10;
            i1 <<= i1;
            Test.instanceCount >>= Test.instanceCount;
        }
        for (i11 = 11; i11 < 193; i11++) {
            d1 -= 6046769245217335011L;
            if (i1 != 0) {
                vMeth_check_sum += i1 + i10 + Double.doubleToLongBits(d) + by1 + Float.floatToIntBits(f1) + i11 + i12 +
                    Double.doubleToLongBits(d1);
                return;
            }
            i12 *= i10;
            i12 += (int)Test.instanceCount;
        }
        vMeth_check_sum += i1 + i10 + Double.doubleToLongBits(d) + by1 + Float.floatToIntBits(f1) + i11 + i12 +
            Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i=7970, i13=-14, i14=41454, i15=2, i16=-36230, i17=-124, iArr1[]=new int[N];
        boolean b=false;
        float f2=-1.857F, f3=92.56F;
        byte by2=-116;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(lArr, 41500L);

        i = (int)(Test.instanceCount = (i - (i * i)));
        vMeth(i);
        b = b;
        fArrFld[(i >>> 1) % N] += f2;
        f2 *= i;
        f2 += i;
        for (f3 = 23; f3 < 369; ++f3) {
            for (i14 = 4; i14 < 73; ++i14) {
                i15 = -17209;
                i13 += (i14 ^ i);
                i15 = i;
                Test.instanceCount = Test.instanceCount;
                i15 -= (int)f3;
                for (i16 = 1; i16 < 2; ++i16) {
                    f2 -= 178;
                    i += i17;
                    i *= i15;
                    i13 >>= i16;
                    Test.instanceCount += (i16 * i16);
                    i15 -= 93;
                    f2 += i13;
                    switch ((((i14 >>> 1) % 6) * 5) + 68) {
                    case 92:
                        iArr1[(int)(f3)] = -12;
                        iArr1[i14 + 1] *= i;
                        break;
                    case 94:
                        if (b) break;
                        i *= -100;
                        i13 += (i16 * i16);
                        break;
                    case 70:
                        i17 = i16;
                        lArr[i14 + 1] = Test.instanceCount;
                        i = i16;
                        break;
                    case 79:
                        by2 += (byte)(i16 - i);
                    case 81:
                        fArrFld[i16 + 1] += i17;
                        break;
                    case 73:
                        iArr1[(int)(f3 + 1)] = i;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i b f2 = " + i + "," + (b ? 1 : 0) + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("f3 i13 i14 = " + Float.floatToIntBits(f3) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("by2 iArr1 lArr = " + by2 + "," + FuzzerUtils.checkSum(iArr1) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dArrFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
