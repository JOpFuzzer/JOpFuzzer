// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public int iFld=-53021;
    public static float fFld=56.596F;
    public static int iFld1=-39527;
    public static volatile byte byFld=43;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -27856);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth() {

        int i4=122, i5=38, i6=163;
        boolean b=false;

        for (i4 = 22; i4 < 392; i4++) {
            i5 += (((i4 * Test.instanceCount) + Test.instanceCount) - i5);
            i6 = 1;
            do {
                if (b) continue;
                if (i6 != 0) {
                }
            } while (++i6 < 5);
            switch (((i5 >>> 1) % 2) + 42) {
            case 42:
                Test.instanceCount = (long)Test.fFld;
                i5 += (int)Test.instanceCount;
                break;
            case 43:
                if (b) {
                    Test.iArrFld[i4 - 1] <<= i4;
                    i5 -= i5;
                    switch ((i4 % 1) + 126) {
                    case 126:
                        Test.instanceCount += (((i4 * Test.instanceCount) + i4) - i6);
                        b = b;
                        Test.instanceCount -= Test.instanceCount;
                        break;
                    }
                }
                break;
            default:
                i5 &= i5;
            }
        }
        long meth_res = i4 + i5 + i6 + (b ? 1 : 0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i2, int i3) {

        int i7=-7, i8=-37585, i9=31667, i10=8, i11=10;
        short s=-16409;
        byte by=23;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 170L);

        lArr[(12 >>> 1) % N] += (i2 * (-(--i2)));
        i2 += (i3 - Short.reverseBytes(sMeth()));
        i7 = 1;
        do {
            i3 = (int)Test.instanceCount;
            i3 = i7;
            i3 -= i7;
            Test.fFld = -10;
            for (i8 = 1; i8 < 11; i8++) {
                Test.fFld += i8;
                s = (short)i2;
                lArr[i8] = i2;
                for (i10 = 1; i10 < 2; ++i10) {
                    Test.iArrFld[i10] -= i3;
                }
                Test.instanceCount >>= by;
            }
            Test.fFld = Test.instanceCount;
        } while (++i7 < 143);
        vMeth1_check_sum += i2 + i3 + i7 + i8 + i9 + s + i10 + i11 + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {

        int i12=7, i13=23, i14=-124, i15=-14, i16=-60, i17=-13, i18=-5, i19=-9;
        double d=98.2592;
        short s1=-9083;

        vMeth1(Test.iFld1, Test.iFld1);
        switch (((Test.iFld1 >>> 1) % 2) + 77) {
        case 77:
            l &= Test.iFld1;
            for (i12 = 8; i12 < 361; i12++) {
                i13 += (((i12 * Test.instanceCount) + i13) - i12);
            }
        case 78:
            d %= (l | 1);
            for (i14 = 2; 251 > i14; i14++) {
                if (false) break;
                Test.instanceCount *= i15;
                for (i16 = 1; i16 < 7; i16++) {
                    Test.fFld += (i16 - i12);
                    s1 >>= (short)Test.instanceCount;
                    for (i18 = i14; i18 < 2; ++i18) {
                        Test.iFld1 += (i18 * i18);
                        Test.fFld += Test.fFld;
                    }
                }
            }
            break;
        default:
            i19 -= 12;
        }
        vMeth_check_sum += l + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 + s1 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=-26597, i1=7, i20=-13, i21=-56, i22=13, i23=30968, i24=25217, i25=2, i26=12, i27=137, i29=73, i30=35004,
            i31=1320, iArr[]=new int[N];
        double d1=0.58343, dArr[]=new double[N];
        float f=-7.166F, fArr[]=new float[N];

        FuzzerUtils.init(dArr, 2.117642);
        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(fArr, 2.90F);

        Test.instanceCount -= iFld;
        for (i = 4; i < 150; ++i) {
            vMeth(Test.instanceCount);
            dArr[i] -= iFld;
        }
        Test.byFld = (byte)d1;
        for (i20 = 21; i20 < 352; ++i20) {
            for (i22 = 76; i20 < i22; --i22) {
                i21 |= (int)Test.instanceCount;
                Test.instanceCount -= (long)d1;
            }
            for (i24 = i20; 76 > i24; i24++) {
                iFld += (i24 - iFld);
                d1 += -12;
                iFld += Test.iFld1;
                d1 *= d1;
                Test.iArrFld[i20 + 1] = Test.iFld1;
                iFld += i21;
                for (i26 = 1; i26 < 1; ++i26) {
                    i25 += i26;
                    Test.instanceCount -= -18;
                    bFld = bFld;
                    if (false) break;
                    i25 += (i26 + iFld);
                    iArr[i24 - 1] &= 18;
                }
                iArr[(i21 >>> 1) % N] = i20;
            }
            Test.byFld += (byte)Test.fFld;
            for (i29 = 1; i29 < 76; i29++) {
                for (f = 1; 2 > f; f += 2) {
                    short s2=4162;
                    bFld = false;
                    iFld += s2;
                    fArr[i20] *= i30;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d1 = " + i + "," + i1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i29 = " + i26 + "," + i27 + "," + i29);
        FuzzerUtils.out.println("i30 f i31 = " + i30 + "," + Float.floatToIntBits(f) + "," + i31);
        FuzzerUtils.out.println("dArr iArr fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(iArr) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld1 Test.byFld bFld = " + Test.iFld1 + "," + Test.byFld + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
