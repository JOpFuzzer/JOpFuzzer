// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:44 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6557L;
    public static volatile float fFld=51.252F;
    public static double dFld=-1.84393;
    public static int iFld=6;
    public static boolean bFld=true;
    public static short sFld=-28139;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 47651);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2) {

        int i8=-219, i9=-6, i10=-12, i11=-13, i12=-134, iArr[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 83);
        FuzzerUtils.init(lArr1, 2994474986L);

        iArr[(Test.iFld >>> 1) % N] = (int)l1;
        Test.iFld -= Test.iFld;
        for (i8 = 9; i8 < 274; ++i8) {
            iArr = iArr;
            lArr1 = FuzzerUtils.long1array(N, (long)-2076L);
            i9 += (((i8 * i8) + Test.instanceCount) - Test.iFld);
            for (i10 = 1; 6 > i10; i10++) {
                l2 += (-9 + (i10 * i10));
                Test.instanceCount >>= i8;
                l2 += (((i10 * Test.iFld) + i8) - i8);
                i11 += (i10 | Test.iFld);
                i9 >>= i9;
            }
            Test.iArrFld[i8 - 1] += i12;
            Test.fFld += (i8 * i8);
            i11 += (i8 * i8);
        }
        vMeth2_check_sum += l1 + l2 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1() {

        byte by1=110;
        int i13=-30, i14=161, i15=-1;
        short s=29139;
        double dArr[]=new double[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(dArr, -1.128929);
        FuzzerUtils.init(lArr2, 2576322201979762696L);

        vMeth2(Test.instanceCount, Test.instanceCount);
        for (double d1 : dArr) {
            switch ((((Test.iFld >>> 1) % 1) * 5) + 115) {
            case 118:
                Test.bFld = Test.bFld;
                break;
            default:
                if (Test.bFld) break;
                Test.instanceCount -= 5291;
            }
            Test.instanceCount -= by1;
            i13 = 1;
            do {
                s <<= (short)i13;
                if (Test.bFld) {
                    lArr2[i13] >>= Test.instanceCount;
                    Test.instanceCount *= i13;
                }
                for (i14 = 1; i14 < 1; ++i14) {
                    Test.instanceCount = i13;
                }
                Test.iFld = (int)Test.instanceCount;
            } while (++i13 < 4);
        }
        vMeth1_check_sum += by1 + i13 + s + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr2);
    }

    public static void vMeth(boolean b, float f) {

        double d=-1.129280, dArr1[]=new double[N];
        int i1=59585, i2=32, i3=112, i4=0, i5=-124, i6=-11, i7=-18863;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 21309L);
        FuzzerUtils.init(dArr1, 11.17657);

        for (d = 203; d > 8; d -= 3) {
            i1 <<= (int)(i1 % ((++Test.instanceCount) | 1));
            for (i2 = 1; i2 < 24; i2++) {
                Test.instanceCount += (((i2 * Test.instanceCount) + Test.fFld) - Test.instanceCount);
                switch ((((i2 + -240) >>> 1) % 10) + 36) {
                case 36:
                    for (i4 = 2; i4 > 1; i4--) {
                        i6 = Integer.reverseBytes(++i1);
                        Test.instanceCount = (long)(((-(--i1)) * (i7 - i7)) + ((-(Test.fFld + i1)) + i1));
                        i6 += (i4 | i4);
                        vMeth1();
                        b = b;
                        dArr1[i4 + 1] = i6;
                        i1 += i3;
                        i3 <<= (int)Test.instanceCount;
                    }
                    break;
                case 37:
                    i7 += (int)Test.fFld;
                    break;
                case 38:
                    Test.iFld |= (int)Test.instanceCount;
                    break;
                case 39:
                    Test.iFld -= (int)-1143754672366259766L;
                    break;
                case 40:
                case 41:
                    Test.fFld += -48194;
                    break;
                case 42:
                    Test.iFld += (((i2 * i6) + Test.fFld) - f);
                case 43:
                    Test.iFld += i6;
                    break;
                case 44:
                    Test.instanceCount += (((i2 * Test.instanceCount) + Test.instanceCount) - i4);
                    break;
                case 45:
                    Test.iArrFld[(int)(d)] += -21540;
                    break;
                default:
                    i6 += (i2 | Test.sFld);
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5
            + i6 + i7 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-32116;
        byte by=-76;

        i += (++i);
        Test.fFld += i;
        by -= (byte)((-1.923F - (Test.instanceCount + Test.dFld)) + (++i));
        vMeth(Test.bFld, 87.696F);

        FuzzerUtils.out.println("i by = " + i + "," + by);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld Test.bFld Test.sFld = " + Test.iFld + "," + (Test.bFld ? 1 : 0) + "," +
            Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
