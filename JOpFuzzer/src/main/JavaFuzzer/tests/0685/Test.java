// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:56 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=124L;
    public static volatile short sFld=22827;
    public static boolean bFld=true;
    public int iFld=7;
    public double dFld=1.92846;
    public static volatile float fFld=42.434F;
    public byte byFld=-77;
    public boolean bArrFld[]=new boolean[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, long l1) {

        int i9=-105, i10=93, i11=0, i12=162, i13=6, i14=-27329;
        byte by=68, byArr[]=new byte[N];
        boolean b=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(byArr, (byte)-23);
        FuzzerUtils.init(fArr, 2.127F);

        if (b) {
            byArr = byArr;
            for (i9 = 9; i9 < 261; i9++) {
                i10 >>= by;
                fArr = fArr;
                Test.sFld = (short)i9;
                for (i11 = i9; i11 < 6; i11++) {
                    i10 ^= -3;
                }
                i12 += i9;
                for (i13 = 1; i13 < 6; i13++) {
                    i10 += i13;
                    i10 -= i14;
                    fArr[i9] += l;
                    i14 <<= (int)0L;
                }
                l1 = Test.instanceCount;
            }
        }
        long meth_res = l + l1 + i9 + i10 + by + i11 + i12 + i13 + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, int i2) {

        int i3=-157, i4=105, i5=23365, i6=-30, i7=-73, i8=183, iArr[]=new int[N];
        float f=6.61F;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -26033);
        FuzzerUtils.init(lArr, -8L);

        i2 = (-i1);
        for (i3 = 9; i3 < 162; ++i3) {
            i1 += (i3 * i3);
            switch (((i3 % 2) * 5) + 51) {
            case 56:
                for (i5 = 1; i5 < 10; i5++) {
                    iArr[i5 + 1] &= Math.max(i1--, (int)((i5 >>> i2) + (++Test.instanceCount)));
                    for (i7 = 1; 2 > i7; i7++) {
                        switch (((i3 % 5) * 5) + 53) {
                        case 75:
                            i8 = iMeth1(Test.instanceCount, Test.instanceCount);
                            break;
                        case 71:
                            i2 = (int)f;
                            if (b1) break;
                            i4 -= (int)f;
                            i6 *= -54025;
                            break;
                        case 67:
                        case 64:
                            iArr[i5 + 1] = (int)11726L;
                            i1 = i2;
                        case 69:
                            Test.instanceCount += (i7 * i6);
                            break;
                        default:
                            i1 |= (int)Test.instanceCount;
                        }
                    }
                }
            case 60:
                lArr[i3 + 1] = 48095L;
                break;
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-6, i16=157, i17=-14165, i18=-241, i19=11, i20=-63196, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 2031);

        i = 1;
        do {
            if (Test.bFld) {
                iMeth(i, i);
            } else if (Test.bFld) {
                i16 = i;
            }
            iArr1[i + 1] += i16;
            switch ((((7 >>> 1) % 1) * 5) + 12) {
            case 17:
                Test.instanceCount = i;
                for (i17 = i; 12 > i17; i17++) {
                    for (i19 = 1; i19 < 1; ++i19) {
                        i18 = i17;
                        i20 = (int)Test.instanceCount;
                        switch ((i % 1) + 4) {
                        case 4:
                            i20 = i18;
                            i18 = (int)Test.instanceCount;
                            break;
                        default:
                            i18 += i18;
                        }
                    }
                }
            }
        } while (++i < 134);
        vMeth_check_sum += i + i16 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i21=8, i22=-4882, i23=7, i24=-16525, i25=12, i26=134, i27=27578, i28=86, i29=-9, iArr2[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -38);
        FuzzerUtils.init(lArr1, -6L);

        vMeth();
        iFld -= (int)dFld;
        for (i21 = 18; i21 < 289; i21++) {
            i23 = 1;
            while (++i23 < 93) {
                i22 += (int)Test.instanceCount;
            }
            iFld += (i21 * i21);
            iFld -= i23;
            Test.fFld = i23;
            bArrFld[i21 - 1] = Test.bFld;
            dFld *= Test.instanceCount;
        }
        i24 = 147;
        while (--i24 > 0) {
            dFld -= Test.fFld;
            Test.sFld >>>= (short)i22;
            for (i25 = 3; i25 < 171; ++i25) {
                for (i27 = 1; i27 < 2; ++i27) {
                    i22 += (((i27 * Test.instanceCount) + i27) - i28);
                    iFld *= i26;
                    i28 = i25;
                    iArr2[i27 - 1] += i22;
                }
                i29 = 1;
                while (++i29 < 2) {
                    if (Test.bFld) {
                        i22 *= -34529;
                        switch (((i25 % 2) * 5) + 18) {
                        case 19:
                            i26 += i29;
                            break;
                        case 20:
                            switch (((i23 >>> 1) % 9) + 17) {
                            case 17:
                                i28 += (i29 - i21);
                                Test.fFld = i23;
                                break;
                            case 18:
                                i26 -= i21;
                                Test.instanceCount = byFld;
                            case 19:
                                Test.instanceCount += i29;
                            case 20:
                                if (Test.bFld) continue;
                                break;
                            case 21:
                                Test.instanceCount &= i25;
                                break;
                            case 22:
                                i28 <<= i29;
                            case 23:
                                dFld = byFld;
                                break;
                            case 24:
                                i28 = i24;
                            case 25:
                                Test.instanceCount = i28;
                            default:
                                Test.instanceCount += (((i29 * i22) + i21) - i26);
                            }
                            break;
                        default:
                            lArr1[i24 - 1] %= (Test.instanceCount | 1);
                        }
                    } else if (Test.bFld) {
                    }
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("iArr2 lArr1 = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld dFld Test.fFld = " + iFld + "," + Double.doubleToLongBits(dFld) + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("byFld bArrFld = " + byFld + "," + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
