// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:23:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static float fFld=15.24F;
    public static volatile short sFld=4217;
    public static float fFld1=-74.742F;
    public byte byFld=126;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2163796173L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d) {

        int i5=-3, i6=60384, i7=-141, i8=28030, i9=-3, i10=-1;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 112196479556171481L);

        for (i5 = 20; i5 < 327; ++i5) {
            Test.instanceCount += (-23980 + (i5 * i5));
        }
        Test.instanceCount >>= i5;
        for (i7 = 1; i7 < 333; i7++) {
            lArr[i7 - 1] += Test.instanceCount;
            i6 += (int)d;
            Test.instanceCount = i5;
            i6 = i6;
            i9 = 1;
            while (++i9 < 5) {
                if (i9 != 0) {
                    vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
                Test.instanceCount >>= 9325;
                Test.fFld += i9;
                i8 += (int)Test.fFld;
                Test.fFld -= i5;
                try {
                    i8 = (i6 % -874677275);
                    i6 = (-196 % i7);
                    i10 = (8 % i7);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i3=-155, i4=-41002, iArr[]=new int[N];
        float f=0.85F;
        double d1=0.53150;
        boolean b=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr1, 289276591L);

        for (i3 = 378; i3 > 14; --i3) {
            f = i4;
            i4 += (-50928 + (i3 * i3));
            i4 += (((i3 * i4) + Test.instanceCount) - Test.instanceCount);
            switch (((i3 >>> 1) % 1) + 105) {
            case 105:
                iArr[i3] = i3;
                break;
            }
        }
        vMeth1(d1);
        switch ((((62277 >>> 1) % 3) * 5) + 48) {
        case 58:
            i4 = 3;
            i4 -= (int)f;
            i4 /= 57672;
            break;
        case 55:
            i4 = (int)Test.instanceCount;
            if (b) {
                Test.instanceCount = i4;
                i4 = i4;
            } else if (b) {
                b = false;
                vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                return;
            } else {
                i4 = i4;
                vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            break;
        case 56:
            lArr1[(i3 >>> 1) % N] -= i3;
            break;
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static float fMeth(long l) {

        int i1=-51066, i2=40441, i11=12, i12=3, iArr1[]=new int[N];
        double d2=-113.92412;
        boolean b1=true;

        FuzzerUtils.init(iArr1, 1);

        for (i1 = 19; i1 < 313; i1++) {
            vMeth();
            Test.fFld -= 144L;
            for (i11 = 1; i11 < 6; i11++) {
                Test.fFld += (float)d2;
                l = i12;
                Test.instanceCount >>>= 57465;
                d2 %= -6753L;
                i12 = Test.sFld;
                d2 -= i11;
                if (b1) {
                    if (b1) {
                        l += Test.instanceCount;
                        if (i11 != 0) {
                        }
                        i12 = (int)l;
                    } else {
                        iArr1[i11] -= (int)-21.525F;
                    }
                } else {
                    l -= (long)Test.fFld;
                }
            }
        }
        long meth_res = l + i1 + i2 + i11 + i12 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8341, i13=-98, i14=47, i15=-242, i16=-9, i17=13, i18=-12, iArr2[]=new int[N];
        double d3=0.37520;
        boolean b2=false;

        FuzzerUtils.init(iArr2, -17662);

        i = (int)((fMeth(Test.instanceCount) - i) - 113);
        Test.sFld -= (short)8L;
        i = i;
        for (i13 = 5; i13 < 395; ++i13) {
            iArr2[i13 + 1] = i14;
            i14 <<= i;
            if (b2) {
                Test.instanceCount *= i14;
                for (i15 = i13; i15 < 65; i15++) {
                    Test.lArrFld[i13 + 1] -= i15;
                    switch ((i15 % 1) + 117) {
                    case 117:
                        Test.instanceCount <<= -3700770776L;
                        Test.fFld = 3853;
                        break;
                    }
                    Test.instanceCount = -6;
                    Test.instanceCount += (i15 * i15);
                    Test.fFld += (((i15 * Test.instanceCount) + Test.instanceCount) - i15);
                    switch ((i13 % 5) + 114) {
                    case 114:
                        iArr2[i13] ^= (int)Test.instanceCount;
                        i14 = i;
                        break;
                    case 115:
                        d3 -= Test.instanceCount;
                        i ^= i13;
                        break;
                    case 116:
                        for (i17 = 1; 1 < i17; i17--) {
                            i = i17;
                            i14 /= (int)(Test.instanceCount | 1);
                            iArr2 = iArr2;
                            Test.instanceCount = Test.instanceCount;
                            Test.fFld1 -= byFld;
                            i = i;
                            iArr2[i13 + 1] *= (int)Test.fFld;
                            i16 = i17;
                        }
                        break;
                    case 117:
                        i18 = i16;
                        break;
                    case 118:
                        iArr2[i13] = i14;
                        break;
                    default:
                        iArr2 = iArr2;
                    }
                }
            } else {
                Test.fFld += (i13 * i14);
            }
        }

        FuzzerUtils.out.println("i i13 i14 = " + i + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 d3 = " + i15 + "," + i16 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i17 i18 b2 = " + i17 + "," + i18 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.fFld1 byFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld1) + "," + byFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
