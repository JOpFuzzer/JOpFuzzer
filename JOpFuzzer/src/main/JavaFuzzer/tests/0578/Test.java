// Generated by Java* Fuzzer test generator (1.0.001). Mon Aug 29 10:22:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=4861295276498838214L;
    public static boolean bFld=false;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -101.93880);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i, int i1) {

        boolean b=false;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)-19202);
        FuzzerUtils.init(lArr, 3L);

        b = b;
        sArr[(241 >>> 1) % N] -= (short)(lArr[(i >>> 1) % N]--);
        vMeth_check_sum += i + i1 + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(int i4, int i5, float f2) {

        int i6=-3, i7=-14, i8=-54583, i9=10, iArr1[]=new int[N];
        float f3=23.359F;
        boolean b1=true;
        double d=-63.119913;

        FuzzerUtils.init(iArr1, 36694);

        i6 >>= (int)Test.instanceCount;
        i5 |= (int)-200L;
        for (f3 = 22; f3 < 391; ++f3) {
            iArr1[(int)(f3)] *= -155;
            for (i8 = 1; i8 < 5; i8++) {
                i6 += i4;
                if (b1) break;
            }
            try {
                i9 = (271246403 / i4);
                iArr1[(int)(f3 + 1)] = (-976821428 % i8);
                iArr1[(int)(f3 + 1)] = (-60291 / i7);
            } catch (ArithmeticException a_e) {}
            try {
                i5 = (i6 / i6);
                i5 = (i4 % i6);
                i5 = (i9 % -47383);
            } catch (ArithmeticException a_e) {}
            switch ((int)((f3 % 1) + 72)) {
            case 72:
                try {
                    i7 = (380781865 % i8);
                    iArr1[(int)(f3 + 1)] = (i8 % iArr1[(int)(f3 + 1)]);
                    i7 = (iArr1[(int)(f3 - 1)] / 113);
                } catch (ArithmeticException a_e) {}
                i6 -= (int)f3;
                break;
            default:
            }
            i6 += (int)f3;
        }
        Test.dArrFld[(i8 >>> 1) % N] += d;
        i7 >>= i4;
        long meth_res = i4 + i5 + Float.floatToIntBits(f2) + i6 + Float.floatToIntBits(f3) + i7 + i8 + i9 + (b1 ? 1 :
            0) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i3, float f1, byte by1) {

        int i10=20, i11=-63210, i12=-112, i13=62872, iArr2[]=new int[N];
        double d1=67.43728;
        byte by2=9;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -10);
        FuzzerUtils.init(fArr, 1.137F);

        lMeth(i3, i3, -18.831F);
        i10 = 1;
        while (++i10 < 185) {
            Test.instanceCount = i3;
            switch (((i3 >>> 1) % 8) + 71) {
            case 71:
                i11 = 1;
                do {
                    iArr2[i10 - 1] = i11;
                    fArr[i11 - 1] -= (float)d1;
                    for (i12 = 1; i12 < 1; i12++) {
                        iArr2[i10 + 1] = i12;
                    }
                    f1 = -4758;
                    iArr2[i10] = i11;
                    i3 += i10;
                } while (++i11 < 9);
                i3 *= i10;
                f1 -= i3;
            case 72:
                i13 += (int)Test.instanceCount;
                break;
            case 73:
                Test.instanceCount -= Test.instanceCount;
                break;
            case 74:
                by2 = (byte)168;
                break;
            case 75:
                i3 = i13;
                break;
            case 76:
                i13 = (int)Test.instanceCount;
                break;
            case 77:
            case 78:
                if (Test.bFld) break;
                break;
            default:
                if (Test.bFld) break;
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + by1 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 +
            by2 + FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(byte by) {

        float f=-1.615F, fArr1[]=new float[N];
        int i2=5, i14=-2302, i15=1, i16=-129, i17=0, iArr[]=new int[N], iArr3[][]=new int[N][N];
        double d2=1.44568;

        FuzzerUtils.init(iArr, -156);
        FuzzerUtils.init(fArr1, 0.757F);
        FuzzerUtils.init(iArr3, -115);

        for (f = 22; f < 384; f++) {
            iArr[(int)(f + 1)] += (i2 = (i2 + Math.max(i2, i2)));
            vMeth1(i2, f, by);
            for (i14 = 1; i14 < 5; i14++) {
                i15 >>= (int)Test.instanceCount;
                fArr1[i14 - 1] = i14;
                i2 *= (int)Test.instanceCount;
                i15 *= (int)1.128271;
                fArr1[(int)(f - 1)] += f;
                i15 += i14;
                for (i16 = 2; i16 > 1; --i16) {
                    short s=31123;
                    s += (short)i16;
                    Test.instanceCount *= (long)d2;
                    iArr3 = FuzzerUtils.int2array(N, (int)-13);
                    iArr3[i14][i14 - 1] = i17;
                }
            }
        }
        long meth_res = by + Float.floatToIntBits(f) + i2 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by3=83;
        int i18=-32147, i19=-14, i20=11, i21=13220, i22=-8, i23=-12087, i24=14, i25=-134, i26=-199, i27=-74, i28=-10,
            iArr4[]=new int[N];
        short s1=-4211;
        long l=25588L, lArr1[]=new long[N];
        float f4=-93.197F, fArr2[]=new float[N];
        double d3=73.70173;

        FuzzerUtils.init(iArr4, 0);
        FuzzerUtils.init(lArr1, 50L);
        FuzzerUtils.init(fArr2, 0.559F);

        vMeth(iMeth(by3), i18);
        s1 -= (short)i18;
        for (i19 = 19; i19 < 309; i19++) {
            i20 ^= (int)Test.instanceCount;
            i20 = i20;
            iArr4[i19 + 1] += (int)l;
        }
        i20 = i20;
        iArr4[(58288 >>> 1) % N] = i20;
        for (i21 = 9; i21 < 200; ++i21) {
            for (i23 = 2; i23 < 131; ++i23) {
                Test.instanceCount += (((i23 * i20) + i21) - i21);
            }
            for (i25 = 8; i25 < 131; i25++) {
                Test.instanceCount += (((i25 * i20) + i26) - Test.instanceCount);
                lArr1[i21 + 1] -= l;
                switch (((i24 >>> 1) % 2) + 103) {
                case 103:
                    switch (((i25 % 7) * 5) + 64) {
                    case 90:
                        iArr4[i21 + 1] += (int)Test.instanceCount;
                        i18 += (i25 - f4);
                        i22 += (int)Test.instanceCount;
                        break;
                    case 67:
                        d3 -= -6155;
                        i22 *= i26;
                        iArr4[i21] = (int)Test.instanceCount;
                        f4 = 7L;
                        break;
                    case 99:
                    case 89:
                        fArr2[i25 + 1] += (float)d3;
                        i20 -= i19;
                        break;
                    case 70:
                        i24 *= (int)Test.instanceCount;
                        break;
                    case 68:
                        for (i27 = 2; 1 < i27; --i27) {
                            l *= (long)f4;
                            f4 = 54975;
                            i24 += 11;
                        }
                        break;
                    case 82:
                        i24 = i22;
                        break;
                    default:
                        i20 = i21;
                    }
                case 104:
                    f4 -= (float)d3;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("by3 i18 s1 = " + by3 + "," + i18 + "," + s1);
        FuzzerUtils.out.println("i19 i20 l = " + i19 + "," + i20 + "," + l);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f4 d3 i27 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d3) + "," +
            i27);
        FuzzerUtils.out.println("i28 iArr4 lArr1 = " + i28 + "," + FuzzerUtils.checkSum(iArr4) + "," +
            FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("fArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
